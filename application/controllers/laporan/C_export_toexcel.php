<?php
date_default_timezone_set('Asia/Jakarta');
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
if (!defined('BASEPATH'))
    exit('No direct script access allowed');

//    session_start(); //Memanggil fungsi session Codeigniter
class C_export_toexcel extends CI_Controller {

    function __construct(){
        parent:: __construct();
        $frmkode = $this->uri->segment(4);
        $frmvrs  = $this->uri->segment(5);
        $this->load->model(array('M_user', 'master/M_form', 'M_menu', 'form_input/M_forminput', 'form_input/M_form' . $frmkode . '_' . $frmvrs));
        $this->load->library(array('table', 'form_validation', 'excel', 'fpdf'));
        $this->load->helper('form');

        //////////////////////////////////
        /// prevent direct url accses
        $session_data = $this->session->userdata('logged_in');
        $leveluid     = $session_data['leveluserid'];
        $url_str      = uri_string();

        $akses_check = $this->M_user->check_akses_bylevelid($leveluid,$frmkode);
        if($akses_check==false){
            echo "<script>alert('Anda Tidak Memiliki Akses Untuk Data Ini..!!');
                          window.location.assign('";echo base_url();echo "C_login');
                       </script>"; 
        }
        /// end prevent direct url accses
        //////////////////////////////////
    }

    function exportxls(){
              $session_data  = $this->session->userdata('logged_in');
        $data['username']    = $session_data['username'];
        $data['password']    = $session_data['password'];
        $data['jabid']       = $session_data['jabid'];
        $data['leveluserid'] = $session_data['leveluserid'];
        $data['nmdepan']     = $session_data['nmdepan'];
        $data['levelusernm'] = $session_data['levelusernm'];
        $data['bagnm']       = $session_data['bagnm'];
        $data['jabnm']       = $session_data['jabnm'];
        $data['Titel']       = 'Home';
        
        $LevelUser   = $session_data['leveluserid'];
        $UserName    = $session_data['username'];
        $LevelUserNm = $session_data['levelusernm'];
        
              $cekLevelUserNm   = substr($LevelUserNm,0,7);
        $data['cekLevelUserNm'] = substr($LevelUserNm,0,7);
              $menus            = $this->M_menu->menus($LevelUser);
              $data2            = array('menus' => $menus);
        
        $frmkode = $this->uri->segment(4);
        $frmvrs  = $this->uri->segment(5);
        
        $dtfrm = $this->M_forminput->get_dtform($frmkode, $frmvrs);
        $data3 = array('dtfrm' => $dtfrm);

        foreach ($dtfrm as $datafrm){
            $frmkd     = $datafrm->formkd;
            $frmjdl    = $datafrm->formjudul;
            $frmnm     = $datafrm->formnm;
            $frm_efect = substr($datafrm->formefective, 8, 2) . '-' . substr($datafrm->formefective, 5, 2) . '-' . substr($datafrm->formefective, 0, 4);
        }

        $filekd   = $this->uri->segment(6);
        $id       = $this->uri->segment(7);
        $dtstart  = $this->uri->segment(8);
        $dtfinish = $this->uri->segment(9);
        
        $frmcop = 'PT PULAU SAMBU GUNTUNG';
        
        $model = 'M_form' . $frmkd . '_' . $frmvrs;
        $this->load->library('excel');

        switch ($frmkode){
            case $frmkode == "frmfss069": 
                $dtheader = $this->$model->get_header_by_id($id);
                $data7    = array('dtheader' => $dtheader);
                foreach ($dtheader as $dt_headerrow){
                          $dttgl      = $dt_headerrow->tgl_dok;
                    $data['headerid'] = $dt_headerrow->headerid1;
                }
                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->$model->get_detail078_byidx($id);
                    $dtdetail2 = $this->$model->get_detail039_bytglx($dttgl);
                } else {
                    $dtdetail1 = $this->$model->get_detail078_byid($id);
                    $dtdetail2 = $this->$model->get_detail039_bytgl($dttgl);
                }
                break;
            case $frmkode == "frmfss120": 
                $dtheader = $this->$model->get_header_byid($id);
                $data7    = array('dtheader' => $dtheader);
                foreach ($dtheader as $dt_headerrow){
                          $dttgl      = $dt_headerrow->tgl_sampling;
                    $data['headerid'] = $dt_headerrow->headerid;
                }
                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->$model->get_detail066_byidx($id);
                } else {
                    $dtdetail1 = $this->$model->get_detail066_byid($id);
                }
                $data8 = array('dtdetail1' => $dtdetail1);
                break;
            case $frmkode == "frmfss121": 
                $dtheader = $this->$model->get_header_byid($id);
                $data7    = array('dtheader' => $dtheader);
                foreach ($dtheader as $dt_headerrow){
                          $dttgl_produksi = $dt_headerrow->tgl_produksi;
                          $dtfiller       = $dt_headerrow->filler;
                    $data['headerid']     = $dt_headerrow->headerid;
                }
                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->M_formfrmfss121_01->get_detail_byidx($id);
                    $dtdetail2 = $this->M_formfrmfss121_01->get_dts052x($dttgl_produksi, $dtfiller);
                    $dtdetail3 = $this->M_formfrmfss121_01->get_dts083x($dttgl_produksi, $dtfiller);
                } else {
                    $dtdetail1 = $this->M_formfrmfss121_01->get_detail_byid($id);
                    $dtdetail2 = $this->M_formfrmfss121_01->get_dts052($dttgl_produksi, $dtfiller);
                    $dtdetail3 = $this->M_formfrmfss121_01->get_dts083($dttgl_produksi, $dtfiller);
                }
                break;

                case $frmkode == "frmnon023": 
                    $dttglStart  = $this->uri->segment(8);
                    $dttglFinish = $this->uri->segment(9);
                    $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
                    $data7       = array('dtheader' => $dtheader);
                    foreach($dtheader as $dt_headerrow){
                        $dttglStart = $dt_headerrow->tgl_produksi;
                    
                    }
                    if($cekLevelUserNm=="Auditor"){
                        $dtdetail1 = $this->$model->get_detail_bydatex1($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_bydatex2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_bydatex3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_bydatex4($dttglStart,$dttglFinish);
                        $dtdetail5 = $this->$model->get_detail_bydatex5($dttglStart,$dttglFinish);

                    } else {
                        $dtdetail1 = $this->$model->get_detail_byid1($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_byid2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_byid3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_byid4($dttglStart,$dttglFinish);
                        $dtdetail5 = $this->$model->get_detail_byid5($dttglStart,$dttglFinish);

                    }
                    $data7  = array('dtdetail1' => $dtdetail1);
                    $data8  = array('dtdetail2' => $dtdetail2);
                    $data9  = array('dtdetail3' => $dtdetail3);
                    $data10 = array('dtdetail4' => $dtdetail4);
                    $data11 = array('dtdetail5' => $dtdetail5);
           break;

            case $frmkode == "frmnon015": 
                    $dttglStart  = $this->uri->segment(8);
                    $dttglFinish = $this->uri->segment(9);
                    $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
                    $data7       = array('dtheader' => $dtheader);
                    foreach($dtheader as $dt_headerrow){
                        $dttglStart  = $dt_headerrow->tgl_data;
                        $dttglFinish = $dt_headerrow->tgl_data;
                    
                    }
                    if($cekLevelUserNm=="Auditor"){
                        $dtdetail1 = $this->$model->get_detail_bydatex($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_bydatex2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_bydatex3($dttglStart,$dttglFinish);
                       // $dtdetail4 = $this->$model->get_detail_bydatex4($dttglStart,$dttglFinish);

                    } else {
                        $dtdetail1 = $this->$model->get_detail_byid($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_byid2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_byid3($dttglStart,$dttglFinish);
                       // $dtdetail4 = $this->$model->get_detail_byid4($dttglStart,$dttglFinish);

                    }
                    $data8  = array('dtdetail1' => $dtdetail1);
                    $data9  = array('dtdetail2' => $dtdetail2);
                    $data10 = array('dtdetail3' => $dtdetail3);
                   // $data11 = array('dtdetail4' => $dtdetail4);
           break;

           case $frmkode == "frmnon014": 
                    $dttglStart  = $this->uri->segment(8);
                    $dttglFinish = $this->uri->segment(9);
                    $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
                    $data7       = array('dtheader' => $dtheader);
                    foreach($dtheader as $dt_headerrow){
                        $dttglStart  = $dt_headerrow->tgl_data;
                        $dttglFinish = $dt_headerrow->tgl_data;
                    
                    }
                    if($cekLevelUserNm=="Auditor"){
                        $dtdetail1 = $this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_bydatex2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_bydatex3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_bydatex4($dttglStart,$dttglFinish);

                    } else {
                        $dtdetail1 = $this->$model->get_detail_byid($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_byid2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_byid3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_byid4($dttglStart,$dttglFinish);

                    }
                    $data8  = array('dtdetail1' => $dtdetail1);
                    $data9  = array('dtdetail2' => $dtdetail2);
                    $data10 = array('dtdetail3' => $dtdetail3);
                    $data11 = array('dtdetail4' => $dtdetail4);
           break;

              case $frmkode == "frmnon040": 
                    $dttglStart  = $this->uri->segment(8);
                    $dttglFinish = $this->uri->segment(9);
                    $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
                    $data7       = array('dtheader' => $dtheader);
                    foreach($dtheader as $dt_headerrow){
                        $dttglStart  = $dt_headerrow->tgl_data;
                        $dttglFinish = $dt_headerrow->tgl_data;
                    
                    }
                    if($cekLevelUserNm=="Auditor"){
                        $dtdetail1 = $this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_bydatex2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_bydatex3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_bydatex4($dttglStart,$dttglFinish);

                    } else {
                        $dtdetail1 = $this->$model->get_detail_byid($dttglStart,$dttglFinish);
                        $dtdetail2 = $this->$model->get_detail_byid2($dttglStart,$dttglFinish);
                        $dtdetail3 = $this->$model->get_detail_byid3($dttglStart,$dttglFinish);
                        $dtdetail4 = $this->$model->get_detail_byid4($dttglStart,$dttglFinish);

                    }
                    $data8  = array('dtdetail1' => $dtdetail1);
                    $data9  = array('dtdetail2' => $dtdetail2);
                    $data10 = array('dtdetail3' => $dtdetail3);
                    $data11 = array('dtdetail4' => $dtdetail4);
           break;



            case $frmkode == "frmfss093": 
                $dtheader = $this->$model->get_header_byid($id);
                $data7    = array('dtheader' => $dtheader);
                foreach ($dtheader as $dt_headerrow){
                    $dttgl = $dt_headerrow->tgl_data;
                }
                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->$model->get_detail068_byidx($id);
                    $dtdetail2 = $this->$model->get_detail066_byidx($dttgl);
                    $dtdetail3 = $this->$model->get_detail010_byidx($dttgl);
                } else {
                    $dtdetail1 = $this->$model->get_detail068_byid($id);
                    $dtdetail2 = $this->$model->get_detail066_byid($dttgl);
                    $dtdetail3 = $this->$model->get_detail010_byid($dttgl);
                }
                break;
            case $frmkode == "frmfss097": 
                $dtheader = $this->$model->get_header_byid($id);
                $data7    = array('dtheader' => $dtheader);
                foreach ($dtheader as $dt_headerrow){
                    $dttgl = $dt_headerrow->tgl_inproses;
                }
                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->$model->get_detail_cup_byidx($id, $dttgl);
                    $dtdetail2 = $this->$model->get_detail_cupfp_byidx($dttgl);
                    $dtdetail3 = $this->$model->get_detail_ncr_byidx($dttgl);
                    $dtdetail4 = $this->$model->get_detail_bottle_byidx($dttgl);
                    $dtdetail5 = $this->$model->get_detail_bottlefp_byidx($dttgl);
                    $dtdetail6 = $this->$model->get_detail_productioncup_byidx($dttgl);
                    $dtdetail7 = $this->$model->get_detail_productionbottle_byidx($dttgl);
                } else {
                    $dtdetail1 = $this->$model->get_detail_cup_byid($id, $dttgl);
                    $dtdetail2 = $this->$model->get_detail_cupfp_byid($dttgl);
                    $dtdetail3 = $this->$model->get_detail_ncr_byid($dttgl);
                    $dtdetail4 = $this->$model->get_detail_bottle_byid($dttgl);
                    $dtdetail5 = $this->$model->get_detail_bottlefp_byid($dttgl);
                    $dtdetail6 = $this->$model->get_detail_productioncup_byid($dttgl);
                    $dtdetail7 = $this->$model->get_detail_productionbottle_byid($dttgl);
                }
                break;
            case $frmkode == 'frmfss098': 
                $dtheader = $this->$model->get_header_byid($id);
                foreach ($dtheader as $dt_headerrow){
                    $dttgl = $dt_headerrow->tanggal;
                }

                if ($cekLevelUserNm == "Auditor"){
                    $dtdetail1 = $this->$model->get_detail_non006A_byidx($id);
                    $dtdetail2 = $this->$model->get_detail_non006B_byidx($id);
                    $dtdetail3 = $this->$model->get_detail_non006C_byidx($id);
                    $dtdetail4 = $this->$model->get_detail_non006D_byidx($id);
                    $dtdetail5 = $this->$model->get_detail_fss115_byidx($dttgl);
                } else {
                    $dtdetail1 = $this->$model->get_detail_non006A_byid($id);
                    $dtdetail2 = $this->$model->get_detail_non006B_byid($id);
                    $dtdetail3 = $this->$model->get_detail_non006C_byid($id);
                    $dtdetail4 = $this->$model->get_detail_non006D_byid($id);
                    $dtdetail5 = $this->$model->get_detail_fss115_byid($dttgl);
                }
                break;

                case $frmkode == "frmnon013": 
                      // $dtquery1 = "select DISTINCT * from view_rekap_wt where tgl_produksi>= '$dtstart' and tgl_produksi <='$dtfinish' and kode_sample in ('ASF','ACF','SOFT1','SOFT2','SOFT3','RO1','RO2') order by tgl_produksi asc";
                      $quoted1 = '$$VALUES';
                      $quoted2 = '$$';

                      #######################################################################################################
                      #####################            TPC 0-7       ########################################################
                      #######################################################################################################
                      // if($cekLevelUserNm=='Auditor'){
                      $dtquerytpc0   = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_0
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_0_asf1000 varchar, tpc_0_acf1000 varchar, tpc_0_as1_1000 varchar, tpc_0_as2_1000 varchar, tpc_0_as3_1000 varchar, tpc_0_aro1_500 varchar, tpc_0_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc0op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_0op_asf1000 varchar, tpc_0op_acf1000 varchar, tpc_0op_as1_1000 varchar, tpc_0op_as2_1000 varchar, tpc_0op_as3_1000 varchar, tpc_0op_aro1_500 varchar, tpc_0op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc1   = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_1
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_1_asf1000 varchar, tpc_1_acf1000 varchar, tpc_1_as1_1000 varchar, tpc_1_as2_1000 varchar, tpc_1_as3_1000 varchar, tpc_1_aro1_500 varchar, tpc_1_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc1op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator8
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_1op_asf1000 varchar, tpc_1op_acf1000 varchar, tpc_1op_as1_1000 varchar, tpc_1op_as2_1000 varchar, tpc_1op_as3_1000 varchar, tpc_1op_aro1_500 varchar, tpc_1op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc2   = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_2
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_2_asf1000 varchar, tpc_2_acf1000 varchar, tpc_2_as1_1000 varchar, tpc_2_as2_1000 varchar, tpc_2_as3_1000 varchar, tpc_2_aro1_500 varchar, tpc_2_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc2op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator9
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_2op_asf1000 varchar, tpc_2op_acf1000 varchar, tpc_2op_as1_1000 varchar, tpc_2op_as2_1000 varchar, tpc_2op_as3_1000 varchar, tpc_2op_aro1_500 varchar, tpc_2op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc3   = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_3
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_3_asf1000 varchar, tpc_3_acf1000 varchar, tpc_3_as1_1000 varchar, tpc_3_as2_1000 varchar, tpc_3_as3_1000 varchar, tpc_3_aro1_500 varchar, tpc_3_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc3op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator10
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_3op_asf1000 varchar, tpc_3op_acf1000 varchar, tpc_3op_as1_1000 varchar, tpc_3op_as2_1000 varchar, tpc_3op_as3_1000 varchar, tpc_3op_aro1_500 varchar, tpc_3op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc4 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_4
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_4_asf1000 varchar, tpc_4_acf1000 varchar, tpc_4_as1_1000 varchar, tpc_4_as2_1000 varchar, tpc_4_as3_1000 varchar, tpc_4_aro1_500 varchar, tpc_4_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc4op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator11
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_4op_asf1000 varchar, tpc_4op_acf1000 varchar, tpc_4op_as1_1000 varchar, tpc_4op_as2_1000 varchar, tpc_4op_as3_1000 varchar, tpc_4op_aro1_500 varchar, tpc_4op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc5 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_5
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_5_asf1000 varchar, tpc_5_acf1000 varchar, tpc_5_as1_1000 varchar, tpc_5_as2_1000 varchar, tpc_5_as3_1000 varchar, tpc_5_aro1_500 varchar, tpc_5_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc5op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator12
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_5op_asf1000 varchar, tpc_5op_acf1000 varchar, tpc_5op_as1_1000 varchar, tpc_5op_as2_1000 varchar, tpc_5op_as3_1000 varchar, tpc_5op_aro1_500 varchar, tpc_5op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc6 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_6
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_6_asf1000 varchar, tpc_6_acf1000 varchar, tpc_6_as1_1000 varchar, tpc_6_as2_1000 varchar, tpc_6_as3_1000 varchar, tpc_6_aro1_500 varchar, tpc_6_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc6op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator13
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_6op_asf1000 varchar, tpc_6op_acf1000 varchar, tpc_6op_as1_1000 varchar, tpc_6op_as2_1000 varchar, tpc_6op_as3_1000 varchar, tpc_6op_aro1_500 varchar, tpc_6op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc7 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_tpc_7
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_7_asf1000 varchar, tpc_7_acf1000 varchar, tpc_7_as1_1000 varchar, tpc_7_as2_1000 varchar, tpc_7_as3_1000 varchar, tpc_7_aro1_500 varchar, tpc_7_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytpc7op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator14
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tpc_7op_asf1000 varchar, tpc_7op_acf1000 varchar, tpc_7op_as1_1000 varchar, tpc_7op_as2_1000 varchar, tpc_7op_as3_1000 varchar, tpc_7op_aro1_500 varchar, tpc_7op_aro2_500 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      #######################################################################################################
                      #####################            TCC 0-4       ########################################################
                      #######################################################################################################
                      $dtquerytcc0 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_ec_0
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_0_ec_asf varchar, tcc_0_ec_acf varchar, tcc_0_ec_as1 varchar, tcc_0_ec_as2 varchar, tcc_0_ec_as3 varchar, tcc_0_ec_aro1 varchar, tcc_0_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc0op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator2
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_0op_ec_asf varchar, tcc_0op_ec_acf varchar, tcc_0op_ec_as1 varchar, tcc_0op_ec_as2 varchar, tcc_0op_ec_as3 varchar, tcc_0op_ec_aro1 varchar, tcc_0op_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc1 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_ec_1
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_1_ec_asf varchar, tcc_1_ec_acf varchar, tcc_1_ec_as1 varchar, tcc_1_ec_as2 varchar, tcc_1_ec_as3 varchar, tcc_1_ec_aro1 varchar, tcc_1_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc1op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator15
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_1op_ec_asf varchar, tcc_1op_ec_acf varchar, tcc_1op_ec_as1 varchar, tcc_1op_ec_as2 varchar, tcc_1op_ec_as3 varchar, tcc_1op_ec_aro1 varchar, tcc_1op_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc2 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_ec_2
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_2_ec_asf varchar, tcc_2_ec_acf varchar, tcc_2_ec_as1 varchar, tcc_2_ec_as2 varchar, tcc_2_ec_as3 varchar, tcc_2_ec_aro1 varchar, tcc_2_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc2op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator16
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_2op_ec_asf varchar, tcc_2op_ec_acf varchar, tcc_2op_ec_as1 varchar, tcc_2op_ec_as2 varchar, tcc_2op_ec_as3 varchar, tcc_2op_ec_aro1 varchar, tcc_2op_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc3 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_ec_3
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_3_ec_asf varchar, tcc_3_ec_acf varchar, tcc_3_ec_as1 varchar, tcc_3_ec_as2 varchar, tcc_3_ec_as3 varchar, tcc_3_ec_aro1 varchar, tcc_3_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc3op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator17
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_3op_ec_asf varchar, tcc_3op_ec_acf varchar, tcc_3op_ec_as1 varchar, tcc_3op_ec_as2 varchar, tcc_3op_ec_as3 varchar, tcc_3op_ec_aro1 varchar, tcc_3op_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc4 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, ham_ec_4
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_4_ec_asf varchar, tcc_4_ec_acf varchar, tcc_4_ec_as1 varchar, tcc_4_ec_as2 varchar, tcc_4_ec_as3 varchar, tcc_4_ec_aro1 varchar, tcc_4_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquerytcc4op = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample, operator18
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, tcc_4op_ec_asf varchar, tcc_4op_ec_acf varchar, tcc_4op_ec_as1 varchar, tcc_4op_ec_as2 varchar, tcc_4op_ec_as3 varchar, tcc_4op_ec_aro1 varchar, tcc_4op_ec_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquery3 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample,  ham_detect_ecoll_gas
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, gas_asf varchar, gas_acf varchar, gas_as1 varchar, gas_as2 varchar, gas_as3 varchar, gas_aro1 varchar, gas_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquery4 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample,  ham_detect_ecoll_indol
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, indol_asf varchar, indol_acf varchar, indol_as1 varchar, indol_as2 varchar, indol_as3 varchar, indol_aro1 varchar, indol_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      $dtquery5 = "SELECT * FROM crosstab('SELECT tgl_produksi, kode_sample,  keterangan
                                   FROM view_rekap_wtx
                                   ORDER  BY 1,2',
                                      $quoted1 ('ASF'::text),('ACF'::text),('SOFT1'::text),('SOFT2'::text),('SOFT3'::text),('RO1'::text),('RO2'::text)$quoted2)
                                   AS ct (tgl_produksi date, ket_asf varchar, ket_acf varchar, ket_as1 varchar, ket_as2 varchar, ket_as3 varchar, ket_aro1 varchar, ket_aro2 varchar) WHERE tgl_produksi between '$dtstart' AND '$dtfinish'";
                      
                      $dtdetailtpc0   = $this->$model->get_datalaporan($dtquerytpc0);
                      $dtdetailtpc1   = $this->$model->get_datalaporan($dtquerytpc1);
                      $dtdetailtpc2   = $this->$model->get_datalaporan($dtquerytpc2);
                      $dtdetailtpc3   = $this->$model->get_datalaporan($dtquerytpc3);
                      $dtdetailtpc4   = $this->$model->get_datalaporan($dtquerytpc4);
                      $dtdetailtpc5   = $this->$model->get_datalaporan($dtquerytpc5);
                      $dtdetailtpc6   = $this->$model->get_datalaporan($dtquerytpc6);
                      $dtdetailtpc7   = $this->$model->get_datalaporan($dtquerytpc7);
                      $dtdetailtpc0op = $this->$model->get_datalaporan($dtquerytpc0op);
                      $dtdetailtpc1op = $this->$model->get_datalaporan($dtquerytpc1op);
                      $dtdetailtpc2op = $this->$model->get_datalaporan($dtquerytpc2op);
                      $dtdetailtpc3op = $this->$model->get_datalaporan($dtquerytpc3op);
                      $dtdetailtpc4op = $this->$model->get_datalaporan($dtquerytpc4op);
                      $dtdetailtpc5op = $this->$model->get_datalaporan($dtquerytpc5op);
                      $dtdetailtpc6op = $this->$model->get_datalaporan($dtquerytpc6op);
                      $dtdetailtpc7op = $this->$model->get_datalaporan($dtquerytpc7op);
                      $dtdetailtcc0   = $this->$model->get_datalaporan($dtquerytcc0);
                      $dtdetailtcc1   = $this->$model->get_datalaporan($dtquerytcc1);
                      $dtdetailtcc2   = $this->$model->get_datalaporan($dtquerytcc2);
                      $dtdetailtcc3   = $this->$model->get_datalaporan($dtquerytcc3);
                      $dtdetailtcc4   = $this->$model->get_datalaporan($dtquerytcc4);
                      $dtdetailtcc0op = $this->$model->get_datalaporan($dtquerytcc0op);
                      $dtdetailtcc1op = $this->$model->get_datalaporan($dtquerytcc1op);
                      $dtdetailtcc2op = $this->$model->get_datalaporan($dtquerytcc2op);
                      $dtdetailtcc3op = $this->$model->get_datalaporan($dtquerytcc3op);
                      $dtdetailtcc4op = $this->$model->get_datalaporan($dtquerytcc4op);
                      $dtdetail3      = $this->$model->get_datalaporan($dtquery3);
                      $dtdetail4      = $this->$model->get_datalaporan($dtquery4);
                      $dtdetail5      = $this->$model->get_datalaporan($dtquery5);

                break;
          
                case $frmkode == 'frmnon012': 
                $quoted1  = '$$VALUES';
                $quoted2  = '$$';
                $dtquery1 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, ph
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('1-09:00'::text),('1-17:00'::text), ('1-01:00'::text),('2-09:00'::text),('2-17:00'::text), ('2-01:00'::text),('3-09:00'::text),('3-17:00'::text), ('3-01:00'::text),('4-09:00'::text),('4-17:00'::text), ('4-01:00'::text),('5-09:00'::text),('5-17:00'::text), ('5-01:00'::text),('6-09:00'::text),('6-17:00'::text), ('6-01:00'::text),('7-09:00'::text),('7-17:00'::text), ('7-01:00'::text),('8-09:00'::text),('8-17:00'::text), ('8-01:00'::text),('FW-09:00'),('FW-17:00'),('FW-01:00'),('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, shift1_1 varchar, shift2_1 varchar, shift3_1 varchar,shift1_2 varchar, shift2_2 varchar, shift3_2 varchar,shift1_3 varchar, shift2_3 varchar, shift3_3 varchar,shift1_4 varchar, shift2_4 varchar, shift3_4 varchar, shift1_5 varchar, shift2_5 varchar, shift3_5 varchar,shift1_6 varchar, shift2_6 varchar, shift3_6 varchar, shift1_7 varchar, shift2_7 varchar, shift3_7 varchar, shift1_8 varchar, shift2_8 varchar, shift3_8 varchar, shift1_fw varchar, shift2_fw varchar, shift3_fw varchar, shift1_steam varchar, shift2_steam varchar, shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery2 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, ta_ppm
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('1-09:00'::text),('1-17:00'::text), ('1-01:00'::text),('2-09:00'::text),('2-17:00'::text), ('2-01:00'::text),('3-09:00'::text),('3-17:00'::text), ('3-01:00'::text),('4-09:00'::text),('4-17:00'::text), ('4-01:00'::text),('5-09:00'::text),('5-17:00'::text), ('5-01:00'::text),('6-09:00'::text),('6-17:00'::text), ('6-01:00'::text),('7-09:00'::text),('7-17:00'::text), ('7-01:00'::text),('8-09:00'::text),('8-17:00'::text), ('8-01:00'::text),('FW-09:00'),('FW-17:00'),('FW-01:00'),('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, ta_shift1_1 varchar, ta_shift2_1 varchar, ta_shift3_1 varchar,ta_shift1_2 varchar, ta_shift2_2 varchar, ta_shift3_2 varchar,ta_shift1_3 varchar, ta_shift2_3 varchar, ta_shift3_3 varchar,ta_shift1_4 varchar, ta_shift2_4 varchar, ta_shift3_4 varchar, ta_shift1_5 varchar, ta_shift2_5 varchar, ta_shift3_5 varchar,ta_shift1_6 varchar, ta_shift2_6 varchar, ta_shift3_6 varchar, ta_shift1_7 varchar, ta_shift2_7 varchar, ta_shift3_7 varchar, ta_shift1_8 varchar, ta_shift2_8 varchar, ta_shift3_8 varchar, ta_shift1_fw varchar, ta_shift2_fw varchar, ta_shift3_fw varchar, ta_shift1_steam varchar, ta_shift2_steam varchar, ta_shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery3 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, sulfit_ppm
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('1-09:00'::text),('1-17:00'::text), ('1-01:00'::text),('2-09:00'::text),('2-17:00'::text), ('2-01:00'::text),('3-09:00'::text),('3-17:00'::text), ('3-01:00'::text),('4-09:00'::text),('4-17:00'::text), ('4-01:00'::text),('5-09:00'::text),('5-17:00'::text), ('5-01:00'::text),('6-09:00'::text),('6-17:00'::text), ('6-01:00'::text),('7-09:00'::text),('7-17:00'::text), ('7-01:00'::text),('8-09:00'::text),('8-17:00'::text), ('8-01:00'::text),('FW-09:00'),('FW-17:00'),('FW-01:00'),('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, sulfit_shift1_1 varchar, sulfit_shift2_1 varchar, sulfit_shift3_1 varchar,sulfit_shift1_2 varchar, sulfit_shift2_2 varchar, sulfit_shift3_2 varchar,sulfit_shift1_3 varchar, sulfit_shift2_3 varchar, sulfit_shift3_3 varchar,sulfit_shift1_4 varchar, sulfit_shift2_4 varchar, sulfit_shift3_4 varchar, sulfit_shift1_5 varchar, sulfit_shift2_5 varchar, sulfit_shift3_5 varchar,sulfit_shift1_6 varchar, sulfit_shift2_6 varchar, sulfit_shift3_6 varchar, sulfit_shift1_7 varchar, sulfit_shift2_7 varchar, sulfit_shift3_7 varchar, sulfit_shift1_8 varchar, sulfit_shift2_8 varchar, sulfit_shift3_8 varchar, sulfit_shift1_fw varchar, sulfit_shift2_fw varchar, sulfit_shift3_fw varchar, sulfit_shift1_steam varchar, sulfit_shift2_steam varchar, sulfit_shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery4 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, tds
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('1-09:00'::text),('1-17:00'::text), ('1-01:00'::text),('2-09:00'::text),('2-17:00'::text), ('2-01:00'::text),('3-09:00'::text),('3-17:00'::text), ('3-01:00'::text),('4-09:00'::text),('4-17:00'::text), ('4-01:00'::text),('5-09:00'::text),('5-17:00'::text), ('5-01:00'::text),('6-09:00'::text),('6-17:00'::text), ('6-01:00'::text),('7-09:00'::text),('7-17:00'::text), ('7-01:00'::text),('8-09:00'::text),('8-17:00'::text), ('8-01:00'::text),('FW-09:00'),('FW-17:00'),('FW-01:00'),('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, tds_shift1_1 varchar, tds_shift2_1 varchar, tds_shift3_1 varchar,tds_shift1_2 varchar, tds_shift2_2 varchar, tds_shift3_2 varchar,tds_shift1_3 varchar, tds_shift2_3 varchar, tds_shift3_3 varchar,tds_shift1_4 varchar, tds_shift2_4 varchar, tds_shift3_4 varchar, tds_shift1_5 varchar, tds_shift2_5 varchar, tds_shift3_5 varchar,tds_shift1_6 varchar, tds_shift2_6 varchar, tds_shift3_6 varchar, tds_shift1_7 varchar, tds_shift2_7 varchar, tds_shift3_7 varchar, tds_shift1_8 varchar, tds_shift2_8 varchar, tds_shift3_8 varchar, tds_shift1_fw varchar, tds_shift2_fw varchar, tds_shift3_fw varchar, tds_shift1_steam varchar, tds_shift2_steam varchar, tds_shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery5 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, phospat
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('1-09:00'::text),('1-17:00'::text), ('1-01:00'::text),('2-09:00'::text),('2-17:00'::text), ('2-01:00'::text),('3-09:00'::text),('3-17:00'::text), ('3-01:00'::text),('4-09:00'::text),('4-17:00'::text), ('4-01:00'::text),('5-09:00'::text),('5-17:00'::text), ('5-01:00'::text),('6-09:00'::text),('6-17:00'::text), ('6-01:00'::text),('7-09:00'::text),('7-17:00'::text), ('7-01:00'::text),('8-09:00'::text),('8-17:00'::text), ('8-01:00'::text),('FW-09:00'),('FW-17:00'),('FW-01:00'),('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, phospat_shift1_1 varchar, phospat_shift2_1 varchar, phospat_shift3_1 varchar,phospat_shift1_2 varchar, phospat_shift2_2 varchar, phospat_shift3_2 varchar,phospat_shift1_3 varchar, phospat_shift2_3 varchar, phospat_shift3_3 varchar,phospat_shift1_4 varchar, phospat_shift2_4 varchar, phospat_shift3_4 varchar, phospat_shift1_5 varchar, phospat_shift2_5 varchar, phospat_shift3_5 varchar,phospat_shift1_6 varchar, phospat_shift2_6 varchar, phospat_shift3_6 varchar, phospat_shift1_7 varchar, phospat_shift2_7 varchar, phospat_shift3_7 varchar, phospat_shift1_8 varchar, phospat_shift2_8 varchar, phospat_shift3_8 varchar, phospat_shift1_fw varchar, phospat_shift2_fw varchar, phospat_shift3_fw varchar, phospat_shift1_steam varchar, phospat_shift2_steam varchar, phospat_shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery6 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, colour
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('STEAM-09:00'),('STEAM-17:00'),('STEAM-01:00')$quoted2)
                                      AS ct (tanggal date, colour_shift1_steam varchar, colour_shift2_steam varchar, colour_shift3_steam varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";
                $dtquery7 = "SELECT * FROM crosstab('SELECT tanggal, CONCAT(kd_sampel, ''-'', jam_sampling) AS sample_jam, th_ppm
                                    FROM   view_rekap_boiler ORDER  BY 1,2', $quoted1 ('FW-09:00'),('FW-17:00'),('FW-01:00')$quoted2)
                                      AS ct (tanggal date, th_shift1_fw varchar, th_shift2_fw varchar, th_shift3_fw varchar) WHERE tanggal between '$dtstart' AND '$dtfinish'";

                $dtdetail1 = $this->$model->get_datalaporan($dtquery1);
                $dtdetail2 = $this->$model->get_datalaporan($dtquery2);
                $dtdetail3 = $this->$model->get_datalaporan($dtquery3);
                $dtdetail4 = $this->$model->get_datalaporan($dtquery4);
                $dtdetail5 = $this->$model->get_datalaporan($dtquery5);
                $dtdetail6 = $this->$model->get_datalaporan($dtquery6);
                $dtdetail7 = $this->$model->get_datalaporan($dtquery7);
                default: 
                if ($cekLevelUserNm == "Auditor"){
                    $dtheader = $this->$model->get_header_byid($id);
                    $dtdetail = $this->$model->get_detail_byidx($id);
                } else {
                    $dtheader = $this->$model->get_header_byid($id);
                    $dtdetail = $this->$model->get_detail_byid($id);
                }
                break;
        }



        $headerStyle = new PHPExcel_Style();
        $bodyStyle   = new PHPExcel_Style();
        $cellred     = new PHPExcel_Style();
        $cellredcol  = new PHPExcel_Style();
        $cellblue    = new PHPExcel_Style();
        $cellyellow1 = new PHPExcel_Style();
        $cellorange  = new PHPExcel_Style();
        $cellorange1 = new PHPExcel_Style();
        $cellyellow  = new PHPExcel_Style();
        $cellungu    = new PHPExcel_Style();
        $cellcoklat  = new PHPExcel_Style();


        $headerStyle->applyFromArray(array
            ('fill'   => array(
                           'type' => PHPExcel_Style_Fill::FILL_SOLID
                           //'color'   => array('argb' => 'FFFFFFFF')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $bodyStyle->applyFromArray(
            array('fill'   => array(
                        'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                        'color' => array('argb' => 'FFFFFFFF')
                            ),
                            
                  'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
                  'borders' => array(
                        'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                        'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                                   ),
                  'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                      ),

            )
        );

        $cellred->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'FF5050')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $cellblue->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'D9EDF7')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $cellungu->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'D8BFD8')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $cellcoklat->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'EEE8AA')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $cellyellow->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'FFEC50')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        $cellorange->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'ff9933')
                              ),
            'font'   => array(
                           'bold'    => true),
             'numberformat'   => array(
                           'code' => PHPExcel_Style_NumberFormat::FORMAT_TEXT),
             'borders' => array(
                            'bottom' => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'right'  => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'left'   => array('style' => PHPExcel_Style_Border::BORDER_THIN),
                            'top'    => array('style' => PHPExcel_Style_Border::BORDER_THIN)
                               ),
              'alignment' => array(
                            'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
                            'vertical'   => PHPExcel_Style_Alignment::VERTICAL_CENTER,
                            'wrap'       => true
                                 ),
              
                               
            )
        );

        
        $cellyellow1->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'ffff99')
                               
            ),
            )
            );

        $cellorange1->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'ff9933')
                               
            ),
            )
            );
         $cellredcol->applyFromArray(

            array('fill'   => array(
                           'type'  => PHPExcel_Style_Fill::FILL_SOLID,
                           'color' => array('rgb' => 'ff0000')
                               
            ),
            )
            );


        
        $obj        = new Excel();
        $objDrawing = new PHPExcel_Worksheet_Drawing();
        $objDrawing->setPath('assets/images/tlogopsg.png');

        switch ($frmkode && $frmvrs){
            case $frmkode == 'frmfss087' && $frmvrs == '01': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach($dtheader as $dtheader_row){        
                    $dtdoc          = $dtheader_row->dtdoc;
                    $dtdate         = substr($dtheader_row->dtdate,8,2).'-'.substr($dtheader_row->dtdate,5,2).'-'.substr($dtheader_row->dtdate,0,4);
                    $filler         = $dtheader_row->filler;
                    $productiondate = substr($dtheader_row->productiondate,8,2).'-'.substr($dtheader_row->productiondate,5,2).'-'.substr($dtheader_row->productiondate,0,4);
                    $bbd            = substr($dtheader_row->bbd,8,2).'-'.substr($dtheader_row->bbd,5,2).'-'.substr($dtheader_row->bbd,0,4);
                    $formula        = $dtheader_row->formula;
                }

                $objPHPExcel = $obj->createSheet(0);

                    $objDrawing->setCoordinates('A2');
                    $objDrawing->setWorksheet($objPHPExcel);

                    // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                    foreach(range('A','AE') as $columnID){
                        $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:AE1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:AA3')->setCellValue('B2',$frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->mergeCells('AB2:AE2')->setCellValue('AB2','DOC : '.$dtdoc);
                $objPHPExcel->mergeCells('AB3:AE3')->setCellValue('AB3','DATE : '.$dtdate);
                $objPHPExcel->mergeCells('AB4:AE4')->setCellValue('AB4','PAGE : ');

                $objPHPExcel->setCellValue('A4','TITLE'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:AA4')->setCellValue('B4',''.$frmjdl); // judul form

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AE4');

                $objPHPExcel->mergeCells('A5:AE5')->setCellValue('A5','');

                $objPHPExcel->mergeCells('A6:C6')->setCellValue('A6','PRODUCT ID/FORMULA');
                $objPHPExcel->mergeCells('D6:AE6')->setCellValue('D6',': '.$formula.'/');

                $objPHPExcel->mergeCells('A7:C7')->setCellValue('A7','PRODUCTION DATE');
                $objPHPExcel->mergeCells('D7:AE7')->setCellValue('D7',': '.$productiondate);

                $objPHPExcel->mergeCells('A8:C8')->setCellValue('A8','EXPIRY DATE/BEST BEFORE DATE');
                $objPHPExcel->mergeCells('D8:AE8')->setCellValue('D8',': '.$bbd);

                $objPHPExcel->mergeCells('A9:C9')->setCellValue('A9','FILLER');
                $objPHPExcel->mergeCells('D9:AE9')->setCellValue('D9',': '.$filler);

                $objPHPExcel->mergeCells('A10:AE10')->setCellValue('A10','');


                $objPHPExcel->mergeCells('A11:A13')->setCellValue('A11','Sampling Time');
                $objPHPExcel->mergeCells('B11:C13')->setCellValue('B11','Sampling Point');
                $objPHPExcel->mergeCells('D11:D13')->setCellValue('D11','Code');
                $objPHPExcel->mergeCells('E11:E13')->setCellValue('E11','No Pallet');
                $objPHPExcel->mergeCells('F11:F13')->setCellValue('F11','No Carton');
                $objPHPExcel->mergeCells('G11:V11')->setCellValue('G11','Weight/Pack (g)');
                $objPHPExcel->mergeCells('W11:AB11')->setCellValue('W11','Packing Quality (TBA/TPA/TCA/CB)');
                $objPHPExcel->mergeCells('AC11:AE13')->setCellValue('AC11','Remarks');

                $objPHPExcel->mergeCells('G11:N12')->setCellValue('G12','Right Jaw (TBA and TPA)/Side 1 Jaw (TCA)/Track Combi');
                $objPHPExcel->mergeCells('O11:V12')->setCellValue('O12','Left Jaw (TBA and TPA)/Side 2 Jaw (TCA)/Track Combi');
                $objPHPExcel->mergeCells('W12:W13')->setCellValue('W12','Dating');
                $objPHPExcel->mergeCells('X12:X13')->setCellValue('X12','Form');
                $objPHPExcel->mergeCells('Y12:Y13')->setCellValue('Y12','Design');
                $objPHPExcel->mergeCells('Z12:Z13')->setCellValue('Z12','Over Lap');
                $objPHPExcel->mergeCells('AA12:AA13')->setCellValue('AA12','Upper');
                $objPHPExcel->mergeCells('AB12:AB13')->setCellValue('AB12','Bottom');

                $objPHPExcel->setCellValue('G13','1');
                $objPHPExcel->setCellValue('H13','2');
                $objPHPExcel->setCellValue('I13','3');
                $objPHPExcel->setCellValue('J13','4');
                $objPHPExcel->setCellValue('K13','5');
                $objPHPExcel->setCellValue('L13','6');
                $objPHPExcel->setCellValue('M13','7');
                $objPHPExcel->setCellValue('N13','8');

                $objPHPExcel->setCellValue('O13','1');
                $objPHPExcel->setCellValue('P13','2');
                $objPHPExcel->setCellValue('Q13','3');
                $objPHPExcel->setCellValue('R13','4');
                $objPHPExcel->setCellValue('S13','5');
                $objPHPExcel->setCellValue('T13','6');
                $objPHPExcel->setCellValue('U13','7');
                $objPHPExcel->setCellValue('V13','8');

                $objPHPExcel->setSharedStyle($headerStyle, 'A11:AE13');

                $rowCount = 13;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A'.$rowCount.':AE'.$rowCount);
                    $objPHPExcel->getStyle('A'.$rowCount.':AE'.$rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A'.$rowCount,$row->sampling_time);
                    $objPHPExcel->mergeCells('B' . $rowCount . ':C' . $rowCount)->setCellValue('B'.$rowCount,$row->sampling_point);
                    $objPHPExcel->setCellValue('E'.$rowCount,$row->no_pallet);
                    $objPHPExcel->setCellValue('F'.$rowCount,$row->no_carton);
                    $objPHPExcel->setCellValue('G'.$rowCount,$row->right_jaw1);
                    $objPHPExcel->setCellValue('H'.$rowCount,$row->right_jaw2);
                    $objPHPExcel->setCellValue('I'.$rowCount,$row->right_jaw3);
                    $objPHPExcel->setCellValue('J'.$rowCount,$row->right_jaw4);
                    $objPHPExcel->setCellValue('K'.$rowCount,$row->right_jaw5);
                    $objPHPExcel->setCellValue('L'.$rowCount,$row->right_jaw6);
                    $objPHPExcel->setCellValue('M'.$rowCount,$row->right_jaw7);
                    $objPHPExcel->setCellValue('N'.$rowCount,$row->right_jaw8);

                    $objPHPExcel->setCellValue('O'.$rowCount,$row->left_jaw1);
                    $objPHPExcel->setCellValue('P'.$rowCount,$row->left_jaw2);
                    $objPHPExcel->setCellValue('Q'.$rowCount,$row->left_jaw3);
                    $objPHPExcel->setCellValue('R'.$rowCount,$row->left_jaw4);
                    $objPHPExcel->setCellValue('S'.$rowCount,$row->left_jaw5);
                    $objPHPExcel->setCellValue('T'.$rowCount,$row->left_jaw6);
                    $objPHPExcel->setCellValue('U'.$rowCount,$row->left_jaw7);
                    $objPHPExcel->setCellValue('V'.$rowCount,$row->left_jaw8);

                    $objPHPExcel->setCellValue('W'.$rowCount,$row->dating);
                    $objPHPExcel->setCellValue('X'.$rowCount,$row->form);
                    $objPHPExcel->setCellValue('Y'.$rowCount,$row->design);
                    $objPHPExcel->setCellValue('Z'.$rowCount,$row->overlap);
                    $objPHPExcel->setCellValue('AA'.$rowCount,$row->upper);
                    $objPHPExcel->setCellValue('AB'.$rowCount,$row->bottom);
                    $objPHPExcel->mergeCells('AC' . $rowCount . ':AE' . $rowCount)->setCellValue('AE'.$rowCount,$row->remarks);
                    // $objPHPExcel->mergeCells('AC' . $rowCount . ':AE' . $rowCount)->setCellValue('AC'.$rowCount,$row->remarksA);

                    $no++;
                }

                $rowket1 = $rowCount+1;
                $rowket2 = $rowCount+2;
                $rowket3 = $rowCount+3;
                $rowket4 = $rowCount+4;
                $rowket5 = $rowCount+5;
                $rowket6 = $rowCount+6;


                $objPHPExcel->mergeCells('A'.$rowket1.':F'.$rowket1)->setCellValue('A'.$rowket1,'Average Weight/Pack (g)');
                $objPHPExcel->mergeCells('A'.$rowket2.':F'.$rowket2)->setCellValue('A'.$rowket2,'Average Volume/Pack (ml)');
                $objPHPExcel->mergeCells('A'.$rowket3.':F'.$rowket3)->setCellValue('A'.$rowket3,'Quantity Produced :');
                $objPHPExcel->mergeCells('A'.$rowket4.':F'.$rowket4)->setCellValue('A'.$rowket4,'Total Quantity of QA Samples Taken :');

                $objPHPExcel->mergeCells('A'.$rowket5.':D'.$rowket5)->setCellValue('A'.$rowket5,'Dating Check (individual dan carton box)');
                $objPHPExcel->mergeCells('E'.$rowket5.':AE'.$rowket5)->setCellValue('E'.$rowket5,'');

                $objPHPExcel->mergeCells('A'.$rowket6.':C'.$rowket6)->setCellValue('A'.$rowket6,'Format Date Schedule');
                $objPHPExcel->mergeCells('D'.$rowket6.':F'.$rowket6)->setCellValue('D'.$rowket6,'Format Date Actual');
                $objPHPExcel->mergeCells('G'.$rowket6.':H'.$rowket6)->setCellValue('G'.$rowket6,'Repoted by');
                $objPHPExcel->mergeCells('I'.$rowket6.':J'.$rowket6)->setCellValue('I'.$rowket6,'Checked by');
                $objPHPExcel->mergeCells('K'.$rowket6.':P'.$rowket6)->setCellValue('K'.$rowket6,'Remark');
                $objPHPExcel->mergeCells('Q'.$rowket6.':S'.$rowket6)->setCellValue('Q'.$rowket6,'Format Date Schedule');
                $objPHPExcel->mergeCells('T'.$rowket6.':V'.$rowket6)->setCellValue('T'.$rowket6,'Format Date Actual');
                $objPHPExcel->mergeCells('W'.$rowket6.':X'.$rowket6)->setCellValue('W'.$rowket6,'Repoted by');
                $objPHPExcel->mergeCells('Y'.$rowket6.':Z'.$rowket6)->setCellValue('Y'.$rowket6,'Checked by');
                $objPHPExcel->mergeCells('AA'.$rowket6.':AE'.$rowket6)->setCellValue('AA'.$rowket6,'Remark');

                $objPHPExcel->setSharedStyle($headerStyle, 'A'.$rowket5.':AE'.$rowket6);

                foreach ($dtdetail2 as $row2){
                    $rowket6++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A'.$rowket6.':P'.$rowket6);
                    $objPHPExcel->getStyle('A'.$rowket6.':K'.$rowket6)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A' . $rowket6 . ':C' . $rowket6)->setCellValue('A'.$rowket6,$row2->fd_schedule);
                    $objPHPExcel->mergeCells('D' . $rowket6 . ':F' . $rowket6)->setCellValue('D'.$rowket6,$row2->userfile);
                    $objPHPExcel->mergeCells('G' . $rowket6 . ':H' . $rowket6)->setCellValue('G'.$rowket6,$row2->reportedby);
                    $objPHPExcel->mergeCells('I' . $rowket6 . ':J' . $rowket6)->setCellValue('I'.$rowket6,$row2->checkedby);
                    $objPHPExcel->mergeCells('K' . $rowket6 . ':P' . $rowket6)->setCellValue('I'.$rowket6,$row2->remarkB);

                    $no++;
                }


                $rowket7 = $rowCount+7;
                $rowket8 = $rowCount+8;


                $rowend = $rowCount+10;

                $objPHPExcel->mergeCells('A'.$rowket7.':D'.$rowket7)->setCellValue('A'.$rowket7,'Non-conformance Record');
                $objPHPExcel->mergeCells('E'.$rowket7.':AE'.$rowket7)->setCellValue('E'.$rowket7,'');

                $objPHPExcel->mergeCells('A'.$rowket8.':B'.$rowket8)->setCellValue('A'.$rowket8,'Time');
                $objPHPExcel->mergeCells('C'.$rowket8.':K'.$rowket8)->setCellValue('C'.$rowket8,'Non-conformance');
                $objPHPExcel->mergeCells('L'.$rowket8.':Y'.$rowket8)->setCellValue('L'.$rowket8,'Corrective Action');
                $objPHPExcel->mergeCells('Z'.$rowket8.':AE'.$rowket8)->setCellValue('Z'.$rowket8,'Action By');

                $objPHPExcel->setSharedStyle($headerStyle, 'A'.$rowket8.':AE'.$rowket8);


                $objPHPExcel->getStyle('O'.$rowend.':AE'.$rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A'.$rowend.':N'.$rowend)->setCellValue('A'.$rowend,'Mulai Berlaku :'.$frm_efect);
                $objPHPExcel->mergeCells('O'.$rowend.':AE'.$rowend)->setCellValue('O'.$rowend,$frmnm);

            break;
            case $frmkode == 'frmfss093' && $frmvrs == '03': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $tgl_data = substr($dtheader_row->tgl_data, 8, 2) . '-' . substr($dtheader_row->tgl_data, 5, 2) . '-' . substr($dtheader_row->tgl_data, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'O') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:O1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:L3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->mergeCells('M2:O2')->setCellValue('M2', 'Doc : ');
                $objPHPExcel->mergeCells('M3:O3')->setCellValue('M3', 'P/D : ' . $tgl_data);
                $objPHPExcel->mergeCells('M4:O4')->setCellValue('M4', '');

                $objPHPExcel->setCellValue('A4', 'TITLE'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:L4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:B5')->setCellValue('A5', 'A. Air Test');
                $objPHPExcel->mergeCells('C5:O5')->setCellValue('C5', '');

                // table specification
                $objPHPExcel->mergeCells('A6:F6')->setCellValue('A6', 'Specification');
                $objPHPExcel->mergeCells('G6:I6')->setCellValue('G6', 'Total Plate Count');
                $objPHPExcel->mergeCells('J6:L6')->setCellValue('J6', 'Enterobacteriaceae');
                $objPHPExcel->mergeCells('M6:O6')->setCellValue('M6', 'Yeast and Mould');

                // kolom specification
                $objPHPExcel->mergeCells('A7:F7')->setCellValue('A7', 'DRP :Dryer Discharge Area');
                $objPHPExcel->mergeCells('A8:F8')->setCellValue('A8', 'Bag Filling Room Area');
                $objPHPExcel->mergeCells('A9:F9')->setCellValue('A9', 'CMP :Filling*, Cooling, Fluidizer and Horizontal packing Machine Room Area*');
                $objPHPExcel->mergeCells('A10:F10')->setCellValue('A10', 'Cooler Room area *second Floor)');
                $objPHPExcel->mergeCells('A11:F11')->setCellValue('A11', 'Ductin Sterile Air Area');
                $objPHPExcel->mergeCells('A12:F12')->setCellValue('A12', 'WTP : Aseptic Filling Machine Area and Compressor Area');
                $objPHPExcel->mergeCells('A13:F13')->setCellValue('A13', 'DWP : Filling Area');

                // kolom TPC
                $objPHPExcel->mergeCells('G7:I7')->setCellValue('G7', 'Max 45 cfu/15 min');
                $objPHPExcel->mergeCells('G8:I8')->setCellValue('G8', 'Max 30 cfu/15 min');
                $objPHPExcel->mergeCells('G9:I9')->setCellValue('G9', 'Max 30 cfu/15 min');
                $objPHPExcel->mergeCells('G10:I10')->setCellValue('G10', 'Max 45 cfu/15 min');
                $objPHPExcel->mergeCells('G11:I11')->setCellValue('G11', 'Max 15 cfu/15 min');
                $objPHPExcel->mergeCells('G12:I12')->setCellValue('G12', 'Max 15 cfu/15 min');
                $objPHPExcel->mergeCells('G13:I13')->setCellValue('G13', 'Max 30 cfu/15 min');

                // kolom entero
                $objPHPExcel->mergeCells('J7:L7')->setCellValue('J7', '-');
                $objPHPExcel->mergeCells('J8:L8')->setCellValue('J8', '-');
                $objPHPExcel->mergeCells('J9:L9')->setCellValue('J9', '< 1 cfu/ 15 min');
                $objPHPExcel->mergeCells('J10:L10')->setCellValue('J10', '-');
                $objPHPExcel->mergeCells('J11:L11')->setCellValue('J11', '-');
                $objPHPExcel->mergeCells('J12:L12')->setCellValue('J12', '-');
                $objPHPExcel->mergeCells('J13:L13')->setCellValue('J13', '-');

                // kolom Yeast andMould
                $objPHPExcel->mergeCells('M7:O7')->setCellValue('M7', 'Max 15 cfu/ 15 min');
                $objPHPExcel->mergeCells('M8:O8')->setCellValue('M8', 'Max 15 cfu/ 15 min');
                $objPHPExcel->mergeCells('M9:O9')->setCellValue('M9', 'Max 15 cfu/ 15 min');
                $objPHPExcel->mergeCells('M10:O10')->setCellValue('M10', 'Max 15 cfu/ 15 min');
                $objPHPExcel->mergeCells('M11:O11')->setCellValue('M11', 'Max 10 cfu/ 15 min');
                $objPHPExcel->mergeCells('M12:O12')->setCellValue('M12', '< 5 cfu/ 15 min');
                $objPHPExcel->mergeCells('M13:O13')->setCellValue('M13', 'Max 15 cfu/ 15 min');

                // tabel detail
                $objPHPExcel->mergeCells('A14:B14')->setCellValue('A14', 'Exposure Time');
                $objPHPExcel->mergeCells('C14:E14')->setCellValue('C14', 'Sampling Points');
                $objPHPExcel->mergeCells('F14:G14')->setCellValue('F14', 'Total Plate Count');
                $objPHPExcel->mergeCells('H14:I14')->setCellValue('H14', 'Enterobacteriaceae');
                $objPHPExcel->mergeCells('J14:L14')->setCellValue('J14', 'Yeast and Mould');
                $objPHPExcel->mergeCells('M14:O14')->setCellValue('M14', 'Remarks');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:O14');

                // jumlah row header tabel sebelum detail
                $rowCount = 14;

                $no = 1;
                foreach ($dtdetail1 as $row){
                    if ($row->operator2 == '0'){
                        $operator2 = "<";
                    } elseif ($row->operator2 == '1'){
                        $operator2 = ">";
                    } else {
                        $operator2 = $row->operator2;
                    }
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':O' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':O' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A' . $rowCount . ':B' . $rowCount)->setCellValue('A' . $rowCount, $row->wkt_sampling);
                    $objPHPExcel->mergeCells('C' . $rowCount . ':E' . $rowCount)->setCellValue('C' . $rowCount, $row->kd_samplingpoint);
                    $objPHPExcel->mergeCells('F' . $rowCount . ':G' . $rowCount)->setCellValue('F' . $rowCount, $operator2 . ' ' . $row->ha_tpc);
                    $objPHPExcel->mergeCells('H' . $rowCount . ':I' . $rowCount)->setCellValue('H' . $rowCount, $row->ha_entero);
                    $objPHPExcel->mergeCells('J' . $rowCount . ':L' . $rowCount)->setCellValue('J' . $rowCount, $row->ha_yeast . '   ' . $row->ha_mould);
                    $objPHPExcel->mergeCells('M' . $rowCount . ':O' . $rowCount)->setCellValue('M' . $rowCount, $row->remarks);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('H' . $rowend . ':O' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:O14')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':G' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('H' . $rowend . ':O' . $rowend)->setCellValue('H' . $rowend, $frmnm . '-' . $frmvrs);



                ////////////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////      TABLE ENVIRONMENTAL SWABBING/FLOOR AND WALL SWABBING      //////////////
                ////////////////////////////////////////////////////////////////////////////////////////////////////

                $objPHPExcel2 = $obj->createSheet(1);

                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');

                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'O') as $columnID){
                    $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel2->mergeCells('A1:O1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel2->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel2->mergeCells('B2:L3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel2->mergeCells('M2:O2')->setCellValue('M2', 'Doc : ');
                $objPHPExcel2->mergeCells('M3:O3')->setCellValue('M3', 'P/D : ' . $tgl_data);
                $objPHPExcel2->mergeCells('M4:O4')->setCellValue('M4', '');

                $objPHPExcel2->setCellValue('A4', 'TITLE'); // text di bawah icon
                $objPHPExcel2->mergeCells('B4:L4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel2->mergeCells('A5:B5')->setCellValue('A5', 'B. Environmental Swabbing / Floor and Wall Swabbing');
                $objPHPExcel2->mergeCells('C5:O5')->setCellValue('C5', '');

                // table specification
                $objPHPExcel2->mergeCells('A6:F6')->setCellValue('A6', 'Specification');
                $objPHPExcel2->mergeCells('G6:H6')->setCellValue('G6', 'Total Plate Count');
                $objPHPExcel2->mergeCells('I6:J6')->setCellValue('I6', 'Enterobacteriaceae');
                $objPHPExcel2->mergeCells('K6:L6')->setCellValue('K6', 'E. coli');
                $objPHPExcel2->mergeCells('M6:O6')->setCellValue('M6', 'Salmonella');

                // kolom row specification I
                $objPHPExcel2->mergeCells('A7:B11')->setCellValue('A7', '1. Floor');
                $objPHPExcel2->mergeCells('A12:B15')->setCellValue('A12', '2. Wall');
                $objPHPExcel2->mergeCells('A16:B16')->setCellValue('A16', '3. Selokan area filling');

                // kolom row specification II
                $objPHPExcel2->mergeCells('C7:F7')->setCellValue('C7', 'DRP - Bag Filling Room Area');
                $objPHPExcel2->mergeCells('C8:F8')->setCellValue('C8', 'CMP - Filling dan Cooling Area');
                $objPHPExcel2->mergeCells('C9:F9')->setCellValue('C9', 'SPD - Santan Press Processing Area');
                $objPHPExcel2->mergeCells('C10:F10')->setCellValue('C10', 'MPD - Meat Preparation Area');
                $objPHPExcel2->mergeCells('C11:F11')->setCellValue('C11', 'WTP - Wet Process Area');
                $objPHPExcel2->mergeCells('C12:F12')->setCellValue('C12', 'DRP - Bag Filling Room Area');
                $objPHPExcel2->mergeCells('C13:F13')->setCellValue('C13', 'CMP - Filling dan Cooling Area');
                $objPHPExcel2->mergeCells('C14:F14')->setCellValue('C14', 'SPD - Santan Press Processing Area');
                $objPHPExcel2->mergeCells('C15:F15')->setCellValue('C15', 'SPD - Santan Press Processing Area');
                $objPHPExcel2->mergeCells('C16:F16')->setCellValue('C16', 'WTP - Aseptic Filling Machine Area');

                // kolom TPC
                $objPHPExcel2->mergeCells('G7:H7')->setCellValue('G7', 'Max 3200 cfu/400 cm^2');
                $objPHPExcel2->mergeCells('G8:H11')->setCellValue('G8', '');
                $objPHPExcel2->mergeCells('G12:H12')->setCellValue('G12', 'Max 2500 cfu/400 cm^2');
                $objPHPExcel2->mergeCells('G13:H15')->setCellValue('G13', '');
                $objPHPExcel2->mergeCells('G16:H16')->setCellValue('G16', 'Max 3200 cfu/400 cm^2');

                // kolom Entero
                $objPHPExcel2->mergeCells('I7:J7')->setCellValue('I7', 'Max 200 cfu/400 cm^2');
                $objPHPExcel2->mergeCells('I8:J11')->setCellValue('I8', '');
                $objPHPExcel2->mergeCells('I12:J12')->setCellValue('I12', 'Max 150 cfu/400 cm^2');
                $objPHPExcel2->mergeCells('I13:J15')->setCellValue('I13', '');
                $objPHPExcel2->mergeCells('I16:J16')->setCellValue('I16', 'Max 200 cfu/400 cm^2');

                // kolom ecoli
                $objPHPExcel2->mergeCells('K7:L7')->setCellValue('K7', 'Abs/400 cm^2');
                $objPHPExcel2->mergeCells('K8:L11')->setCellValue('K8', '');
                $objPHPExcel2->mergeCells('K12:L12')->setCellValue('K12', 'Abs/400 cm^2');
                $objPHPExcel2->mergeCells('K13:L15')->setCellValue('K13', '');
                $objPHPExcel2->mergeCells('K16:L16')->setCellValue('K16', 'Abs/400 cm^2');

                // kolom salmonella
                $objPHPExcel2->mergeCells('M7:O7')->setCellValue('M7', 'Abs/400 cm^2');
                $objPHPExcel2->mergeCells('M8:O11')->setCellValue('M8', '');
                $objPHPExcel2->mergeCells('M12:O12')->setCellValue('M12', 'Abs/400 cm^2');
                $objPHPExcel2->mergeCells('M13:O15')->setCellValue('M13', '');
                $objPHPExcel2->mergeCells('M16:O16')->setCellValue('M16', 'Abs/400 cm^2');


                // tabel detail
                $objPHPExcel2->mergeCells('A17:A18')->setCellValue('A17', 'Sampling Points');
                $objPHPExcel2->mergeCells('B17:B18')->setCellValue('B17', 'Time of Swabbing');
                $objPHPExcel2->mergeCells('C17:E17')->setCellValue('C17', 'Total Plate Count');
                $objPHPExcel2->mergeCells('F17:H17')->setCellValue('F17', 'Enterobacteriaceae');
                $objPHPExcel2->mergeCells('I17:K17')->setCellValue('I17', 'E. coli');
                $objPHPExcel2->mergeCells('L17:N17')->setCellValue('L17', 'Salmonella');
                $objPHPExcel2->mergeCells('O17:O18')->setCellValue('O17', 'Remarks');

                $objPHPExcel2->setCellValue('C18', 'Floor');
                $objPHPExcel2->setCellValue('D18', 'Wall');
                $objPHPExcel2->setCellValue('E18', 'Drainage');
                $objPHPExcel2->setCellValue('F18', 'Floor');
                $objPHPExcel2->setCellValue('G18', 'Wall');
                $objPHPExcel2->setCellValue('H18', 'Drainage');
                $objPHPExcel2->setCellValue('I18', 'Floor');
                $objPHPExcel2->setCellValue('J18', 'Wall');
                $objPHPExcel2->setCellValue('K18', 'Drainage');
                $objPHPExcel2->setCellValue('L18', 'Floor');
                $objPHPExcel2->setCellValue('M18', 'Wall');
                $objPHPExcel2->setCellValue('N18', 'Drainage');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A2:O18');

                // jumlah row header tabel sebelum detail
                $rowCount2 = 18;

                $no = 1;
                foreach ($dtdetail3 as $row){
                    $rowCount2++;

                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount2 . ':O' . $rowCount2);
                    $objPHPExcel2->getStyle('A' . $rowCount2 . ':O' . $rowCount2)->getAlignment()->setWrapText(true);

                    $objPHPExcel2->setCellValue('A' . $rowCount2, $row->sampling_point);
                    $objPHPExcel2->setCellValue('B' . $rowCount2, $row->sampling_jam);
                    $objPHPExcel2->setCellValue('C' . $rowCount2, $row->tpc_floor);
                    $objPHPExcel2->setCellValue('D' . $rowCount2, $row->tpc_wall);
                    $objPHPExcel2->setCellValue('E' . $rowCount2, $row->tpc_drainage);
                    $objPHPExcel2->setCellValue('F' . $rowCount2, $row->entero_floor);
                    $objPHPExcel2->setCellValue('G' . $rowCount2, $row->entero_wall);
                    $objPHPExcel2->setCellValue('H' . $rowCount2, $row->entero_drainage);
                    $objPHPExcel2->setCellValue('I' . $rowCount2, $row->ecoli_floor);
                    $objPHPExcel2->setCellValue('J' . $rowCount2, $row->ecoli_wall);
                    $objPHPExcel2->setCellValue('K' . $rowCount2, $row->ecoli_drainage);
                    $objPHPExcel2->setCellValue('L' . $rowCount2, $row->salmonella_floor);
                    $objPHPExcel2->setCellValue('M' . $rowCount2, $row->salmonella_wall);
                    $objPHPExcel2->setCellValue('N' . $rowCount2, $row->salmonella_drainage);
                    $objPHPExcel2->setCellValue('O' . $rowCount2, $row->remarks);

                    $no++;
                }

                $rowend2 = $rowCount2 + 1;

                $objPHPExcel2->getStyle('H' . $rowend2 . ':O' . $rowend2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel2->getStyle('A6:O18')->getAlignment()->setWrapText(true);

                $objPHPExcel2->mergeCells('A' . $rowend2 . ':G' . $rowend2)->setCellValue('A' . $rowend2, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel2->mergeCells('H' . $rowend2 . ':O' . $rowend2)->setCellValue('H' . $rowend2, $frmnm . '-' . $frmvrs);


                ////////////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////              TABLE PERSONNEL SWABBING/HAND SWABBING            //////////////
                ////////////////////////////////////////////////////////////////////////////////////////////////////

                $objPHPExcel3 = $obj->createSheet(2);

                $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');

                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'O') as $columnID){
                    $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel3->mergeCells('A1:O1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel3->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel3->mergeCells('B2:L3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel3->mergeCells('M2:O2')->setCellValue('M2', 'Doc : ');
                $objPHPExcel3->mergeCells('M3:O3')->setCellValue('M3', 'P/D : ' . $tgl_data);
                $objPHPExcel3->mergeCells('M4:O4')->setCellValue('M4', '');

                $objPHPExcel3->setCellValue('A4', 'TITLE'); // text di bawah icon
                $objPHPExcel3->mergeCells('B4:L4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel3->mergeCells('A5:B5')->setCellValue('A5', 'C. Personnel Swabbing / Hand Swabbing');
                $objPHPExcel3->mergeCells('C5:O5')->setCellValue('C5', '');

                // table specification
                $objPHPExcel3->mergeCells('A6:B6')->setCellValue('A6', 'Specification:');
                $objPHPExcel3->mergeCells('C6:F6')->setCellValue('C6', 'Total Plate Count: Max 700 cfu/400 cm^2');
                $objPHPExcel3->mergeCells('G6:J6')->setCellValue('G6', 'Enterobacteriaceae: Max 55 cfu/400 cm^2');
                $objPHPExcel3->mergeCells('K6:L6')->setCellValue('K6', 'E. coli: Abs/400 cm^2');
                $objPHPExcel3->mergeCells('M6:O6')->setCellValue('M6', 'Salmonella: Abs/400 cm^2');

                // tabel detail
                $objPHPExcel3->mergeCells('A7:B7')->setCellValue('A7', 'Name');
                $objPHPExcel3->mergeCells('C7:D7')->setCellValue('C7', 'Time of Swabbing');
                $objPHPExcel3->mergeCells('E7:F7')->setCellValue('E7', 'Total Plate Count');
                $objPHPExcel3->mergeCells('G7:H7')->setCellValue('G7', 'Enterobacteriaceae');
                $objPHPExcel3->mergeCells('I7:J7')->setCellValue('I7', 'E. coli');
                $objPHPExcel3->mergeCells('K7:L7')->setCellValue('K7', 'Salmonella');
                $objPHPExcel3->mergeCells('M7:O7')->setCellValue('M7', 'Remarks');


                $objPHPExcel3->setSharedStyle($headerStyle, 'A2:O7');

                // jumlah row header tabel sebelum detail
                $rowCount3 = 7;

                $no = 1;
                foreach ($dtdetail2 as $row){
                    if ($row->operator == '0'){
                        $operator = "<";
                    } elseif ($row->operator == '1'){
                        $operator = ">";
                    } else {
                        $operator = $row->operator;
                    }
                    if ($row->operator2 == '0'){
                        $operator2 = "<";
                    } elseif ($row->operator2 == '1'){
                        $operator2 = ">";
                    } else {
                        $operator2 = $row->operator2;
                    }
                    $rowCount3++;

                    $objPHPExcel3->setSharedStyle($bodyStyle, 'A' . $rowCount3 . ':O' . $rowCount3);
                    $objPHPExcel3->getStyle('A' . $rowCount3 . ':O' . $rowCount3)->getAlignment()->setWrapText(true);

                    $objPHPExcel3->mergeCells('A' . $rowCount3 . ':B' . $rowCount3)->setCellValue('A' . $rowCount3, $row->sampling_point . '      (' . $row->lokasi_sampling . ')');
                    $objPHPExcel3->mergeCells('C' . $rowCount3 . ':D' . $rowCount3)->setCellValue('C' . $rowCount3, $row->sampling_jam);
                    $objPHPExcel3->mergeCells('E' . $rowCount3 . ':F' . $rowCount3)->setCellValue('E' . $rowCount3, $operator2 . ' ' . $row->ha_tpc);
                    $objPHPExcel3->mergeCells('G' . $rowCount3 . ':H' . $rowCount3)->setCellValue('G' . $rowCount3, $operator . ' ' . $row->ha_entero);
                    $objPHPExcel3->mergeCells('I' . $rowCount3 . ':J' . $rowCount3)->setCellValue('I' . $rowCount3, $row->ha_ecoli_gas);
                    $objPHPExcel3->mergeCells('K' . $rowCount3 . ':L' . $rowCount3)->setCellValue('K' . $rowCount3, $row->ha_salmonella_he);
                    $objPHPExcel3->mergeCells('M' . $rowCount3 . ':O' . $rowCount3)->setCellValue('M' . $rowCount3, $row->remarks);

                    $no++;
                }

                $rowend3 = $rowCount3 + 1;

                $objPHPExcel3->getStyle('H' . $rowend3 . ':O' . $rowend3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel3->getStyle('A6:O7')->getAlignment()->setWrapText(true);

                $objPHPExcel3->mergeCells('A' . $rowend3 . ':G' . $rowend3)->setCellValue('A' . $rowend3, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel3->mergeCells('H' . $rowend3 . ':O' . $rowend3)->setCellValue('H' . $rowend3, $frmnm . '-' . $frmvrs);
                break;
            case $frmkode == 'frmfss120' && $frmvrs == '04': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll) 
                foreach ($dtheader as $dtheader_row){
                    $tgl_sampling = substr($dtheader_row->tgl_sampling, 8, 2) . '-' . substr($dtheader_row->tgl_sampling, 5, 2) . '-' . substr($dtheader_row->tgl_sampling, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell 
                foreach (range('A', 'T') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel 
                $objPHPExcel->mergeCells('A1:T1');

                // merge row A1 Ke A3 utk icon 
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG) 
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll) 
                $objPHPExcel->mergeCells('Q2:T2')->setCellValue('Q2', 'Doc : ');
                $objPHPExcel->mergeCells('Q3:T3')->setCellValue('Q3', 'P/D : ' . $tgl_sampling);

                $objPHPExcel->setCellValue('A4', 'TITLE'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl); // judul form
                $objPHPExcel->mergeCells('P4:T4')->setCellValue('P4', '');
                // space antara kop dan tabel detail
                $objPHPExcel->setCellValue('A5', 'Equipment Swabbing');
                $objPHPExcel->mergeCells('B5:T5')->setCellValue('B5', '');

                // table specification
                $objPHPExcel->mergeCells('A6:F6')->setCellValue('A6', 'Specification');
                $objPHPExcel->mergeCells('G6:J6')->setCellValue('G6', 'Total Plate Count');
                $objPHPExcel->mergeCells('K6:N6')->setCellValue('K6', 'Enterobacteriaceae');
                $objPHPExcel->mergeCells('O6:Q6')->setCellValue('O6', 'E. coli');
                $objPHPExcel->mergeCells('R6:T6')->setCellValue('R6', 'Salmonella');

                // kolom specification
                $objPHPExcel->mergeCells('A7:F8')->setCellValue('A7', '1. DRP Processing Area');
                $objPHPExcel->mergeCells('A9:F10')->setCellValue('A9', '2. SPD and MPD Processing Area');
                $objPHPExcel->mergeCells('A11:F12')->setCellValue('A11', '3. CMP Processing Area');
                $objPHPExcel->mergeCells('A13:F16')->setCellValue('A13', 'WTP Area: -PRC Area (After CIP)');
                $objPHPExcel->mergeCells('A17:F17')->setCellValue('A17', '4.QSD (Laundry)');
                $objPHPExcel->mergeCells('A18:F18')->setCellValue('A18', '5. DWP - PRC Area');
                $objPHPExcel->mergeCells('A19:F19')->setCellValue('A19', '- Line in pipa transfer AMTK');
                $objPHPExcel->mergeCells('A20:F20')->setCellValue('A20', '6. Distribusi Jalur AMTK');

                // kolom TPC
                $objPHPExcel->mergeCells('G7:J7')->setCellValue('G7', 'Max 100 cfu/50 cm^2');
                $objPHPExcel->mergeCells('G8:J8')->setCellValue('G8', 'Max 3200 cfu/400 cm^2');
                $objPHPExcel->mergeCells('G9:J9')->setCellValue('G9', 'Max 3200 cfu/400 cm^2');
                $objPHPExcel->mergeCells('G10:J10')->setCellValue('G10', 'Max 100 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G11:J11')->setCellValue('G11', 'Max 250 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G12:J12')->setCellValue('G12', 'Max 2000 cfu/400 cm^2');
                $objPHPExcel->mergeCells('G13:J13')->setCellValue('G13', 'Max 100 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G14:J14')->setCellValue('G14', 'Max 100 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G15:J15')->setCellValue('G15', 'Max 100 cfu/ swab');
                $objPHPExcel->mergeCells('G16:J16')->setCellValue('G16', 'Max 2000 cfu/400 cm^2');
                $objPHPExcel->mergeCells('G17:J17')->setCellValue('G17', 'Max 3200 cfu/400 cm^2');
                $objPHPExcel->mergeCells('G18:J18')->setCellValue('G18', 'Max 200 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G19:J19')->setCellValue('G19', 'Max 200 cfu/25 cm^2');
                $objPHPExcel->mergeCells('G20:J20')->setCellValue('G20', 'Max 200 cfu/25 cm^2');

                // kolom Entero
                $objPHPExcel->mergeCells('K7:N7')->setCellValue('K7', 'Max 20 cfu/50 cm^2');
                $objPHPExcel->mergeCells('K8:N8')->setCellValue('K8', 'Max 560 cfu/400 cm^2');
                $objPHPExcel->mergeCells('K9:N9')->setCellValue('K9', 'Max 560 cfu/400 cm^2');
                $objPHPExcel->mergeCells('K10:N10')->setCellValue('K10', 'Max 25 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K11:N11')->setCellValue('K11', 'Max 20 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K12:N12')->setCellValue('K12', 'Max 150 cfu/400 cm^2');
                $objPHPExcel->mergeCells('K13:N13')->setCellValue('K13', 'Max 25 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K14:N14')->setCellValue('K14', 'Max 20 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K15:N15')->setCellValue('K15', 'Max 20 cfu/ swab');
                $objPHPExcel->mergeCells('K16:N16')->setCellValue('K16', 'Max 150 cfu/400 cm^2');
                $objPHPExcel->mergeCells('K17:N17')->setCellValue('K17', 'Max 560 cfu/400 cm^2');
                $objPHPExcel->mergeCells('K18:N18')->setCellValue('K18', 'Max 20 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K19:N19')->setCellValue('K19', 'Max 20 cfu/25 cm^2');
                $objPHPExcel->mergeCells('K20:N20')->setCellValue('K20', 'Max 20 cfu/25 cm^2');

                //kolom e.coli
                $objPHPExcel->mergeCells('O7:Q7')->setCellValue('O7', 'Abs/50 cm^2');
                $objPHPExcel->mergeCells('O8:Q8')->setCellValue('O8', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('O9:Q9')->setCellValue('O9', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('O10:Q10')->setCellValue('O10', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O11:Q11')->setCellValue('O11', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O12:Q12')->setCellValue('O12', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('O13:Q13')->setCellValue('O13', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O14:Q14')->setCellValue('O14', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O15:Q15')->setCellValue('O15', 'Abs/ swab');
                $objPHPExcel->mergeCells('O16:Q16')->setCellValue('O16', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('O17:Q17')->setCellValue('O17', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('O18:Q18')->setCellValue('O18', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O19:Q19')->setCellValue('O19', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('O20:Q20')->setCellValue('O20', 'Abs/25 cm^2');

                // salmonella
                $objPHPExcel->mergeCells('R7:T7')->setCellValue('R7', 'Abs/50 cm^2');
                $objPHPExcel->mergeCells('R8:T8')->setCellValue('R8', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('R9:T9')->setCellValue('R9', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('R10:T10')->setCellValue('R10', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R11:T11')->setCellValue('R11', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R12:T12')->setCellValue('R12', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('R13:T13')->setCellValue('R13', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R14:T14')->setCellValue('R14', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R15:T15')->setCellValue('R15', 'Abs/swab');
                $objPHPExcel->mergeCells('R16:T16')->setCellValue('R16', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('R17:T17')->setCellValue('R17', 'Abs/400 cm^2');
                $objPHPExcel->mergeCells('R18:T18')->setCellValue('R18', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R19:T19')->setCellValue('R19', 'Abs/25 cm^2');
                $objPHPExcel->mergeCells('R20:T20')->setCellValue('R20', 'Abs/25 cm^2');




                // tabel detail 
                $objPHPExcel->mergeCells('A21:D21')->setCellValue('A21', 'Equipments and Tools / Utensil');
                $objPHPExcel->mergeCells('E21:G21')->setCellValue('E21', 'Time of Swabbing');
                $objPHPExcel->mergeCells('H21:J21')->setCellValue('H21', 'Total Plate Count');
                $objPHPExcel->mergeCells('K21:M21')->setCellValue('K21', 'Enterobacteriaceae');
                $objPHPExcel->mergeCells('N21:O21')->setCellValue('N21', 'E. coli');
                $objPHPExcel->mergeCells('P21:Q21')->setCellValue('P21', 'Salmonella');
                $objPHPExcel->mergeCells('R21:T21')->setCellValue('R21', 'Remarks');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:T21');

                // jumlah row header tabel sebelum detail 
                $rowCount = 21;

                $no = 1;
                foreach ($dtdetail1 as $row){
                    if ($row->operator == '1'){
                        $operator = '>';
                    } elseif ($row->operator == '0'){
                        $operator = '<';
                    } else {
                        $operator = '';
                    }
                    if ($row->operator2 == '1'){
                        $operator2 = '>';
                    } elseif ($row->operator2 == '0'){
                        $operator2 = '<';
                    } else {
                        $operator2 = '';
                    }

                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':T' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':T' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A'.$rowCount.':D'.$rowCount)->setCellValue('A' . $rowCount, $row->sampling_point . '   (' . $row->jns_sampling . ')');
                    $objPHPExcel->mergeCells('E'.$rowCount.':G'.$rowCount)->setCellValue('E' . $rowCount, $row->sampling_jam);
                    $objPHPExcel->mergeCells('H'.$rowCount.':J'.$rowCount)->setCellValue('H' . $rowCount, $operator2 . ' ' . $row->ha_tpc);
                    $objPHPExcel->mergeCells('K'.$rowCount.':M'.$rowCount)->setCellValue('K' . $rowCount, $operator . ' ' . $row->ha_entero);
                    $objPHPExcel->mergeCells('N'.$rowCount.':O'.$rowCount)->setCellValue('N' . $rowCount, $row->ha_ecoli_gas);
                    $objPHPExcel->mergeCells('P'.$rowCount.':Q'.$rowCount)->setCellValue('P' . $rowCount, $row->ha_salmonella_he);
                    $objPHPExcel->mergeCells('R'.$rowCount.':T'.$rowCount)->setCellValue('R' . $rowCount, $row->remarks);

                    $no++;
                }

                //$rowend = $rowCount+1;
                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 3;
                $rowket4 = $rowCount + 4;
                $rowket5 = $rowCount + 5;
                $rowket6 = $rowCount + 6;
                $rowket7 = $rowCount + 7;
                $rowket8 = $rowCount + 8;
                $rowend  = $rowCount + 9;


                $objPHPExcel->setCellValue('A' . $rowket1, 'Definitions');
                $objPHPExcel->setCellValue('A' . $rowket2, 'cfu: colony forming unit CIP: Cleaning In Place');
                $objPHPExcel->setCellValue('A' . $rowket3, 'min: minute DRP: Dry Process');
                $objPHPExcel->setCellValue('A' . $rowket4, 'P/D: Production Date CMP: Coconut Milk Powder');
                $objPHPExcel->setCellValue('A' . $rowket5, 'Doc: Document WTP: Wet Process');
                $objPHPExcel->setCellValue('A' . $rowket6, 'Max: Maximum VTIS: Vacum Thermal Instant Steam');
                $objPHPExcel->setCellValue('A' . $rowket7, 'Abs: Absence AFM: Aseptic Filling Machine');
                $objPHPExcel->setCellValue('A' . $rowket8, 'E. coli: Escherichia coli');

                $objPHPExcel->mergeCells('B' . $rowket1 . ':C' . $rowket1)->setCellValue('B' . $rowket1, 'Reported by,');
                $objPHPExcel->mergeCells('B' . $rowket6 . ':C' . $rowket6)->setCellValue('B' . $rowket6, 'Name :');
                $objPHPExcel->mergeCells('B' . $rowket7 . ':C' . $rowket7)->setCellValue('B' . $rowket7, 'Position :');
                $objPHPExcel->mergeCells('B' . $rowket8 . ':C' . $rowket8)->setCellValue('B' . $rowket8, 'Date :');

                $objPHPExcel->mergeCells('D' . $rowket1 . ':E' . $rowket1)->setCellValue('D' . $rowket1, 'Checked and Confirmed by,');
                $objPHPExcel->mergeCells('D' . $rowket6 . ':E' . $rowket6)->setCellValue('D' . $rowket6, 'Name :');
                $objPHPExcel->mergeCells('D' . $rowket7 . ':E' . $rowket7)->setCellValue('D' . $rowket7, 'Position :');
                $objPHPExcel->mergeCells('D' . $rowket8 . ':E' . $rowket8)->setCellValue('D' . $rowket8, 'Date :');


                $objPHPExcel->mergeCells('F' . $rowket1 . ':G' . $rowket1)->setCellValue('F' . $rowket1, 'Acknowledged by,');
                $objPHPExcel->mergeCells('F' . $rowket6 . ':G' . $rowket6)->setCellValue('F' . $rowket6, 'Name :');
                $objPHPExcel->mergeCells('F' . $rowket7 . ':G' . $rowket7)->setCellValue('F' . $rowket7, 'Position :');
                $objPHPExcel->mergeCells('F' . $rowket8 . ':G' . $rowket8)->setCellValue('F' . $rowket8, 'Date :');



                $objPHPExcel->getStyle('K' . $rowend . ':T' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:T21')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':J' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('K' . $rowend . ':T' . $rowend)->setCellValue('E' . $rowend, $frmnm);
                break;
            case $frmkode == 'intqad119' && $frmvrs == '00': 
                break;
            case $frmkode == 'intqad114' && $frmvrs == '03': 
                break;
            case $frmkode == 'intqad066' && $frmvrs == '00': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $tgl_sampling    = substr($dtheader_row->tgl_sampling, 8, 2) . '-' . substr($dtheader_row->tgl_sampling, 5, 2) . '-' . substr($dtheader_row->tgl_sampling, 0, 4);
                    $lokasi_sampling = $dtheader_row->lokasi_sampling;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'Q') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:Q1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:O3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->mergeCells('P2:Q2')->setCellValue('P2', '');
                $objPHPExcel->mergeCells('P3:Q3')->setCellValue('P3', '');
                $objPHPExcel->mergeCells('P4:Q4')->setCellValue('P4', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:O4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:Q5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'No Lab');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Lokasi/area sampling');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Sampling Point');
                $objPHPExcel->mergeCells('D6:F6')->setCellValue('D6', 'Sampling');
                $objPHPExcel->mergeCells('G6:G8')->setCellValue('G6', 'Shift');
                $objPHPExcel->mergeCells('H6:H8')->setCellValue('H6', 'Dianalisa oleh');
                $objPHPExcel->mergeCells('I6:O6')->setCellValue('I6', 'Hasil analisa');
                $objPHPExcel->mergeCells('P6:Q6')->setCellValue('P6', 'DiLaporkan');

                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Tgl');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'Jam');
                $objPHPExcel->mergeCells('F7:F8')->setCellValue('F7', 'Analis');

                $objPHPExcel->mergeCells('I7:I8')->setCellValue('I7', 'TPC');
                $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Entero');
                $objPHPExcel->mergeCells('K7:L7')->setCellValue('K7', 'E. coli');
                $objPHPExcel->mergeCells('M7:O7')->setCellValue('M7', 'Salmonella');

                $objPHPExcel->setCellValue('P7', 'Oleh');
                $objPHPExcel->setCellValue('Q7', 'Tgl');

                $objPHPExcel->setCellValue('K8', 'Gas');
                $objPHPExcel->setCellValue('L8', 'Indol');
                $objPHPExcel->setCellValue('M8', 'HE');
                $objPHPExcel->setCellValue('N8', 'XLD');
                $objPHPExcel->setCellValue('O8', 'BSA');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:Q8');

                // jumlah row header tabel sebelum detail
                $rowCount = 8;

                $no = 1;
                foreach ($dtdetail as $row){

                    if ($row->operator == '0'){
                        $operator = "<";
                    } elseif ($row->operator == '1'){
                        $operator = ">";
                    } else {
                        $operator = $row->operator;
                    }
                    if ($row->operator2 == '0'){
                        $operator2 = "<";
                    } elseif ($row->operator2 == '1'){
                        $operator2 = ">";
                    } else {
                        $operator2 = $row->operator2;
                    }

                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':Q' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':Q' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->no_lab);
                    $objPHPExcel->setCellValue('B' . $rowCount, $lokasi_sampling);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->sampling_point . '   (' . $row->area . ')');
                    $objPHPExcel->setCellValue('D' . $rowCount, $tgl_sampling);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->sampling_jam);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->sampling_analis);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->shift);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->dianalisa_oleh);
                    $objPHPExcel->setCellValue('I' . $rowCount, $operator2 . ' ' . $row->ha_tpc);
                    $objPHPExcel->setCellValue('J' . $rowCount, $operator . ' ' . $row->ha_entero);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->ha_ecoli_gas);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->ha_ecoli_indol);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->ha_salmonella_he);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->ha_salmonella_he);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->ha_salmonella_he);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->dilaporkan_oleh);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->dilaporkan_tgl);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('H' . $rowend . ':Q' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:Q8')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':G' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('H' . $rowend . ':Q' . $rowend)->setCellValue('H' . $rowend, $frmnm . '-' . $frmvrs);
                break;
            case $frmkode == 'intqad068' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $tgl_data        = substr($dtheader_row->tgl_data, 8, 2) . '-' . substr($dtheader_row->tgl_data, 5, 2) . '-' . substr($dtheader_row->tgl_data, 0, 4);
                    $lokasi_sampling = $dtheader_row->lokasi_sampling;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'M') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:M1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:L3')->setCellValue('B2', $frmcop);
                $objPHPExcel->setCellValue('M2', '');
                $objPHPExcel->setCellValue('M3', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:M4')->setCellValue('B4', '' . $frmjdl);

                $objPHPExcel->mergeCells('A5:B5')->setCellValue('A5', 'Area Sampling :' . $lokasi_sampling);
                $objPHPExcel->mergeCells('C5:M5');

                $objPHPExcel->mergeCells('A6:A7')->setCellValue('A6', 'Tanggal');
                $objPHPExcel->mergeCells('B6:B7')->setCellValue('B6', 'Kode sampling point');
                $objPHPExcel->mergeCells('C6:C7')->setCellValue('C6', 'Waktu sampling');
                $objPHPExcel->mergeCells('D6:D7')->setCellValue('D6', 'Analis');
                $objPHPExcel->mergeCells('E6:E7')->setCellValue('E6', 'Line');
                $objPHPExcel->mergeCells('F6:F7')->setCellValue('F6', 'Shift');
                $objPHPExcel->mergeCells('G6:J6')->setCellValue('G6', 'Hasil analisa');
                $objPHPExcel->mergeCells('K6:L6')->setCellValue('K6', 'Pembacaan');
                $objPHPExcel->mergeCells('M6:M7')->setCellValue('M6', 'Keterangan');

                $objPHPExcel->setCellValue('G7', 'TPC');
                $objPHPExcel->setCellValue('H7', 'Entero');
                $objPHPExcel->setCellValue('I7', 'Yeast');
                $objPHPExcel->setCellValue('J7', 'Mould');
                $objPHPExcel->setCellValue('K7', 'Oleh');
                $objPHPExcel->setCellValue('L7', 'Tanggal');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:M7');

                $rowCount = 7;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':M' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':M' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_data);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_samplingpoint);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->wkt_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->analis);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->line);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->shift);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ha_tpc);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->ha_entero);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->ha_yeast);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->ha_mould);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->pbc_oleh);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->pbc_tgl);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->keterangan);

                    $no++;
                }

                //$rowend = $rowCount+7;

                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 3;
                $rowket4 = $rowCount + 4;
                $rowket5 = $rowCount + 5;
                $rowket6 = $rowCount + 6;
                $rowend  = $rowCount + 8;

                $objPHPExcel->setCellValue('A' . $rowket1, 'Catatan:');
                $objPHPExcel->setCellValue('A' . $rowket2, 'Sampling Point');
                $objPHPExcel->setCellValue('A' . $rowket3, 'DRP:');
                $objPHPExcel->setCellValue('A' . $rowket4, 'BFR Inspection Table');
                $objPHPExcel->setCellValue('A' . $rowket5, 'BFR Bagging Area');
                $objPHPExcel->setCellValue('A' . $rowket6, 'Dry Discharge');

                $objPHPExcel->setCellValue('B' . $rowket2, 'Kode');
                $objPHPExcel->setCellValue('B' . $rowket4, 'IT');
                $objPHPExcel->setCellValue('B' . $rowket5, 'BA');
                $objPHPExcel->setCellValue('B' . $rowket6, 'DD');

                $objPHPExcel->mergeCells('C' . $rowket2 . ':D' . $rowket2)->setCellValue('C' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('C' . $rowket3 . ':D' . $rowket3)->setCellValue('C' . $rowket3, 'CMP:');
                $objPHPExcel->mergeCells('C' . $rowket4 . ':D' . $rowket4)->setCellValue('C' . $rowket4, 'Filling Room');
                $objPHPExcel->mergeCells('C' . $rowket5 . ':D' . $rowket5)->setCellValue('C' . $rowket5, 'Fluidizer Room');
                $objPHPExcel->mergeCells('C' . $rowket6 . ':D' . $rowket6)->setCellValue('C' . $rowket6, 'Cooling Room');

                $objPHPExcel->mergeCells('E' . $rowket2 . ':F' . $rowket2)->setCellValue('E' . $rowket2, 'Kode');
                $objPHPExcel->mergeCells('E' . $rowket4 . ':F' . $rowket4)->setCellValue('E' . $rowket4, 'FR');
                $objPHPExcel->mergeCells('E' . $rowket5 . ':F' . $rowket5)->setCellValue('E' . $rowket5, 'FDR');
                $objPHPExcel->mergeCells('E' . $rowket6 . ':F' . $rowket6)->setCellValue('E' . $rowket6, 'CR');

                $objPHPExcel->mergeCells('G' . $rowket2 . ':H' . $rowket2)->setCellValue('G' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('G' . $rowket3 . ':H' . $rowket3)->setCellValue('G' . $rowket3, 'CPS:');
                $objPHPExcel->mergeCells('G' . $rowket4 . ':H' . $rowket4)->setCellValue('G' . $rowket4, 'Unloading Area');
                $objPHPExcel->mergeCells('G' . $rowket5 . ':H' . $rowket5)->setCellValue('G' . $rowket5, 'Filling Area');
                $objPHPExcel->mergeCells('G' . $rowket6 . ':H' . $rowket6)->setCellValue('G' . $rowket6, 'Packing Area');

                $objPHPExcel->mergeCells('I' . $rowket2 . ':J' . $rowket2)->setCellValue('I' . $rowket2, 'Kode');
                $objPHPExcel->mergeCells('I' . $rowket4 . ':J' . $rowket4)->setCellValue('I' . $rowket4, 'UA');
                $objPHPExcel->mergeCells('I' . $rowket5 . ':J' . $rowket5)->setCellValue('I' . $rowket5, 'FA');
                $objPHPExcel->mergeCells('I' . $rowket6 . ':J' . $rowket6)->setCellValue('I' . $rowket6, 'PA');

                $objPHPExcel->mergeCells('K' . $rowket2 . ':L' . $rowket2)->setCellValue('K' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('K' . $rowket3 . ':L' . $rowket3)->setCellValue('K' . $rowket3, 'WTP:');
                $objPHPExcel->mergeCells('K' . $rowket4 . ':L' . $rowket4)->setCellValue('K' . $rowket4, 'Mesin....');
                $objPHPExcel->mergeCells('K' . $rowket5 . ':L' . $rowket5)->setCellValue('K' . $rowket5, 'catat nama mesin');

                $objPHPExcel->setCellValue('M' . $rowket2, 'Kode');
                $objPHPExcel->setCellValue('M' . $rowket4, 'Mesin...');


                $objPHPExcel->getStyle('H' . $rowend . ':M' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:M7')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':G' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('H' . $rowend . ':M' . $rowend)->setCellValue('H' . $rowend, $frmnm . '-' . $frmvrs);

                break;
            case $frmkode == 'intqad068' && $frmvrs == '01' || $frmkode == 'intqad068' && $frmvrs == '02': 

                foreach ($dtheader as $dtheader_row){
                    $tgl_data        = substr($dtheader_row->tgl_data, 8, 2) . '-' . substr($dtheader_row->tgl_data, 5, 2) . '-' . substr($dtheader_row->tgl_data, 0, 4);
                    $lokasi_sampling = $dtheader_row->lokasi_sampling;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'M') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:M1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:L3')->setCellValue('B2', $frmcop);
                $objPHPExcel->setCellValue('M2', '');
                $objPHPExcel->setCellValue('M3', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:M4')->setCellValue('B4', '' . $frmjdl);

                $objPHPExcel->mergeCells('A5:B5')->setCellValue('A5', 'Area Sampling :' . $lokasi_sampling);
                $objPHPExcel->mergeCells('C5:M5');

                $objPHPExcel->mergeCells('A6:A7')->setCellValue('A6', 'Tanggal');
                $objPHPExcel->mergeCells('B6:B7')->setCellValue('B6', 'Kode sampling point');
                $objPHPExcel->mergeCells('C6:C7')->setCellValue('C6', 'Waktu sampling');
                $objPHPExcel->mergeCells('D6:D7')->setCellValue('D6', 'Analis');
                $objPHPExcel->mergeCells('E6:E7')->setCellValue('E6', 'Line');
                $objPHPExcel->mergeCells('F6:F7')->setCellValue('F6', 'Shift');
                $objPHPExcel->mergeCells('G6:J6')->setCellValue('G6', 'Hasil analisa');
                $objPHPExcel->mergeCells('K6:L6')->setCellValue('K6', 'Pembacaan');
                $objPHPExcel->mergeCells('M6:M7')->setCellValue('M6', 'Keterangan');

                $objPHPExcel->setCellValue('G7', 'TPC');
                $objPHPExcel->setCellValue('H7', 'Entero');
                $objPHPExcel->setCellValue('I7', 'Yeast');
                $objPHPExcel->setCellValue('J7', 'Mould');
                $objPHPExcel->setCellValue('K7', 'Oleh');
                $objPHPExcel->setCellValue('L7', 'Tanggal');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:M7');

                $rowCount = 7;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':M' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':M' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_data);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_samplingpoint);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->wkt_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->analis);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->line);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->shift);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ha_tpc);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->ha_entero);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->ha_yeast);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->ha_mould);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->pbc_oleh);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->pbc_tgl);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->keterangan);

                    $no++;
                }

                //$rowend = $rowCount+7;

                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 3;
                $rowket4 = $rowCount + 4;
                $rowket5 = $rowCount + 5;
                $rowket6 = $rowCount + 6;
                $rowend  = $rowCount + 8;

                $objPHPExcel->setCellValue('A' . $rowket1, 'Catatan:');
                $objPHPExcel->setCellValue('A' . $rowket2, 'Sampling Point');
                $objPHPExcel->setCellValue('A' . $rowket3, 'DRP:');
                $objPHPExcel->setCellValue('A' . $rowket4, 'BFR Inspection Table');
                $objPHPExcel->setCellValue('A' . $rowket5, 'BFR Bagging Area');
                $objPHPExcel->setCellValue('A' . $rowket6, 'Dry Discharge');

                $objPHPExcel->setCellValue('B' . $rowket2, 'Kode');
                $objPHPExcel->setCellValue('B' . $rowket4, 'IT');
                $objPHPExcel->setCellValue('B' . $rowket5, 'BA');
                $objPHPExcel->setCellValue('B' . $rowket6, 'DD');

                $objPHPExcel->mergeCells('C' . $rowket2 . ':D' . $rowket2)->setCellValue('C' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('C' . $rowket3 . ':D' . $rowket3)->setCellValue('C' . $rowket3, 'CMP:');
                $objPHPExcel->mergeCells('C' . $rowket4 . ':D' . $rowket4)->setCellValue('C' . $rowket4, 'Filling Room');
                $objPHPExcel->mergeCells('C' . $rowket5 . ':D' . $rowket5)->setCellValue('C' . $rowket5, 'Fluidizer Room');
                $objPHPExcel->mergeCells('C' . $rowket6 . ':D' . $rowket6)->setCellValue('C' . $rowket6, 'Cooling Room');

                $objPHPExcel->mergeCells('E' . $rowket2 . ':F' . $rowket2)->setCellValue('E' . $rowket2, 'Kode');
                $objPHPExcel->mergeCells('E' . $rowket4 . ':F' . $rowket4)->setCellValue('E' . $rowket4, 'FR');
                $objPHPExcel->mergeCells('E' . $rowket5 . ':F' . $rowket5)->setCellValue('E' . $rowket5, 'FDR');
                $objPHPExcel->mergeCells('E' . $rowket6 . ':F' . $rowket6)->setCellValue('E' . $rowket6, 'CR');

                $objPHPExcel->mergeCells('G' . $rowket2 . ':H' . $rowket2)->setCellValue('G' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('G' . $rowket3 . ':H' . $rowket3)->setCellValue('G' . $rowket3, 'CPS:');
                $objPHPExcel->mergeCells('G' . $rowket4 . ':H' . $rowket4)->setCellValue('G' . $rowket4, 'Unloading Area');
                $objPHPExcel->mergeCells('G' . $rowket5 . ':H' . $rowket5)->setCellValue('G' . $rowket5, 'Filling Area');
                $objPHPExcel->mergeCells('G' . $rowket6 . ':H' . $rowket6)->setCellValue('G' . $rowket6, 'Packing Area');

                $objPHPExcel->mergeCells('I' . $rowket2 . ':J' . $rowket2)->setCellValue('I' . $rowket2, 'Kode');
                $objPHPExcel->mergeCells('I' . $rowket4 . ':J' . $rowket4)->setCellValue('I' . $rowket4, 'UA');
                $objPHPExcel->mergeCells('I' . $rowket5 . ':J' . $rowket5)->setCellValue('I' . $rowket5, 'FA');
                $objPHPExcel->mergeCells('I' . $rowket6 . ':J' . $rowket6)->setCellValue('I' . $rowket6, 'PA');

                $objPHPExcel->mergeCells('K' . $rowket2 . ':L' . $rowket2)->setCellValue('K' . $rowket2, 'Sampling Point');
                $objPHPExcel->mergeCells('K' . $rowket3 . ':L' . $rowket3)->setCellValue('K' . $rowket3, 'WTP:');
                $objPHPExcel->mergeCells('K' . $rowket4 . ':L' . $rowket4)->setCellValue('K' . $rowket4, 'Mesin....');
                $objPHPExcel->mergeCells('K' . $rowket5 . ':L' . $rowket5)->setCellValue('K' . $rowket5, 'catat nama mesin');

                $objPHPExcel->setCellValue('M' . $rowket2, 'Kode');
                $objPHPExcel->setCellValue('M' . $rowket4, 'Mesin...');


                $objPHPExcel->getStyle('H' . $rowend . ':M' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:M7')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':G' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('H' . $rowend . ':M' . $rowend)->setCellValue('H' . $rowend, $frmnm . '-' . $frmvrs);

                break;
            case $frmkode == 'intqad066' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmlqs002' && $frmvrs == '06': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun      = substr($dtheader_row->tgl_dokumen, 0, 4);
                    $dtbulan      = substr($dtheader_row->tgl_dokumen, 5, 2);
                    $tgl_dokumen  = substr($dtheader_row->tgl_dokumen, 8, 2) . '-' . substr($dtheader_row->tgl_dokumen, 5, 2) . '-' . substr($dtheader_row->tgl_dokumen, 0, 4);
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    $tgl_antar    = substr($dtheader_row->tgl_antar, 8, 2) . '-' . substr($dtheader_row->tgl_antar, 5, 2) . '-' . substr($dtheader_row->tgl_antar, 0, 4);
                    $lab_penguji  = $dtheader_row->lab_penguji;
                    $tipe_contoh  = $dtheader_row->tipe_contoh;
                    $jns_produk   = $dtheader_row->jns_produk;
                    $filler       = $dtheader_row->filler;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'S') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:S1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Q2:S2')->setCellValue('Q2', 'Tahun : ' . $dttahun);
                $objPHPExcel->mergeCells('Q3:S3')->setCellValue('Q3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('Q4:S4')->setCellValue('Q4', '');
                
                $objPHPExcel->setSharedStyle($headerStyle, 'A2:S4');

                $objPHPExcel->mergeCells('A5:S5')->setCellValue('A5', '');
                $objPHPExcel->mergeCells('A6:C6')->setCellValue('A6', 'Laboratorium Penguji');
                $objPHPExcel->mergeCells('D6:S6')->setCellValue('D6', ': '.$lab_penguji);
                $objPHPExcel->mergeCells('A7:C7')->setCellValue('A7', 'Tipe Contoh');
                $objPHPExcel->mergeCells('D7:S7')->setCellValue('D7', ': '.$tipe_contoh);
                $objPHPExcel->mergeCells('A8:C8')->setCellValue('A8', 'Jenis Produk');
                $objPHPExcel->mergeCells('D8:S8')->setCellValue('D8', ': '.$jns_produk);
                if($filler!=''){
                $objPHPExcel->mergeCells('A9:C9')->setCellValue('A9', 'Filler');
                $objPHPExcel->mergeCells('D9:S9')->setCellValue('D9', ': '.$filler);
                }else{
                $objPHPExcel->mergeCells('A9:S9')->setCellValue('A9', '');
                }

                $objPHPExcel->mergeCells('A10:A13')->setCellValue('A10', 'Tanggal Antar');
        $objPHPExcel->mergeCells('B10:B13')->setCellValue('B10', 'Tanggal Produksi');
        $objPHPExcel->mergeCells('C10:C13')->setCellValue('C10', 'Jam Sampling');
        $objPHPExcel->mergeCells('D10:D13')->setCellValue('D10', 'Kode/ Deskripsi Contoh');
        $objPHPExcel->mergeCells('E10:E13')->setCellValue('E10', 'Jumlah Contoh');
                $objPHPExcel->mergeCells('F10:G10')->setCellValue('F10', 'Diantar');
        $objPHPExcel->mergeCells('H10:K10')->setCellValue('H10', 'Diterima Laboratorium');
        $objPHPExcel->mergeCells('L10:L13')->setCellValue('L10', 'Keterangan');
        $objPHPExcel->mergeCells('M10:N10')->setCellValue('M10', 'Diantar');
        $objPHPExcel->mergeCells('O10:R10')->setCellValue('O10', 'Diterima Laboratorium');
        $objPHPExcel->mergeCells('S10:S13')->setCellValue('S10', 'Keterangan');

                $objPHPExcel->mergeCells('F11:F13')->setCellValue('F11', 'Jam');
        $objPHPExcel->mergeCells('G11:G13')->setCellValue('G11', 'Oleh');
        $objPHPExcel->mergeCells('H11:H13')->setCellValue('H11', 'Jam');
        $objPHPExcel->mergeCells('I11:I13')->setCellValue('I11', 'Oleh');
        $objPHPExcel->mergeCells('J11:K11')->setCellValue('J11', 'Kondisi Sampel');
        $objPHPExcel->mergeCells('M11:M13')->setCellValue('M11', 'Jam');
        $objPHPExcel->mergeCells('N11:N13')->setCellValue('N11', 'Oleh');
        $objPHPExcel->mergeCells('O11:O13')->setCellValue('O11', 'Jam');
        $objPHPExcel->mergeCells('P11:P13')->setCellValue('P11', 'Oleh');
        $objPHPExcel->mergeCells('Q11:R11')->setCellValue('Q11', 'Kondisi Sampel');

                $objPHPExcel->mergeCells('J12:K12')->setCellValue('J12', 'Beri tanda (√)');
        $objPHPExcel->mergeCells('Q12:R12')->setCellValue('Q12', 'Beri tanda (√)');

                $objPHPExcel->setCellValue('J13', 'Sesuai');
        $objPHPExcel->setCellValue('K13', 'Tidak Sesuai');
        $objPHPExcel->setCellValue('Q13', 'Sesuai');
        $objPHPExcel->setCellValue('R13', 'Tidak Sesuai');



                $objPHPExcel->setSharedStyle($headerStyle, 'A10:S13');

                $rowCount = 13;

                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':S' . $rowCount);

            if($row->kondisi_sampel=='Sesuai'){$kond1='√';$kond2='';}
            elseif($row->kondisi_sampel=='Tidak Sesuai'){$kond1='';$kond2='√';}
            else{$kond1='';$kond2='';}

            if($row->kondisi_sampel2=='Sesuai'){$kond3='√';$kond4='';}
            elseif($row->kondisi_sampel2=='Tidak Sesuai'){$kond3='';$kond4='√';}
            else{$kond3='';$kond4='';}

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_antar);
                    $objPHPExcel->setCellValue('B' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->deskripsi);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->jml_contoh);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->jam_antar);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->pengantar);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->jam_terima);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->penerima);
                    $objPHPExcel->setCellValue('J' . $rowCount, $kond1);
                    $objPHPExcel->setCellValue('K' . $rowCount, $kond2);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->ket);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->jam_antar2);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->pengantar2);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->jam_terima2);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->penerima2);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $kond3);
                    $objPHPExcel->setCellValue('R' . $rowCount, $kond4);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->ket2);

                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('K' . $rowend . ':S' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':J' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('K' . $rowend . ':S' . $rowend)->setCellValue('K' . $rowend, $frmnm);
                
                break;
            case $frmkode == 'intqad093' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun = $dtheader_row->dttahun;
                    $dtbulan = $dtheader_row->dtbulan;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'G') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:G1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:F3')->setCellValue('B2', $frmcop);
                $objPHPExcel->setCellValue('G2', 'Tahun : ' . $dttahun);
                $objPHPExcel->setCellValue('G3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:F4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->setCellValue('G4', '');

                $objPHPExcel->mergeCells('A5:G5')->setCellValue('A5', '');

                $objPHPExcel->setCellValue('A6', 'Tanggal');
                $objPHPExcel->setCellValue('B6', 'No');
                $objPHPExcel->setCellValue('C6', 'Berat Picnometer Kosong (gram)');
                $objPHPExcel->setCellValue('D6', 'Berat Picno + air (gram)');
                $objPHPExcel->setCellValue('E6', 'Hasil (gram)');
                $objPHPExcel->setCellValue('F6', 'Paraf');
                $objPHPExcel->setCellValue('G6', 'Keterangan');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:G8');

                $rowCount = 6;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':G' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->dttanggal);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->dtno);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->picno_kosong);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->picno_air);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->picno_hasil);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->createby);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ket);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('E' . $rowend . ':G' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':D' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('E' . $rowend . ':G' . $rowend)->setCellValue('E' . $rowend, $frmnm);

            break;
            case $frmkode == 'intqad120' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $newTgl = explode('-', $dtheader_row->tgl_dok);
                    $dtdok  = $dtheader_row->dokumen;
                    $dttgl  = $newTgl[2]."-".$newTgl[1]."-".$newTgl[0];
                    //$dtbulan = $dtheader_row->dtbulan;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'G') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:G1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:F3')->setCellValue('B2', $frmcop);
                $objPHPExcel->setCellValue('G2', 'DOK : ' . $dtdok);
                $objPHPExcel->setCellValue('G3', 'TGL : ' . $dttgl);
                $objPHPExcel->setCellValue('G4', 'HLM : ' . $dttgl);
                

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:F4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->setCellValue('G4', '');

                $objPHPExcel->mergeCells('A5:G5')->setCellValue('A5', '');

                $objPHPExcel->setCellValue('A6', 'Tanggal');
                $objPHPExcel->setCellValue('B6', 'Formula/ ID');
                $objPHPExcel->setCellValue('C6', 'Nomor Ctn/ Bag');
                $objPHPExcel->setCellValue('D6', "Suhu Finish Product\nSesudah Fluidizer (ºC)");
                $objPHPExcel->setCellValue('E6', "Suhu Product Sebelum\nPacking 50gr/ 1kg (ºC)");
                $objPHPExcel->setCellValue('F6', 'Nomor Ctn/ Bag');
                $objPHPExcel->setCellValue('G6', 'Remak');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:G8');

                $rowCount = 6;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':G' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $newTgl[2]."-".$newTgl[1]."-".$newTgl[0]);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->formula);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->no_ctnf);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->suhu_finish);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->suhu_sebelum);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->no_ctns);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->remak);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('E' . $rowend . ':G' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':D' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('E' . $rowend . ':G' . $rowend)->setCellValue('E' . $rowend, $frmnm);

            break;
            case $frmkode == 'frmlqs122' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $tanggal = substr($dtheader_row->tanggal, 8, 2) . '-' . substr($dtheader_row->tanggal, 5, 2) . '-' . substr($dtheader_row->tanggal, 0, 4);
                    $bulan   = $dtheader_row->bulan;
                    $tahun   = $dtheader_row->tahun;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AX') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:AX1');
                $objPHPExcel->mergeCells('A2:B3');
                $objPHPExcel->mergeCells('C2:AO3')->setCellValue('C2', $frmcop);
                $objPHPExcel->mergeCells('AP2:AX2')->setCellValue('AP2', 'Tahun :'. $tahun);
                $objPHPExcel->mergeCells('AP3:AX3')->setCellValue('AP3', 'Bulan :' . $bulan);
                $objPHPExcel->mergeCells('AP4:AX4')->setCellValue('AP4', 'Hlm :');

                $objPHPExcel->mergeCells('A4:B4')->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('C4:AO4')->setCellValue('C4', '' . $frmjdl);

                $objPHPExcel->mergeCells('A5:AX5');

                $objPHPExcel->mergeCells('A6:D9')->setCellValue('A6', 'Tanggal');
                $objPHPExcel->mergeCells('E6:F9')->setCellValue('E6', 'Jam');
                $objPHPExcel->mergeCells('G6:K9')->setCellValue('G6', 'Sampel');
                $objPHPExcel->mergeCells('L6:Y6')->setCellValue('L6', 'Jenis Analisa');
                $objPHPExcel->mergeCells('Z6:AA9')->setCellValue('Z6', 'pH');
                $objPHPExcel->mergeCells('AB6:AE9')->setCellValue('AB6', 'ml NaOH');
                $objPHPExcel->mergeCells('AF6:AH9')->setCellValue('AF6', 'Hasil');
                $objPHPExcel->mergeCells('AI6:AK9')->setCellValue('AI6', 'Paraf');
                $objPHPExcel->mergeCells('AL6:AO9')->setCellValue('AL6', 'ml HCl');
                $objPHPExcel->mergeCells('AP6:AR9')->setCellValue('AP6', 'Hasil');
                $objPHPExcel->mergeCells('AS6:AU9')->setCellValue('AS6', 'Paraf');
                $objPHPExcel->mergeCells('AV6:AX9')->setCellValue('AV6', 'Ket.');


                $objPHPExcel->mergeCells('L7:N9')->setCellValue('L7', 'Custic (C)');
                $objPHPExcel->mergeCells('O7:Q9')->setCellValue('O7', 'Acid (A)');
                $objPHPExcel->mergeCells('R7:T9')->setCellValue('R7', 'Residu Caustik (RC)');
                $objPHPExcel->mergeCells('U7:W9')->setCellValue('U7', 'Residu Acid (RA)');
                $objPHPExcel->mergeCells('X7:Y9')->setCellValue('X7', 'pH');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AX9');

                $rowCount = 9;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;
                    
                    if($row->jenis_analisa_custic=='1'){$cekliscustic='√';}else{$cekliscustic='';}
                    if($row->jenis_analisa_acid=='1'){$ceklisacid='√';}else{$ceklisacid='';}
                    if($row->jenis_analisa_ph=='1'){$ceklisph='√';} else{$ceklisph='';}

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AX' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':AX' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A' . $rowCount . ':D' . $rowCount)->setCellValue('A' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->mergeCells('E' . $rowCount . ':F' . $rowCount)->setCellValue('E' . $rowCount, $row->jam);
                    $objPHPExcel->mergeCells('G' . $rowCount . ':K' . $rowCount)->setCellValue('G' . $rowCount, $row->sampel);
                    $objPHPExcel->mergeCells('L' . $rowCount . ':N' . $rowCount)->setCellValue('L' . $rowCount, $cekliscustic);
                    $objPHPExcel->mergeCells('O' . $rowCount . ':Q' . $rowCount)->setCellValue('O' . $rowCount, $ceklisacid);
                    $objPHPExcel->mergeCells('R' . $rowCount . ':T' . $rowCount)->setCellValue('R' . $rowCount, $row->jenis_analisa_residu_caustic);
                    $objPHPExcel->mergeCells('U' . $rowCount . ':W' . $rowCount)->setCellValue('U' . $rowCount, $row->jenis_analisa_residu_acid);
                    $objPHPExcel->mergeCells('X' . $rowCount . ':Y' . $rowCount)->setCellValue('X' . $rowCount, $ceklisph);
                    $objPHPExcel->mergeCells('Z' . $rowCount . ':AA' . $rowCount)->setCellValue('Z' . $rowCount, $row->ph);
                    $objPHPExcel->mergeCells('AB' . $rowCount . ':AE' . $rowCount)->setCellValue('AB' . $rowCount, $row->ml_naoh);
                    $objPHPExcel->mergeCells('AF' . $rowCount . ':AH' . $rowCount)->setCellValue('AF' . $rowCount, $row->hasil);
                    $objPHPExcel->mergeCells('AI' . $rowCount . ':AK' . $rowCount)->setCellValue('AI' . $rowCount, $row->paraf);
                    $objPHPExcel->mergeCells('AL' . $rowCount . ':AO' . $rowCount)->setCellValue('AL' . $rowCount, $row->ml_hci);
                    $objPHPExcel->mergeCells('AP' . $rowCount . ':AR' . $rowCount)->setCellValue('AP' . $rowCount, $row->hasil_2);
                    $objPHPExcel->mergeCells('AS' . $rowCount . ':AU' . $rowCount)->setCellValue('AS' . $rowCount, $row->paraf_2);
                    $objPHPExcel->mergeCells('AV' . $rowCount . ':AX' . $rowCount)->setCellValue('AV' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('AB' . $rowend . ':AX' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':AA' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('AB' . $rowend . ':AX' . $rowend)->setCellValue('E' . $rowend, $frmnm);

            break;    
            case $frmkode == 'intqad081' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $tanggal = substr($dtheader_row->tanggal, 8, 2) . '-' . substr($dtheader_row->tanggal, 5, 2) . '-' . substr($dtheader_row->tanggal, 0, 4);
                    $bulan   = $dtheader_row->bulan;
                    $tahun   = $dtheader_row->tahun;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AX') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:AX1');
                $objPHPExcel->mergeCells('A2:B3');
                $objPHPExcel->mergeCells('C2:AO3')->setCellValue('C2', $frmcop);
                $objPHPExcel->mergeCells('AP2:AX2')->setCellValue('AP2', 'Tahun :'. $tahun);
                $objPHPExcel->mergeCells('AP3:AX3')->setCellValue('AP3', 'Bulan :' . $bulan);
                $objPHPExcel->mergeCells('AP4:AX4')->setCellValue('AP4', 'Hlm :');

                $objPHPExcel->mergeCells('A4:B4')->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('C4:AO4')->setCellValue('C4', '' . $frmjdl);

                $objPHPExcel->mergeCells('A5:AX5');

                $objPHPExcel->mergeCells('A6:D9')->setCellValue('A6', 'Tanggal');
                $objPHPExcel->mergeCells('E6:F9')->setCellValue('E6', 'Jam');
                $objPHPExcel->mergeCells('G6:K9')->setCellValue('G6', 'Sampel');
                $objPHPExcel->mergeCells('L6:Y6')->setCellValue('L6', 'Jenis Analisa');
                $objPHPExcel->mergeCells('Z6:AA9')->setCellValue('Z6', 'pH');
                $objPHPExcel->mergeCells('AB6:AE9')->setCellValue('AB6', 'ml NaOH');
                $objPHPExcel->mergeCells('AF6:AH9')->setCellValue('AF6', 'Hasil');
                $objPHPExcel->mergeCells('AI6:AK9')->setCellValue('AI6', 'Paraf');
                $objPHPExcel->mergeCells('AL6:AO9')->setCellValue('AL6', 'ml HCl');
                $objPHPExcel->mergeCells('AP6:AR9')->setCellValue('AP6', 'Hasil');
                $objPHPExcel->mergeCells('AS6:AU9')->setCellValue('AS6', 'Paraf');
                $objPHPExcel->mergeCells('AV6:AX9')->setCellValue('AV6', 'Ket.');


                $objPHPExcel->mergeCells('L7:N9')->setCellValue('L7', 'Custic (C)');
                $objPHPExcel->mergeCells('O7:Q9')->setCellValue('O7', 'Acid (A)');
                $objPHPExcel->mergeCells('R7:T9')->setCellValue('R7', 'Residu Caustik (RC)');
                $objPHPExcel->mergeCells('U7:W9')->setCellValue('U7', 'Residu Acid (RA)');
                $objPHPExcel->mergeCells('X7:Y9')->setCellValue('X7', 'pH');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AX9');

                $rowCount = 9;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;
                    
                    if($row->jns_analisa_custic=='1'){
                        $cekliscustic = '√';
                    } elseif($row->jns_analisa_acid=='1'){
                        $ceklisacid = '√';
                    } elseif($row->jns_analisa_ph=='1'){
                        $ceklisph = '√';
                    } else{
                        $cekliscustic = '';$ceklisacid = '';$ceklisph = '';
                    }

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AX' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':AX' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A' . $rowCount . ':D' . $rowCount)->setCellValue('A' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->mergeCells('E' . $rowCount . ':F' . $rowCount)->setCellValue('E' . $rowCount, $row->jam);
                    $objPHPExcel->mergeCells('G' . $rowCount . ':K' . $rowCount)->setCellValue('G' . $rowCount, $row->sampel);
                    $objPHPExcel->mergeCells('L' . $rowCount . ':N' . $rowCount)->setCellValue('L' . $rowCount, $cekliscustic);
                    $objPHPExcel->mergeCells('O' . $rowCount . ':Q' . $rowCount)->setCellValue('O' . $rowCount, $ceklisacid);
                    $objPHPExcel->mergeCells('R' . $rowCount . ':T' . $rowCount)->setCellValue('R' . $rowCount, $row->jns_analisa_rc);
                    $objPHPExcel->mergeCells('U' . $rowCount . ':W' . $rowCount)->setCellValue('U' . $rowCount, $row->jns_analisa_ra);
                    $objPHPExcel->mergeCells('X' . $rowCount . ':Y' . $rowCount)->setCellValue('X' . $rowCount, $ceklisph);
                    $objPHPExcel->mergeCells('Z' . $rowCount . ':AA' . $rowCount)->setCellValue('Z' . $rowCount, $row->ph);
                    $objPHPExcel->mergeCells('AB' . $rowCount . ':AE' . $rowCount)->setCellValue('AB' . $rowCount, $row->ml_naoh);
                    $objPHPExcel->mergeCells('AF' . $rowCount . ':AH' . $rowCount)->setCellValue('AF' . $rowCount, $row->ml_naoh_hasil);
                    $objPHPExcel->mergeCells('AI' . $rowCount . ':AK' . $rowCount)->setCellValue('AI' . $rowCount, $row->ml_naoh_paraf);
                    $objPHPExcel->mergeCells('AL' . $rowCount . ':AO' . $rowCount)->setCellValue('AL' . $rowCount, $row->ml_hcl);
                    $objPHPExcel->mergeCells('AP' . $rowCount . ':AR' . $rowCount)->setCellValue('AP' . $rowCount, $row->ml_hcl_hasil);
                    $objPHPExcel->mergeCells('AS' . $rowCount . ':AU' . $rowCount)->setCellValue('AS' . $rowCount, $row->ml_hcl_paraf);
                    $objPHPExcel->mergeCells('AV' . $rowCount . ':AX' . $rowCount)->setCellValue('AV' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('AB' . $rowend . ':AX' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':AA' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('AB' . $rowend . ':AX' . $rowend)->setCellValue('E' . $rowend, $frmnm);

            break;  
            case $frmkode == 'intqad116' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $tanggal = substr($dtheader_row->tanggal, 8, 2) . '-' . substr($dtheader_row->tanggal, 5, 2) . '-' . substr($dtheader_row->tanggal, 0, 4);
                    $bulan   = $dtheader_row->bulan;
                    $tahun   = $dtheader_row->tahun;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AX') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:AX1');
                $objPHPExcel->mergeCells('A2:B3');
                $objPHPExcel->mergeCells('C2:AO3')->setCellValue('C2', $frmcop);
                $objPHPExcel->mergeCells('AP2:AX2')->setCellValue('AP2', 'Tahun :'. $tahun);
                $objPHPExcel->mergeCells('AP3:AX3')->setCellValue('AP3', 'Bulan :' . $bulan);
                $objPHPExcel->mergeCells('AP4:AX4')->setCellValue('AP4', 'Hlm :');

                $objPHPExcel->mergeCells('A4:B4')->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('C4:AO4')->setCellValue('C4', '' . $frmjdl);

                $objPHPExcel->mergeCells('A5:AX5');

                $objPHPExcel->mergeCells('A6:D9')->setCellValue('A6', 'Tanggal');
                $objPHPExcel->mergeCells('E6:F9')->setCellValue('E6', 'Jam');
                $objPHPExcel->mergeCells('G6:K9')->setCellValue('G6', 'Sampel');
                $objPHPExcel->mergeCells('L6:Y6')->setCellValue('L6', 'Jenis Analisa');
                $objPHPExcel->mergeCells('Z6:AA9')->setCellValue('Z6', 'pH');
                $objPHPExcel->mergeCells('AB6:AE9')->setCellValue('AB6', 'ml NaOH');
                $objPHPExcel->mergeCells('AF6:AH9')->setCellValue('AF6', 'Hasil');
                $objPHPExcel->mergeCells('AI6:AK9')->setCellValue('AI6', 'Paraf');
                $objPHPExcel->mergeCells('AL6:AO9')->setCellValue('AL6', 'ml HCl');
                $objPHPExcel->mergeCells('AP6:AR9')->setCellValue('AP6', 'Hasil');
                $objPHPExcel->mergeCells('AS6:AU9')->setCellValue('AS6', 'Paraf');
                $objPHPExcel->mergeCells('AV6:AX9')->setCellValue('AV6', 'Ket.');


                $objPHPExcel->mergeCells('L7:N9')->setCellValue('L7', 'Custic (C)');
                $objPHPExcel->mergeCells('O7:Q9')->setCellValue('O7', 'Acid (A)');
                $objPHPExcel->mergeCells('R7:T9')->setCellValue('R7', 'Residu Caustik (RC)');
                $objPHPExcel->mergeCells('U7:W9')->setCellValue('U7', 'Residu Acid (RA)');
                $objPHPExcel->mergeCells('X7:Y9')->setCellValue('X7', 'pH');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AX9');

                $rowCount = 9;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;
                    
                    if($row->jns_analisa_custic=='1'){
                        $cekliscustic = '√';
                    } elseif($row->jns_analisa_acid=='1'){
                        $ceklisacid = '√';
                    } elseif($row->jns_analisa_ph=='1'){
                        $ceklisph = '√';
                    } else{
                        $cekliscustic = '';$ceklisacid = '';$ceklisph = '';
                    }

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AX' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':AX' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->mergeCells('A' . $rowCount . ':D' . $rowCount)->setCellValue('A' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->mergeCells('E' . $rowCount . ':F' . $rowCount)->setCellValue('E' . $rowCount, $row->jam);
                    $objPHPExcel->mergeCells('G' . $rowCount . ':K' . $rowCount)->setCellValue('G' . $rowCount, $row->sampel);
                    $objPHPExcel->mergeCells('L' . $rowCount . ':N' . $rowCount)->setCellValue('L' . $rowCount, $cekliscustic);
                    $objPHPExcel->mergeCells('O' . $rowCount . ':Q' . $rowCount)->setCellValue('O' . $rowCount, $ceklisacid);
                    $objPHPExcel->mergeCells('R' . $rowCount . ':T' . $rowCount)->setCellValue('R' . $rowCount, $row->jns_analisa_rc);
                    $objPHPExcel->mergeCells('U' . $rowCount . ':W' . $rowCount)->setCellValue('U' . $rowCount, $row->jns_analisa_ra);
                    $objPHPExcel->mergeCells('X' . $rowCount . ':Y' . $rowCount)->setCellValue('X' . $rowCount, $ceklisph);
                    $objPHPExcel->mergeCells('Z' . $rowCount . ':AA' . $rowCount)->setCellValue('Z' . $rowCount, $row->ph);
                    $objPHPExcel->mergeCells('AB' . $rowCount . ':AE' . $rowCount)->setCellValue('AB' . $rowCount, $row->ml_naoh);
                    $objPHPExcel->mergeCells('AF' . $rowCount . ':AH' . $rowCount)->setCellValue('AF' . $rowCount, $row->ml_naoh_hasil);
                    $objPHPExcel->mergeCells('AI' . $rowCount . ':AK' . $rowCount)->setCellValue('AI' . $rowCount, $row->ml_naoh_paraf);
                    $objPHPExcel->mergeCells('AL' . $rowCount . ':AO' . $rowCount)->setCellValue('AL' . $rowCount, $row->ml_hcl);
                    $objPHPExcel->mergeCells('AP' . $rowCount . ':AR' . $rowCount)->setCellValue('AP' . $rowCount, $row->ml_hcl_hasil);
                    $objPHPExcel->mergeCells('AS' . $rowCount . ':AU' . $rowCount)->setCellValue('AS' . $rowCount, $row->ml_hcl_paraf);
                    $objPHPExcel->mergeCells('AV' . $rowCount . ':AX' . $rowCount)->setCellValue('AV' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('AB' . $rowend . ':AX' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':AA' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('AB' . $rowend . ':AX' . $rowend)->setCellValue('E' . $rowend, $frmnm);

            break;  
            case $frmkode == 'intqad080' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun     = $dtheader_row->dttahun;
                    $dtbulan     = $dtheader_row->dtbulan;
                    $id_larutan  = $dtheader_row->id_larutan;
                    $konsentrasi = $dtheader_row->konsentrasi;
                    $kolom_hasil = $dtheader_row->kolom_hasil;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'P') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:P1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:O3')->setCellValue('B2', $frmcop);
                $objPHPExcel->setCellValue('P2', 'Tahun : ' . $dttahun);
                $objPHPExcel->setCellValue('P3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:O4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->setCellValue('P4', '');

                $objPHPExcel->mergeCells('A5:P5')->setCellValue('A5', 'Nama Larutan : ' . $id_larutan . ' ' . $konsentrasi . '' . $kolom_hasil);

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'No');
                $objPHPExcel->mergeCells('B6:F6')->setCellValue('B6', 'PEMBUATAN LARUTAN');
                $objPHPExcel->mergeCells('G6:O6')->setCellValue('G6', 'STANDARISASI LARUTAN');
                $objPHPExcel->mergeCells('P6:P8')->setCellValue('P6', 'Keterangan');

                $objPHPExcel->mergeCells('B7:B8')->setCellValue('B7', 'Tanggal');
                $objPHPExcel->mergeCells('C7:C8')->setCellValue('C7', 'Berat/ Jumlah (gr atau mL)');
                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Volume Air Destilasi (mL)');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'Expired Date');
                $objPHPExcel->mergeCells('F7:F8')->setCellValue('F7', 'Dibuat Oleh');
                $objPHPExcel->mergeCells('G7:G8')->setCellValue('G7', 'Tanggal Start');
                $objPHPExcel->mergeCells('H7:H8')->setCellValue('H7', 'Tanggal Finish');
                $objPHPExcel->mergeCells('I7:L7')->setCellValue('I7', 'Bahan Penguji');
                $objPHPExcel->mergeCells('M7:M8')->setCellValue('M7', 'Volume Titrasi (mL)');
                $objPHPExcel->mergeCells('N7:N8')->setCellValue('N7', 'Hasil Normalitas');
                $objPHPExcel->mergeCells('O7:O8')->setCellValue('O7', 'Dilakukan Oleh');

                $objPHPExcel->setCellValue('I8', 'Nama bahan');
                $objPHPExcel->setCellValue('J8', 'Jumlah (gr)');
                $objPHPExcel->setCellValue('K8', 'Jumlah (mL)');
                $objPHPExcel->setCellValue('L8', 'M');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:P8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':P' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->tgl_pembuatan);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->berat_jumlah);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->vol_air_destilasi);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->expired_date);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->dibuat_oleh);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->tgl_start);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->tgl_finish);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->bahan_penguji);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->jml_gram);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->jml_ml);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->jml_m);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->vol_titrasi_ml);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->hasil_m);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->dilakukan_oleh);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->keterangan);

                    $objPHPExcel->setCellValue('P' . $rowCount, $row->blue);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('I' . $rowend . ':P' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':H' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('I' . $rowend . ':P' . $rowend)->setCellValue('I' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmnon003' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dokumen = $dtheader_row->dokumen;
                    $tgl_dok = substr($dtheader_row->tgl_dok, 8, 2) . '-' . substr($dtheader_row->tgl_dok, 5, 2) . '-' . substr($dtheader_row->tgl_dok, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'R') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }


                $objPHPExcel->mergeCells('A1:R1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Q2:R2')->setCellValue('Q2', 'DOK : ' . $dokumen);
                $objPHPExcel->mergeCells('Q3:R3')->setCellValue('Q3', 'TGL : ' . $tgl_dok);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('Q4:R4')->setCellValue('Q4', '');

                $objPHPExcel->mergeCells('A5:R5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Sampling');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Kode Sampel');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('D6:R6')->setCellValue('D6', 'Parameters Analysis');

                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'pH');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'TSS');
                $objPHPExcel->mergeCells('F7:F8')->setCellValue('F7', 'PO4');
                $objPHPExcel->mergeCells('G7:G8')->setCellValue('G7', 'COD');
                $objPHPExcel->mergeCells('H7:L7')->setCellValue('H7', 'BOD');
                $objPHPExcel->mergeCells('M7:P7')->setCellValue('M7', 'Minyak dan Lemak');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Color Visual');
                $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Paraf Analis');

                $objPHPExcel->setCellValue('H8', '1 Hari');
                $objPHPExcel->setCellValue('I8', '2 Hari');
                $objPHPExcel->setCellValue('J8', '3 Hari');
                $objPHPExcel->setCellValue('K8', '4 Hari');
                $objPHPExcel->setCellValue('L8', '5 Hari');
                $objPHPExcel->setCellValue('M8', 'Kode Bottom');
                $objPHPExcel->setCellValue('N8', 'Bottom Kosong');
                $objPHPExcel->setCellValue('O8', 'Bottom + Ekstrak');
                $objPHPExcel->setCellValue('P8', 'Hasil');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:R8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':R' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_dok);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->tss);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->po4);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->cod);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->hari1);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->hari2);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->hari3);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->hari4);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->hari5);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->kode_bottom);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->bottom_kosong);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->bottom_ekstrak);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->hasil_bottom);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->color);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->dilakukan_oleh);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('J' . $rowend . ':R' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':I' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('J' . $rowend . ':R' . $rowend)->setCellValue('J' . $rowend, $frmnm);

                break;
            case $frmkode == 'intqad078' && $frmvrs == '01': 

                foreach ($dtheader as $dtheader_row){
                    $dok     = $dtheader_row->dokumen;
                    $tanggal = $dtheader_row->tgl_dok;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'R') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:R1');
                $objPHPExcel->mergeCells('A2:A5');
                $objPHPExcel->mergeCells('B2:P5')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Q2:R5')->setCellValue('Q2', 'Dok: ' . $dok);
                $objPHPExcel->setCellValue('A6', 'JUDUL');
                $objPHPExcel->mergeCells('B6:P6')->setCellValue('B6', '' . $frmjdl);
                $objPHPExcel->mergeCells('Q6:R6')->setCellValue('Q6', 'Tanggal: ' . $tanggal);

                $objPHPExcel->mergeCells('A7:A10')->setCellValue('A7', 'No');
                $objPHPExcel->mergeCells('B7:B10')->setCellValue('B7', 'Kode Sampel');
                $objPHPExcel->mergeCells('C7:C10')->setCellValue('C7', 'Jam Sampling');
                $objPHPExcel->mergeCells('D7:R7')->setCellValue('D7', 'Analysis Parameters');

                $objPHPExcel->mergeCells('D8:D10')->setCellValue('D8', 'pH');
                $objPHPExcel->mergeCells('E8:H8')->setCellValue('E8', 'Chloide');
                $objPHPExcel->mergeCells('I8:I10')->setCellValue('I8', 'TDS (ppm)');
                $objPHPExcel->mergeCells('J8:L8')->setCellValue('J8', 'TH');
                $objPHPExcel->mergeCells('M8:M10')->setCellValue('M8', 'FCI (ppm)');
                $objPHPExcel->mergeCells('N8:N10')->setCellValue('N8', 'TCL (ppm)');
                $objPHPExcel->mergeCells('O8:O10')->setCellValue('O8', 'Color (PtCo)');
                $objPHPExcel->mergeCells('P8:P10')->setCellValue('P8', 'Odour');
                $objPHPExcel->mergeCells('Q8:Q10')->setCellValue('Q8', 'Turbidity');
                $objPHPExcel->mergeCells('R8:R10')->setCellValue('R8', 'Dilakukan Oleh');

                $objPHPExcel->mergeCells('E9:G9')->setCellValue('E9', 'Titran AgNo3');
                $objPHPExcel->mergeCells('H9:H10')->setCellValue('H9', 'Hasil (ppm)');
                $objPHPExcel->mergeCells('J9:K9')->setCellValue('J9', 'Titran EDTA');
                $objPHPExcel->mergeCells('L9:L10')->setCellValue('L9', 'Hasil (ppm)');

                $objPHPExcel->setCellValue('E10', 'mL (s)');
                $objPHPExcel->setCellValue('F10', 'mL (b)');
                $objPHPExcel->setCellValue('G10', 'N');
                $objPHPExcel->setCellValue('J10', 'mL');
                $objPHPExcel->setCellValue('K10', 'M');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:R10');

                $rowCount = 10;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':R' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->chloride_ml_s);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->chloride_ml_b);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->chloride_n);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->hasil_chloride);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->tds);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->th_ml_s);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->th_m);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->hasil_th);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->fci);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->tcl);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->colour);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->odour);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->turbidity);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->dilakukan_oleh);

                    $no++;
                }
                $rowend = $rowCount + 1;
                $objPHPExcel->getStyle('J' . $rowend . ':R' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':I' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('J' . $rowend . ':R' . $rowend)->setCellValue('J' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmnon006' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dok     = $dtheader_row->dok;
                    $tanggal = $dtheader_row->tanggal;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'T') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:T1');
                $objPHPExcel->mergeCells('A2:A5');
                $objPHPExcel->mergeCells('B2:R5')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('S2:T5')->setCellValue('S2', 'Dok: ' . $dok);
                $objPHPExcel->setCellValue('A6', 'JUDUL');
                $objPHPExcel->mergeCells('B6:R6')->setCellValue('B6', '' . $frmjdl);
                $objPHPExcel->mergeCells('S6:T6')->setCellValue('S6', 'Tanggal: ' . $tanggal);

                $objPHPExcel->mergeCells('A7:A10')->setCellValue('A7', 'No');
                $objPHPExcel->mergeCells('B7:B10')->setCellValue('B7', 'Kode Sampel');
                $objPHPExcel->mergeCells('C7:C10')->setCellValue('C7', 'Jam Sampling');
                $objPHPExcel->mergeCells('D7:T7')->setCellValue('D7', 'Analysis Parameters');

                $objPHPExcel->mergeCells('D8:D10')->setCellValue('D8', 'pH');
                $objPHPExcel->mergeCells('E8:G8')->setCellValue('E8', 'Ta(ppm)20max');
                $objPHPExcel->mergeCells('H8:K8')->setCellValue('H8', 'SULFIT 10-60 ppm');
                $objPHPExcel->mergeCells('L8:L10')->setCellValue('L8', 'PHOSPAT 10-60ppm');
                $objPHPExcel->mergeCells('M8:M10')->setCellValue('M8', 'TDS 20max');
                $objPHPExcel->mergeCells('N8:P8')->setCellValue('N8', 'Ta(ppm)20max');
                $objPHPExcel->mergeCells('Q8:Q10')->setCellValue('Q8', 'Colour (Clear)');
                $objPHPExcel->mergeCells('R8:R10')->setCellValue('R8', 'Odour and Taste (Normal)');
                $objPHPExcel->mergeCells('S8:S10')->setCellValue('S8', 'Analis');
                $objPHPExcel->mergeCells('T8:T10')->setCellValue('T8', 'Remarks');

                $objPHPExcel->mergeCells('E9:F9')->setCellValue('E9', 'Titran HCL');
                $objPHPExcel->mergeCells('G9:G10')->setCellValue('G9', 'Hasil (ppm)');
                $objPHPExcel->mergeCells('H9:J9')->setCellValue('H9', 'Titran KIO3');
                $objPHPExcel->mergeCells('K9:K10')->setCellValue('K9', 'Hasil (ppm)');
                $objPHPExcel->mergeCells('N9:O9')->setCellValue('N9', 'Titran EDTA');
                $objPHPExcel->mergeCells('P9:P10')->setCellValue('P9', 'Hasil (ppm)');

                $objPHPExcel->setCellValue('E10', 'mL');
                $objPHPExcel->setCellValue('E10', 'N');
                $objPHPExcel->setCellValue('H10', 'mL(s)');
                $objPHPExcel->setCellValue('I10', 'mL(b)');
                $objPHPExcel->setCellValue('J10', 'M');
                $objPHPExcel->setCellValue('N10', 'mL');
                $objPHPExcel->setCellValue('O10', 'M');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:T10');

                $rowCount = 10;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':T' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_sampel);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ta_ml);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ta_n);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ta_ppm);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->sulfit_mls);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->sulfit_mlb);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->sulfit_m);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->sulfit_ppm);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->phospat);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->tds);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->th_ml);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->th_m);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->th_ppm);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->colour);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->odour);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->analis_by);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->remarks);
                    $no++;
                }
                $rowend = $rowCount + 1;
                $objPHPExcel->getStyle('K' . $rowend . ':T' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':J' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('K' . $rowend . ':T' . $rowend)->setCellValue('K' . $rowend, $frmnm);

                break;
            
            case $frmkode == 'frmfss121' && $frmvrs == '01': 

                foreach ($dtheader as $dtheader_row){
                    $docno        = $dtheader_row->docno;
                    $tanggal      = substr($dtheader_row->tanggal, 8, 2) . '-' . substr($dtheader_row->tanggal, 5, 2) . '-' . substr($dtheader_row->tanggal, 0, 4);
                    $tgl_expired  = substr($dtheader_row->tgl_expired, 8, 2) . '-' . substr($dtheader_row->tgl_expired, 5, 2) . '-' . substr($dtheader_row->tgl_expired, 0, 4);
                    $tgl_analis   = substr($dtheader_row->tgl_analis, 8, 2) . '-' . substr($dtheader_row->tgl_analis, 5, 2) . '-' . substr($dtheader_row->tgl_analis, 0, 4);
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    $no_formula   = $dtheader_row->no_formula;
                    $filler       = $dtheader_row->filler;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'L') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:L1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:J3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('K2:L2')->setCellValue('K2', 'Doc : ' . $docno);
                $objPHPExcel->mergeCells('K3:L3')->setCellValue('K3', 'Date : ' . $tanggal);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:J4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('K4:L4')->setCellValue('K4', '');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:L4');

                $objPHPExcel->mergeCells('A5:C5')->setCellValue('A5', 'FORMULATION NO');
                $objPHPExcel->mergeCells('D5:L5')->setCellValue('D5', ': ' . $no_formula);

                $objPHPExcel->mergeCells('A6:C6')->setCellValue('A6', 'PRODUCTION DATE/ BEST BEFORE (EXPIRY DATE)');
                $objPHPExcel->mergeCells('D6:L6')->setCellValue('D6', ': ' . $tgl_produksi . ' / ' . $tgl_expired);

                $objPHPExcel->mergeCells('A7:C7')->setCellValue('A7', 'DATE OF ANALYSIS');
                $objPHPExcel->mergeCells('D7:L7')->setCellValue('D7', ': ' . $tgl_analis);

                $objPHPExcel->mergeCells('A8:C8')->setCellValue('A8', 'FILLER');
                $objPHPExcel->mergeCells('D8:L8')->setCellValue('D8', ': ' . $filler);

                $objPHPExcel->mergeCells('A9:L9')->setCellValue('A9', 'A. WET PROCESS MONITORING - INCUBATION ANALYSIS RESULT');

                $objPHPExcel->setCellValue('A10', 'Product Code');
                $objPHPExcel->setCellValue('B10', 'Sampling Time');
                $objPHPExcel->setCellValue('C10', 'Product ID');
                $objPHPExcel->setCellValue('D10', 'Sample Type (R/A/Rspl)');
                $objPHPExcel->setCellValue('E10', 'Incubation Temp/oC');
                $objPHPExcel->setCellValue('F10', 'Odour and Flavour*');
                $objPHPExcel->setCellValue('G10', 'Colour and Apperance**');
                $objPHPExcel->setCellValue('H10', 'pH');
                $objPHPExcel->setCellValue('I10', 'Qty of Packs');
                $objPHPExcel->setCellValue('J10', 'Weight of Packs (Average)');
                $objPHPExcel->setCellValue('K10', 'Package Integrity Check');
                $objPHPExcel->setCellValue('L10', 'Remarks');

                $objPHPExcel->setSharedStyle($headerStyle, 'A9:L10');

                $rowCount = 10;
                $no       = 1;
                foreach ($dtdetail1 as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':L' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->product_code);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->sampling_time);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->product_id);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->sample_type);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->temp);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->odour);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->colour);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->qty_pack);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->weight_pack);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->integrity);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->remarks);

                    $no++;
                }

                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 4;
                $rowket4 = $rowCount + 5;
                $rowket5 = $rowCount + 6;

                $objPHPExcel->setCellValue('A' . $rowket1, 'Catatan :');
                $objPHPExcel->setCellValue('A' . $rowket2, 'R : Random');
                $objPHPExcel->setCellValue('B' . $rowket2, 'A : Aimed');
                $objPHPExcel->setCellValue('C' . $rowket2, 'Rspl : Resampling');
                $objPHPExcel->setCellValue('A' . $rowket3, 'Definition :');
                $objPHPExcel->setCellValue('A' . $rowket4, '*) Normal');
                $objPHPExcel->setCellValue('A' . $rowket5, '**) Normal');
                $objPHPExcel->mergeCells('B' . $rowket4 . ':L' . $rowket4)->setCellValue('B' . $rowket4, ': Sweet natural coconut flavour, free from foreign or objectionable flavour/ odour.');
                $objPHPExcel->mergeCells('B' . $rowket5 . ':L' . $rowket5)->setCellValue('B' . $rowket5, ': Creamy White');

                $rowend = $rowCount + 8;

                $objPHPExcel->getStyle('G' . $rowend . ':L' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':F' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('G' . $rowend . ':L' . $rowend)->setCellValue('G' . $rowend, $frmnm);

                //TABEL B

                $objPHPExcel2 = $obj->createSheet(1);

                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');
                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);

                foreach (range('A', 'O') as $columnID){
                    $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel2->mergeCells('A1:O1');
                $objPHPExcel2->mergeCells('A2:A3');
                $objPHPExcel2->mergeCells('B2:M3')->setCellValue('B2', $frmcop);
                $objPHPExcel2->mergeCells('N2:O2')->setCellValue('N2', 'Doc : ' . $docno);
                $objPHPExcel2->mergeCells('N3:O3')->setCellValue('N3', 'Date : ' . $tanggal);

                $objPHPExcel2->setCellValue('A4', 'JUDUL');
                $objPHPExcel2->mergeCells('B4:M4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel2->mergeCells('N4:O4')->setCellValue('N4', '');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A2:O4');

                $objPHPExcel2->mergeCells('A5:C5')->setCellValue('A5', 'FORMULATION NO');
                $objPHPExcel2->mergeCells('D5:O5')->setCellValue('D5', ': ' . $no_formula);

                $objPHPExcel2->mergeCells('A6:C6')->setCellValue('A6', 'PRODUCTION DATE/ BEST BEFORE (EXPIRY DATE)');
                $objPHPExcel2->mergeCells('D6:O6')->setCellValue('D6', ': ' . $tgl_produksi . ' / ' . $tgl_expired);

                $objPHPExcel2->mergeCells('A7:C7')->setCellValue('A7', 'DATE OF ANALYSIS');
                $objPHPExcel2->mergeCells('D7:O7')->setCellValue('D7', ': ' . $tgl_analis);

                $objPHPExcel2->mergeCells('A8:C8')->setCellValue('A8', 'FILLER');
                $objPHPExcel2->mergeCells('D8:O8')->setCellValue('D8', ': ' . $filler);

                $objPHPExcel2->mergeCells('A9:O9')->setCellValue('A9', 'A. CHEMICAL LABORATORY - PHYSICO - CHEMICAL ANALYSIS');

                $objPHPExcel2->setCellValue('A10', 'Product Code');
                $objPHPExcel2->setCellValue('B10', 'Sampling Time');
                $objPHPExcel2->setCellValue('C10', 'Product ID');
                $objPHPExcel2->setCellValue('D10', 'Sample Type (R/A/Rspl)');
                $objPHPExcel2->setCellValue('E10', 'pH');
                $objPHPExcel2->setCellValue('F10', 'Specific Gravity');
                $objPHPExcel2->setCellValue('G10', 'Odour and Flavour *');
                $objPHPExcel2->setCellValue('H10', 'Colour and Apperance **');
                $objPHPExcel2->setCellValue('I10', 'Fat Content /%');
                $objPHPExcel2->setCellValue('J10', 'Dry Matter /%)');
                $objPHPExcel2->setCellValue('K10', 'Viscosity (cps)');
                $objPHPExcel2->setCellValue('L10', 'Free Fatty Acid (%, as Lauric Acid)');
                $objPHPExcel2->setCellValue('M10', 'Peroxide value (meq/kg)');
                $objPHPExcel2->setCellValue('N10', 'Keterangan');
                $objPHPExcel2->setCellValue('O10', 'Remarks');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A9:O10');

                $rowCount2 = 10;
                $no        = 1;
                foreach ($dtdetail2 as $row2){
                    $rowCount2++;

                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount2 . ':O' . $rowCount2);

                    $objPHPExcel2->setCellValue('A' . $rowCount2, $filler);
                    $objPHPExcel2->setCellValue('B' . $rowCount2, $row2->jam_sampel);
                    $objPHPExcel2->setCellValue('C' . $rowCount2, $row2->product_id);
                    $objPHPExcel2->setCellValue('D' . $rowCount2, $row2->kd_produk);
                    $objPHPExcel2->setCellValue('E' . $rowCount2, $row2->ph_hasil);
                    $objPHPExcel2->setCellValue('F' . $rowCount2, $row2->sg_hasil);
                    $objPHPExcel2->setCellValue('G' . $rowCount2, $row2->odour_hasil);
                    $objPHPExcel2->setCellValue('H' . $rowCount2, $row2->colour_hasil);
                    $objPHPExcel2->setCellValue('I' . $rowCount2, $row2->fc_hasil);
                    $objPHPExcel2->setCellValue('J' . $rowCount2, $row2->dm_hasil);
                    $objPHPExcel2->setCellValue('K' . $rowCount2, $row2->visco_hasil);
                    $objPHPExcel2->setCellValue('L' . $rowCount2, $row2->ffa_hasil);
                    $objPHPExcel2->setCellValue('M' . $rowCount2, $row2->pv_hasil);
                    $objPHPExcel2->setCellValue('N' . $rowCount2, $row2->keterangan);
                    $objPHPExcel2->setCellValue('O' . $rowCount2, $row2->ket_monitoring);

                    $no++;
                }

                $rowket2_1 = $rowCount2 + 1;
                $rowket2_2 = $rowCount2 + 2;
                $rowket2_3 = $rowCount2 + 4;
                $rowket2_4 = $rowCount2 + 5;
                $rowket2_5 = $rowCount2 + 6;

                $objPHPExcel2->setCellValue('A' . $rowket2_1, 'Catatan :');
                $objPHPExcel2->setCellValue('A' . $rowket2_2, 'R : Random');
                $objPHPExcel2->setCellValue('B' . $rowket2_2, 'A : Aimed');
                $objPHPExcel2->setCellValue('C' . $rowket2_2, 'Rspl : Resampling');
                $objPHPExcel2->setCellValue('A' . $rowket2_3, 'Definition :');
                $objPHPExcel2->setCellValue('A' . $rowket2_4, '*) Normal');
                $objPHPExcel2->setCellValue('A' . $rowket2_5, '**) Normal');
                $objPHPExcel2->mergeCells('B' . $rowket2_4 . ':O' . $rowket2_4)->setCellValue('B' . $rowket2_4, ': Sweet natural coconut flavour, free from foreign or objectionable flavour/ odour.');
                $objPHPExcel2->mergeCells('B' . $rowket2_5 . ':O' . $rowket2_5)->setCellValue('B' . $rowket2_5, ': Creamy White');

                $rowend2 = $rowCount2 + 8;

                $objPHPExcel2->getStyle('G' . $rowend2 . ':O' . $rowend2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel2->mergeCells('A' . $rowend2 . ':F' . $rowend2)->setCellValue('A' . $rowend2, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel2->mergeCells('G' . $rowend2 . ':O' . $rowend2)->setCellValue('G' . $rowend2, $frmnm);

                $objPHPExcel3 = $obj->createSheet(2);

        $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');
                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);

                foreach(range('A','T') as $columnID){
                    $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }

                 $objPHPExcel3->mergeCells('A1:T1');
                 $objPHPExcel3->mergeCells('A2:A3');
                 $objPHPExcel3->mergeCells('B2:P3')->setCellValue('B2',$frmcop);
         $objPHPExcel3->mergeCells('Q2:T2')->setCellValue('Q2','Doc : '.$docno);
         $objPHPExcel3->mergeCells('Q3:T3')->setCellValue('Q3','Date : '.$tanggal);

                 $objPHPExcel3->setCellValue('A4','JUDUL');
                 $objPHPExcel3->mergeCells('B4:P4')->setCellValue('B4',''.$frmjdl);
         $objPHPExcel3->mergeCells('Q4:T4')->setCellValue('L4','');

         $objPHPExcel3->setSharedStyle($headerStyle, 'A2:T4');

                 $objPHPExcel3->mergeCells('A5:C5')->setCellValue('A5','FORMULATION NO');
         $objPHPExcel3->mergeCells('D5:T5')->setCellValue('D5',': '.$no_formula);

                 $objPHPExcel3->mergeCells('A6:C6')->setCellValue('A6','PRODUCTION DATE/ BEST BEFORE (EXPIRY DATE)');
         $objPHPExcel3->mergeCells('D6:T6')->setCellValue('D6',': '.$tgl_produksi.' / '.$tgl_expired);

                 $objPHPExcel3->mergeCells('A7:C7')->setCellValue('A7','DATE OF ANALYSIS');
         $objPHPExcel3->mergeCells('D7:T7')->setCellValue('D7',': '.$tgl_analis);

                 $objPHPExcel3->mergeCells('A8:C8')->setCellValue('A8','FILLER');
         $objPHPExcel3->mergeCells('D8:T8')->setCellValue('D8',': '.$filler);

         $objPHPExcel3->mergeCells('A9:T9')->setCellValue('A9','C. MICROBIOLOGY LABORATORY - MICROBIOLOGICAL ANALYSIS');

         $objPHPExcel3->mergeCells('A10:A12')->setCellValue('A10','Product Code');
         $objPHPExcel3->mergeCells('B10:B12')->setCellValue('B10','Sampling Time');
         $objPHPExcel3->mergeCells('C10:C12')->setCellValue('C10','Sample Type (R/A/Rspl)');
         $objPHPExcel3->mergeCells('D10:D12')->setCellValue('D10','Incubation Temp/ oC');
         $objPHPExcel3->mergeCells('E10:E12')->setCellValue('E10','Qty of Packs');
         $objPHPExcel3->mergeCells('F10:P10')->setCellValue('F10','Commercially Sterile / Streak Test');
         $objPHPExcel3->mergeCells('Q10:R12')->setCellValue('Q10','Keterangan');
         $objPHPExcel3->mergeCells('S10:T12')->setCellValue('S10','Remarks');

         $objPHPExcel3->mergeCells('F11:H11')->setCellValue('F11','Commercially Sterile');
         $objPHPExcel3->mergeCells('I11:L11')->setCellValue('I11','Unsterile');
         $objPHPExcel3->mergeCells('M11:N12')->setCellValue('M11','TAB');
         $objPHPExcel3->mergeCells('O11:P12')->setCellValue('O11','Unsterile Packs Analysis (Rough Micro Identification');

         $objPHPExcel3->setCellValue('F12','Qty');
         $objPHPExcel3->mergeCells('G12:H12')->setCellValue('G12','pH');
         $objPHPExcel3->mergeCells('I12:J12')->setCellValue('I12','Qty');
         $objPHPExcel3->mergeCells('K12:L12')->setCellValue('K12','pH');

                 $objPHPExcel3->setSharedStyle($headerStyle, 'A9:T12');

                 $rowCount3 = 12;
                 $no        = 1;
                 foreach ($dtdetail3 as $row3){
                 $rowCount3++;

                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowCount3.':T'.$rowCount3);

                 $objPHPExcel3->setCellValue('A'.$rowCount3,$filler);
                 $objPHPExcel3->setCellValue('B'.$rowCount3,$row3->jam_sampling);
                 $objPHPExcel3->setCellValue('C'.$rowCount3,$row3->kode_sample);
                 $objPHPExcel3->setCellValue('D'.$rowCount3,$row3->suhu);
                 $objPHPExcel3->setCellValue('E'.$rowCount3,'1');
                 // if(($row3->csp_la_35=='CS')&&($row3->csp_la_55=='CS')){$qcs ='1';}else{$qcs ='';}
                 // if(($row3->csp_la_35=='CS')&&($row3->csp_la_55=='CS')){$phcs = $row3->ph;}else{$phcs='';}
                 // if(($row3->csp_la_35=='US')&&($row3->csp_la_55=='US')){$qcs2 ='1';}else{$qcs2 ='';}
                 // if(($row3->csp_la_35=='US')&&($row3->csp_la_55=='US')){$phcs2 = $row3->ph;}else{$phcs2='';}

                 if(($row3->csp_la_35=='CS')&&($row3->csp_la_55=='CS')){
                    $qcs = '1';
                 }else{
                    $qcs = '';
                    // if ($qcs2 == '1' && $qcs==''){
                    //     # code...
                    //     $qcs = '0';
                    // } else {}
                 }
                 if(($row3->csp_la_35=='CS')&&($row3->csp_la_55=='CS')){
                    $phcs = $row3->ph;
                 }else{
                    $phcs = '';
                 }
                 if(($row3->csp_la_35=='US')&&($row3->csp_la_55=='US')){
                    $qcs2 = '1';
                 }else{
                    $qcs2 = '';
                    if ($qcs == '1' && $qcs2==''){
                        # code...
                        $qcs2 = '0';
                    } else {}
                 }
                 if(($row3->csp_la_35=='US')&&($row3->csp_la_55=='US')){
                    $phcs2 = $row3->ph;
                 }else{
                    $phcs2 = '';
                    if ($qcs == '1' && $qcs2=='0'){
                        # code...
                        $phcs2 = '-';
                    } else {}
                 }

                 $objPHPExcel3->setCellValue('F'.$rowCount3,$qcs);
                 $objPHPExcel3->mergeCells('G'.$rowCount3.':H'.$rowCount3)->setCellValue('G'.$rowCount3,$phcs);
                 $objPHPExcel3->mergeCells('I'.$rowCount3.':J'.$rowCount3)->setCellValue('I'.$rowCount3,$qcs2);
                 $objPHPExcel3->mergeCells('K'.$rowCount3.':L'.$rowCount3)->setCellValue('K'.$rowCount3,$phcs2);

                 if($row3->operator =='0'){echo "< ".$row3->tab;}elseif($row3->operator =='1'){echo "> ".$row3->tab;}else{echo $row3->operator.' '.$row3->tab;}
                 $objPHPExcel3->mergeCells('M'.$rowCount3.':N'.$rowCount3)->setCellValue('M'.$rowCount3,'');
                 $objPHPExcel3->mergeCells('O'.$rowCount3.':P'.$rowCount3)->setCellValue('O'.$rowCount3,$row3->rough_mic);
                 $objPHPExcel3->mergeCells('Q'.$rowCount3.':R'.$rowCount3)->setCellValue('Q'.$rowCount3,$row3->keterangan);
                 $objPHPExcel3->mergeCells('S'.$rowCount3.':T'.$rowCount3)->setCellValue('S'.$rowCount3,$row3->ket_monitoring);

                 $no++;
                         }

                 $rowket3_1 = $rowCount3+1;
                 $rowket3_2 = $rowCount3+2;
                 $rowket3_3 = $rowCount3+4;
                 $rowket3_4 = $rowCount3+5;
                 $rowket3_5 = $rowCount3+6;

                 $objPHPExcel3->setCellValue('A'.$rowket3_1,'Catatan :');
                 $objPHPExcel3->setCellValue('A'.$rowket3_2,'R : Random');
                 $objPHPExcel3->setCellValue('B'.$rowket3_2,'A : Aimed');
                 $objPHPExcel3->setCellValue('C'.$rowket3_2,'Rspl : Resampling');
                 $objPHPExcel3->setCellValue('A'.$rowket3_3,'Definition :');
                 $objPHPExcel3->setCellValue('A'.$rowket3_4,'*) Normal');
                 $objPHPExcel3->setCellValue('A'.$rowket3_5,'**) Normal');
                 $objPHPExcel3->mergeCells('B'.$rowket3_4.':T'.$rowket3_4)->setCellValue('B'.$rowket3_4,': Sweet natural coconut flavour, free from foreign or objectionable flavour/ odour.');
                 $objPHPExcel3->mergeCells('B'.$rowket3_5.':T'.$rowket3_5)->setCellValue('B'.$rowket3_5,': Creamy White');

         $rowapp1 = $rowCount3+8;
         $rowapp2 = $rowCount3+9;
         $rowapp3 = $rowCount3+10;
         $rowapp4 = $rowCount3+11;
         $rowapp5 = $rowCount3+12;

                 $objPHPExcel3->mergeCells('G'.$rowapp1.':L'.$rowapp1)->setCellValue('G'.$rowapp1,'Reported by :');
                 $objPHPExcel3->mergeCells('M'.$rowapp1.':R'.$rowapp1)->setCellValue('M'.$rowapp1,'Checked and Confirmed by :');
                 $objPHPExcel3->mergeCells('S'.$rowapp1.':T'.$rowapp1)->setCellValue('S'.$rowapp1,'Acknowledge by :');

                 $objPHPExcel3->mergeCells('G'.$rowapp2.':H'.$rowapp2)->setCellValue('G'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('I'.$rowapp2.':J'.$rowapp2)->setCellValue('I'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('K'.$rowapp2.':L'.$rowapp2)->setCellValue('K'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('M'.$rowapp2.':N'.$rowapp2)->setCellValue('M'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('O'.$rowapp2.':P'.$rowapp2)->setCellValue('O'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('Q'.$rowapp2.':R'.$rowapp2)->setCellValue('Q'.$rowapp2,'');
                 $objPHPExcel3->mergeCells('S'.$rowapp2.':T'.$rowapp2)->setCellValue('S'.$rowapp2,'');

                 $objPHPExcel3->setCellValue('G'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('H'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('I'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('J'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('K'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('L'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('M'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('N'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('O'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('P'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('Q'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('R'.$rowapp3,':');
                 $objPHPExcel3->setCellValue('S'.$rowapp3,'Name');
                 $objPHPExcel3->setCellValue('T'.$rowapp3,':');

                 $objPHPExcel3->setCellValue('G'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('H'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('I'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('J'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('K'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('L'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('M'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('N'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('O'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('P'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('Q'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('R'.$rowapp4,':');
                 $objPHPExcel3->setCellValue('S'.$rowapp4,'Position');
                 $objPHPExcel3->setCellValue('T'.$rowapp4,':');

                 $objPHPExcel3->setCellValue('G'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('H'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('I'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('J'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('K'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('L'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('M'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('N'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('O'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('P'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('Q'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('R'.$rowapp5,':');
                 $objPHPExcel3->setCellValue('S'.$rowapp5,'Date');
                 $objPHPExcel3->setCellValue('T'.$rowapp5,':');

                 $objPHPExcel3->setCellValue('A'.$rowket3_1,'Catatan :');

                 $rowend3 = $rowCount3+14;

                 $objPHPExcel3->getStyle('K'.$rowend3.':T'.$rowend3)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                 $objPHPExcel3->mergeCells('A'.$rowend3.':J'.$rowend3)->setCellValue('A'.$rowend3,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel3->mergeCells('K'.$rowend3.':T'.$rowend3)->setCellValue('K'.$rowend3,$frmnm);

                break;
            case $frmkode == 'frmfss115' && $frmvrs == '01': 

                foreach ($dtheader as $dtheader_row){
                    $tgl_produksi = $dtheader_row->tgl_produksi;
                    $jns_produk   = $dtheader_row->jenis_produk;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'L') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:L1');
                $objPHPExcel->mergeCells('A2:A5');
                $objPHPExcel->mergeCells('B2:J5')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('K2:L5')->setCellValue('K2', 'Date: ' . $tgl_produksi);
                $objPHPExcel->setCellValue('A6', 'JUDUL');
                $objPHPExcel->mergeCells('B6:J6')->setCellValue('B6', '' . $frmjdl);
                $objPHPExcel->mergeCells('K6:L6')->setCellValue('K6', 'Product: ' . $jns_produk);

                $objPHPExcel->mergeCells('A7:A8')->setCellValue('A7', 'No');
                $objPHPExcel->mergeCells('B7:B8')->setCellValue('B7', 'Time');
                $objPHPExcel->mergeCells('C7:C8')->setCellValue('C7', 'Description of Non - Conformance');
                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Proposed Disposition/ Action');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'Informed By');
                $objPHPExcel->mergeCells('F7:F8')->setCellValue('F7', 'Received By');
                $objPHPExcel->mergeCells('G7:H7')->setCellValue('G7', 'Action Taken');
                $objPHPExcel->mergeCells('I7:K7')->setCellValue('I7', 'Verification');
                $objPHPExcel->mergeCells('L7:L8')->setCellValue('L7', 'Remark');


                $objPHPExcel->setCellValue('G8', 'Time');
                $objPHPExcel->setCellValue('H8', 'By');
                $objPHPExcel->setCellValue('I8', 'Time');
                $objPHPExcel->setCellValue('J8', 'Result');
                $objPHPExcel->setCellValue('K8', 'By');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:L10');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':L' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jam);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->deskripsi_nc);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->proposal_da);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->dilaporkan_oleh);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->diterima_oleh);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->waktu_at);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->at_oleh);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->waktu_verifikasi);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->hasil_verifikasi);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->diverifikasi_oleh);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->remarks);

                    $no++;
                }
                $rowend = $rowCount + 1;
                $objPHPExcel->getStyle('G' . $rowend . ':L' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':F' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('G' . $rowend . ':L' . $rowend)->setCellValue('G' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmfss096' && $frmvrs == '01': 

                foreach ($dtheader as $dtheader_row){
                    $dtdoc          = $dtheader_row->dtdoc;
                    $dtdate         = $dtheader_row->dtdate;
                    $filler         = $dtheader_row->filler;
                    $productiondate = $dtheader_row->productiondate;
                    $bbd            = $dtheader_row->bbd;
                    $avg_gross      = $dtheader_row->avg_gross;
                    $avg_net_empty  = $dtheader_row->avg_net_empty;
                    $avg_net        = $dtheader_row->avg_net;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach(range('A','K') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                 $objPHPExcel->mergeCells('A1:K1');
                 $objPHPExcel->mergeCells('A2:A3');
                 $objPHPExcel->mergeCells('B2:J3')->setCellValue('B2',$frmcop);
         $objPHPExcel->setCellValue('K2','Doc : '.$dtdoc);
         $objPHPExcel->setCellValue('K3','Date : '.$dtdate);

                 $objPHPExcel->setCellValue('A4','JUDUL');
                 $objPHPExcel->mergeCells('B4:J4')->setCellValue('B4',''.$frmjdl);
         $objPHPExcel->setCellValue('K4','');

         $objPHPExcel->setSharedStyle($headerStyle, 'A2:K4');

                 $objPHPExcel->mergeCells('A5:K5')->setCellValue('A5','');

                 $objPHPExcel->mergeCells('A6:C6')->setCellValue('A6','PRODUCT NAME/ ID');
         $objPHPExcel->mergeCells('D6:K6')->setCellValue('D6',': ');

                 $objPHPExcel->mergeCells('A7:C7')->setCellValue('A7','PRODUCTION DATE/ BEST BEFORE DATE');
         $objPHPExcel->mergeCells('D7:K7')->setCellValue('D7',': '.$productiondate.' / '.$bbd);

                 $objPHPExcel->mergeCells('A8:K8')->setCellValue('A8','');

         $objPHPExcel->mergeCells('A9:E9')->setCellValue('A9','Sampling Details');
         $objPHPExcel->mergeCells('F9:J9')->setCellValue('F9','Monitoring Check / Visual Inspection');
         $objPHPExcel->mergeCells('K9:K11')->setCellValue('K9','Remark');

         $objPHPExcel->mergeCells('A10:A11')->setCellValue('A10','Sampling Time');
         $objPHPExcel->mergeCells('B10:E11')->setCellValue('B10','Sample/ Product Code');
         $objPHPExcel->mergeCells('F10:F11')->setCellValue('F10','Lot Number (if any)');
         $objPHPExcel->mergeCells('G10:J10')->setCellValue('G10','Filler : '.$filler);

         $objPHPExcel->setCellValue('GD11','Weight');
         $objPHPExcel->setCellValue('H11','Coding');
         $objPHPExcel->setCellValue('I11','Spout Seal/ Cap');
         $objPHPExcel->setCellValue('J11','Bag Seal');

                 $objPHPExcel->setSharedStyle($headerStyle, 'A9:K11');

                 $rowCount = 11;
                 $no       = 1;
                 foreach ($dtdetail as $row){
                 $rowCount++;

                 $objPHPExcel->setSharedStyle($bodyStyle, 'A'.$rowCount.':K'.$rowCount);

                 $objPHPExcel->setCellValue('A'.$rowCount,$row->sampling_time);
                 $objPHPExcel->setCellValue('B'.$rowCount,$row->sample_code);
                 $objPHPExcel->setCellValue('C'.$rowCount,$row->sample_code2);
                 $objPHPExcel->setCellValue('D'.$rowCount,$row->product_code);
                 $objPHPExcel->setCellValue('E'.$rowCount,$row->product_id);
                 $objPHPExcel->setCellValue('F'.$rowCount,$row->lot_number);
                 $objPHPExcel->setCellValue('G'.$rowCount,$row->weight);
                 $objPHPExcel->setCellValue('H'.$rowCount,$row->coding);
         $objPHPExcel->setCellValue('I'.$rowCount,$row->spout);
         $objPHPExcel->setCellValue('J'.$rowCount,$row->bag_seal);
         $objPHPExcel->setCellValue('K'.$rowCount,$row->remarks);
                 $no++;
                         }

                 $rowfoot1 = $rowCount+1;
                 $rowfoot2 = $rowfoot1+1;
                 $rowfoot3 = $rowfoot2+1;

                 $objPHPExcel->mergeCells('A'.$rowfoot1.':F'.$rowfoot1)->setCellValue('A'.$rowfoot1,'Average Gross  Weight');
                 $objPHPExcel->setCellValue('G'.$rowfoot1,$avg_gross);
                 $objPHPExcel->mergeCells('H'.$rowfoot1.':K'.$rowfoot1)->setCellValue('H'.$rowfoot1,'kg/bag product');

         $objPHPExcel->mergeCells('A'.$rowfoot2.':F'.$rowfoot2)->setCellValue('A'.$rowfoot2,'Average Net Weight');
                 $objPHPExcel->setCellValue('G'.$rowfoot2,$avg_net_empty);
                 $objPHPExcel->mergeCells('H'.$rowfoot2.':K'.$rowfoot2)->setCellValue('H'.$rowfoot2,'kg/bag (empty)');

                 $objPHPExcel->mergeCells('A'.$rowfoot3.':F'.$rowfoot3)->setCellValue('A'.$rowfoot3,'Average Net Weight');
                 $objPHPExcel->setCellValue('G'.$rowfoot3,$avg_net);
                 $objPHPExcel->mergeCells('H'.$rowfoot3.':K'.$rowfoot3)->setCellValue('H'.$rowfoot3,'kg/bag product');

                 $objPHPExcel->setSharedStyle($headerStyle, 'A'.$rowfoot1.':K'.$rowfoot3);
                 
                 $rowket1 = $rowfoot3+1;
                 $rowket2 = $rowket1+1;

                 $objPHPExcel->mergeCells('A'.$rowket1.':K'.$rowket1)->setCellValue('A'.$rowket1,'Remarks :');
                 $objPHPExcel->mergeCells('A'.$rowket2.':K'.$rowket2)->setCellValue('A'.$rowket2,'Frequency Sampling refer to Pedoman  Kerja Sampling Monitoring (GST-FSS-026');

                 $rowend = $rowket2+1;

                 $objPHPExcel->getStyle('F'.$rowend.':K'.$rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                 $objPHPExcel->mergeCells('A'.$rowend.':E'.$rowend)->setCellValue('A'.$rowend,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel->mergeCells('F'.$rowend.':K'.$rowend)->setCellValue('F'.$rowend,$frmnm);
                break;
            case $frmkode == 'intqad097' && $frmvrs == '01': 
                break;

            case $frmkode == 'frmnon002' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dok     = $dtheader_row->no_doc;
                    $tanggal = $dtheader_row->tgl_finish_product;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'R') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:R1');
                $objPHPExcel->mergeCells('A2:A5');
                $objPHPExcel->mergeCells('B2:P5')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Q2:R5')->setCellValue('Q2', 'Dok: ' . $dok);
                $objPHPExcel->setCellValue('A6', 'JUDUL');
                $objPHPExcel->mergeCells('B6:P6')->setCellValue('B6', '' . $frmjdl);
                $objPHPExcel->mergeCells('Q6:R6')->setCellValue('Q6', 'Tanggal: ' . $tanggal);

                $objPHPExcel->mergeCells('A7:A10')->setCellValue('A7', 'No');
                $objPHPExcel->mergeCells('B7:B10')->setCellValue('B7', 'Kode Sampel');
                $objPHPExcel->mergeCells('C7:C10')->setCellValue('C7', 'Jam Sampling');
                $objPHPExcel->mergeCells('D7:K7')->setCellValue('D7', 'Analysis Parameters');
                $objPHPExcel->mergeCells('L7:L10')->setCellValue('L7', 'TDS');
                $objPHPExcel->mergeCells('M7:M10')->setCellValue('M7', 'Color');
                $objPHPExcel->mergeCells('N7:N10')->setCellValue('N7', 'Turbidity');
                $objPHPExcel->mergeCells('O7:O10')->setCellValue('O7', 'Residual Ozon');
                $objPHPExcel->mergeCells('P7:P10')->setCellValue('P7', 'Odour / Taste');
                $objPHPExcel->mergeCells('Q7:Q10')->setCellValue('Q7', 'Dianalisa Oleh');
                $objPHPExcel->mergeCells('R7:R10')->setCellValue('R7', 'Remarks');

                $objPHPExcel->mergeCells('D8:D10')->setCellValue('D8', 'pH');
                $objPHPExcel->mergeCells('E8:H8')->setCellValue('E8', 'Chloride');
                $objPHPExcel->mergeCells('I8:K8')->setCellValue('I8', 'TH');

                $objPHPExcel->mergeCells('E9:G9')->setCellValue('E9', 'Titran AgNo3');
                $objPHPExcel->mergeCells('H9:H10')->setCellValue('H9', 'Hasil Chloride (ppm)');
                $objPHPExcel->mergeCells('I9:J9')->setCellValue('I9', 'Titran EDTA');
                $objPHPExcel->mergeCells('K9:K10')->setCellValue('K9', 'Hasil TH (ppm)');

                $objPHPExcel->setCellValue('E10', 'mL (s)');
                $objPHPExcel->setCellValue('F10', 'mL (b)');
                $objPHPExcel->setCellValue('G10', 'N');
                $objPHPExcel->setCellValue('I10', 'mL');
                $objPHPExcel->setCellValue('J10', 'M');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:R10');

                $rowCount = 10;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':R' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ap_ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ap_cl_tnagn03001n_ml_s);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ap_cl_tnagn03001n_ml_b);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ap_cl_tnagn03001n_n);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->ap_cl_hasil_ppm);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->ap_th_edta_ml);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->ap_th_edta_m);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->ap_th_hasil_ppm);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->ap_tds);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->ap_color);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->ap_turbidity);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->ap_residual_ozon);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->ap_odour_taste);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->analisis_oleh);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->remarks);

                    $no++;
                }
                $rowend = $rowCount + 1;
                $objPHPExcel->getStyle('J' . $rowend . ':R' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':I' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('J' . $rowend . ':R' . $rowend)->setCellValue('J' . $rowend, $frmnm);

            break;

            case $frmkode == 'frmnon012' && $frmvrs == '00': 

                $Doc = 'BWA/QAD-CHE/' . substr($dtstart, 0, 4) . '/' . substr($dtstart, 5, 2);
                if ($dtstart != $dtfinish){
                    $Tanggal = substr($dtstart, 8, 2) . '-' . substr($dtstart, 5, 2) . '-' . substr($dtstart, 0, 4) . ' s/d ' . substr($dtfinish, 8, 2) . '-' . substr($dtfinish, 5, 2) . '-' . substr($dtfinish, 0, 4);
                } else {
                    $Tanggal = substr($dtstart, 8, 2) . '-' . substr($dtstart, 5, 2) . '-' . substr($dtstart, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(1);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'Y') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:Y1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:S3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('T2:Y2')->setCellValue('T2', 'Doc : ' . $Doc);
                $objPHPExcel->mergeCells('T3:Y3')->setCellValue('T3', 'Date : ' . $Tanggal);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:S4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('T4:Y4')->setCellValue('T4', 'Page : 1 of 5');

                $objPHPExcel->mergeCells('A5:Y5')->setCellValue('A5', 'Distribusi : TJH/HYC/UTL/BLR/FILE-QAD');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Sampling and Analysis Date)');
                $objPHPExcel->mergeCells('B6:Y6')->setCellValue('B6', 'pH Measurement (Specificaion: 10.5-11.5)');

                $objPHPExcel->mergeCells('B7:D7')->setCellValue('B7', 'Boiler 1');
                $objPHPExcel->mergeCells('E7:G7')->setCellValue('E7', 'Boiler 2');
                $objPHPExcel->mergeCells('H7:J7')->setCellValue('H7', 'Boiler 3');
                $objPHPExcel->mergeCells('K7:M7')->setCellValue('K7', 'Boiler 4');
                $objPHPExcel->mergeCells('N7:P7')->setCellValue('N7', 'Boiler 5');
                $objPHPExcel->mergeCells('Q7:S7')->setCellValue('Q7', 'Boiler 6');
                $objPHPExcel->mergeCells('T7:V7')->setCellValue('T7', 'Boiler 7');
                $objPHPExcel->mergeCells('W7:Y7')->setCellValue('W7', 'Boiler 8');

                $objPHPExcel->setCellValue('B8', 'Shift 1');
                $objPHPExcel->setCellValue('C8', 'Shift 2');
                $objPHPExcel->setCellValue('D8', 'Shift 3');
                $objPHPExcel->setCellValue('E8', 'Shift 1');
                $objPHPExcel->setCellValue('F8', 'Shift 2');
                $objPHPExcel->setCellValue('G8', 'Shift 3');
                $objPHPExcel->setCellValue('H8', 'Shift 1');
                $objPHPExcel->setCellValue('I8', 'Shift 2');
                $objPHPExcel->setCellValue('J8', 'Shift 3');
                $objPHPExcel->setCellValue('K8', 'Shift 1');
                $objPHPExcel->setCellValue('L8', 'Shift 2');
                $objPHPExcel->setCellValue('M8', 'Shift 3');
                $objPHPExcel->setCellValue('N8', 'Shift 1');
                $objPHPExcel->setCellValue('O8', 'Shift 2');
                $objPHPExcel->setCellValue('P8', 'Shift 3');
                $objPHPExcel->setCellValue('Q8', 'Shift 1');
                $objPHPExcel->setCellValue('R8', 'Shift 2');
                $objPHPExcel->setCellValue('S8', 'Shift 3');
                $objPHPExcel->setCellValue('T8', 'Shift 1');
                $objPHPExcel->setCellValue('U8', 'Shift 2');
                $objPHPExcel->setCellValue('V8', 'Shift 3');
                $objPHPExcel->setCellValue('W8', 'Shift 1');
                $objPHPExcel->setCellValue('X8', 'Shift 2');
                $objPHPExcel->setCellValue('Y8', 'Shift 3');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:Y8');


                if (isset($dtdetail1)){
                    $rowCount = 8;
                    foreach ($dtdetail1 as $row){
                        $rowCount++;

                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':Y' . $rowCount);

                        $steam_ph1[] = $row->shift1_steam;
                        $steam_ph2[] = $row->shift2_steam;
                        $steam_ph3[] = $row->shift3_steam;
                        $fw_ph1   [] = $row->shift1_fw;
                        $fw_ph2   [] = $row->shift2_fw;
                        $fw_ph3   [] = $row->shift3_fw;

                        $ndt_ph1_1[] = $row->shift1_1;
                        $ndt_ph2_1[] = $row->shift2_1;
                        $ndt_ph3_1[] = $row->shift3_1;
                        $ndt_ph1_2[] = $row->shift1_2;
                        $ndt_ph2_2[] = $row->shift2_2;
                        $ndt_ph3_2[] = $row->shift3_2;
                        $ndt_ph1_3[] = $row->shift1_3;
                        $ndt_ph2_3[] = $row->shift2_3;
                        $ndt_ph3_3[] = $row->shift3_3;
                        $ndt_ph1_4[] = $row->shift1_4;
                        $ndt_ph2_4[] = $row->shift2_4;
                        $ndt_ph3_4[] = $row->shift3_4;
                        $ndt_ph1_5[] = $row->shift1_5;
                        $ndt_ph2_5[] = $row->shift2_5;
                        $ndt_ph3_5[] = $row->shift3_5;
                        $ndt_ph1_6[] = $row->shift1_6;
                        $ndt_ph2_6[] = $row->shift2_6;
                        $ndt_ph3_6[] = $row->shift3_6;
                        $ndt_ph1_7[] = $row->shift1_7;
                        $ndt_ph2_7[] = $row->shift2_7;
                        $ndt_ph3_7[] = $row->shift3_7;
                        $ndt_ph1_8[] = $row->shift1_8;
                        $ndt_ph2_8[] = $row->shift2_8;
                        $ndt_ph3_8[] = $row->shift3_8;

                        $objPHPExcel->setCellValue('A' . $rowCount, $row->tanggal);
                        $objPHPExcel->setCellValue('B' . $rowCount, $row->shift1_1);
                        $objPHPExcel->setCellValue('C' . $rowCount, $row->shift2_1);
                        $objPHPExcel->setCellValue('D' . $rowCount, $row->shift3_1);
                        $objPHPExcel->setCellValue('E' . $rowCount, $row->shift1_2);
                        $objPHPExcel->setCellValue('F' . $rowCount, $row->shift2_2);
                        $objPHPExcel->setCellValue('G' . $rowCount, $row->shift3_2);
                        $objPHPExcel->setCellValue('H' . $rowCount, $row->shift1_3);
                        $objPHPExcel->setCellValue('I' . $rowCount, $row->shift2_3);
                        $objPHPExcel->setCellValue('J' . $rowCount, $row->shift3_3);
                        $objPHPExcel->setCellValue('K' . $rowCount, $row->shift1_4);
                        $objPHPExcel->setCellValue('L' . $rowCount, $row->shift2_4);
                        $objPHPExcel->setCellValue('M' . $rowCount, $row->shift3_4);
                        $objPHPExcel->setCellValue('N' . $rowCount, $row->shift1_5);
                        $objPHPExcel->setCellValue('O' . $rowCount, $row->shift2_5);
                        $objPHPExcel->setCellValue('P' . $rowCount, $row->shift3_5);
                        $objPHPExcel->setCellValue('Q' . $rowCount, $row->shift1_6);
                        $objPHPExcel->setCellValue('R' . $rowCount, $row->shift2_6);
                        $objPHPExcel->setCellValue('S' . $rowCount, $row->shift3_6);
                        $objPHPExcel->setCellValue('T' . $rowCount, $row->shift1_7);
                        $objPHPExcel->setCellValue('U' . $rowCount, $row->shift2_7);
                        $objPHPExcel->setCellValue('V' . $rowCount, $row->shift3_7);
                        $objPHPExcel->setCellValue('W' . $rowCount, $row->shift1_8);
                        $objPHPExcel->setCellValue('X' . $rowCount, $row->shift2_8);
                        $objPHPExcel->setCellValue('Y' . $rowCount, $row->shift3_8);
                    }

                    $ndtph1_1 = array_diff($ndt_ph1_1, array('', 0));
                    $ndtph2_1 = array_diff($ndt_ph2_1, array('', 0));
                    $ndtph3_1 = array_diff($ndt_ph3_1, array('', 0));
                    $ndtph1_2 = array_diff($ndt_ph1_2, array('', 0));
                    $ndtph2_2 = array_diff($ndt_ph2_2, array('', 0));
                    $ndtph3_2 = array_diff($ndt_ph3_2, array('', 0));
                    $ndtph1_3 = array_diff($ndt_ph1_3, array('', 0));
                    $ndtph2_3 = array_diff($ndt_ph2_3, array('', 0));
                    $ndtph3_3 = array_diff($ndt_ph3_3, array('', 0));
                    $ndtph1_4 = array_diff($ndt_ph1_4, array('', 0));
                    $ndtph2_4 = array_diff($ndt_ph2_4, array('', 0));
                    $ndtph3_4 = array_diff($ndt_ph3_4, array('', 0));
                    $ndtph1_5 = array_diff($ndt_ph1_5, array('', 0));
                    $ndtph2_5 = array_diff($ndt_ph2_5, array('', 0));
                    $ndtph3_5 = array_diff($ndt_ph3_5, array('', 0));
                    $ndtph1_6 = array_diff($ndt_ph1_6, array('', 0));
                    $ndtph2_6 = array_diff($ndt_ph2_6, array('', 0));
                    $ndtph3_6 = array_diff($ndt_ph3_6, array('', 0));
                    $ndtph1_7 = array_diff($ndt_ph1_7, array('', 0));
                    $ndtph2_7 = array_diff($ndt_ph2_7, array('', 0));
                    $ndtph3_7 = array_diff($ndt_ph3_7, array('', 0));
                    $ndtph1_8 = array_diff($ndt_ph1_8, array('', 0));
                    $ndtph2_8 = array_diff($ndt_ph2_8, array('', 0));
                    $ndtph3_8 = array_diff($ndt_ph3_8, array('', 0));

                    if (is_array($ndtph1_1) && count($ndtph1_1) > 0){
                        $Minph1_1   = min($ndtph1_1);
                        $Maxph1_1   = max($ndtph1_1);
                        $Avgph1_1   = number_format((array_sum($ndtph1_1)) / (count($ndtph1_1)), 2);
                        $Countph1_1 = count($ndtph1_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_1    = array_sum($ndtph1_1) / count($ndtph1_1);
                        $fvariant1_1 = 0.00;
                        $xsample1_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_1 as $i){
                            $fvariant1_1 += pow($i - $fmean1_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_1   /= ( $xsample1_1 ? count($ndtph1_1) - 1 : count($ndtph1_1));
                        $stdevph1_1     = number_format(sqrt($fvariant1_1), 2);
                        $totalph1_1     = count($ndtph1_1);
                        $inspectph1_1   = $dt1;
                        $outspectph1_1  = $dt2;
                        $prsoutph1_1    = number_format((($dt2 / $totalph1_1) * (100)), 2);
                    } else {

                        $Minph1_1      = '';
                        $Maxph1_1      = '';
                        $Avgph1_1      = '';
                        $stdevph1_1    = '';
                        $totalph1_1    = '';
                        $inspectph1_1  = '';
                        $outspectph1_1 = '';
                        $prsoutph1_1   = '';
                    }

                    if (is_array($ndtph2_1) && count($ndtph2_1) > 0){
                        $Minph2_1   = min($ndtph2_1);
                        $Maxph2_1   = max($ndtph2_1);
                        $Avgph2_1   = number_format((array_sum($ndtph2_1)) / (count($ndtph2_1)), 2);
                        $Countph2_1 = count($ndtph2_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_1    = array_sum($ndtph2_1) / count($ndtph2_1);
                        $fvariant2_1 = 0.00;
                        $xsample2_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_1 as $i){
                            $fvariant2_1 += pow($i - $fmean2_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_1   /= ( $xsample2_1 ? count($ndtph2_1) - 1 : count($ndtph2_1));
                        $stdevph2_1     = number_format(sqrt($fvariant2_1), 2);
                        $totalph2_1     = count($ndtph2_1);
                        $inspectph2_1   = $dt1;
                        $outspectph2_1  = $dt2;
                        $prsoutph2_1    = number_format((($dt2 / $totalph2_1) * (100)), 2);
                    } else {
                        $Minph2_1      = '';
                        $Maxph2_1      = '';
                        $Avgph2_1      = '';
                        $stdevph2_1    = '';
                        $totalph2_1    = '';
                        $inspectph2_1  = '';
                        $outspectph2_1 = '';
                        $prsoutph2_1   = '';
                    }

                    if (is_array($ndtph3_1) && count($ndtph3_1) > 0){
                        $Minph3_1   = min($ndtph3_1);
                        $Maxph3_1   = max($ndtph3_1);
                        $Avgph3_1   = number_format((array_sum($ndtph3_1)) / (count($ndtph3_1)), 2);
                        $Countph3_1 = count($ndtph3_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_1    = array_sum($ndtph3_1) / count($ndtph3_1);
                        $fvariant3_1 = 0.00;
                        $xsample3_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_1 as $i){
                            $fvariant3_1 += pow($i - $fmean3_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_1   /= ( $xsample3_1 ? count($ndtph3_1) - 1 : count($ndtph3_1));
                        $stdevph3_1     = number_format(sqrt($fvariant3_1), 2);
                        $totalph3_1     = count($ndtph3_1);
                        $inspectph3_1   = $dt1;
                        $outspectph3_1  = $dt2;
                        $prsoutph3_1    = number_format((($dt2 / $totalph3_1) * (100)), 2);
                    } else {
                        $Minph3_1      = '';
                        $Maxph3_1      = '';
                        $Avgph3_1      = '';
                        $stdevph3_1    = '';
                        $totalph3_1    = '';
                        $inspectph3_1  = '';
                        $outspectph3_1 = '';
                        $prsoutph3_1   = '';
                    }

                    if (is_array($ndtph1_2) && count($ndtph1_2) > 0){
                        $Minph1_2   = min($ndtph1_2);
                        $Maxph1_2   = max($ndtph1_2);
                        $Avgph1_2   = number_format((array_sum($ndtph1_2)) / (count($ndtph1_2)), 2);
                        $Countph1_2 = count($ndtph1_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_2    = array_sum($ndtph1_2) / count($ndtph1_2);
                        $fvariant1_2 = 0.00;
                        $xsample1_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_2 as $i){
                            $fvariant1_2 += pow($i - $fmean1_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_2   /= ( $xsample1_2 ? count($ndtph1_2) - 1 : count($ndtph1_2));
                        $stdevph1_2     = number_format(sqrt($fvariant1_2), 2);
                        $totalph1_2     = count($ndtph1_2);
                        $inspectph1_2   = $dt1;
                        $outspectph1_2  = $dt2;
                        $prsoutph1_2    = number_format((($dt2 / $totalph1_2) * (100)), 2);
                    } else {
                        $Minph1_2      = '';
                        $Maxph1_2      = '';
                        $Avgph1_2      = '';
                        $stdevph1_2    = '';
                        $totalph1_2    = '';
                        $inspectph1_2  = '';
                        $outspectph1_2 = '';
                        $prsoutph1_2   = '';
                    }

                    if (is_array($ndtph2_2) && count($ndtph2_2) > 0){
                        $Minph2_2   = min($ndtph2_2);
                        $Maxph2_2   = max($ndtph2_2);
                        $Avgph2_2   = number_format((array_sum($ndtph2_2)) / (count($ndtph2_2)), 2);
                        $Countph2_2 = count($ndtph2_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_2    = array_sum($ndtph2_2) / count($ndtph2_2);
                        $fvariant2_2 = 0.00;
                        $xsample2_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_2 as $i){
                            $fvariant2_2 += pow($i - $fmean2_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_2   /= ( $xsample2_2 ? count($ndtph2_2) - 1 : count($ndtph2_2));
                        $stdevph2_2     = number_format(sqrt($fvariant2_2), 2);
                        $totalph2_2     = count($ndtph2_2);
                        $inspectph2_2   = $dt1;
                        $outspectph2_2  = $dt2;
                        $prsoutph2_2    = number_format((($dt2 / $totalph2_2) * (100)), 2);
                    } else {
                        $Minph2_2      = '';
                        $Maxph2_2      = '';
                        $Avgph2_2      = '';
                        $stdevph2_2    = '';
                        $totalph2_2    = '';
                        $inspectph2_2  = '';
                        $outspectph2_2 = '';
                        $prsoutph2_2   = '';
                    }

                    if (is_array($ndtph3_2) && count($ndtph3_2) > 0){
                        $Minph3_2   = min($ndtph3_2);
                        $Maxph3_2   = max($ndtph3_2);
                        $Avgph3_2   = number_format((array_sum($ndtph3_2)) / (count($ndtph3_2)), 2);
                        $Countph3_2 = count($ndtph3_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_2    = array_sum($ndtph3_2) / count($ndtph3_2);
                        $fvariant3_2 = 0.00;
                        $xsample3_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_2 as $i){
                            $fvariant3_2 += pow($i - $fmean3_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_2   /= ( $xsample3_2 ? count($ndtph3_2) - 1 : count($ndtph3_2));
                        $stdevph3_2     = number_format(sqrt($fvariant3_2), 2);
                        $totalph3_2     = count($ndtph3_2);
                        $inspectph3_2   = $dt1;
                        $outspectph3_2  = $dt2;
                        $prsoutph3_2    = number_format((($dt2 / $totalph3_2) * (100)), 2);
                    } else {
                        $Minph3_2      = '';
                        $Maxph3_2      = '';
                        $Avgph3_2      = '';
                        $stdevph3_2    = '';
                        $totalph3_2    = '';
                        $inspectph3_2  = '';
                        $outspectph3_2 = '';
                        $prsoutph3_2   = '';
                    }

                    if (is_array($ndtph1_3) && count($ndtph1_3) > 0){
                        $Minph1_3   = min($ndtph1_3);
                        $Maxph1_3   = max($ndtph1_3);
                        $Avgph1_3   = number_format((array_sum($ndtph1_3)) / (count($ndtph1_3)), 2);
                        $Countph1_3 = count($ndtph1_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_3    = array_sum($ndtph1_3) / count($ndtph1_3);
                        $fvariant1_3 = 0.00;
                        $xsample1_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_3 as $i){
                            $fvariant1_3 += pow($i - $fmean1_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_3   /= ( $xsample1_3 ? count($ndtph1_3) - 1 : count($ndtph1_3));
                        $stdevph1_3     = number_format(sqrt($fvariant1_3), 2);
                        $totalph1_3     = count($ndtph1_3);
                        $inspectph1_3   = $dt1;
                        $outspectph1_3  = $dt2;
                        $prsoutph1_3    = number_format((($dt2 / $totalph1_3) * (100)), 2);
                    } else {
                        $Minph1_3      = '';
                        $Maxph1_3      = '';
                        $Avgph1_3      = '';
                        $stdevph1_3    = '';
                        $totalph1_3    = '';
                        $inspectph1_3  = '';
                        $outspectph1_3 = '';
                        $prsoutph1_3   = '';
                    }

                    if (is_array($ndtph2_3) && count($ndtph2_3) > 0){
                        $Minph2_3   = min($ndtph2_3);
                        $Maxph2_3   = max($ndtph2_3);
                        $Avgph2_3   = number_format((array_sum($ndtph2_3)) / (count($ndtph2_3)), 2);
                        $Countph2_3 = count($ndtph2_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_3    = array_sum($ndtph2_3) / count($ndtph2_3);
                        $fvariant2_3 = 0.00;
                        $xsample2_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_3 as $i){
                            $fvariant2_3 += pow($i - $fmean2_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_3   /= ( $xsample2_3 ? count($ndtph2_3) - 1 : count($ndtph2_3));
                        $stdevph2_3     = number_format(sqrt($fvariant2_3), 2);
                        $totalph2_3     = count($ndtph2_3);
                        $inspectph2_3   = $dt1;
                        $outspectph2_3  = $dt2;
                        $prsoutph2_3    = number_format((($dt2 / $totalph2_3) * (100)), 2);
                    } else {
                        $Minph2_3      = '';
                        $Maxph2_3      = '';
                        $Avgph2_3      = '';
                        $stdevph2_3    = '';
                        $totalph2_3    = '';
                        $inspectph2_3  = '';
                        $outspectph2_3 = '';
                        $prsoutph2_3   = '';
                    }

                    if (is_array($ndtph3_3) && count($ndtph3_3) > 0){
                        $Minph3_3   = min($ndtph3_3);
                        $Maxph3_3   = max($ndtph3_3);
                        $Avgph3_3   = number_format((array_sum($ndtph3_3)) / (count($ndtph3_3)), 2);
                        $Countph3_3 = count($ndtph3_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_3    = array_sum($ndtph3_3) / count($ndtph3_3);
                        $fvariant3_3 = 0.00;
                        $xsample3_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_3 as $i){
                            $fvariant3_3 += pow($i - $fmean3_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_3   /= ( $xsample3_3 ? count($ndtph3_3) - 1 : count($ndtph3_3));
                        $stdevph3_3     = number_format(sqrt($fvariant3_3), 2);
                        $totalph3_3     = count($ndtph3_3);
                        $inspectph3_3   = $dt1;
                        $outspectph3_3  = $dt2;
                        $prsoutph3_3    = number_format((($dt2 / $totalph3_3) * (100)), 2);
                    } else {
                        $Minph3_3      = '';
                        $Maxph3_3      = '';
                        $Avgph3_3      = '';
                        $stdevph3_3    = '';
                        $totalph3_3    = '';
                        $inspectph3_3  = '';
                        $outspectph3_3 = '';
                        $prsoutph3_3   = '';
                    }

                    if (is_array($ndtph1_4) && count($ndtph1_4) > 0){
                        $Minph1_4   = min($ndtph1_4);
                        $Maxph1_4   = max($ndtph1_4);
                        $Avgph1_4   = number_format((array_sum($ndtph1_4)) / (count($ndtph1_4)), 2);
                        $Countph1_4 = count($ndtph1_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_4    = array_sum($ndtph1_4) / count($ndtph1_4);
                        $fvariant1_4 = 0.00;
                        $xsample1_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_4 as $i){
                            $fvariant1_4 += pow($i - $fmean1_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_4   /= ( $xsample1_4 ? count($ndtph1_4) - 1 : count($ndtph1_4));
                        $stdevph1_4     = number_format(sqrt($fvariant1_4), 2);
                        $totalph1_4     = count($ndtph1_4);
                        $inspectph1_4   = $dt1;
                        $outspectph1_4  = $dt2;
                        $prsoutph1_4    = number_format((($dt2 / $totalph1_4) * (100)), 2);
                    } else {
                        $Minph1_4      = '';
                        $Maxph1_4      = '';
                        $Avgph1_4      = '';
                        $stdevph1_4    = '';
                        $totalph1_4    = '';
                        $inspectph1_4  = '';
                        $outspectph1_4 = '';
                        $prsoutph1_4   = '';
                    }

                    if (is_array($ndtph2_4) && count($ndtph2_4) > 0){
                        $Minph2_4   = min($ndtph2_4);
                        $Maxph2_4   = max($ndtph2_4);
                        $Avgph2_4   = number_format((array_sum($ndtph2_4)) / (count($ndtph2_4)), 2);
                        $Countph2_4 = count($ndtph2_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_4    = array_sum($ndtph2_4) / count($ndtph2_4);
                        $fvariant2_4 = 0.00;
                        $xsample2_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_4 as $i){
                            $fvariant2_4 += pow($i - $fmean2_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_4   /= ( $xsample2_4 ? count($ndtph2_4) - 1 : count($ndtph2_4));
                        $stdevph2_4     = number_format(sqrt($fvariant2_4), 2);
                        $totalph2_4     = count($ndtph2_4);
                        $inspectph2_4   = $dt1;
                        $outspectph2_4  = $dt2;
                        $prsoutph2_4    = number_format((($dt2 / $totalph2_4) * (100)), 2);
                    } else {
                        $Minph2_4      = '';
                        $Maxph2_4      = '';
                        $Avgph2_4      = '';
                        $stdevph2_4    = '';
                        $totalph2_4    = '';
                        $inspectph2_4  = '';
                        $outspectph2_4 = '';
                        $prsoutph2_4   = '';
                    }

                    if (is_array($ndtph3_4) && count($ndtph3_4) > 0){
                        $Minph3_4   = min($ndtph3_4);
                        $Maxph3_4   = max($ndtph3_4);
                        $Avgph3_4   = number_format((array_sum($ndtph3_4)) / (count($ndtph3_4)), 2);
                        $Countph3_4 = count($ndtph3_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_4    = array_sum($ndtph3_4) / count($ndtph3_4);
                        $fvariant3_4 = 0.00;
                        $xsample3_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_4 as $i){
                            $fvariant3_4 += pow($i - $fmean3_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_4   /= ( $xsample3_4 ? count($ndtph3_4) - 1 : count($ndtph3_4));
                        $stdevph3_4     = number_format(sqrt($fvariant3_4), 2);
                        $totalph3_4     = count($ndtph3_4);
                        $inspectph3_4   = $dt1;
                        $outspectph3_4  = $dt2;
                        $prsoutph3_4    = number_format((($dt2 / $totalph3_4) * (100)), 2);
                    } else {
                        $Minph3_4      = '';
                        $Maxph3_4      = '';
                        $Avgph3_4      = '';
                        $stdevph3_4    = '';
                        $totalph3_4    = '';
                        $inspectph3_4  = '';
                        $outspectph3_4 = '';
                        $prsoutph3_4   = '';
                    }

                    if (is_array($ndtph1_5) && count($ndtph1_5) > 0){
                        $Minph1_5   = min($ndtph1_5);
                        $Maxph1_5   = max($ndtph1_5);
                        $Avgph1_5   = number_format((array_sum($ndtph1_5)) / (count($ndtph1_5)), 2);
                        $Countph1_5 = count($ndtph1_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_5    = array_sum($ndtph1_5) / count($ndtph1_5);
                        $fvariant1_5 = 0.00;
                        $xsample1_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_5 as $i){
                            $fvariant1_5 += pow($i - $fmean1_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_5   /= ( $xsample1_5 ? count($ndtph1_5) - 1 : count($ndtph1_5));
                        $stdevph1_5     = number_format(sqrt($fvariant1_5), 2);
                        $totalph1_5     = count($ndtph1_5);
                        $inspectph1_5   = $dt1;
                        $outspectph1_5  = $dt2;
                        $prsoutph1_1    = number_format((($dt2 / $totalph1_5) * (100)), 2);
                    } else {
                        $Minph1_5      = '';
                        $Maxph1_5      = '';
                        $Avgph1_5      = '';
                        $stdevph1_5    = '';
                        $totalph1_5    = '';
                        $inspectph1_5  = '';
                        $outspectph1_5 = '';
                        $prsoutph1_5   = '';
                    }

                    if (is_array($ndtph2_5) && count($ndtph2_5) > 0){
                        $Minph2_5   = min($ndtph2_5);
                        $Maxph2_5   = max($ndtph2_5);
                        $Avgph2_5   = number_format((array_sum($ndtph2_5)) / (count($ndtph2_5)), 2);
                        $Countph2_5 = count($ndtph2_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_5    = array_sum($ndtph2_5) / count($ndtph2_5);
                        $fvariant2_5 = 0.00;
                        $xsample2_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_5 as $i){
                            $fvariant2_5 += pow($i - $fmean2_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_5   /= ( $xsample2_5 ? count($ndtph2_5) - 1 : count($ndtph2_5));
                        $stdevph2_5     = number_format(sqrt($fvariant2_5), 2);
                        $totalph2_5     = count($ndtph2_5);
                        $inspectph2_5   = $dt1;
                        $outspectph2_5  = $dt2;
                        $prsoutph2_5    = number_format((($dt2 / $totalph2_5) * (100)), 2);
                    } else {
                        $Minph2_5      = '';
                        $Maxph2_5      = '';
                        $Avgph2_5      = '';
                        $stdevph2_5    = '';
                        $totalph2_5    = '';
                        $inspectph2_5  = '';
                        $outspectph2_5 = '';
                        $prsoutph2_5   = '';
                    }

                    if (is_array($ndtph3_5) && count($ndtph3_5) > 0){
                        $Minph3_5   = min($ndtph3_5);
                        $Maxph3_5   = max($ndtph3_5);
                        $Avgph3_5   = number_format((array_sum($ndtph3_5)) / (count($ndtph3_5)), 2);
                        $Countph3_5 = count($ndtph3_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_5    = array_sum($ndtph3_5) / count($ndtph3_5);
                        $fvariant3_5 = 0.00;
                        $xsample3_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_5 as $i){
                            $fvariant3_5 += pow($i - $fmean3_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_5   /= ( $xsample3_5 ? count($ndtph3_5) - 1 : count($ndtph3_5));
                        $stdevph3_5     = number_format(sqrt($fvariant3_5), 2);
                        $totalph3_5     = count($ndtph3_5);
                        $inspectph3_5   = $dt1;
                        $outspectph3_5  = $dt2;
                        $prsoutph3_5    = number_format((($dt2 / $totalph3_5) * (100)), 2);
                    } else {
                        $Minph3_5      = '';
                        $Maxph3_5      = '';
                        $Avgph3_5      = '';
                        $stdevph3_5    = '';
                        $totalph3_5    = '';
                        $inspectph3_5  = '';
                        $outspectph3_5 = '';
                        $prsoutph3_5   = '';
                    }

                    if (is_array($ndtph1_6) && count($ndtph1_6) > 0){
                        $Minph1_6   = min($ndtph1_6);
                        $Maxph1_6   = max($ndtph1_6);
                        $Avgph1_6   = number_format((array_sum($ndtph1_6)) / (count($ndtph1_6)), 2);
                        $Countph1_6 = count($ndtph1_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_6    = array_sum($ndtph1_6) / count($ndtph1_6);
                        $fvariant1_6 = 0.00;
                        $xsample1_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_6 as $i){
                            $fvariant1_6 += pow($i - $fmean1_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_6   /= ( $xsample1_6 ? count($ndtph1_6) - 1 : count($ndtph1_6));
                        $stdevph1_6     = number_format(sqrt($fvariant1_6), 2);
                        $totalph1_6     = count($ndtph1_6);
                        $inspectph1_6   = $dt1;
                        $outspectph1_6  = $dt2;
                        $prsoutph1_6    = number_format((($dt2 / $totalph1_6) * (100)), 2);
                    } else {
                        $Minph1_6      = '';
                        $Maxph1_6      = '';
                        $Avgph1_6      = '';
                        $stdevph1_6    = '';
                        $totalph1_6    = '';
                        $inspectph1_6  = '';
                        $outspectph1_6 = '';
                        $prsoutph1_6   = '';
                    }

                    if (is_array($ndtph2_6) && count($ndtph2_6) > 0){
                        $Minph2_6   = min($ndtph2_6);
                        $Maxph2_6   = max($ndtph2_6);
                        $Avgph2_6   = number_format((array_sum($ndtph2_6)) / (count($ndtph2_6)), 2);
                        $Countph2_6 = count($ndtph2_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_6    = array_sum($ndtph2_6) / count($ndtph2_6);
                        $fvariant2_6 = 0.00;
                        $xsample2_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_6 as $i){
                            $fvariant2_6 += pow($i - $fmean2_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_6   /= ( $xsample2_6 ? count($ndtph2_6) - 1 : count($ndtph2_6));
                        $stdevph2_6     = number_format(sqrt($fvariant2_6), 2);
                        $totalph2_6     = count($ndtph2_6);
                        $inspectph2_6   = $dt1;
                        $outspectph2_6  = $dt2;
                        $prsoutph2_6    = number_format((($dt2 / $totalph2_6) * (100)), 2);
                    } else {
                        $Minph2_6      = '';
                        $Maxph2_6      = '';
                        $Avgph2_6      = '';
                        $stdevph2_6    = '';
                        $totalph2_6    = '';
                        $inspectph2_6  = '';
                        $outspectph2_6 = '';
                        $prsoutph2_6   = '';
                    }

                    if (is_array($ndtph3_6) && count($ndtph3_6) > 0){
                        $Minph3_6   = min($ndtph3_6);
                        $Maxph3_6   = max($ndtph3_6);
                        $Avgph3_6   = number_format((array_sum($ndtph3_6)) / (count($ndtph3_6)), 2);
                        $Countph3_6 = count($ndtph3_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_6    = array_sum($ndtph3_6) / count($ndtph3_6);
                        $fvariant3_6 = 0.00;
                        $xsample3_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_6 as $i){
                            $fvariant3_6 += pow($i - $fmean3_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_6   /= ( $xsample3_6 ? count($ndtph3_6) - 1 : count($ndtph3_6));
                        $stdevph3_6     = number_format(sqrt($fvariant3_6), 2);
                        $totalph3_6     = count($ndtph3_6);
                        $inspectph3_6   = $dt1;
                        $outspectph3_6  = $dt2;
                        $prsoutph3_6    = number_format((($dt2 / $totalph3_6) * (100)), 2);
                    } else {
                        $Minph3_6      = '';
                        $Maxph3_6      = '';
                        $Avgph3_6      = '';
                        $stdevph3_6    = '';
                        $totalph3_6    = '';
                        $inspectph3_6  = '';
                        $outspectph3_6 = '';
                        $prsoutph3_6   = '';
                    }

                    if (is_array($ndtph1_7) && count($ndtph1_7) > 0){
                        $Minph1_7   = min($ndtph1_7);
                        $Maxph1_7   = max($ndtph1_7);
                        $Avgph1_7   = number_format((array_sum($ndtph1_7)) / (count($ndtph1_7)), 2);
                        $Countph1_7 = count($ndtph1_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_7    = array_sum($ndtph1_7) / count($ndtph1_7);
                        $fvariant1_7 = 0.00;
                        $xsample1_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_7 as $i){
                            $fvariant1_7 += pow($i - $fmean1_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_7   /= ( $xsample1_7 ? count($ndtph1_7) - 1 : count($ndtph1_7));
                        $stdevph1_7     = number_format(sqrt($fvariant1_7), 2);
                        $totalph1_7     = count($ndtph1_7);
                        $inspectph1_7   = $dt1;
                        $outspectph1_7  = $dt2;
                        $prsoutph1_7    = number_format((($dt2 / $totalph1_7) * (100)), 2);
                    } else {
                        $Minph1_7      = '';
                        $Maxph1_7      = '';
                        $Avgph1_7      = '';
                        $stdevph1_7    = '';
                        $totalph1_7    = '';
                        $inspectph1_7  = '';
                        $outspectph1_7 = '';
                        $prsoutph1_7   = '';
                    }

                    if (is_array($ndtph2_7) && count($ndtph2_7) > 0){
                        $Minph2_7   = min($ndtph2_7);
                        $Maxph2_7   = max($ndtph2_7);
                        $Avgph2_7   = number_format((array_sum($ndtph2_7)) / (count($ndtph2_7)), 2);
                        $Countph2_7 = count($ndtph2_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_7    = array_sum($ndtph2_7) / count($ndtph2_7);
                        $fvariant2_7 = 0.00;
                        $xsample2_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_7 as $i){
                            $fvariant2_7 += pow($i - $fmean2_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_7   /= ( $xsample2_7 ? count($ndtph2_7) - 1 : count($ndtph2_7));
                        $stdevph2_7     = number_format(sqrt($fvariant2_7), 2);
                        $totalph2_7     = count($ndtph2_7);
                        $inspectph2_7   = $dt1;
                        $outspectph2_7  = $dt2;
                        $prsoutph2_7    = number_format((($dt2 / $totalph2_7) * (100)), 2);
                    } else {
                        $Minph2_7      = '';
                        $Maxph2_7      = '';
                        $Avgph2_7      = '';
                        $stdevph2_7    = '';
                        $totalph2_7    = '';
                        $inspectph2_7  = '';
                        $outspectph2_7 = '';
                        $prsoutph2_7   = '';
                    }

                    if (is_array($ndtph3_7) && count($ndtph3_7) > 0){
                        $Minph3_7   = min($ndtph3_7);
                        $Maxph3_7   = max($ndtph3_7);
                        $Avgph3_7   = number_format((array_sum($ndtph3_7)) / (count($ndtph3_7)), 2);
                        $Countph3_7 = count($ndtph3_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_7    = array_sum($ndtph3_7) / count($ndtph3_7);
                        $fvariant3_7 = 0.00;
                        $xsample3_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_7 as $i){
                            $fvariant3_7 += pow($i - $fmean3_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_7   /= ( $xsample3_7 ? count($ndtph3_7) - 1 : count($ndtph3_7));
                        $stdevph3_7     = number_format(sqrt($fvariant3_7), 2);
                        $totalph3_7     = count($ndtph3_7);
                        $inspectph3_7   = $dt1;
                        $outspectph3_7  = $dt2;
                        $prsoutph3_7    = number_format((($dt2 / $totalph3_7) * (100)), 2);
                    } else {
                        $Minph3_7      = '';
                        $Maxph3_7      = '';
                        $Avgph3_7      = '';
                        $stdevph3_7    = '';
                        $totalph3_7    = '';
                        $inspectph3_7  = '';
                        $outspectph3_7 = '';
                        $prsoutph3_7   = '';
                    }

                    if (is_array($ndtph1_8) && count($ndtph1_8) > 0){
                        $Minph1_8   = min($ndtph1_8);
                        $Maxph1_8   = max($ndtph1_8);
                        $Avgph1_8   = number_format((array_sum($ndtph1_8)) / (count($ndtph1_8)), 2);
                        $Countph1_8 = count($ndtph1_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_8    = array_sum($ndtph1_8) / count($ndtph1_8);
                        $fvariant1_8 = 0.00;
                        $xsample1_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_8 as $i){
                            $fvariant1_8 += pow($i - $fmean1_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_8   /= ( $xsample1_8 ? count($ndtph1_8) - 1 : count($ndtph1_8));
                        $stdevph1_8     = number_format(sqrt($fvariant1_8), 2);
                        $totalph1_8     = count($ndtph1_8);
                        $inspectph1_8   = $dt1;
                        $outspectph1_8  = $dt2;
                        $prsoutph1_8    = number_format((($dt2 / $totalph1_8) * (100)), 2);
                    } else {
                        $Minph1_8      = '';
                        $Maxph1_8      = '';
                        $Avgph1_8      = '';
                        $stdevph1_8    = '';
                        $totalph1_8    = '';
                        $inspectph1_8  = '';
                        $outspectph1_8 = '';
                        $prsoutph1_8   = '';
                    }

                    if (is_array($ndtph2_8) && count($ndtph2_8) > 0){
                        $Minph2_8   = min($ndtph2_8);
                        $Maxph2_8   = max($ndtph2_8);
                        $Avgph2_8   = number_format((array_sum($ndtph2_8)) / (count($ndtph2_8)), 2);
                        $Countph2_8 = count($ndtph2_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_8    = array_sum($ndtph2_8) / count($ndtph2_8);
                        $fvariant2_8 = 0.00;
                        $xsample2_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_8 as $i){
                            $fvariant2_8 += pow($i - $fmean2_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_8   /= ( $xsample2_8 ? count($ndtph2_8) - 1 : count($ndtph2_8));
                        $stdevph2_8     = number_format(sqrt($fvariant2_8), 2);
                        $totalph2_8     = count($ndtph2_8);
                        $inspectph2_8   = $dt1;
                        $outspectph2_8  = $dt2;
                        $prsoutph2_8    = number_format((($dt2 / $totalph2_8) * (100)), 2);
                    } else {
                        $Minph2_8      = '';
                        $Maxph2_8      = '';
                        $Avgph2_8      = '';
                        $stdevph2_8    = '';
                        $totalph2_8    = '';
                        $inspectph2_8  = '';
                        $outspectph2_8 = '';
                        $prsoutph2_8   = '';
                    }

                    if (is_array($ndtph3_8) && count($ndtph3_8) > 0){
                        $Minph3_8   = min($ndtph3_8);
                        $Maxph3_8   = max($ndtph3_8);
                        $Avgph3_8   = number_format((array_sum($ndtph3_8)) / (count($ndtph3_8)), 2);
                        $Countph3_8 = count($ndtph3_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_8    = array_sum($ndtph3_8) / count($ndtph3_8);
                        $fvariant3_8 = 0.00;
                        $xsample3_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_8 as $i){
                            $fvariant3_8 += pow($i - $fmean3_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_8   /= ( $xsample3_8 ? count($ndtph3_8) - 1 : count($ndtph3_8));
                        $stdevph3_8     = number_format(sqrt($fvariant3_8), 2);
                        $totalph3_8     = count($ndtph3_8);
                        $inspectph3_8   = $dt1;
                        $outspectph3_8  = $dt2;
                        $prsoutph3_8    = number_format((($dt2 / $totalph3_8) * (100)), 2);
                    } else {
                        $Minph3_8      = '';
                        $Maxph3_8      = '';
                        $Avgph3_8      = '';
                        $stdevph3_8    = '';
                        $totalph3_8    = '';
                        $inspectph3_8  = '';
                        $outspectph3_8 = '';
                        $prsoutph3_8   = '';
                    }

                    $rowfoot1  = $rowCount + 1;
                    $rowfoot2  = $rowfoot1 + 1;
                    $rowfoot3  = $rowfoot2 + 1;
                    $rowfoot4  = $rowfoot3 + 1;
                    $rowfoot5  = $rowfoot4 + 1;
                    $rowfoot6  = $rowfoot5 + 1;
                    $rowfoot7  = $rowfoot6 + 1;
                    $rowfoot8  = $rowfoot7 + 1;
                    $rowfoot9  = $rowfoot8 + 1;
                    $rowfoot10 = $rowfoot9 + 1;

                    $objPHPExcel->mergeCells('A' . $rowfoot1 . ':Y' . $rowfoot1)->setCellValue('A' . $rowfoot1, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot2, 'Maximum');
                    $objPHPExcel->setCellValue('B' . $rowfoot2, $Maxph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot2, $Maxph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot2, $Maxph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot2, $Maxph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot2, $Maxph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot2, $Maxph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot2, $Maxph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot2, $Maxph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot2, $Maxph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot2, $Maxph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot2, $Maxph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot2, $Maxph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot2, $Maxph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot2, $Maxph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot2, $Maxph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot2, $Maxph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot2, $Maxph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot2, $Maxph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot2, $Maxph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot2, $Maxph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot2, $Maxph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot2, $Maxph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot2, $Maxph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot2, $Maxph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot3, 'Minimum');
                    $objPHPExcel->setCellValue('B' . $rowfoot3, $Minph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot3, $Minph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot3, $Minph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot3, $Minph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot3, $Minph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot3, $Minph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot3, $Minph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot3, $Minph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot3, $Minph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot3, $Minph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot3, $Minph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot3, $Minph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot3, $Minph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot3, $Minph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot3, $Minph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot3, $Minph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot3, $Minph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot3, $Minph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot3, $Minph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot3, $Minph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot3, $Minph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot3, $Minph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot3, $Minph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot3, $Minph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot4, 'Average');
                    $objPHPExcel->setCellValue('B' . $rowfoot4, $Avgph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot4, $Avgph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot4, $Avgph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot4, $Avgph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot4, $Avgph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot4, $Avgph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot4, $Avgph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot4, $Avgph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot4, $Avgph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot4, $Avgph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot4, $Avgph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot4, $Avgph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot4, $Avgph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot4, $Avgph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot4, $Avgph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot4, $Avgph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot4, $Avgph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot4, $Avgph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot4, $Avgph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot4, $Avgph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot4, $Avgph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot4, $Avgph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot4, $Avgph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot4, $Avgph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot5, 'Stdev');
                    $objPHPExcel->setCellValue('B' . $rowfoot5, $stdevph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot5, $stdevph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot5, $stdevph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot5, $stdevph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot5, $stdevph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot5, $stdevph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot5, $stdevph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot5, $stdevph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot5, $stdevph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot5, $stdevph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot5, $stdevph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot5, $stdevph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot5, $stdevph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot5, $stdevph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot5, $stdevph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot5, $stdevph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot5, $stdevph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot5, $stdevph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot5, $stdevph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot5, $stdevph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot5, $stdevph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot5, $stdevph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot5, $stdevph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot5, $stdevph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot6, 'Total Data');
                    $objPHPExcel->setCellValue('B' . $rowfoot6, $totalph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot6, $totalph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot6, $totalph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot6, $totalph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot6, $totalph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot6, $totalph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot6, $totalph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot6, $totalph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot6, $totalph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot6, $totalph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot6, $totalph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot6, $totalph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot6, $totalph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot6, $totalph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot6, $totalph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot6, $totalph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot6, $totalph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot6, $totalph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot6, $totalph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot6, $totalph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot6, $totalph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot6, $totalph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot6, $totalph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot6, $totalph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot7, 'Whitin Spect');
                    $objPHPExcel->setCellValue('B' . $rowfoot7, $inspectph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot7, $inspectph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot7, $inspectph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot7, $inspectph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot7, $inspectph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot7, $inspectph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot7, $inspectph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot7, $inspectph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot7, $inspectph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot7, $inspectph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot7, $inspectph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot7, $inspectph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot7, $inspectph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot7, $inspectph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot7, $inspectph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot7, $inspectph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot7, $inspectph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot7, $inspectph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot7, $inspectph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot7, $inspectph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot7, $inspectph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot7, $inspectph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot7, $inspectph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot7, $inspectph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot8, 'Outspect Data');
                    $objPHPExcel->setCellValue('B' . $rowfoot8, $outspectph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot8, $outspectph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot8, $outspectph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot8, $outspectph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot8, $outspectph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot8, $outspectph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot8, $outspectph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot8, $outspectph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot8, $outspectph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot8, $outspectph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot8, $outspectph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot8, $outspectph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot8, $outspectph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot8, $outspectph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot8, $outspectph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot8, $outspectph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot8, $outspectph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot8, $outspectph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot8, $outspectph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot8, $outspectph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot8, $outspectph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot8, $outspectph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot8, $outspectph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot8, $outspectph3_8);

                    $objPHPExcel->setCellValue('A' . $rowfoot9, 'Percent Outs');
                    $objPHPExcel->setCellValue('B' . $rowfoot9, $prsoutph1_1);
                    $objPHPExcel->setCellValue('C' . $rowfoot9, $prsoutph2_1);
                    $objPHPExcel->setCellValue('D' . $rowfoot9, $prsoutph3_1);
                    $objPHPExcel->setCellValue('E' . $rowfoot9, $prsoutph1_2);
                    $objPHPExcel->setCellValue('F' . $rowfoot9, $prsoutph2_2);
                    $objPHPExcel->setCellValue('G' . $rowfoot9, $prsoutph3_2);
                    $objPHPExcel->setCellValue('H' . $rowfoot9, $prsoutph1_3);
                    $objPHPExcel->setCellValue('I' . $rowfoot9, $prsoutph2_3);
                    $objPHPExcel->setCellValue('J' . $rowfoot9, $prsoutph3_3);
                    $objPHPExcel->setCellValue('K' . $rowfoot9, $prsoutph1_4);
                    $objPHPExcel->setCellValue('L' . $rowfoot9, $prsoutph2_4);
                    $objPHPExcel->setCellValue('M' . $rowfoot9, $prsoutph3_4);
                    $objPHPExcel->setCellValue('N' . $rowfoot9, $prsoutph1_5);
                    $objPHPExcel->setCellValue('O' . $rowfoot9, $prsoutph2_5);
                    $objPHPExcel->setCellValue('P' . $rowfoot9, $prsoutph3_5);
                    $objPHPExcel->setCellValue('Q' . $rowfoot9, $prsoutph1_6);
                    $objPHPExcel->setCellValue('R' . $rowfoot9, $prsoutph2_6);
                    $objPHPExcel->setCellValue('S' . $rowfoot9, $prsoutph3_6);
                    $objPHPExcel->setCellValue('T' . $rowfoot9, $prsoutph1_7);
                    $objPHPExcel->setCellValue('U' . $rowfoot9, $prsoutph2_7);
                    $objPHPExcel->setCellValue('V' . $rowfoot9, $prsoutph3_7);
                    $objPHPExcel->setCellValue('W' . $rowfoot9, $prsoutph1_8);
                    $objPHPExcel->setCellValue('X' . $rowfoot9, $prsoutph2_8);
                    $objPHPExcel->setCellValue('Y' . $rowfoot9, $prsoutph3_8);

                    $objPHPExcel->mergeCells('A' . $rowfoot10 . ':Y' . $rowfoot10)->setCellValue('A' . $rowfoot10, '');

                    $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowfoot1 . ':Y' . $rowfoot10);
                } else {
                    $rowCount = 9;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':Y' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, '');
                    $objPHPExcel->setCellValue('B' . $rowCount, '');
                    $objPHPExcel->setCellValue('C' . $rowCount, '');
                    $objPHPExcel->setCellValue('D' . $rowCount, '');
                    $objPHPExcel->setCellValue('E' . $rowCount, '');
                    $objPHPExcel->setCellValue('F' . $rowCount, '');
                    $objPHPExcel->setCellValue('G' . $rowCount, '');
                    $objPHPExcel->setCellValue('H' . $rowCount, '');
                    $objPHPExcel->setCellValue('I' . $rowCount, '');
                    $objPHPExcel->setCellValue('J' . $rowCount, '');
                    $objPHPExcel->setCellValue('K' . $rowCount, '');
                    $objPHPExcel->setCellValue('L' . $rowCount, '');
                    $objPHPExcel->setCellValue('M' . $rowCount, '');
                    $objPHPExcel->setCellValue('N' . $rowCount, '');
                    $objPHPExcel->setCellValue('O' . $rowCount, '');
                    $objPHPExcel->setCellValue('P' . $rowCount, '');
                    $objPHPExcel->setCellValue('Q' . $rowCount, '');
                    $objPHPExcel->setCellValue('R' . $rowCount, '');
                    $objPHPExcel->setCellValue('S' . $rowCount, '');
                    $objPHPExcel->setCellValue('T' . $rowCount, '');
                    $objPHPExcel->setCellValue('U' . $rowCount, '');
                    $objPHPExcel->setCellValue('V' . $rowCount, '');
                    $objPHPExcel->setCellValue('W' . $rowCount, '');
                    $objPHPExcel->setCellValue('X' . $rowCount, '');
                    $objPHPExcel->setCellValue('Y' . $rowCount, '');

                    $rowfoot1  = $rowCount + 1;
                    $rowfoot2  = $rowfoot1 + 1;
                    $rowfoot3  = $rowfoot2 + 1;
                    $rowfoot4  = $rowfoot3 + 1;
                    $rowfoot5  = $rowfoot4 + 1;
                    $rowfoot6  = $rowfoot5 + 1;
                    $rowfoot7  = $rowfoot6 + 1;
                    $rowfoot8  = $rowfoot7 + 1;
                    $rowfoot9  = $rowfoot8 + 1;
                    $rowfoot10 = $rowfoot9 + 1;

                    $objPHPExcel->mergeCells('A' . $rowfoot1 . ':Y' . $rowfoot1)->setCellValue('A' . $rowfoot1, '');


                    $objPHPExcel->setCellValue('A' . $rowfoot2, 'Maximum');
                    $objPHPExcel->setCellValue('B' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot2, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot2, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot3, 'Minimum');
                    $objPHPExcel->setCellValue('B' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot3, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot3, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot4, 'Average');
                    $objPHPExcel->setCellValue('B' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot4, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot4, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot5, 'Stdev');
                    $objPHPExcel->setCellValue('B' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot5, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot5, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot6, 'Total Data');
                    $objPHPExcel->setCellValue('B' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot6, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot6, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot7, 'Whitin Spect');
                    $objPHPExcel->setCellValue('B' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot7, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot7, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot8, 'Outspect Data');
                    $objPHPExcel->setCellValue('B' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot8, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot8, '');

                    $objPHPExcel->setCellValue('A' . $rowfoot9, 'Percent Outs');
                    $objPHPExcel->setCellValue('B' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('C' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('D' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('E' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('F' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('G' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('H' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('I' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('J' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('K' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('L' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('M' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('N' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('O' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('P' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('Q' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('R' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('S' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('T' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('U' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('V' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('W' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('X' . $rowfoot9, '');
                    $objPHPExcel->setCellValue('Y' . $rowfoot9, '');

                    $objPHPExcel->mergeCells('A' . $rowfoot10 . ':Y' . $rowfoot10)->setCellValue('A' . $rowfoot10, '');
                    $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowfoot1 . ':Y' . $rowfoot10);
                }

                $rowsapp1 = $rowfoot10 + 1;
                $rowsapp2 = $rowsapp1 + 1;
                $rowsapp3 = $rowsapp2 + 1;
                $rowsapp4 = $rowsapp3 + 1;
                $rowsapp5 = $rowsapp4 + 1;

                $objPHPExcel->getStyle('A' . $rowsapp1 . ':Y' . $rowsapp5)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

                $objPHPExcel->mergeCells('A' . $rowsapp1 . ':I' . $rowsapp1)->setCellValue('A' . $rowsapp1, 'Reported By');
                $objPHPExcel->mergeCells('J' . $rowsapp1 . ':Q' . $rowsapp1)->setCellValue('J' . $rowsapp1, 'Checked By');
                $objPHPExcel->mergeCells('R' . $rowsapp1 . ':Y' . $rowsapp1)->setCellValue('R' . $rowsapp1, 'Confirmed By');

                $objPHPExcel->mergeCells('A' . $rowsapp2 . ':I' . $rowsapp2)->setCellValue('A' . $rowsapp2, '');
                $objPHPExcel->mergeCells('J' . $rowsapp2 . ':Q' . $rowsapp2)->setCellValue('J' . $rowsapp2, '');
                $objPHPExcel->mergeCells('R' . $rowsapp2 . ':Y' . $rowsapp2)->setCellValue('R' . $rowsapp2, '');

                $objPHPExcel->mergeCells('A' . $rowsapp3 . ':I' . $rowsapp3)->setCellValue('A' . $rowsapp3, 'Name :');
                $objPHPExcel->mergeCells('J' . $rowsapp3 . ':Q' . $rowsapp3)->setCellValue('J' . $rowsapp3, 'Name :');
                $objPHPExcel->mergeCells('R' . $rowsapp3 . ':Y' . $rowsapp3)->setCellValue('R' . $rowsapp3, 'Name :');

                $objPHPExcel->mergeCells('A' . $rowsapp4 . ':I' . $rowsapp4)->setCellValue('A' . $rowsapp4, 'Position :');
                $objPHPExcel->mergeCells('J' . $rowsapp4 . ':Q' . $rowsapp4)->setCellValue('J' . $rowsapp4, 'Position :');
                $objPHPExcel->mergeCells('R' . $rowsapp4 . ':Y' . $rowsapp4)->setCellValue('R' . $rowsapp4, 'Position :');

                $objPHPExcel->mergeCells('A' . $rowsapp5 . ':I' . $rowsapp5)->setCellValue('A' . $rowsapp5, 'Date :');
                $objPHPExcel->mergeCells('J' . $rowsapp5 . ':Q' . $rowsapp5)->setCellValue('J' . $rowsapp5, 'Date :');
                $objPHPExcel->mergeCells('R' . $rowsapp5 . ':Y' . $rowsapp5)->setCellValue('R' . $rowsapp5, 'Date :');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowsapp1 . ':Y' . $rowsapp5);

                $objPHPExcel2 = $obj->createSheet(2);

                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');
                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);

                foreach (range('A', 'Y') as $columnID){
                    $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel2->mergeCells('A1:Y1');
                $objPHPExcel2->mergeCells('A2:A3');
                $objPHPExcel2->mergeCells('B2:S3')->setCellValue('B2', $frmcop);
                $objPHPExcel2->mergeCells('T2:Y2')->setCellValue('T2', 'Doc : ' . $Doc);
                $objPHPExcel2->mergeCells('T3:Y3')->setCellValue('T3', 'Date : ' . $Tanggal);

                $objPHPExcel2->setCellValue('A4', 'JUDUL');
                $objPHPExcel2->mergeCells('B4:S4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel2->mergeCells('T4:Y4')->setCellValue('T4', 'Page : 2 of 5');

                $objPHPExcel2->mergeCells('A5:Y5')->setCellValue('A5', 'Distribusi : TJH/HYC/UTL/BLR/FILE-QAD');

                $objPHPExcel2->mergeCells('A6:A8')->setCellValue('A6', 'Sampling and Analysis Date)');
                $objPHPExcel2->mergeCells('B6:Y6')->setCellValue('B6', 'Total Alkalinity (Specificaion: 800 ppm max)');

                $objPHPExcel2->mergeCells('B7:D7')->setCellValue('B7', 'Boiler 1');
                $objPHPExcel2->mergeCells('E7:G7')->setCellValue('E7', 'Boiler 2');
                $objPHPExcel2->mergeCells('H7:J7')->setCellValue('H7', 'Boiler 3');
                $objPHPExcel2->mergeCells('K7:M7')->setCellValue('K7', 'Boiler 4');
                $objPHPExcel2->mergeCells('N7:P7')->setCellValue('N7', 'Boiler 5');
                $objPHPExcel2->mergeCells('Q7:S7')->setCellValue('Q7', 'Boiler 6');
                $objPHPExcel2->mergeCells('T7:V7')->setCellValue('T7', 'Boiler 7');
                $objPHPExcel2->mergeCells('W7:Y7')->setCellValue('W7', 'Boiler 8');

                $objPHPExcel2->setCellValue('B8', 'Shift 1');
                $objPHPExcel2->setCellValue('C8', 'Shift 2');
                $objPHPExcel2->setCellValue('D8', 'Shift 3');
                $objPHPExcel2->setCellValue('E8', 'Shift 1');
                $objPHPExcel2->setCellValue('F8', 'Shift 2');
                $objPHPExcel2->setCellValue('G8', 'Shift 3');
                $objPHPExcel2->setCellValue('H8', 'Shift 1');
                $objPHPExcel2->setCellValue('I8', 'Shift 2');
                $objPHPExcel2->setCellValue('J8', 'Shift 3');
                $objPHPExcel2->setCellValue('K8', 'Shift 1');
                $objPHPExcel2->setCellValue('L8', 'Shift 2');
                $objPHPExcel2->setCellValue('M8', 'Shift 3');
                $objPHPExcel2->setCellValue('N8', 'Shift 1');
                $objPHPExcel2->setCellValue('O8', 'Shift 2');
                $objPHPExcel2->setCellValue('P8', 'Shift 3');
                $objPHPExcel2->setCellValue('Q8', 'Shift 1');
                $objPHPExcel2->setCellValue('R8', 'Shift 2');
                $objPHPExcel2->setCellValue('S8', 'Shift 3');
                $objPHPExcel2->setCellValue('T8', 'Shift 1');
                $objPHPExcel2->setCellValue('U8', 'Shift 2');
                $objPHPExcel2->setCellValue('V8', 'Shift 3');
                $objPHPExcel2->setCellValue('W8', 'Shift 1');
                $objPHPExcel2->setCellValue('X8', 'Shift 2');
                $objPHPExcel2->setCellValue('Y8', 'Shift 3');


                $objPHPExcel2->setSharedStyle($headerStyle, 'A2:Y8');


                if (isset($dtdetail2)){
                    $rowCount2 = 8;
                    foreach ($dtdetail2 as $row2){
                        $rowCount2++;

                        $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount2 . ':Y' . $rowCount2);

                        $steam_ph1[] = $row2->ta_shift1_steam;
                        $steam_ph2[] = $row2->ta_shift2_steam;
                        $steam_ph3[] = $row2->ta_shift3_steam;
                        $fw_ph1   [] = $row2->ta_shift1_fw;
                        $fw_ph2   [] = $row2->ta_shift2_fw;
                        $fw_ph3   [] = $row2->ta_shift3_fw;

                        $ndt_ta1_1[] = $row2->ta_shift1_1;
                        $ndt_ta2_1[] = $row2->ta_shift2_1;
                        $ndt_ta3_1[] = $row2->ta_shift3_1;
                        $ndt_ta1_2[] = $row2->ta_shift1_2;
                        $ndt_ta2_2[] = $row2->ta_shift2_2;
                        $ndt_ta3_2[] = $row2->ta_shift3_2;
                        $ndt_ta1_3[] = $row2->ta_shift1_3;
                        $ndt_ta2_3[] = $row2->ta_shift2_3;
                        $ndt_ta3_3[] = $row2->ta_shift3_3;
                        $ndt_ta1_4[] = $row2->ta_shift1_4;
                        $ndt_ta2_4[] = $row2->ta_shift2_4;
                        $ndt_ta3_4[] = $row2->ta_shift3_4;
                        $ndt_ta1_5[] = $row2->ta_shift1_5;
                        $ndt_ta2_5[] = $row2->ta_shift2_5;
                        $ndt_ta3_5[] = $row2->ta_shift3_5;
                        $ndt_ta1_6[] = $row2->ta_shift1_6;
                        $ndt_ta2_6[] = $row2->ta_shift2_6;
                        $ndt_ta3_6[] = $row2->ta_shift3_6;
                        $ndt_ta1_7[] = $row2->ta_shift1_7;
                        $ndt_ta2_7[] = $row2->ta_shift2_7;
                        $ndt_ta3_7[] = $row2->ta_shift3_7;
                        $ndt_ta1_8[] = $row2->ta_shift1_8;
                        $ndt_ta2_8[] = $row2->ta_shift2_8;
                        $ndt_ta3_8[] = $row2->ta_shift3_8;

                        $objPHPExcel2->setCellValue('A' . $rowCount2, $row2->tanggal);
                        $objPHPExcel2->setCellValue('B' . $rowCount2, $row2->ta_shift1_1);
                        $objPHPExcel2->setCellValue('C' . $rowCount2, $row2->ta_shift2_1);
                        $objPHPExcel2->setCellValue('D' . $rowCount2, $row2->ta_shift3_1);
                        $objPHPExcel2->setCellValue('E' . $rowCount2, $row2->ta_shift1_2);
                        $objPHPExcel2->setCellValue('F' . $rowCount2, $row2->ta_shift2_2);
                        $objPHPExcel2->setCellValue('G' . $rowCount2, $row2->ta_shift3_2);
                        $objPHPExcel2->setCellValue('H' . $rowCount2, $row2->ta_shift1_3);
                        $objPHPExcel2->setCellValue('I' . $rowCount2, $row2->ta_shift2_3);
                        $objPHPExcel2->setCellValue('J' . $rowCount2, $row2->ta_shift3_3);
                        $objPHPExcel2->setCellValue('K' . $rowCount2, $row2->ta_shift1_4);
                        $objPHPExcel2->setCellValue('L' . $rowCount2, $row2->ta_shift2_4);
                        $objPHPExcel2->setCellValue('M' . $rowCount2, $row2->ta_shift3_4);
                        $objPHPExcel2->setCellValue('N' . $rowCount2, $row2->ta_shift1_5);
                        $objPHPExcel2->setCellValue('O' . $rowCount2, $row2->ta_shift2_5);
                        $objPHPExcel2->setCellValue('P' . $rowCount2, $row2->ta_shift3_5);
                        $objPHPExcel2->setCellValue('Q' . $rowCount2, $row2->ta_shift1_6);
                        $objPHPExcel2->setCellValue('R' . $rowCount2, $row2->ta_shift2_6);
                        $objPHPExcel2->setCellValue('S' . $rowCount2, $row2->ta_shift3_6);
                        $objPHPExcel2->setCellValue('T' . $rowCount2, $row2->ta_shift1_7);
                        $objPHPExcel2->setCellValue('U' . $rowCount2, $row2->ta_shift2_7);
                        $objPHPExcel2->setCellValue('V' . $rowCount2, $row2->ta_shift3_7);
                        $objPHPExcel2->setCellValue('W' . $rowCount2, $row2->ta_shift1_8);
                        $objPHPExcel2->setCellValue('X' . $rowCount2, $row2->ta_shift2_8);
                        $objPHPExcel2->setCellValue('Y' . $rowCount2, $row2->ta_shift3_8);
                    }

                    $ndtta1_1 = array_diff($ndt_ta1_1, array('', 0));
                    $ndtta2_1 = array_diff($ndt_ta2_1, array('', 0));
                    $ndtta3_1 = array_diff($ndt_ta3_1, array('', 0));
                    $ndtta1_2 = array_diff($ndt_ta1_2, array('', 0));
                    $ndtta2_2 = array_diff($ndt_ta2_2, array('', 0));
                    $ndtta3_2 = array_diff($ndt_ta3_2, array('', 0));
                    $ndtta1_3 = array_diff($ndt_ta1_3, array('', 0));
                    $ndtta2_3 = array_diff($ndt_ta2_3, array('', 0));
                    $ndtta3_3 = array_diff($ndt_ta3_3, array('', 0));
                    $ndtta1_4 = array_diff($ndt_ta1_4, array('', 0));
                    $ndtta2_4 = array_diff($ndt_ta2_4, array('', 0));
                    $ndtta3_4 = array_diff($ndt_ta3_4, array('', 0));
                    $ndtta1_5 = array_diff($ndt_ta1_5, array('', 0));
                    $ndtta2_5 = array_diff($ndt_ta2_5, array('', 0));
                    $ndtta3_5 = array_diff($ndt_ta3_5, array('', 0));
                    $ndtta1_6 = array_diff($ndt_ta1_6, array('', 0));
                    $ndtta2_6 = array_diff($ndt_ta2_6, array('', 0));
                    $ndtta3_6 = array_diff($ndt_ta3_6, array('', 0));
                    $ndtta1_7 = array_diff($ndt_ta1_7, array('', 0));
                    $ndtta2_7 = array_diff($ndt_ta2_7, array('', 0));
                    $ndtta3_7 = array_diff($ndt_ta3_7, array('', 0));
                    $ndtta1_8 = array_diff($ndt_ta1_8, array('', 0));
                    $ndtta2_8 = array_diff($ndt_ta2_8, array('', 0));
                    $ndtta3_8 = array_diff($ndt_ta3_8, array('', 0));

                    if (is_array($ndtta1_1) && count($ndtta1_1) > 0){
                        $Minta1_1   = min($ndtta1_1);
                        $Maxta1_1   = max($ndtta1_1);
                        $Avgta1_1   = number_format((array_sum($ndtta1_1)) / (count($ndtta1_1)), 2);
                        $Countta1_1 = count($ndtta1_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_1    = array_sum($ndtta1_1) / count($ndtta1_1);
                        $fvariant_ta1_1 = 0.00;
                        $xsample_ta1_1  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_1 as $ta){
                            $fvariant_ta1_1 += pow($ta - $fmean_ta1_1, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_1 /= ( $xsample_ta1_1 ? count($ndtta1_1) - 1 : count($ndtta1_1));
                        $stdevta1_1      = number_format(sqrt($fvariant_ta1_1), 2);
                        $totalta1_1      = count($ndtta1_1);
                        $inspectta1_1    = $dt_ta1;
                        $outspectta1_1   = $dt_ta2;
                        $prsoutta1_1     = number_format((($dt_ta2 / $totalta1_1) * (100)), 2);
                    } else {

                        $Minta1_1      = '';
                        $Maxta1_1      = '';
                        $Avgta1_1      = '';
                        $stdevta1_1    = '';
                        $totalta1_1    = '';
                        $inspectta1_1  = '';
                        $outspectta1_1 = '';
                        $prsoutta1_1   = '';
                    }

                    if (is_array($ndtta2_1) && count($ndtta2_1) > 0){
                        $Minta2_1   = min($ndtta2_1);
                        $Maxta2_1   = max($ndtta2_1);
                        $Avgta2_1   = number_format((array_sum($ndtta2_1)) / (count($ndtta2_1)), 2);
                        $Countta2_1 = count($ndtta2_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_1    = array_sum($ndtta2_1) / count($ndtta2_1);
                        $fvariant_ta2_1 = 0.00;
                        $xsample_ta2_1  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_1 as $ta){
                            $fvariant_ta2_1 += pow($ta - $fmean_ta2_1, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_1 /= ( $xsample_ta2_1 ? count($ndtta2_1) - 1 : count($ndtta2_1));
                        $stdevta2_1      = number_format(sqrt($fvariant_ta2_1), 2);
                        $totalta2_1      = count($ndtta2_1);
                        $inspectta2_1    = $dt_ta1;
                        $outspectta2_1   = $dt_ta2;
                        $prsoutta2_1     = number_format((($dt_ta2 / $totalta2_1) * (100)), 2);
                    } else {
                        $Minta2_1      = '';
                        $Maxta2_1      = '';
                        $Avgta2_1      = '';
                        $stdevta2_1    = '';
                        $totalta2_1    = '';
                        $inspectta2_1  = '';
                        $outspectta2_1 = '';
                        $prsoutta2_1   = '';
                    }

                    if (is_array($ndtta3_1) && count($ndtta3_1) > 0){
                        $Minta3_1   = min($ndtta3_1);
                        $Maxta3_1   = max($ndtta3_1);
                        $Avgta3_1   = number_format((array_sum($ndtta3_1)) / (count($ndtta3_1)), 2);
                        $Countta3_1 = count($ndtta3_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_1    = array_sum($ndtta3_1) / count($ndtta3_1);
                        $fvariant_ta3_1 = 0.00;
                        $xsample_ta3_1  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_1 as $ta){
                            $fvariant_ta3_1 += pow($ta - $fmean_ta3_1, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_1 /= ( $xsample_ta3_1 ? count($ndtta3_1) - 1 : count($ndtta3_1));
                        $stdevta3_1      = number_format(sqrt($fvariant_ta3_1), 2);
                        $totalta3_1      = count($ndtta3_1);
                        $inspectta3_1    = $dt_ta1;
                        $outspectta3_1   = $dt_ta2;
                        $prsoutta3_1     = number_format((($dt_ta2 / $totalta3_1) * (100)), 2);
                    } else {
                        $Minta3_1      = '';
                        $Maxta3_1      = '';
                        $Avgta3_1      = '';
                        $stdevta3_1    = '';
                        $totalta3_1    = '';
                        $inspectta3_1  = '';
                        $outspectta3_1 = '';
                        $prsoutta3_1   = '';
                    }

                    if (is_array($ndtta1_2) && count($ndtta1_2) > 0){
                        $Minta1_2   = min($ndtta1_2);
                        $Maxta1_2   = max($ndtta1_2);
                        $Avgta1_2   = number_format((array_sum($ndtta1_2)) / (count($ndtta1_2)), 2);
                        $Countta1_2 = count($ndtta1_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_2    = array_sum($ndtta1_2) / count($ndtta1_2);
                        $fvariant_ta1_2 = 0.00;
                        $xsample_ta1_2  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_2 as $ta){
                            $fvariant_ta1_2 += pow($ta - $fmean_ta1_2, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_2 /= ( $xsample_ta1_2 ? count($ndtta1_2) - 1 : count($ndtta1_2));
                        $stdevta1_2      = number_format(sqrt($fvariant_ta1_2), 2);
                        $totalta1_2      = count($ndtta1_2);
                        $inspectta1_2    = $dt_ta1;
                        $outspectta1_2   = $dt_ta2;
                        $prsoutta1_2     = number_format((($dt_ta2 / $totalta1_2) * (100)), 2);
                    } else {
                        $Minta1_2      = '';
                        $Maxta1_2      = '';
                        $Avgta1_2      = '';
                        $stdevta1_2    = '';
                        $totalta1_2    = '';
                        $inspectta1_2  = '';
                        $outspectta1_2 = '';
                        $prsoutta1_2   = '';
                    }

                    if (is_array($ndtta2_2) && count($ndtta2_2) > 0){
                        $Minta2_2   = min($ndtta2_2);
                        $Maxta2_2   = max($ndtta2_2);
                        $Avgta2_2   = number_format((array_sum($ndtta2_2)) / (count($ndtta2_2)), 2);
                        $Countta2_2 = count($ndtta2_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_2    = array_sum($ndtta2_2) / count($ndtta2_2);
                        $fvariant_ta2_2 = 0.00;
                        $xsample_ta2_2  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_2 as $ta){
                            $fvariant_ta2_2 += pow($ta - $fmean_ta2_2, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_2 /= ( $xsample_ta2_2 ? count($ndtta2_2) - 1 : count($ndtta2_2));
                        $stdevta2_2      = number_format(sqrt($fvariant_ta2_2), 2);
                        $totalta2_2      = count($ndtta2_2);
                        $inspectta2_2    = $dt_ta1;
                        $outspectta2_2   = $dt_ta2;
                        $prsoutta2_2     = number_format((($dt_ta2 / $totalta2_2) * (100)), 2);
                    } else {
                        $Minta2_2      = '';
                        $Maxta2_2      = '';
                        $Avgta2_2      = '';
                        $stdevta2_2    = '';
                        $totalta2_2    = '';
                        $inspectta2_2  = '';
                        $outspectta2_2 = '';
                        $prsoutta2_2   = '';
                    }

                    if (is_array($ndtta3_2) && count($ndtta3_2) > 0){
                        $Minta3_2   = min($ndtta3_2);
                        $Maxta3_2   = max($ndtta3_2);
                        $Avgta3_2   = number_format((array_sum($ndtta3_2)) / (count($ndtta3_2)), 2);
                        $Countta3_2 = count($ndtta3_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_2    = array_sum($ndtta3_2) / count($ndtta3_2);
                        $fvariant_ta3_2 = 0.00;
                        $xsample_ta3_2  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_2 as $ta){
                            $fvariant_ta3_2 += pow($ta - $fmean_ta3_2, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_2 /= ( $xsample_ta3_2 ? count($ndtta3_2) - 1 : count($ndtta3_2));
                        $stdevta3_2      = number_format(sqrt($fvariant_ta3_2), 2);
                        $totalta3_2      = count($ndtta3_2);
                        $inspectta3_2    = $dt_ta1;
                        $outspectta3_2   = $dt_ta2;
                        $prsoutta3_2     = number_format((($dt_ta2 / $totalta3_2) * (100)), 2);
                    } else {
                        $Minta3_2      = '';
                        $Maxta3_2      = '';
                        $Avgta3_2      = '';
                        $stdevta3_2    = '';
                        $totalta3_2    = '';
                        $inspectta3_2  = '';
                        $outspectta3_2 = '';
                        $prsoutta3_2   = '';
                    }

                    if (is_array($ndtta1_3) && count($ndtta1_3) > 0){
                        $Minta1_3   = min($ndtta1_3);
                        $Maxta1_3   = max($ndtta1_3);
                        $Avgta1_3   = number_format((array_sum($ndtta1_3)) / (count($ndtta1_3)), 2);
                        $Countta1_3 = count($ndtta1_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_3    = array_sum($ndtta1_3) / count($ndtta1_3);
                        $fvariant_ta1_3 = 0.00;
                        $xsample_ta1_3  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_3 as $ta){
                            $fvariant_ta1_3 += pow($ta - $fmean_ta1_3, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_3 /= ( $xsample_ta1_3 ? count($ndtta1_3) - 1 : count($ndtta1_3));
                        $stdevta1_3      = number_format(sqrt($fvariant_ta1_3), 2);
                        $totalta1_3      = count($ndtta1_3);
                        $inspectta1_3    = $dt_ta1;
                        $outspectta1_3   = $dt_ta2;
                        $prsoutta1_3     = number_format((($dt_ta2 / $totalta1_3) * (100)), 2);
                    } else {
                        $Minta1_3      = '';
                        $Maxta1_3      = '';
                        $Avgta1_3      = '';
                        $stdevta1_3    = '';
                        $totalta1_3    = '';
                        $inspectta1_3  = '';
                        $outspectta1_3 = '';
                        $prsoutta1_3   = '';
                    }

                    if (is_array($ndtta2_3) && count($ndtta2_3) > 0){
                        $Minta2_3   = min($ndtta2_3);
                        $Maxta2_3   = max($ndtta2_3);
                        $Avgta2_3   = number_format((array_sum($ndtta2_3)) / (count($ndtta2_3)), 2);
                        $Countta2_3 = count($ndtta2_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_3    = array_sum($ndtta2_3) / count($ndtta2_3);
                        $fvariant_ta2_3 = 0.00;
                        $xsample_ta2_3  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_3 as $ta){
                            $fvariant_ta2_3 += pow($ta - $fmean_ta2_3, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_3 /= ( $xsample_ta2_3 ? count($ndtta2_3) - 1 : count($ndtta2_3));
                        $stdevta2_3      = number_format(sqrt($fvariant_ta2_3), 2);
                        $totalta2_3      = count($ndtta2_3);
                        $inspectta2_3    = $dt_ta1;
                        $outspectta2_3   = $dt_ta2;
                        $prsoutta2_3     = number_format((($dt_ta2 / $totalta2_3) * (100)), 2);
                    } else {
                        $Minta2_3      = '';
                        $Maxta2_3      = '';
                        $Avgta2_3      = '';
                        $stdevta2_3    = '';
                        $totalta2_3    = '';
                        $inspectta2_3  = '';
                        $outspectta2_3 = '';
                        $prsoutta2_3   = '';
                    }

                    if (is_array($ndtta3_3) && count($ndtta3_3) > 0){
                        $Minta3_3   = min($ndtta3_3);
                        $Maxta3_3   = max($ndtta3_3);
                        $Avgta3_3   = number_format((array_sum($ndtta3_3)) / (count($ndtta3_3)), 2);
                        $Countta3_3 = count($ndtta3_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_3    = array_sum($ndtta3_3) / count($ndtta3_3);
                        $fvariant_ta3_3 = 0.00;
                        $xsample_ta3_3  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_3 as $ta){
                            $fvariant_ta3_3 += pow($ta - $fmean_ta3_3, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_3 /= ( $xsample_ta3_3 ? count($ndtta3_3) - 1 : count($ndtta3_3));
                        $stdevta3_3      = number_format(sqrt($fvariant_ta3_3), 2);
                        $totalta3_3      = count($ndtta3_3);
                        $inspectta3_3    = $dt_ta1;
                        $outspectta3_3   = $dt_ta2;
                        $prsoutta3_3     = number_format((($dt_ta2 / $totalta3_3) * (100)), 2);
                    } else {
                        $Minta3_3      = '';
                        $Maxta3_3      = '';
                        $Avgta3_3      = '';
                        $stdevta3_3    = '';
                        $totalta3_3    = '';
                        $inspectta3_3  = '';
                        $outspectta3_3 = '';
                        $prsoutta3_3   = '';
                    }

                    if (is_array($ndtta1_4) && count($ndtta1_4) > 0){
                        $Minta1_4   = min($ndtta1_4);
                        $Maxta1_4   = max($ndtta1_4);
                        $Avgta1_4   = number_format((array_sum($ndtta1_4)) / (count($ndtta1_4)), 2);
                        $Countta1_4 = count($ndtta1_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_4    = array_sum($ndtta1_4) / count($ndtta1_4);
                        $fvariant_ta1_4 = 0.00;
                        $xsample_ta1_4  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_4 as $ta){
                            $fvariant_ta1_4 += pow($ta - $fmean_ta1_4, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_4 /= ( $xsample_ta1_4 ? count($ndtta1_4) - 1 : count($ndtta1_4));
                        $stdevta1_4      = number_format(sqrt($fvariant_ta1_4), 2);
                        $totalta1_4      = count($ndtta1_4);
                        $inspectta1_4    = $dt_ta1;
                        $outspectta1_4   = $dt_ta2;
                        $prsoutta1_4     = number_format((($dt_ta2 / $totalta1_4) * (100)), 2);
                    } else {
                        $Minta1_4      = '';
                        $Maxta1_4      = '';
                        $Avgta1_4      = '';
                        $stdevta1_4    = '';
                        $totalta1_4    = '';
                        $inspectta1_4  = '';
                        $outspectta1_4 = '';
                        $prsoutta1_4   = '';
                    }

                    if (is_array($ndtta2_4) && count($ndtta2_4) > 0){
                        $Minta2_4   = min($ndtta2_4);
                        $Maxta2_4   = max($ndtta2_4);
                        $Avgta2_4   = number_format((array_sum($ndtta2_4)) / (count($ndtta2_4)), 2);
                        $Countta2_4 = count($ndtta2_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_4    = array_sum($ndtta2_4) / count($ndtta2_4);
                        $fvariant_ta2_4 = 0.00;
                        $xsample_ta2_4  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_4 as $ta){
                            $fvariant_ta2_4 += pow($ta - $fmean_ta2_4, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_4 /= ( $xsample_ta2_4 ? count($ndtta2_4) - 1 : count($ndtta2_4));
                        $stdevta2_4      = number_format(sqrt($fvariant_ta2_4), 2);
                        $totalta2_4      = count($ndtta2_4);
                        $inspectta2_4    = $dt_ta1;
                        $outspectta2_4   = $dt_ta2;
                        $prsoutta2_4     = number_format((($dt_ta2 / $totalta2_4) * (100)), 2);
                    } else {
                        $Minta2_4      = '';
                        $Maxta2_4      = '';
                        $Avgta2_4      = '';
                        $stdevta2_4    = '';
                        $totalta2_4    = '';
                        $inspectta2_4  = '';
                        $outspectta2_4 = '';
                        $prsoutta2_4   = '';
                    }

                    if (is_array($ndtta3_4) && count($ndtta3_4) > 0){
                        $Minta3_4   = min($ndtta3_4);
                        $Maxta3_4   = max($ndtta3_4);
                        $Avgta3_4   = number_format((array_sum($ndtta3_4)) / (count($ndtta3_4)), 2);
                        $Countta3_4 = count($ndtta3_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_4    = array_sum($ndtta3_4) / count($ndtta3_4);
                        $fvariant_ta3_4 = 0.00;
                        $xsample_ta3_4  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_4 as $ta){
                            $fvariant_ta3_4 += pow($ta - $fmean_ta3_4, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_4 /= ( $xsample_ta3_4 ? count($ndtta3_4) - 1 : count($ndtta3_4));
                        $stdevta3_4      = number_format(sqrt($fvariant_ta3_4), 2);
                        $totalta3_4      = count($ndtta3_4);
                        $inspectta3_4    = $dt_ta1;
                        $outspectta3_4   = $dt_ta2;
                        $prsoutta3_4     = number_format((($dt_ta2 / $totalta3_4) * (100)), 2);
                    } else {
                        $Minta3_4      = '';
                        $Maxta3_4      = '';
                        $Avgta3_4      = '';
                        $stdevta3_4    = '';
                        $totalta3_4    = '';
                        $inspectta3_4  = '';
                        $outspectta3_4 = '';
                        $prsoutta3_4   = '';
                    }

                    if (is_array($ndtta1_5) && count($ndtta1_5) > 0){
                        $Minta1_5   = min($ndtta1_5);
                        $Maxta1_5   = max($ndtta1_5);
                        $Avgta1_5   = number_format((array_sum($ndtta1_5)) / (count($ndtta1_5)), 2);
                        $Countta1_5 = count($ndtta1_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_5    = array_sum($ndtta1_5) / count($ndtta1_5);
                        $fvariant_ta1_5 = 0.00;
                        $xsample_ta1_5  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_5 as $ta){
                            $fvariant_ta1_5 += pow($ta - $fmean_ta1_5, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_5 /= ( $xsample_ta1_5 ? count($ndtta1_5) - 1 : count($ndtta1_5));
                        $stdevta1_5      = number_format(sqrt($fvariant_ta1_5), 2);
                        $totalta1_5      = count($ndtta1_5);
                        $inspectta1_5    = $dt_ta1;
                        $outspectta1_5   = $dt_ta2;
                        $prsoutta1_1     = number_format((($dt_ta2 / $totalta1_5) * (100)), 2);
                    } else {
                        $Minta1_5      = '';
                        $Maxta1_5      = '';
                        $Avgta1_5      = '';
                        $stdevta1_5    = '';
                        $totalta1_5    = '';
                        $inspectta1_5  = '';
                        $outspectta1_5 = '';
                        $prsoutta1_5   = '';
                    }

                    if (is_array($ndtta2_5) && count($ndtta2_5) > 0){
                        $Minta2_5   = min($ndtta2_5);
                        $Maxta2_5   = max($ndtta2_5);
                        $Avgta2_5   = number_format((array_sum($ndtta2_5)) / (count($ndtta2_5)), 2);
                        $Countta2_5 = count($ndtta2_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_5    = array_sum($ndtta2_5) / count($ndtta2_5);
                        $fvariant_ta2_5 = 0.00;
                        $xsample_ta2_5  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_5 as $ta){
                            $fvariant_ta2_5 += pow($ta - $fmean_ta2_5, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_5 /= ( $xsample_ta2_5 ? count($ndtta2_5) - 1 : count($ndtta2_5));
                        $stdevta2_5      = number_format(sqrt($fvariant_ta2_5), 2);
                        $totalta2_5      = count($ndtta2_5);
                        $inspectta2_5    = $dt_ta1;
                        $outspectta2_5   = $dt_ta2;
                        $prsoutta2_5     = number_format((($dt_ta2 / $totalta2_5) * (100)), 2);
                    } else {
                        $Minta2_5      = '';
                        $Maxta2_5      = '';
                        $Avgta2_5      = '';
                        $stdevta2_5    = '';
                        $totalta2_5    = '';
                        $inspectta2_5  = '';
                        $outspectta2_5 = '';
                        $prsoutta2_5   = '';
                    }

                    if (is_array($ndtta3_5) && count($ndtta3_5) > 0){
                        $Minta3_5   = min($ndtta3_5);
                        $Maxta3_5   = max($ndtta3_5);
                        $Avgta3_5   = number_format((array_sum($ndtta3_5)) / (count($ndtta3_5)), 2);
                        $Countta3_5 = count($ndtta3_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_5    = array_sum($ndtta3_5) / count($ndtta3_5);
                        $fvariant_ta3_5 = 0.00;
                        $xsample_ta3_5  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_5 as $ta){
                            $fvariant_ta3_5 += pow($ta - $fmean_ta3_5, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_5 /= ( $xsample_ta3_5 ? count($ndtta3_5) - 1 : count($ndtta3_5));
                        $stdevta3_5      = number_format(sqrt($fvariant_ta3_5), 2);
                        $totalta3_5      = count($ndtta3_5);
                        $inspectta3_5    = $dt_ta1;
                        $outspectta3_5   = $dt_ta2;
                        $prsoutta3_5     = number_format((($dt_ta2 / $totalta3_5) * (100)), 2);
                    } else {
                        $Minta3_5      = '';
                        $Maxta3_5      = '';
                        $Avgta3_5      = '';
                        $stdevta3_5    = '';
                        $totalta3_5    = '';
                        $inspectta3_5  = '';
                        $outspectta3_5 = '';
                        $prsoutta3_5   = '';
                    }

                    if (is_array($ndtta1_6) && count($ndtta1_6) > 0){
                        $Minta1_6   = min($ndtta1_6);
                        $Maxta1_6   = max($ndtta1_6);
                        $Avgta1_6   = number_format((array_sum($ndtta1_6)) / (count($ndtta1_6)), 2);
                        $Countta1_6 = count($ndtta1_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_6    = array_sum($ndtta1_6) / count($ndtta1_6);
                        $fvariant_ta1_6 = 0.00;
                        $xsample_ta1_6  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_6 as $ta){
                            $fvariant_ta1_6 += pow($ta - $fmean_ta1_6, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_6 /= ( $xsample_ta1_6 ? count($ndtta1_6) - 1 : count($ndtta1_6));
                        $stdevta1_6      = number_format(sqrt($fvariant_ta1_6), 2);
                        $totalta1_6      = count($ndtta1_6);
                        $inspectta1_6    = $dt_ta1;
                        $outspectta1_6   = $dt_ta2;
                        $prsoutta1_6     = number_format((($dt_ta2 / $totalta1_6) * (100)), 2);
                    } else {
                        $Minta1_6      = '';
                        $Maxta1_6      = '';
                        $Avgta1_6      = '';
                        $stdevta1_6    = '';
                        $totalta1_6    = '';
                        $inspectta1_6  = '';
                        $outspectta1_6 = '';
                        $prsoutta1_6   = '';
                    }

                    if (is_array($ndtta2_6) && count($ndtta2_6) > 0){
                        $Minta2_6   = min($ndtta2_6);
                        $Maxta2_6   = max($ndtta2_6);
                        $Avgta2_6   = number_format((array_sum($ndtta2_6)) / (count($ndtta2_6)), 2);
                        $Countta2_6 = count($ndtta2_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_6    = array_sum($ndtta2_6) / count($ndtta2_6);
                        $fvariant_ta2_6 = 0.00;
                        $xsample_ta2_6  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_6 as $ta){
                            $fvariant_ta2_6 += pow($ta - $fmean_ta2_6, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_6 /= ( $xsample_ta2_6 ? count($ndtta2_6) - 1 : count($ndtta2_6));
                        $stdevta2_6      = number_format(sqrt($fvariant_ta2_6), 2);
                        $totalta2_6      = count($ndtta2_6);
                        $inspectta2_6    = $dt_ta1;
                        $outspectta2_6   = $dt_ta2;
                        $prsoutta2_6     = number_format((($dt_ta2 / $totalta2_6) * (100)), 2);
                    } else {
                        $Minta2_6      = '';
                        $Maxta2_6      = '';
                        $Avgta2_6      = '';
                        $stdevta2_6    = '';
                        $totalta2_6    = '';
                        $inspectta2_6  = '';
                        $outspectta2_6 = '';
                        $prsoutta2_6   = '';
                    }

                    if (is_array($ndtta3_6) && count($ndtta3_6) > 0){
                        $Minta3_6   = min($ndtta3_6);
                        $Maxta3_6   = max($ndtta3_6);
                        $Avgta3_6   = number_format((array_sum($ndtta3_6)) / (count($ndtta3_6)), 2);
                        $Countta3_6 = count($ndtta3_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_6    = array_sum($ndtta3_6) / count($ndtta3_6);
                        $fvariant_ta3_6 = 0.00;
                        $xsample_ta3_6  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_6 as $ta){
                            $fvariant_ta3_6 += pow($ta - $fmean_ta3_6, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_6 /= ( $xsample_ta3_6 ? count($ndtta3_6) - 1 : count($ndtta3_6));
                        $stdevta3_6      = number_format(sqrt($fvariant_ta3_6), 2);
                        $totalta3_6      = count($ndtta3_6);
                        $inspectta3_6    = $dt_ta1;
                        $outspectta3_6   = $dt_ta2;
                        $prsoutta3_6     = number_format((($dt_ta2 / $totalta3_6) * (100)), 2);
                    } else {
                        $Minta3_6      = '';
                        $Maxta3_6      = '';
                        $Avgta3_6      = '';
                        $stdevta3_6    = '';
                        $totalta3_6    = '';
                        $inspectta3_6  = '';
                        $outspectta3_6 = '';
                        $prsoutta3_6   = '';
                    }

                    if (is_array($ndtta1_7) && count($ndtta1_7) > 0){
                        $Minta1_7   = min($ndtta1_7);
                        $Maxta1_7   = max($ndtta1_7);
                        $Avgta1_7   = number_format((array_sum($ndtta1_7)) / (count($ndtta1_7)), 2);
                        $Countta1_7 = count($ndtta1_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_7    = array_sum($ndtta1_7) / count($ndtta1_7);
                        $fvariant_ta1_7 = 0.00;
                        $xsample_ta1_7  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_7 as $ta){
                            $fvariant_ta1_7 += pow($ta - $fmean_ta1_7, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_7 /= ( $xsample_ta1_7 ? count($ndtta1_7) - 1 : count($ndtta1_7));
                        $stdevta1_7      = number_format(sqrt($fvariant_ta1_7), 2);
                        $totalta1_7      = count($ndtta1_7);
                        $inspectta1_7    = $dt_ta1;
                        $outspectta1_7   = $dt_ta2;
                        $prsoutta1_7     = number_format((($dt_ta2 / $totalta1_7) * (100)), 2);
                    } else {
                        $Minta1_7      = '';
                        $Maxta1_7      = '';
                        $Avgta1_7      = '';
                        $stdevta1_7    = '';
                        $totalta1_7    = '';
                        $inspectta1_7  = '';
                        $outspectta1_7 = '';
                        $prsoutta1_7   = '';
                    }

                    if (is_array($ndtta2_7) && count($ndtta2_7) > 0){
                        $Minta2_7   = min($ndtta2_7);
                        $Maxta2_7   = max($ndtta2_7);
                        $Avgta2_7   = number_format((array_sum($ndtta2_7)) / (count($ndtta2_7)), 2);
                        $Countta2_7 = count($ndtta2_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_7    = array_sum($ndtta2_7) / count($ndtta2_7);
                        $fvariant_ta2_7 = 0.00;
                        $xsample_ta2_7  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_7 as $ta){
                            $fvariant_ta2_7 += pow($ta - $fmean_ta2_7, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_7 /= ( $xsample_ta2_7 ? count($ndtta2_7) - 1 : count($ndtta2_7));
                        $stdevta2_7      = number_format(sqrt($fvariant_ta2_7), 2);
                        $totalta2_7      = count($ndtta2_7);
                        $inspectta2_7    = $dt_ta1;
                        $outspectta2_7   = $dt_ta2;
                        $prsoutta2_7     = number_format((($dt_ta2 / $totalta2_7) * (100)), 2);
                    } else {
                        $Minta2_7      = '';
                        $Maxta2_7      = '';
                        $Avgta2_7      = '';
                        $stdevta2_7    = '';
                        $totalta2_7    = '';
                        $inspectta2_7  = '';
                        $outspectta2_7 = '';
                        $prsoutta2_7   = '';
                    }

                    if (is_array($ndtta3_7) && count($ndtta3_7) > 0){
                        $Minta3_7   = min($ndtta3_7);
                        $Maxta3_7   = max($ndtta3_7);
                        $Avgta3_7   = number_format((array_sum($ndtta3_7)) / (count($ndtta3_7)), 2);
                        $Countta3_7 = count($ndtta3_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_7    = array_sum($ndtta3_7) / count($ndtta3_7);
                        $fvariant_ta3_7 = 0.00;
                        $xsample_ta3_7  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_7 as $ta){
                            $fvariant_ta3_7 += pow($ta - $fmean_ta3_7, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_7 /= ( $xsample_ta3_7 ? count($ndtta3_7) - 1 : count($ndtta3_7));
                        $stdevta3_7      = number_format(sqrt($fvariant_ta3_7), 2);
                        $totalta3_7      = count($ndtta3_7);
                        $inspectta3_7    = $dt_ta1;
                        $outspectta3_7   = $dt_ta2;
                        $prsoutta3_7     = number_format((($dt_ta2 / $totalta3_7) * (100)), 2);
                    } else {
                        $Minta3_7      = '';
                        $Maxta3_7      = '';
                        $Avgta3_7      = '';
                        $stdevta3_7    = '';
                        $totalta3_7    = '';
                        $inspectta3_7  = '';
                        $outspectta3_7 = '';
                        $prsoutta3_7   = '';
                    }

                    if (is_array($ndtta1_8) && count($ndtta1_8) > 0){
                        $Minta1_8   = min($ndtta1_8);
                        $Maxta1_8   = max($ndtta1_8);
                        $Avgta1_8   = number_format((array_sum($ndtta1_8)) / (count($ndtta1_8)), 2);
                        $Countta1_8 = count($ndtta1_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta1_8    = array_sum($ndtta1_8) / count($ndtta1_8);
                        $fvariant_ta1_8 = 0.00;
                        $xsample_ta1_8  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta1_8 as $ta){
                            $fvariant_ta1_8 += pow($ta - $fmean_ta1_8, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta1_8 /= ( $xsample_ta1_8 ? count($ndtta1_8) - 1 : count($ndtta1_8));
                        $stdevta1_8      = number_format(sqrt($fvariant_ta1_8), 2);
                        $totalta1_8      = count($ndtta1_8);
                        $inspectta1_8    = $dt_ta1;
                        $outspectta1_8   = $dt_ta2;
                        $prsoutta1_8     = number_format((($dt_ta2 / $totalta1_8) * (100)), 2);
                    } else {
                        $Minta1_8      = '';
                        $Maxta1_8      = '';
                        $Avgta1_8      = '';
                        $stdevta1_8    = '';
                        $totalta1_8    = '';
                        $inspectta1_8  = '';
                        $outspectta1_8 = '';
                        $prsoutta1_8   = '';
                    }

                    if (is_array($ndtta2_8) && count($ndtta2_8) > 0){
                        $Minta2_8   = min($ndtta2_8);
                        $Maxta2_8   = max($ndtta2_8);
                        $Avgta2_8   = number_format((array_sum($ndtta2_8)) / (count($ndtta2_8)), 2);
                        $Countta2_8 = count($ndtta2_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta2_8    = array_sum($ndtta2_8) / count($ndtta2_8);
                        $fvariant_ta2_8 = 0.00;
                        $xsample_ta2_8  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta2_8 as $ta){
                            $fvariant_ta2_8 += pow($ta - $fmean_ta2_8, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta2_8 /= ( $xsample_ta2_8 ? count($ndtta2_8) - 1 : count($ndtta2_8));
                        $stdevta2_8      = number_format(sqrt($fvariant_ta2_8), 2);
                        $totalta2_8      = count($ndtta2_8);
                        $inspectta2_8    = $dt_ta1;
                        $outspectta2_8   = $dt_ta2;
                        $prsoutta2_8     = number_format((($dt_ta2 / $totalta2_8) * (100)), 2);
                    } else {
                        $Minta2_8      = '';
                        $Maxta2_8      = '';
                        $Avgta2_8      = '';
                        $stdevta2_8    = '';
                        $totalta2_8    = '';
                        $inspectta2_8  = '';
                        $outspectta2_8 = '';
                        $prsoutta2_8   = '';
                    }

                    if (is_array($ndtta3_8) && count($ndtta3_8) > 0){
                        $Minta3_8   = min($ndtta3_8);
                        $Maxta3_8   = max($ndtta3_8);
                        $Avgta3_8   = number_format((array_sum($ndtta3_8)) / (count($ndtta3_8)), 2);
                        $Countta3_8 = count($ndtta3_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_ta3_8    = array_sum($ndtta3_8) / count($ndtta3_8);
                        $fvariant_ta3_8 = 0.00;
                        $xsample_ta3_8  = false;
                        $dt_ta1         = 0;
                        $dt_ta2         = 0;
                        foreach ($ndtta3_8 as $ta){
                            $fvariant_ta3_8 += pow($ta - $fmean_ta3_8, 2);
                            if (($ta >= 10.5) && ($ta <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($ta > 0) && ($ta < 10.5)) || ($ta > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_ta3_8 /= ( $xsample_ta3_8 ? count($ndtta3_8) - 1 : count($ndtta3_8));
                        $stdevta3_8      = number_format(sqrt($fvariant_ta3_8), 2);
                        $totalta3_8      = count($ndtta3_8);
                        $inspectta3_8    = $dt_ta1;
                        $outspectta3_8   = $dt_ta2;
                        $prsoutta3_8     = number_format((($dt_ta2 / $totalta3_8) * (100)), 2);
                    } else {
                        $Minta3_8      = '';
                        $Maxta3_8      = '';
                        $Avgta3_8      = '';
                        $stdevta3_8    = '';
                        $totalta3_8    = '';
                        $inspectta3_8  = '';
                        $outspectta3_8 = '';
                        $prsoutta3_8   = '';
                    }

                    $rowfoot_b1  = $rowCount2 + 1;
                    $rowfoot_b2  = $rowfoot_b1 + 1;
                    $rowfoot_b3  = $rowfoot_b2 + 1;
                    $rowfoot_b4  = $rowfoot_b3 + 1;
                    $rowfoot_b5  = $rowfoot_b4 + 1;
                    $rowfoot_b6  = $rowfoot_b5 + 1;
                    $rowfoot_b7  = $rowfoot_b6 + 1;
                    $rowfoot_b8  = $rowfoot_b7 + 1;
                    $rowfoot_b9  = $rowfoot_b8 + 1;
                    $rowfoot_b10 = $rowfoot_b9 + 1;

                    $objPHPExcel2->mergeCells('A' . $rowfoot_b1 . ':Y' . $rowfoot_b1)->setCellValue('A' . $rowfoot_b1, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b2, 'Maximum');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b2, $Maxta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b2, $Maxta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b2, $Maxta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b2, $Maxta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b2, $Maxta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b2, $Maxta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b2, $Maxta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b2, $Maxta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b2, $Maxta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b2, $Maxta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b2, $Maxta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b2, $Maxta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b2, $Maxta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b2, $Maxta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b2, $Maxta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b2, $Maxta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b2, $Maxta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b2, $Maxta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b2, $Maxta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b2, $Maxta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b2, $Maxta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b2, $Maxta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b2, $Maxta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b2, $Maxta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b3, 'Minimum');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b3, $Minta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b3, $Minta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b3, $Minta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b3, $Minta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b3, $Minta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b3, $Minta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b3, $Minta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b3, $Minta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b3, $Minta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b3, $Minta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b3, $Minta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b3, $Minta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b3, $Minta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b3, $Minta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b3, $Minta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b3, $Minta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b3, $Minta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b3, $Minta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b3, $Minta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b3, $Minta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b3, $Minta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b3, $Minta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b3, $Minta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b3, $Minta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b4, 'Average');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b4, $Avgta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b4, $Avgta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b4, $Avgta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b4, $Avgta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b4, $Avgta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b4, $Avgta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b4, $Avgta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b4, $Avgta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b4, $Avgta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b4, $Avgta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b4, $Avgta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b4, $Avgta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b4, $Avgta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b4, $Avgta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b4, $Avgta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b4, $Avgta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b4, $Avgta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b4, $Avgta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b4, $Avgta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b4, $Avgta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b4, $Avgta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b4, $Avgta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b4, $Avgta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b4, $Avgta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b5, 'Stdev');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b5, $stdevta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b5, $stdevta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b5, $stdevta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b5, $stdevta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b5, $stdevta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b5, $stdevta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b5, $stdevta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b5, $stdevta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b5, $stdevta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b5, $stdevta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b5, $stdevta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b5, $stdevta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b5, $stdevta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b5, $stdevta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b5, $stdevta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b5, $stdevta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b5, $stdevta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b5, $stdevta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b5, $stdevta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b5, $stdevta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b5, $stdevta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b5, $stdevta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b5, $stdevta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b5, $stdevta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b6, 'Total Data');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b6, $totalta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b6, $totalta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b6, $totalta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b6, $totalta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b6, $totalta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b6, $totalta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b6, $totalta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b6, $totalta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b6, $totalta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b6, $totalta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b6, $totalta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b6, $totalta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b6, $totalta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b6, $totalta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b6, $totalta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b6, $totalta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b6, $totalta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b6, $totalta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b6, $totalta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b6, $totalta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b6, $totalta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b6, $totalta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b6, $totalta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b6, $totalta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b7, 'Whitin Spect');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b7, $inspectta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b7, $inspectta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b7, $inspectta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b7, $inspectta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b7, $inspectta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b7, $inspectta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b7, $inspectta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b7, $inspectta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b7, $inspectta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b7, $inspectta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b7, $inspectta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b7, $inspectta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b7, $inspectta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b7, $inspectta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b7, $inspectta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b7, $inspectta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b7, $inspectta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b7, $inspectta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b7, $inspectta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b7, $inspectta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b7, $inspectta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b7, $inspectta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b7, $inspectta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b7, $inspectta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b8, 'Outspect Data');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b8, $outspectta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b8, $outspectta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b8, $outspectta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b8, $outspectta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b8, $outspectta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b8, $outspectta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b8, $outspectta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b8, $outspectta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b8, $outspectta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b8, $outspectta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b8, $outspectta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b8, $outspectta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b8, $outspectta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b8, $outspectta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b8, $outspectta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b8, $outspectta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b8, $outspectta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b8, $outspectta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b8, $outspectta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b8, $outspectta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b8, $outspectta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b8, $outspectta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b8, $outspectta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b8, $outspectta3_8);

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b9, 'Percent Outs');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b9, $prsoutta1_1);
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b9, $prsoutta2_1);
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b9, $prsoutta3_1);
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b9, $prsoutta1_2);
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b9, $prsoutta2_2);
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b9, $prsoutta3_2);
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b9, $prsoutta1_3);
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b9, $prsoutta2_3);
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b9, $prsoutta3_3);
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b9, $prsoutta1_4);
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b9, $prsoutta2_4);
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b9, $prsoutta3_4);
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b9, $prsoutta1_5);
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b9, $prsoutta2_5);
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b9, $prsoutta3_5);
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b9, $prsoutta1_6);
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b9, $prsoutta2_6);
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b9, $prsoutta3_6);
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b9, $prsoutta1_7);
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b9, $prsoutta2_7);
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b9, $prsoutta3_7);
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b9, $prsoutta1_8);
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b9, $prsoutta2_8);
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b9, $prsoutta3_8);

                    $objPHPExcel2->mergeCells('A' . $rowfoot_b10 . ':Y' . $rowfoot_b10)->setCellValue('A' . $rowfoot_b10, '');

                    $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowfoot_b1 . ':Y' . $rowfoot_b10);
                } else {
                    $rowCount2 = 9;

                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount2 . ':Y' . $rowCount2);

                    $objPHPExcel2->setCellValue('A' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('B' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('C' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('D' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('E' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('F' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('G' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('H' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('I' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('J' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('K' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('L' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('M' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('N' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('O' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('P' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('Q' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('R' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('S' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('T' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('U' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('V' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('W' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('X' . $rowCount2, '');
                    $objPHPExcel2->setCellValue('Y' . $rowCount2, '');

                    $rowfoot_b1  = $rowCount2 + 1;
                    $rowfoot_b2  = $rowfoot_b1 + 1;
                    $rowfoot_b3  = $rowfoot_b2 + 1;
                    $rowfoot_b4  = $rowfoot_b3 + 1;
                    $rowfoot_b5  = $rowfoot_b4 + 1;
                    $rowfoot_b6  = $rowfoot_b5 + 1;
                    $rowfoot_b7  = $rowfoot_b6 + 1;
                    $rowfoot_b8  = $rowfoot_b7 + 1;
                    $rowfoot_b9  = $rowfoot_b8 + 1;
                    $rowfoot_b10 = $rowfoot_b9 + 1;

                    $objPHPExcel2->mergeCells('A' . $rowfoot_b1 . ':Y' . $rowfoot_b1)->setCellValue('A' . $rowfoot_b1, '');


                    $objPHPExcel2->setCellValue('A' . $rowfoot_b2, 'Maximum');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b2, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b2, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b3, 'Minimum');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b3, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b3, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b4, 'Average');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b4, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b4, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b5, 'Stdev');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b5, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b5, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b6, 'Total Data');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b6, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b6, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b7, 'Whitin Spect');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b7, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b7, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b8, 'Outspect Data');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b8, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b8, '');

                    $objPHPExcel2->setCellValue('A' . $rowfoot_b9, 'Percent Outs');
                    $objPHPExcel2->setCellValue('B' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('C' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('D' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('E' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('F' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('G' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('H' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('I' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('J' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('K' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('L' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('M' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('N' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('O' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('P' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('Q' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('R' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('S' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('T' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('U' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('V' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('W' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('X' . $rowfoot_b9, '');
                    $objPHPExcel2->setCellValue('Y' . $rowfoot_b9, '');

                    $objPHPExcel2->mergeCells('A' . $rowfoot_b10 . ':Y' . $rowfoot_b10)->setCellValue('A' . $rowfoot_b10, '');
                    $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowfoot_b1 . ':Y' . $rowfoot_b10);
                }

                $rowsapp_b1 = $rowfoot_b10 + 1;
                $rowsapp_b2 = $rowsapp_b1 + 1;
                $rowsapp_b3 = $rowsapp_b2 + 1;
                $rowsapp_b4 = $rowsapp_b3 + 1;
                $rowsapp_b5 = $rowsapp_b4 + 1;

                $objPHPExcel2->getStyle('A' . $rowsapp_b1 . ':Y' . $rowsapp_b5)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

                $objPHPExcel2->mergeCells('A' . $rowsapp_b1 . ':I' . $rowsapp_b1)->setCellValue('A' . $rowsapp_b1, 'Reported By');
                $objPHPExcel2->mergeCells('J' . $rowsapp_b1 . ':Q' . $rowsapp_b1)->setCellValue('J' . $rowsapp_b1, 'Checked By');
                $objPHPExcel2->mergeCells('R' . $rowsapp_b1 . ':Y' . $rowsapp_b1)->setCellValue('R' . $rowsapp_b1, 'Confirmed By');

                $objPHPExcel2->mergeCells('A' . $rowsapp_b2 . ':I' . $rowsapp_b2)->setCellValue('A' . $rowsapp_b2, '');
                $objPHPExcel2->mergeCells('J' . $rowsapp_b2 . ':Q' . $rowsapp_b2)->setCellValue('J' . $rowsapp_b2, '');
                $objPHPExcel2->mergeCells('R' . $rowsapp_b2 . ':Y' . $rowsapp_b2)->setCellValue('R' . $rowsapp_b2, '');

                $objPHPExcel2->mergeCells('A' . $rowsapp_b3 . ':I' . $rowsapp_b3)->setCellValue('A' . $rowsapp_b3, 'Name :');
                $objPHPExcel2->mergeCells('J' . $rowsapp_b3 . ':Q' . $rowsapp_b3)->setCellValue('J' . $rowsapp_b3, 'Name :');
                $objPHPExcel2->mergeCells('R' . $rowsapp_b3 . ':Y' . $rowsapp_b3)->setCellValue('R' . $rowsapp_b3, 'Name :');

                $objPHPExcel2->mergeCells('A' . $rowsapp_b4 . ':I' . $rowsapp_b4)->setCellValue('A' . $rowsapp_b4, 'Position :');
                $objPHPExcel2->mergeCells('J' . $rowsapp_b4 . ':Q' . $rowsapp_b4)->setCellValue('J' . $rowsapp_b4, 'Position :');
                $objPHPExcel2->mergeCells('R' . $rowsapp_b4 . ':Y' . $rowsapp_b4)->setCellValue('R' . $rowsapp_b4, 'Position :');

                $objPHPExcel2->mergeCells('A' . $rowsapp_b5 . ':I' . $rowsapp_b5)->setCellValue('A' . $rowsapp_b5, 'Date :');
                $objPHPExcel2->mergeCells('J' . $rowsapp_b5 . ':Q' . $rowsapp_b5)->setCellValue('J' . $rowsapp_b5, 'Date :');
                $objPHPExcel2->mergeCells('R' . $rowsapp_b5 . ':Y' . $rowsapp_b5)->setCellValue('R' . $rowsapp_b5, 'Date :');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowsapp_b1 . ':Y' . $rowsapp_b5);

                $objPHPExcel3 = $obj->createSheet(3);

                $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');
                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);

                foreach (range('A', 'Y') as $columnID){
                    $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel3->mergeCells('A1:Y1');
                $objPHPExcel3->mergeCells('A2:A3');
                $objPHPExcel3->mergeCells('B2:S3')->setCellValue('B2', $frmcop);
                $objPHPExcel3->mergeCells('T2:Y2')->setCellValue('T2', 'Doc : ' . $Doc);
                $objPHPExcel3->mergeCells('T3:Y3')->setCellValue('T3', 'Date : ' . $Tanggal);

                $objPHPExcel3->setCellValue('A4', 'JUDUL');
                $objPHPExcel3->mergeCells('B4:S4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel3->mergeCells('T4:Y4')->setCellValue('T4', 'Page : 3 of 5');

                $objPHPExcel3->mergeCells('A5:Y5')->setCellValue('A5', 'Distribusi : TJH/HYC/UTL/BLR/FILE-QAD');

                $objPHPExcel3->mergeCells('A6:A8')->setCellValue('A6', 'Sampling and Analysis Date)');
                $objPHPExcel3->mergeCells('B6:Y6')->setCellValue('B6', 'Sulfite (Specificaion: 10-60 ppm)');

                $objPHPExcel3->mergeCells('B7:D7')->setCellValue('B7', 'Boiler 1');
                $objPHPExcel3->mergeCells('E7:G7')->setCellValue('E7', 'Boiler 2');
                $objPHPExcel3->mergeCells('H7:J7')->setCellValue('H7', 'Boiler 3');
                $objPHPExcel3->mergeCells('K7:M7')->setCellValue('K7', 'Boiler 4');
                $objPHPExcel3->mergeCells('N7:P7')->setCellValue('N7', 'Boiler 5');
                $objPHPExcel3->mergeCells('Q7:S7')->setCellValue('Q7', 'Boiler 6');
                $objPHPExcel3->mergeCells('T7:V7')->setCellValue('T7', 'Boiler 7');
                $objPHPExcel3->mergeCells('W7:Y7')->setCellValue('W7', 'Boiler 8');

                $objPHPExcel3->setCellValue('B8', 'Shift 1');
                $objPHPExcel3->setCellValue('C8', 'Shift 2');
                $objPHPExcel3->setCellValue('D8', 'Shift 3');
                $objPHPExcel3->setCellValue('E8', 'Shift 1');
                $objPHPExcel3->setCellValue('F8', 'Shift 2');
                $objPHPExcel3->setCellValue('G8', 'Shift 3');
                $objPHPExcel3->setCellValue('H8', 'Shift 1');
                $objPHPExcel3->setCellValue('I8', 'Shift 2');
                $objPHPExcel3->setCellValue('J8', 'Shift 3');
                $objPHPExcel3->setCellValue('K8', 'Shift 1');
                $objPHPExcel3->setCellValue('L8', 'Shift 2');
                $objPHPExcel3->setCellValue('M8', 'Shift 3');
                $objPHPExcel3->setCellValue('N8', 'Shift 1');
                $objPHPExcel3->setCellValue('O8', 'Shift 2');
                $objPHPExcel3->setCellValue('P8', 'Shift 3');
                $objPHPExcel3->setCellValue('Q8', 'Shift 1');
                $objPHPExcel3->setCellValue('R8', 'Shift 2');
                $objPHPExcel3->setCellValue('S8', 'Shift 3');
                $objPHPExcel3->setCellValue('T8', 'Shift 1');
                $objPHPExcel3->setCellValue('U8', 'Shift 2');
                $objPHPExcel3->setCellValue('V8', 'Shift 3');
                $objPHPExcel3->setCellValue('W8', 'Shift 1');
                $objPHPExcel3->setCellValue('X8', 'Shift 2');
                $objPHPExcel3->setCellValue('Y8', 'Shift 3');


                $objPHPExcel3->setSharedStyle($headerStyle, 'A2:Y8');


                if (isset($dtdetail3)){
                    $rowCount3 = 8;
                    foreach ($dtdetail3 as $row3){
                        $rowCount3++;

                        $objPHPExcel3->setSharedStyle($bodyStyle, 'A' . $rowCount3 . ':Y' . $rowCount3);

                        $ndt_slft1_1[] = $row3->sulfit_shift1_1;
                        $ndt_slft2_1[] = $row3->sulfit_shift2_1;
                        $ndt_slft3_1[] = $row3->sulfit_shift3_1;
                        $ndt_slft1_2[] = $row3->sulfit_shift1_2;
                        $ndt_slft2_2[] = $row3->sulfit_shift2_2;
                        $ndt_slft3_2[] = $row3->sulfit_shift3_2;
                        $ndt_slft1_3[] = $row3->sulfit_shift1_3;
                        $ndt_slft2_3[] = $row3->sulfit_shift2_3;
                        $ndt_slft3_3[] = $row3->sulfit_shift3_3;
                        $ndt_slft1_4[] = $row3->sulfit_shift1_4;
                        $ndt_slft2_4[] = $row3->sulfit_shift2_4;
                        $ndt_slft3_4[] = $row3->sulfit_shift3_4;
                        $ndt_slft1_5[] = $row3->sulfit_shift1_5;
                        $ndt_slft2_5[] = $row3->sulfit_shift2_5;
                        $ndt_slft3_5[] = $row3->sulfit_shift3_5;
                        $ndt_slft1_6[] = $row3->sulfit_shift1_6;
                        $ndt_slft2_6[] = $row3->sulfit_shift2_6;
                        $ndt_slft3_6[] = $row3->sulfit_shift3_6;
                        $ndt_slft1_7[] = $row3->sulfit_shift1_7;
                        $ndt_slft2_7[] = $row3->sulfit_shift2_7;
                        $ndt_slft3_7[] = $row3->sulfit_shift3_7;
                        $ndt_slft1_8[] = $row3->sulfit_shift1_8;
                        $ndt_slft2_8[] = $row3->sulfit_shift2_8;
                        $ndt_slft3_8[] = $row3->sulfit_shift3_8;

                        $objPHPExcel3->setCellValue('A' . $rowCount3, $row3->tanggal);
                        $objPHPExcel3->setCellValue('B' . $rowCount3, $row3->sulfit_shift1_1);
                        $objPHPExcel3->setCellValue('C' . $rowCount3, $row3->sulfit_shift2_1);
                        $objPHPExcel3->setCellValue('D' . $rowCount3, $row3->sulfit_shift3_1);
                        $objPHPExcel3->setCellValue('E' . $rowCount3, $row3->sulfit_shift1_2);
                        $objPHPExcel3->setCellValue('F' . $rowCount3, $row3->sulfit_shift2_2);
                        $objPHPExcel3->setCellValue('G' . $rowCount3, $row3->sulfit_shift3_2);
                        $objPHPExcel3->setCellValue('H' . $rowCount3, $row3->sulfit_shift1_3);
                        $objPHPExcel3->setCellValue('I' . $rowCount3, $row3->sulfit_shift2_3);
                        $objPHPExcel3->setCellValue('J' . $rowCount3, $row3->sulfit_shift3_3);
                        $objPHPExcel3->setCellValue('K' . $rowCount3, $row3->sulfit_shift1_4);
                        $objPHPExcel3->setCellValue('L' . $rowCount3, $row3->sulfit_shift2_4);
                        $objPHPExcel3->setCellValue('M' . $rowCount3, $row3->sulfit_shift3_4);
                        $objPHPExcel3->setCellValue('N' . $rowCount3, $row3->sulfit_shift1_5);
                        $objPHPExcel3->setCellValue('O' . $rowCount3, $row3->sulfit_shift2_5);
                        $objPHPExcel3->setCellValue('P' . $rowCount3, $row3->sulfit_shift3_5);
                        $objPHPExcel3->setCellValue('Q' . $rowCount3, $row3->sulfit_shift1_6);
                        $objPHPExcel3->setCellValue('R' . $rowCount3, $row3->sulfit_shift2_6);
                        $objPHPExcel3->setCellValue('S' . $rowCount3, $row3->sulfit_shift3_6);
                        $objPHPExcel3->setCellValue('T' . $rowCount3, $row3->sulfit_shift1_7);
                        $objPHPExcel3->setCellValue('U' . $rowCount3, $row3->sulfit_shift2_7);
                        $objPHPExcel3->setCellValue('V' . $rowCount3, $row3->sulfit_shift3_7);
                        $objPHPExcel3->setCellValue('W' . $rowCount3, $row3->sulfit_shift1_8);
                        $objPHPExcel3->setCellValue('X' . $rowCount3, $row3->sulfit_shift2_8);
                        $objPHPExcel3->setCellValue('Y' . $rowCount3, $row3->sulfit_shift3_8);
                    }

                    $ndtslft1_1 = array_diff($ndt_slft1_1, array('', 0));
                    $ndtslft2_1 = array_diff($ndt_slft2_1, array('', 0));
                    $ndtslft3_1 = array_diff($ndt_slft3_1, array('', 0));
                    $ndtslft1_2 = array_diff($ndt_slft1_2, array('', 0));
                    $ndtslft2_2 = array_diff($ndt_slft2_2, array('', 0));
                    $ndtslft3_2 = array_diff($ndt_slft3_2, array('', 0));
                    $ndtslft1_3 = array_diff($ndt_slft1_3, array('', 0));
                    $ndtslft2_3 = array_diff($ndt_slft2_3, array('', 0));
                    $ndtslft3_3 = array_diff($ndt_slft3_3, array('', 0));
                    $ndtslft1_4 = array_diff($ndt_slft1_4, array('', 0));
                    $ndtslft2_4 = array_diff($ndt_slft2_4, array('', 0));
                    $ndtslft3_4 = array_diff($ndt_slft3_4, array('', 0));
                    $ndtslft1_5 = array_diff($ndt_slft1_5, array('', 0));
                    $ndtslft2_5 = array_diff($ndt_slft2_5, array('', 0));
                    $ndtslft3_5 = array_diff($ndt_slft3_5, array('', 0));
                    $ndtslft1_6 = array_diff($ndt_slft1_6, array('', 0));
                    $ndtslft2_6 = array_diff($ndt_slft2_6, array('', 0));
                    $ndtslft3_6 = array_diff($ndt_slft3_6, array('', 0));
                    $ndtslft1_7 = array_diff($ndt_slft1_7, array('', 0));
                    $ndtslft2_7 = array_diff($ndt_slft2_7, array('', 0));
                    $ndtslft3_7 = array_diff($ndt_slft3_7, array('', 0));
                    $ndtslft1_8 = array_diff($ndt_slft1_8, array('', 0));
                    $ndtslft2_8 = array_diff($ndt_slft2_8, array('', 0));
                    $ndtslft3_8 = array_diff($ndt_slft3_8, array('', 0));

                    if (is_array($ndtslft1_1) && count($ndtslft1_1) > 0){
                        $Minslft1_1   = min($ndtslft1_1);
                        $Maxslft1_1   = max($ndtslft1_1);
                        $Avgslft1_1   = number_format((array_sum($ndtslft1_1)) / (count($ndtslft1_1)), 2);
                        $Countslft1_1 = count($ndtslft1_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_1    = array_sum($ndtslft1_1) / count($ndtslft1_1);
                        $fvariant_slft1_1 = 0.00;
                        $xsample_ta1_1    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_1 as $slft){
                            $fvariant_slft1_1 += pow($slft - $fmean_slft1_1, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_1 /= ( $xsample_ta1_1 ? count($ndtslft1_1) - 1 : count($ndtslft1_1));
                        $stdevslft1_1      = number_format(sqrt($fvariant_slft1_1), 2);
                        $toslftlslft1_1    = count($ndtslft1_1);
                        $inspectslft1_1    = $dt_ta1;
                        $outspectslft1_1   = $dt_ta2;
                        $prsoutslft1_1     = number_format((($dt_ta2 / $toslftlslft1_1) * (100)), 2);
                    } else {

                        $Minslft1_1      = '';
                        $Maxslft1_1      = '';
                        $Avgslft1_1      = '';
                        $stdevslft1_1    = '';
                        $toslftlslft1_1  = '';
                        $inspectslft1_1  = '';
                        $outspectslft1_1 = '';
                        $prsoutslft1_1   = '';
                    }

                    if (is_array($ndtslft2_1) && count($ndtslft2_1) > 0){
                        $Minslft2_1   = min($ndtslft2_1);
                        $Maxslft2_1   = max($ndtslft2_1);
                        $Avgslft2_1   = number_format((array_sum($ndtslft2_1)) / (count($ndtslft2_1)), 2);
                        $Countslft2_1 = count($ndtslft2_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_1    = array_sum($ndtslft2_1) / count($ndtslft2_1);
                        $fvariant_slft2_1 = 0.00;
                        $xsample_ta2_1    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_1 as $slft){
                            $fvariant_slft2_1 += pow($slft - $fmean_slft2_1, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_1 /= ( $xsample_ta2_1 ? count($ndtslft2_1) - 1 : count($ndtslft2_1));
                        $stdevslft2_1      = number_format(sqrt($fvariant_slft2_1), 2);
                        $toslftlslft2_1    = count($ndtslft2_1);
                        $inspectslft2_1    = $dt_ta1;
                        $outspectslft2_1   = $dt_ta2;
                        $prsoutslft2_1     = number_format((($dt_ta2 / $toslftlslft2_1) * (100)), 2);
                    } else {
                        $Minslft2_1      = '';
                        $Maxslft2_1      = '';
                        $Avgslft2_1      = '';
                        $stdevslft2_1    = '';
                        $toslftlslft2_1  = '';
                        $inspectslft2_1  = '';
                        $outspectslft2_1 = '';
                        $prsoutslft2_1   = '';
                    }

                    if (is_array($ndtslft3_1) && count($ndtslft3_1) > 0){
                        $Minslft3_1   = min($ndtslft3_1);
                        $Maxslft3_1   = max($ndtslft3_1);
                        $Avgslft3_1   = number_format((array_sum($ndtslft3_1)) / (count($ndtslft3_1)), 2);
                        $Countslft3_1 = count($ndtslft3_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_1    = array_sum($ndtslft3_1) / count($ndtslft3_1);
                        $fvariant_slft3_1 = 0.00;
                        $xsample_ta3_1    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_1 as $slft){
                            $fvariant_slft3_1 += pow($slft - $fmean_slft3_1, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_1 /= ( $xsample_ta3_1 ? count($ndtslft3_1) - 1 : count($ndtslft3_1));
                        $stdevslft3_1      = number_format(sqrt($fvariant_slft3_1), 2);
                        $toslftlslft3_1    = count($ndtslft3_1);
                        $inspectslft3_1    = $dt_ta1;
                        $outspectslft3_1   = $dt_ta2;
                        $prsoutslft3_1     = number_format((($dt_ta2 / $toslftlslft3_1) * (100)), 2);
                    } else {
                        $Minslft3_1      = '';
                        $Maxslft3_1      = '';
                        $Avgslft3_1      = '';
                        $stdevslft3_1    = '';
                        $toslftlslft3_1  = '';
                        $inspectslft3_1  = '';
                        $outspectslft3_1 = '';
                        $prsoutslft3_1   = '';
                    }

                    if (is_array($ndtslft1_2) && count($ndtslft1_2) > 0){
                        $Minslft1_2   = min($ndtslft1_2);
                        $Maxslft1_2   = max($ndtslft1_2);
                        $Avgslft1_2   = number_format((array_sum($ndtslft1_2)) / (count($ndtslft1_2)), 2);
                        $Countslft1_2 = count($ndtslft1_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_2    = array_sum($ndtslft1_2) / count($ndtslft1_2);
                        $fvariant_slft1_2 = 0.00;
                        $xsample_ta1_2    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_2 as $slft){
                            $fvariant_slft1_2 += pow($slft - $fmean_slft1_2, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_2 /= ( $xsample_ta1_2 ? count($ndtslft1_2) - 1 : count($ndtslft1_2));
                        $stdevslft1_2      = number_format(sqrt($fvariant_slft1_2), 2);
                        $toslftlslft1_2    = count($ndtslft1_2);
                        $inspectslft1_2    = $dt_ta1;
                        $outspectslft1_2   = $dt_ta2;
                        $prsoutslft1_2     = number_format((($dt_ta2 / $toslftlslft1_2) * (100)), 2);
                    } else {
                        $Minslft1_2      = '';
                        $Maxslft1_2      = '';
                        $Avgslft1_2      = '';
                        $stdevslft1_2    = '';
                        $toslftlslft1_2  = '';
                        $inspectslft1_2  = '';
                        $outspectslft1_2 = '';
                        $prsoutslft1_2   = '';
                    }

                    if (is_array($ndtslft2_2) && count($ndtslft2_2) > 0){
                        $Minslft2_2   = min($ndtslft2_2);
                        $Maxslft2_2   = max($ndtslft2_2);
                        $Avgslft2_2   = number_format((array_sum($ndtslft2_2)) / (count($ndtslft2_2)), 2);
                        $Countslft2_2 = count($ndtslft2_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_2    = array_sum($ndtslft2_2) / count($ndtslft2_2);
                        $fvariant_slft2_2 = 0.00;
                        $xsample_ta2_2    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_2 as $slft){
                            $fvariant_slft2_2 += pow($slft - $fmean_slft2_2, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_2 /= ( $xsample_ta2_2 ? count($ndtslft2_2) - 1 : count($ndtslft2_2));
                        $stdevslft2_2      = number_format(sqrt($fvariant_slft2_2), 2);
                        $toslftlslft2_2    = count($ndtslft2_2);
                        $inspectslft2_2    = $dt_ta1;
                        $outspectslft2_2   = $dt_ta2;
                        $prsoutslft2_2     = number_format((($dt_ta2 / $toslftlslft2_2) * (100)), 2);
                    } else {
                        $Minslft2_2      = '';
                        $Maxslft2_2      = '';
                        $Avgslft2_2      = '';
                        $stdevslft2_2    = '';
                        $toslftlslft2_2  = '';
                        $inspectslft2_2  = '';
                        $outspectslft2_2 = '';
                        $prsoutslft2_2   = '';
                    }

                    if (is_array($ndtslft3_2) && count($ndtslft3_2) > 0){
                        $Minslft3_2   = min($ndtslft3_2);
                        $Maxslft3_2   = max($ndtslft3_2);
                        $Avgslft3_2   = number_format((array_sum($ndtslft3_2)) / (count($ndtslft3_2)), 2);
                        $Countslft3_2 = count($ndtslft3_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_2    = array_sum($ndtslft3_2) / count($ndtslft3_2);
                        $fvariant_slft3_2 = 0.00;
                        $xsample_ta3_2    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_2 as $slft){
                            $fvariant_slft3_2 += pow($slft - $fmean_slft3_2, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_2 /= ( $xsample_ta3_2 ? count($ndtslft3_2) - 1 : count($ndtslft3_2));
                        $stdevslft3_2      = number_format(sqrt($fvariant_slft3_2), 2);
                        $toslftlslft3_2    = count($ndtslft3_2);
                        $inspectslft3_2    = $dt_ta1;
                        $outspectslft3_2   = $dt_ta2;
                        $prsoutslft3_2     = number_format((($dt_ta2 / $toslftlslft3_2) * (100)), 2);
                    } else {
                        $Minslft3_2      = '';
                        $Maxslft3_2      = '';
                        $Avgslft3_2      = '';
                        $stdevslft3_2    = '';
                        $toslftlslft3_2  = '';
                        $inspectslft3_2  = '';
                        $outspectslft3_2 = '';
                        $prsoutslft3_2   = '';
                    }

                    if (is_array($ndtslft1_3) && count($ndtslft1_3) > 0){
                        $Minslft1_3   = min($ndtslft1_3);
                        $Maxslft1_3   = max($ndtslft1_3);
                        $Avgslft1_3   = number_format((array_sum($ndtslft1_3)) / (count($ndtslft1_3)), 2);
                        $Countslft1_3 = count($ndtslft1_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_3    = array_sum($ndtslft1_3) / count($ndtslft1_3);
                        $fvariant_slft1_3 = 0.00;
                        $xsample_ta1_3    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_3 as $slft){
                            $fvariant_slft1_3 += pow($slft - $fmean_slft1_3, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_3 /= ( $xsample_ta1_3 ? count($ndtslft1_3) - 1 : count($ndtslft1_3));
                        $stdevslft1_3      = number_format(sqrt($fvariant_slft1_3), 2);
                        $toslftlslft1_3    = count($ndtslft1_3);
                        $inspectslft1_3    = $dt_ta1;
                        $outspectslft1_3   = $dt_ta2;
                        $prsoutslft1_3     = number_format((($dt_ta2 / $toslftlslft1_3) * (100)), 2);
                    } else {
                        $Minslft1_3      = '';
                        $Maxslft1_3      = '';
                        $Avgslft1_3      = '';
                        $stdevslft1_3    = '';
                        $toslftlslft1_3  = '';
                        $inspectslft1_3  = '';
                        $outspectslft1_3 = '';
                        $prsoutslft1_3   = '';
                    }

                    if (is_array($ndtslft2_3) && count($ndtslft2_3) > 0){
                        $Minslft2_3   = min($ndtslft2_3);
                        $Maxslft2_3   = max($ndtslft2_3);
                        $Avgslft2_3   = number_format((array_sum($ndtslft2_3)) / (count($ndtslft2_3)), 2);
                        $Countslft2_3 = count($ndtslft2_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_3    = array_sum($ndtslft2_3) / count($ndtslft2_3);
                        $fvariant_slft2_3 = 0.00;
                        $xsample_ta2_3    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_3 as $slft){
                            $fvariant_slft2_3 += pow($slft - $fmean_slft2_3, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_3 /= ( $xsample_ta2_3 ? count($ndtslft2_3) - 1 : count($ndtslft2_3));
                        $stdevslft2_3      = number_format(sqrt($fvariant_slft2_3), 2);
                        $toslftlslft2_3    = count($ndtslft2_3);
                        $inspectslft2_3    = $dt_ta1;
                        $outspectslft2_3   = $dt_ta2;
                        $prsoutslft2_3     = number_format((($dt_ta2 / $toslftlslft2_3) * (100)), 2);
                    } else {
                        $Minslft2_3      = '';
                        $Maxslft2_3      = '';
                        $Avgslft2_3      = '';
                        $stdevslft2_3    = '';
                        $toslftlslft2_3  = '';
                        $inspectslft2_3  = '';
                        $outspectslft2_3 = '';
                        $prsoutslft2_3   = '';
                    }

                    if (is_array($ndtslft3_3) && count($ndtslft3_3) > 0){
                        $Minslft3_3   = min($ndtslft3_3);
                        $Maxslft3_3   = max($ndtslft3_3);
                        $Avgslft3_3   = number_format((array_sum($ndtslft3_3)) / (count($ndtslft3_3)), 2);
                        $Countslft3_3 = count($ndtslft3_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_3    = array_sum($ndtslft3_3) / count($ndtslft3_3);
                        $fvariant_slft3_3 = 0.00;
                        $xsample_ta3_3    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_3 as $slft){
                            $fvariant_slft3_3 += pow($slft - $fmean_slft3_3, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_3 /= ( $xsample_ta3_3 ? count($ndtslft3_3) - 1 : count($ndtslft3_3));
                        $stdevslft3_3      = number_format(sqrt($fvariant_slft3_3), 2);
                        $toslftlslft3_3    = count($ndtslft3_3);
                        $inspectslft3_3    = $dt_ta1;
                        $outspectslft3_3   = $dt_ta2;
                        $prsoutslft3_3     = number_format((($dt_ta2 / $toslftlslft3_3) * (100)), 2);
                    } else {
                        $Minslft3_3      = '';
                        $Maxslft3_3      = '';
                        $Avgslft3_3      = '';
                        $stdevslft3_3    = '';
                        $toslftlslft3_3  = '';
                        $inspectslft3_3  = '';
                        $outspectslft3_3 = '';
                        $prsoutslft3_3   = '';
                    }

                    if (is_array($ndtslft1_4) && count($ndtslft1_4) > 0){
                        $Minslft1_4   = min($ndtslft1_4);
                        $Maxslft1_4   = max($ndtslft1_4);
                        $Avgslft1_4   = number_format((array_sum($ndtslft1_4)) / (count($ndtslft1_4)), 2);
                        $Countslft1_4 = count($ndtslft1_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_4    = array_sum($ndtslft1_4) / count($ndtslft1_4);
                        $fvariant_slft1_4 = 0.00;
                        $xsample_ta1_4    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_4 as $slft){
                            $fvariant_slft1_4 += pow($slft - $fmean_slft1_4, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_4 /= ( $xsample_ta1_4 ? count($ndtslft1_4) - 1 : count($ndtslft1_4));
                        $stdevslft1_4      = number_format(sqrt($fvariant_slft1_4), 2);
                        $toslftlslft1_4    = count($ndtslft1_4);
                        $inspectslft1_4    = $dt_ta1;
                        $outspectslft1_4   = $dt_ta2;
                        $prsoutslft1_4     = number_format((($dt_ta2 / $toslftlslft1_4) * (100)), 2);
                    } else {
                        $Minslft1_4      = '';
                        $Maxslft1_4      = '';
                        $Avgslft1_4      = '';
                        $stdevslft1_4    = '';
                        $toslftlslft1_4  = '';
                        $inspectslft1_4  = '';
                        $outspectslft1_4 = '';
                        $prsoutslft1_4   = '';
                    }

                    if (is_array($ndtslft2_4) && count($ndtslft2_4) > 0){
                        $Minslft2_4   = min($ndtslft2_4);
                        $Maxslft2_4   = max($ndtslft2_4);
                        $Avgslft2_4   = number_format((array_sum($ndtslft2_4)) / (count($ndtslft2_4)), 2);
                        $Countslft2_4 = count($ndtslft2_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_4    = array_sum($ndtslft2_4) / count($ndtslft2_4);
                        $fvariant_slft2_4 = 0.00;
                        $xsample_ta2_4    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_4 as $slft){
                            $fvariant_slft2_4 += pow($slft - $fmean_slft2_4, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_4 /= ( $xsample_ta2_4 ? count($ndtslft2_4) - 1 : count($ndtslft2_4));
                        $stdevslft2_4      = number_format(sqrt($fvariant_slft2_4), 2);
                        $toslftlslft2_4    = count($ndtslft2_4);
                        $inspectslft2_4    = $dt_ta1;
                        $outspectslft2_4   = $dt_ta2;
                        $prsoutslft2_4     = number_format((($dt_ta2 / $toslftlslft2_4) * (100)), 2);
                    } else {
                        $Minslft2_4      = '';
                        $Maxslft2_4      = '';
                        $Avgslft2_4      = '';
                        $stdevslft2_4    = '';
                        $toslftlslft2_4  = '';
                        $inspectslft2_4  = '';
                        $outspectslft2_4 = '';
                        $prsoutslft2_4   = '';
                    }

                    if (is_array($ndtslft3_4) && count($ndtslft3_4) > 0){
                        $Minslft3_4   = min($ndtslft3_4);
                        $Maxslft3_4   = max($ndtslft3_4);
                        $Avgslft3_4   = number_format((array_sum($ndtslft3_4)) / (count($ndtslft3_4)), 2);
                        $Countslft3_4 = count($ndtslft3_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_4    = array_sum($ndtslft3_4) / count($ndtslft3_4);
                        $fvariant_slft3_4 = 0.00;
                        $xsample_ta3_4    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_4 as $slft){
                            $fvariant_slft3_4 += pow($slft - $fmean_slft3_4, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_4 /= ( $xsample_ta3_4 ? count($ndtslft3_4) - 1 : count($ndtslft3_4));
                        $stdevslft3_4      = number_format(sqrt($fvariant_slft3_4), 2);
                        $toslftlslft3_4    = count($ndtslft3_4);
                        $inspectslft3_4    = $dt_ta1;
                        $outspectslft3_4   = $dt_ta2;
                        $prsoutslft3_4     = number_format((($dt_ta2 / $toslftlslft3_4) * (100)), 2);
                    } else {
                        $Minslft3_4      = '';
                        $Maxslft3_4      = '';
                        $Avgslft3_4      = '';
                        $stdevslft3_4    = '';
                        $toslftlslft3_4  = '';
                        $inspectslft3_4  = '';
                        $outspectslft3_4 = '';
                        $prsoutslft3_4   = '';
                    }

                    if (is_array($ndtslft1_5) && count($ndtslft1_5) > 0){
                        $Minslft1_5   = min($ndtslft1_5);
                        $Maxslft1_5   = max($ndtslft1_5);
                        $Avgslft1_5   = number_format((array_sum($ndtslft1_5)) / (count($ndtslft1_5)), 2);
                        $Countslft1_5 = count($ndtslft1_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_5    = array_sum($ndtslft1_5) / count($ndtslft1_5);
                        $fvariant_slft1_5 = 0.00;
                        $xsample_ta1_5    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_5 as $slft){
                            $fvariant_slft1_5 += pow($slft - $fmean_slft1_5, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_5 /= ( $xsample_ta1_5 ? count($ndtslft1_5) - 1 : count($ndtslft1_5));
                        $stdevslft1_5      = number_format(sqrt($fvariant_slft1_5), 2);
                        $toslftlslft1_5    = count($ndtslft1_5);
                        $inspectslft1_5    = $dt_ta1;
                        $outspectslft1_5   = $dt_ta2;
                        $prsoutslft1_1     = number_format((($dt_ta2 / $toslftlslft1_5) * (100)), 2);
                    } else {
                        $Minslft1_5      = '';
                        $Maxslft1_5      = '';
                        $Avgslft1_5      = '';
                        $stdevslft1_5    = '';
                        $toslftlslft1_5  = '';
                        $inspectslft1_5  = '';
                        $outspectslft1_5 = '';
                        $prsoutslft1_5   = '';
                    }

                    if (is_array($ndtslft2_5) && count($ndtslft2_5) > 0){
                        $Minslft2_5   = min($ndtslft2_5);
                        $Maxslft2_5   = max($ndtslft2_5);
                        $Avgslft2_5   = number_format((array_sum($ndtslft2_5)) / (count($ndtslft2_5)), 2);
                        $Countslft2_5 = count($ndtslft2_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_5    = array_sum($ndtslft2_5) / count($ndtslft2_5);
                        $fvariant_slft2_5 = 0.00;
                        $xsample_ta2_5    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_5 as $slft){
                            $fvariant_slft2_5 += pow($slft - $fmean_slft2_5, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_5 /= ( $xsample_ta2_5 ? count($ndtslft2_5) - 1 : count($ndtslft2_5));
                        $stdevslft2_5      = number_format(sqrt($fvariant_slft2_5), 2);
                        $toslftlslft2_5    = count($ndtslft2_5);
                        $inspectslft2_5    = $dt_ta1;
                        $outspectslft2_5   = $dt_ta2;
                        $prsoutslft2_5     = number_format((($dt_ta2 / $toslftlslft2_5) * (100)), 2);
                    } else {
                        $Minslft2_5      = '';
                        $Maxslft2_5      = '';
                        $Avgslft2_5      = '';
                        $stdevslft2_5    = '';
                        $toslftlslft2_5  = '';
                        $inspectslft2_5  = '';
                        $outspectslft2_5 = '';
                        $prsoutslft2_5   = '';
                    }

                    if (is_array($ndtslft3_5) && count($ndtslft3_5) > 0){
                        $Minslft3_5   = min($ndtslft3_5);
                        $Maxslft3_5   = max($ndtslft3_5);
                        $Avgslft3_5   = number_format((array_sum($ndtslft3_5)) / (count($ndtslft3_5)), 2);
                        $Countslft3_5 = count($ndtslft3_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_5    = array_sum($ndtslft3_5) / count($ndtslft3_5);
                        $fvariant_slft3_5 = 0.00;
                        $xsample_ta3_5    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_5 as $slft){
                            $fvariant_slft3_5 += pow($slft - $fmean_slft3_5, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_5 /= ( $xsample_ta3_5 ? count($ndtslft3_5) - 1 : count($ndtslft3_5));
                        $stdevslft3_5      = number_format(sqrt($fvariant_slft3_5), 2);
                        $toslftlslft3_5    = count($ndtslft3_5);
                        $inspectslft3_5    = $dt_ta1;
                        $outspectslft3_5   = $dt_ta2;
                        $prsoutslft3_5     = number_format((($dt_ta2 / $toslftlslft3_5) * (100)), 2);
                    } else {
                        $Minslft3_5      = '';
                        $Maxslft3_5      = '';
                        $Avgslft3_5      = '';
                        $stdevslft3_5    = '';
                        $toslftlslft3_5  = '';
                        $inspectslft3_5  = '';
                        $outspectslft3_5 = '';
                        $prsoutslft3_5   = '';
                    }

                    if (is_array($ndtslft1_6) && count($ndtslft1_6) > 0){
                        $Minslft1_6   = min($ndtslft1_6);
                        $Maxslft1_6   = max($ndtslft1_6);
                        $Avgslft1_6   = number_format((array_sum($ndtslft1_6)) / (count($ndtslft1_6)), 2);
                        $Countslft1_6 = count($ndtslft1_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_6    = array_sum($ndtslft1_6) / count($ndtslft1_6);
                        $fvariant_slft1_6 = 0.00;
                        $xsample_ta1_6    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_6 as $slft){
                            $fvariant_slft1_6 += pow($slft - $fmean_slft1_6, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_6 /= ( $xsample_ta1_6 ? count($ndtslft1_6) - 1 : count($ndtslft1_6));
                        $stdevslft1_6      = number_format(sqrt($fvariant_slft1_6), 2);
                        $toslftlslft1_6    = count($ndtslft1_6);
                        $inspectslft1_6    = $dt_ta1;
                        $outspectslft1_6   = $dt_ta2;
                        $prsoutslft1_6     = number_format((($dt_ta2 / $toslftlslft1_6) * (100)), 2);
                    } else {
                        $Minslft1_6      = '';
                        $Maxslft1_6      = '';
                        $Avgslft1_6      = '';
                        $stdevslft1_6    = '';
                        $toslftlslft1_6  = '';
                        $inspectslft1_6  = '';
                        $outspectslft1_6 = '';
                        $prsoutslft1_6   = '';
                    }

                    if (is_array($ndtslft2_6) && count($ndtslft2_6) > 0){
                        $Minslft2_6   = min($ndtslft2_6);
                        $Maxslft2_6   = max($ndtslft2_6);
                        $Avgslft2_6   = number_format((array_sum($ndtslft2_6)) / (count($ndtslft2_6)), 2);
                        $Countslft2_6 = count($ndtslft2_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_6    = array_sum($ndtslft2_6) / count($ndtslft2_6);
                        $fvariant_slft2_6 = 0.00;
                        $xsample_ta2_6    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_6 as $slft){
                            $fvariant_slft2_6 += pow($slft - $fmean_slft2_6, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_6 /= ( $xsample_ta2_6 ? count($ndtslft2_6) - 1 : count($ndtslft2_6));
                        $stdevslft2_6      = number_format(sqrt($fvariant_slft2_6), 2);
                        $toslftlslft2_6    = count($ndtslft2_6);
                        $inspectslft2_6    = $dt_ta1;
                        $outspectslft2_6   = $dt_ta2;
                        $prsoutslft2_6     = number_format((($dt_ta2 / $toslftlslft2_6) * (100)), 2);
                    } else {
                        $Minslft2_6      = '';
                        $Maxslft2_6      = '';
                        $Avgslft2_6      = '';
                        $stdevslft2_6    = '';
                        $toslftlslft2_6  = '';
                        $inspectslft2_6  = '';
                        $outspectslft2_6 = '';
                        $prsoutslft2_6   = '';
                    }

                    if (is_array($ndtslft3_6) && count($ndtslft3_6) > 0){
                        $Minslft3_6   = min($ndtslft3_6);
                        $Maxslft3_6   = max($ndtslft3_6);
                        $Avgslft3_6   = number_format((array_sum($ndtslft3_6)) / (count($ndtslft3_6)), 2);
                        $Countslft3_6 = count($ndtslft3_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_6    = array_sum($ndtslft3_6) / count($ndtslft3_6);
                        $fvariant_slft3_6 = 0.00;
                        $xsample_ta3_6    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_6 as $slft){
                            $fvariant_slft3_6 += pow($slft - $fmean_slft3_6, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_6 /= ( $xsample_ta3_6 ? count($ndtslft3_6) - 1 : count($ndtslft3_6));
                        $stdevslft3_6      = number_format(sqrt($fvariant_slft3_6), 2);
                        $toslftlslft3_6    = count($ndtslft3_6);
                        $inspectslft3_6    = $dt_ta1;
                        $outspectslft3_6   = $dt_ta2;
                        $prsoutslft3_6     = number_format((($dt_ta2 / $toslftlslft3_6) * (100)), 2);
                    } else {
                        $Minslft3_6      = '';
                        $Maxslft3_6      = '';
                        $Avgslft3_6      = '';
                        $stdevslft3_6    = '';
                        $toslftlslft3_6  = '';
                        $inspectslft3_6  = '';
                        $outspectslft3_6 = '';
                        $prsoutslft3_6   = '';
                    }

                    if (is_array($ndtslft1_7) && count($ndtslft1_7) > 0){
                        $Minslft1_7   = min($ndtslft1_7);
                        $Maxslft1_7   = max($ndtslft1_7);
                        $Avgslft1_7   = number_format((array_sum($ndtslft1_7)) / (count($ndtslft1_7)), 2);
                        $Countslft1_7 = count($ndtslft1_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_7    = array_sum($ndtslft1_7) / count($ndtslft1_7);
                        $fvariant_slft1_7 = 0.00;
                        $xsample_ta1_7    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_7 as $slft){
                            $fvariant_slft1_7 += pow($slft - $fmean_slft1_7, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_7 /= ( $xsample_ta1_7 ? count($ndtslft1_7) - 1 : count($ndtslft1_7));
                        $stdevslft1_7      = number_format(sqrt($fvariant_slft1_7), 2);
                        $toslftlslft1_7    = count($ndtslft1_7);
                        $inspectslft1_7    = $dt_ta1;
                        $outspectslft1_7   = $dt_ta2;
                        $prsoutslft1_7     = number_format((($dt_ta2 / $toslftlslft1_7) * (100)), 2);
                    } else {
                        $Minslft1_7      = '';
                        $Maxslft1_7      = '';
                        $Avgslft1_7      = '';
                        $stdevslft1_7    = '';
                        $toslftlslft1_7  = '';
                        $inspectslft1_7  = '';
                        $outspectslft1_7 = '';
                        $prsoutslft1_7   = '';
                    }

                    if (is_array($ndtslft2_7) && count($ndtslft2_7) > 0){
                        $Minslft2_7   = min($ndtslft2_7);
                        $Maxslft2_7   = max($ndtslft2_7);
                        $Avgslft2_7   = number_format((array_sum($ndtslft2_7)) / (count($ndtslft2_7)), 2);
                        $Countslft2_7 = count($ndtslft2_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_7    = array_sum($ndtslft2_7) / count($ndtslft2_7);
                        $fvariant_slft2_7 = 0.00;
                        $xsample_ta2_7    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_7 as $slft){
                            $fvariant_slft2_7 += pow($slft - $fmean_slft2_7, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_7 /= ( $xsample_ta2_7 ? count($ndtslft2_7) - 1 : count($ndtslft2_7));
                        $stdevslft2_7      = number_format(sqrt($fvariant_slft2_7), 2);
                        $toslftlslft2_7    = count($ndtslft2_7);
                        $inspectslft2_7    = $dt_ta1;
                        $outspectslft2_7   = $dt_ta2;
                        $prsoutslft2_7     = number_format((($dt_ta2 / $toslftlslft2_7) * (100)), 2);
                    } else {
                        $Minslft2_7      = '';
                        $Maxslft2_7      = '';
                        $Avgslft2_7      = '';
                        $stdevslft2_7    = '';
                        $toslftlslft2_7  = '';
                        $inspectslft2_7  = '';
                        $outspectslft2_7 = '';
                        $prsoutslft2_7   = '';
                    }

                    if (is_array($ndtslft3_7) && count($ndtslft3_7) > 0){
                        $Minslft3_7   = min($ndtslft3_7);
                        $Maxslft3_7   = max($ndtslft3_7);
                        $Avgslft3_7   = number_format((array_sum($ndtslft3_7)) / (count($ndtslft3_7)), 2);
                        $Countslft3_7 = count($ndtslft3_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_7    = array_sum($ndtslft3_7) / count($ndtslft3_7);
                        $fvariant_slft3_7 = 0.00;
                        $xsample_ta3_7    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_7 as $slft){
                            $fvariant_slft3_7 += pow($slft - $fmean_slft3_7, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_7 /= ( $xsample_ta3_7 ? count($ndtslft3_7) - 1 : count($ndtslft3_7));
                        $stdevslft3_7      = number_format(sqrt($fvariant_slft3_7), 2);
                        $toslftlslft3_7    = count($ndtslft3_7);
                        $inspectslft3_7    = $dt_ta1;
                        $outspectslft3_7   = $dt_ta2;
                        $prsoutslft3_7     = number_format((($dt_ta2 / $toslftlslft3_7) * (100)), 2);
                    } else {
                        $Minslft3_7      = '';
                        $Maxslft3_7      = '';
                        $Avgslft3_7      = '';
                        $stdevslft3_7    = '';
                        $toslftlslft3_7  = '';
                        $inspectslft3_7  = '';
                        $outspectslft3_7 = '';
                        $prsoutslft3_7   = '';
                    }

                    if (is_array($ndtslft1_8) && count($ndtslft1_8) > 0){
                        $Minslft1_8   = min($ndtslft1_8);
                        $Maxslft1_8   = max($ndtslft1_8);
                        $Avgslft1_8   = number_format((array_sum($ndtslft1_8)) / (count($ndtslft1_8)), 2);
                        $Countslft1_8 = count($ndtslft1_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft1_8    = array_sum($ndtslft1_8) / count($ndtslft1_8);
                        $fvariant_slft1_8 = 0.00;
                        $xsample_ta1_8    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft1_8 as $slft){
                            $fvariant_slft1_8 += pow($slft - $fmean_slft1_8, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft1_8 /= ( $xsample_ta1_8 ? count($ndtslft1_8) - 1 : count($ndtslft1_8));
                        $stdevslft1_8      = number_format(sqrt($fvariant_slft1_8), 2);
                        $toslftlslft1_8    = count($ndtslft1_8);
                        $inspectslft1_8    = $dt_ta1;
                        $outspectslft1_8   = $dt_ta2;
                        $prsoutslft1_8     = number_format((($dt_ta2 / $toslftlslft1_8) * (100)), 2);
                    } else {
                        $Minslft1_8      = '';
                        $Maxslft1_8      = '';
                        $Avgslft1_8      = '';
                        $stdevslft1_8    = '';
                        $toslftlslft1_8  = '';
                        $inspectslft1_8  = '';
                        $outspectslft1_8 = '';
                        $prsoutslft1_8   = '';
                    }

                    if (is_array($ndtslft2_8) && count($ndtslft2_8) > 0){
                        $Minslft2_8   = min($ndtslft2_8);
                        $Maxslft2_8   = max($ndtslft2_8);
                        $Avgslft2_8   = number_format((array_sum($ndtslft2_8)) / (count($ndtslft2_8)), 2);
                        $Countslft2_8 = count($ndtslft2_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft2_8    = array_sum($ndtslft2_8) / count($ndtslft2_8);
                        $fvariant_slft2_8 = 0.00;
                        $xsample_ta2_8    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft2_8 as $slft){
                            $fvariant_slft2_8 += pow($slft - $fmean_slft2_8, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft2_8 /= ( $xsample_ta2_8 ? count($ndtslft2_8) - 1 : count($ndtslft2_8));
                        $stdevslft2_8      = number_format(sqrt($fvariant_slft2_8), 2);
                        $toslftlslft2_8    = count($ndtslft2_8);
                        $inspectslft2_8    = $dt_ta1;
                        $outspectslft2_8   = $dt_ta2;
                        $prsoutslft2_8     = number_format((($dt_ta2 / $toslftlslft2_8) * (100)), 2);
                    } else {
                        $Minslft2_8      = '';
                        $Maxslft2_8      = '';
                        $Avgslft2_8      = '';
                        $stdevslft2_8    = '';
                        $toslftlslft2_8  = '';
                        $inspectslft2_8  = '';
                        $outspectslft2_8 = '';
                        $prsoutslft2_8   = '';
                    }

                    if (is_array($ndtslft3_8) && count($ndtslft3_8) > 0){
                        $Minslft3_8   = min($ndtslft3_8);
                        $Maxslft3_8   = max($ndtslft3_8);
                        $Avgslft3_8   = number_format((array_sum($ndtslft3_8)) / (count($ndtslft3_8)), 2);
                        $Countslft3_8 = count($ndtslft3_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_slft3_8    = array_sum($ndtslft3_8) / count($ndtslft3_8);
                        $fvariant_slft3_8 = 0.00;
                        $xsample_ta3_8    = false;
                        $dt_ta1           = 0;
                        $dt_ta2           = 0;
                        foreach ($ndtslft3_8 as $slft){
                            $fvariant_slft3_8 += pow($slft - $fmean_slft3_8, 2);
                            if (($slft >= 10.5) && ($slft <= 11.5)){
                                $dt_ta1++;
                            }
                            if ((($slft > 0) && ($slft < 10.5)) || ($slft > 11.5)){
                                $dt_ta2++;
                            }
                        }
                        $fvariant_slft3_8 /= ( $xsample_ta3_8 ? count($ndtslft3_8) - 1 : count($ndtslft3_8));
                        $stdevslft3_8      = number_format(sqrt($fvariant_slft3_8), 2);
                        $toslftlslft3_8    = count($ndtslft3_8);
                        $inspectslft3_8    = $dt_ta1;
                        $outspectslft3_8   = $dt_ta2;
                        $prsoutslft3_8     = number_format((($dt_ta2 / $toslftlslft3_8) * (100)), 2);
                    } else {
                        $Minslft3_8      = '';
                        $Maxslft3_8      = '';
                        $Avgslft3_8      = '';
                        $stdevslft3_8    = '';
                        $toslftlslft3_8  = '';
                        $inspectslft3_8  = '';
                        $outspectslft3_8 = '';
                        $prsoutslft3_8   = '';
                    }

                    $rowfoot_c1  = $rowCount3 + 1;
                    $rowfoot_c2  = $rowfoot_c1 + 1;
                    $rowfoot_c3  = $rowfoot_c2 + 1;
                    $rowfoot_c4  = $rowfoot_c3 + 1;
                    $rowfoot_c5  = $rowfoot_c4 + 1;
                    $rowfoot_c6  = $rowfoot_c5 + 1;
                    $rowfoot_c7  = $rowfoot_c6 + 1;
                    $rowfoot_c8  = $rowfoot_c7 + 1;
                    $rowfoot_c9  = $rowfoot_c8 + 1;
                    $rowfoot_c10 = $rowfoot_c9 + 1;

                    $objPHPExcel3->mergeCells('A' . $rowfoot_c1 . ':Y' . $rowfoot_c1)->setCellValue('A' . $rowfoot_c1, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c2, 'Maximum');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c2, $Maxslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c2, $Maxslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c2, $Maxslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c2, $Maxslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c2, $Maxslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c2, $Maxslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c2, $Maxslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c2, $Maxslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c2, $Maxslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c2, $Maxslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c2, $Maxslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c2, $Maxslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c2, $Maxslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c2, $Maxslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c2, $Maxslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c2, $Maxslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c2, $Maxslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c2, $Maxslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c2, $Maxslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c2, $Maxslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c2, $Maxslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c2, $Maxslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c2, $Maxslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c2, $Maxslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c3, 'Minimum');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c3, $Minslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c3, $Minslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c3, $Minslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c3, $Minslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c3, $Minslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c3, $Minslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c3, $Minslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c3, $Minslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c3, $Minslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c3, $Minslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c3, $Minslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c3, $Minslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c3, $Minslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c3, $Minslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c3, $Minslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c3, $Minslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c3, $Minslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c3, $Minslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c3, $Minslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c3, $Minslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c3, $Minslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c3, $Minslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c3, $Minslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c3, $Minslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c4, 'Average');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c4, $Avgslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c4, $Avgslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c4, $Avgslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c4, $Avgslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c4, $Avgslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c4, $Avgslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c4, $Avgslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c4, $Avgslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c4, $Avgslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c4, $Avgslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c4, $Avgslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c4, $Avgslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c4, $Avgslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c4, $Avgslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c4, $Avgslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c4, $Avgslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c4, $Avgslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c4, $Avgslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c4, $Avgslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c4, $Avgslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c4, $Avgslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c4, $Avgslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c4, $Avgslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c4, $Avgslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c5, 'Stdev');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c5, $stdevslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c5, $stdevslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c5, $stdevslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c5, $stdevslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c5, $stdevslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c5, $stdevslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c5, $stdevslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c5, $stdevslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c5, $stdevslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c5, $stdevslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c5, $stdevslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c5, $stdevslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c5, $stdevslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c5, $stdevslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c5, $stdevslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c5, $stdevslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c5, $stdevslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c5, $stdevslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c5, $stdevslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c5, $stdevslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c5, $stdevslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c5, $stdevslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c5, $stdevslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c5, $stdevslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c6, 'Total Data');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c6, $toslftlslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c6, $toslftlslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c6, $toslftlslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c6, $toslftlslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c6, $toslftlslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c6, $toslftlslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c6, $toslftlslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c6, $toslftlslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c6, $toslftlslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c6, $toslftlslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c6, $toslftlslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c6, $toslftlslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c6, $toslftlslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c6, $toslftlslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c6, $toslftlslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c6, $toslftlslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c6, $toslftlslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c6, $toslftlslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c6, $toslftlslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c6, $toslftlslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c6, $toslftlslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c6, $toslftlslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c6, $toslftlslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c6, $toslftlslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c7, 'Whitin Spect');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c7, $inspectslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c7, $inspectslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c7, $inspectslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c7, $inspectslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c7, $inspectslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c7, $inspectslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c7, $inspectslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c7, $inspectslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c7, $inspectslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c7, $inspectslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c7, $inspectslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c7, $inspectslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c7, $inspectslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c7, $inspectslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c7, $inspectslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c7, $inspectslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c7, $inspectslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c7, $inspectslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c7, $inspectslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c7, $inspectslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c7, $inspectslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c7, $inspectslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c7, $inspectslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c7, $inspectslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c8, 'Outspect Data');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c8, $outspectslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c8, $outspectslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c8, $outspectslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c8, $outspectslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c8, $outspectslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c8, $outspectslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c8, $outspectslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c8, $outspectslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c8, $outspectslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c8, $outspectslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c8, $outspectslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c8, $outspectslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c8, $outspectslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c8, $outspectslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c8, $outspectslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c8, $outspectslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c8, $outspectslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c8, $outspectslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c8, $outspectslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c8, $outspectslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c8, $outspectslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c8, $outspectslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c8, $outspectslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c8, $outspectslft3_8);

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c9, 'Percent Outs');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c9, $prsoutslft1_1);
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c9, $prsoutslft2_1);
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c9, $prsoutslft3_1);
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c9, $prsoutslft1_2);
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c9, $prsoutslft2_2);
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c9, $prsoutslft3_2);
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c9, $prsoutslft1_3);
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c9, $prsoutslft2_3);
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c9, $prsoutslft3_3);
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c9, $prsoutslft1_4);
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c9, $prsoutslft2_4);
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c9, $prsoutslft3_4);
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c9, $prsoutslft1_5);
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c9, $prsoutslft2_5);
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c9, $prsoutslft3_5);
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c9, $prsoutslft1_6);
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c9, $prsoutslft2_6);
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c9, $prsoutslft3_6);
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c9, $prsoutslft1_7);
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c9, $prsoutslft2_7);
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c9, $prsoutslft3_7);
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c9, $prsoutslft1_8);
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c9, $prsoutslft2_8);
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c9, $prsoutslft3_8);

                    $objPHPExcel3->mergeCells('A' . $rowfoot_c10 . ':Y' . $rowfoot_c10)->setCellValue('A' . $rowfoot_c10, '');

                    $objPHPExcel3->setSharedStyle($headerStyle, 'A' . $rowfoot_c1 . ':Y' . $rowfoot_c10);
                } else {
                    $rowCount3 = 9;

                    $objPHPExcel3->setSharedStyle($bodyStyle, 'A' . $rowCount3 . ':Y' . $rowCount3);

                    $objPHPExcel3->setCellValue('A' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('B' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('C' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('D' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('E' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('F' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('G' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('H' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('I' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('J' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('K' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('L' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('M' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('N' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('O' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('P' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('Q' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('R' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('S' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('T' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('U' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('V' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('W' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('X' . $rowCount3, '');
                    $objPHPExcel3->setCellValue('Y' . $rowCount3, '');

                    $rowfoot_c1  = $rowCount3 + 1;
                    $rowfoot_c2  = $rowfoot_c1 + 1;
                    $rowfoot_c3  = $rowfoot_c2 + 1;
                    $rowfoot_c4  = $rowfoot_c3 + 1;
                    $rowfoot_c5  = $rowfoot_c4 + 1;
                    $rowfoot_c6  = $rowfoot_c5 + 1;
                    $rowfoot_c7  = $rowfoot_c6 + 1;
                    $rowfoot_c8  = $rowfoot_c7 + 1;
                    $rowfoot_c9  = $rowfoot_c8 + 1;
                    $rowfoot_c10 = $rowfoot_c9 + 1;

                    $objPHPExcel3->mergeCells('A' . $rowfoot_c1 . ':Y' . $rowfoot_c1)->setCellValue('A' . $rowfoot_c1, '');


                    $objPHPExcel3->setCellValue('A' . $rowfoot_c2, 'Maximum');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c2, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c2, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c3, 'Minimum');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c3, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c3, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c4, 'Average');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c4, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c4, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c5, 'Stdev');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c5, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c5, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c6, 'Total Data');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c6, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c6, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c7, 'Whitin Spect');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c7, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c7, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c8, 'Outspect Data');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c8, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c8, '');

                    $objPHPExcel3->setCellValue('A' . $rowfoot_c9, 'Percent Outs');
                    $objPHPExcel3->setCellValue('B' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('C' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('D' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('E' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('F' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('G' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('H' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('I' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('J' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('K' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('L' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('M' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('N' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('O' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('P' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('Q' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('R' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('S' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('T' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('U' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('V' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('W' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('X' . $rowfoot_c9, '');
                    $objPHPExcel3->setCellValue('Y' . $rowfoot_c9, '');

                    $objPHPExcel3->mergeCells('A' . $rowfoot_c10 . ':Y' . $rowfoot_c10)->setCellValue('A' . $rowfoot_c10, '');
                    $objPHPExcel3->setSharedStyle($headerStyle, 'A' . $rowfoot_c1 . ':Y' . $rowfoot_c10);
                }

                $rowsapp_c1 = $rowfoot_c10 + 1;
                $rowsapp_c2 = $rowsapp_c1 + 1;
                $rowsapp_c3 = $rowsapp_c2 + 1;
                $rowsapp_c4 = $rowsapp_c3 + 1;
                $rowsapp_c5 = $rowsapp_c4 + 1;

                $objPHPExcel3->getStyle('A' . $rowsapp_c1 . ':Y' . $rowsapp_c5)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

                $objPHPExcel3->mergeCells('A' . $rowsapp_c1 . ':I' . $rowsapp_c1)->setCellValue('A' . $rowsapp_c1, 'Reported By');
                $objPHPExcel3->mergeCells('J' . $rowsapp_c1 . ':Q' . $rowsapp_c1)->setCellValue('J' . $rowsapp_c1, 'Checked By');
                $objPHPExcel3->mergeCells('R' . $rowsapp_c1 . ':Y' . $rowsapp_c1)->setCellValue('R' . $rowsapp_c1, 'Confirmed By');

                $objPHPExcel3->mergeCells('A' . $rowsapp_c2 . ':I' . $rowsapp_c2)->setCellValue('A' . $rowsapp_c2, '');
                $objPHPExcel3->mergeCells('J' . $rowsapp_c2 . ':Q' . $rowsapp_c2)->setCellValue('J' . $rowsapp_c2, '');
                $objPHPExcel3->mergeCells('R' . $rowsapp_c2 . ':Y' . $rowsapp_c2)->setCellValue('R' . $rowsapp_c2, '');

                $objPHPExcel3->mergeCells('A' . $rowsapp_c3 . ':I' . $rowsapp_c3)->setCellValue('A' . $rowsapp_c3, 'Name :');
                $objPHPExcel3->mergeCells('J' . $rowsapp_c3 . ':Q' . $rowsapp_c3)->setCellValue('J' . $rowsapp_c3, 'Name :');
                $objPHPExcel3->mergeCells('R' . $rowsapp_c3 . ':Y' . $rowsapp_c3)->setCellValue('R' . $rowsapp_c3, 'Name :');

                $objPHPExcel3->mergeCells('A' . $rowsapp_c4 . ':I' . $rowsapp_c4)->setCellValue('A' . $rowsapp_c4, 'Position :');
                $objPHPExcel3->mergeCells('J' . $rowsapp_c4 . ':Q' . $rowsapp_c4)->setCellValue('J' . $rowsapp_c4, 'Position :');
                $objPHPExcel3->mergeCells('R' . $rowsapp_c4 . ':Y' . $rowsapp_c4)->setCellValue('R' . $rowsapp_c4, 'Position :');

                $objPHPExcel3->mergeCells('A' . $rowsapp_c5 . ':I' . $rowsapp_c5)->setCellValue('A' . $rowsapp_c5, 'Date :');
                $objPHPExcel3->mergeCells('J' . $rowsapp_c5 . ':Q' . $rowsapp_c5)->setCellValue('J' . $rowsapp_c5, 'Date :');
                $objPHPExcel3->mergeCells('R' . $rowsapp_c5 . ':Y' . $rowsapp_c5)->setCellValue('R' . $rowsapp_c5, 'Date :');

                $objPHPExcel3->setSharedStyle($headerStyle, 'A' . $rowsapp_c1 . ':Y' . $rowsapp_c5);

                $objPHPExcel4 = $obj->createSheet(4);

                $objDrawing4 = new PHPExcel_Worksheet_Drawing();
                $objDrawing4->setPath('assets/images/tlogopsg.png');
                $objDrawing4->setCoordinates('A2');
                $objDrawing4->setWorksheet($objPHPExcel4);

                foreach (range('A', 'Y') as $columnID){
                    $objPHPExcel4->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel4->mergeCells('A1:Y1');
                $objPHPExcel4->mergeCells('A2:A3');
                $objPHPExcel4->mergeCells('B2:S3')->setCellValue('B2', $frmcop);
                $objPHPExcel4->mergeCells('T2:Y2')->setCellValue('T2', 'Doc : ' . $Doc);
                $objPHPExcel4->mergeCells('T3:Y3')->setCellValue('T3', 'Date : ' . $Tanggal);

                $objPHPExcel4->setCellValue('A4', 'JUDUL');
                $objPHPExcel4->mergeCells('B4:S4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel4->mergeCells('T4:Y4')->setCellValue('T4', 'Page : 4 of 5');

                $objPHPExcel4->mergeCells('A5:Y5')->setCellValue('A5', 'Distribusi : TJH/HYC/UTL/BLR/FILE-QAD');

                $objPHPExcel4->mergeCells('A6:A8')->setCellValue('A6', 'Sampling and Analysis Date)');
                $objPHPExcel4->mergeCells('B6:Y6')->setCellValue('B6', 'Total Dissolved Solids (Specificaion: 3500 ppm max)');

                $objPHPExcel4->mergeCells('B7:D7')->setCellValue('B7', 'Boiler 1');
                $objPHPExcel4->mergeCells('E7:G7')->setCellValue('E7', 'Boiler 2');
                $objPHPExcel4->mergeCells('H7:J7')->setCellValue('H7', 'Boiler 3');
                $objPHPExcel4->mergeCells('K7:M7')->setCellValue('K7', 'Boiler 4');
                $objPHPExcel4->mergeCells('N7:P7')->setCellValue('N7', 'Boiler 5');
                $objPHPExcel4->mergeCells('Q7:S7')->setCellValue('Q7', 'Boiler 6');
                $objPHPExcel4->mergeCells('T7:V7')->setCellValue('T7', 'Boiler 7');
                $objPHPExcel4->mergeCells('W7:Y7')->setCellValue('W7', 'Boiler 8');

                $objPHPExcel4->setCellValue('B8', 'Shift 1');
                $objPHPExcel4->setCellValue('C8', 'Shift 2');
                $objPHPExcel4->setCellValue('D8', 'Shift 3');
                $objPHPExcel4->setCellValue('E8', 'Shift 1');
                $objPHPExcel4->setCellValue('F8', 'Shift 2');
                $objPHPExcel4->setCellValue('G8', 'Shift 3');
                $objPHPExcel4->setCellValue('H8', 'Shift 1');
                $objPHPExcel4->setCellValue('I8', 'Shift 2');
                $objPHPExcel4->setCellValue('J8', 'Shift 3');
                $objPHPExcel4->setCellValue('K8', 'Shift 1');
                $objPHPExcel4->setCellValue('L8', 'Shift 2');
                $objPHPExcel4->setCellValue('M8', 'Shift 3');
                $objPHPExcel4->setCellValue('N8', 'Shift 1');
                $objPHPExcel4->setCellValue('O8', 'Shift 2');
                $objPHPExcel4->setCellValue('P8', 'Shift 3');
                $objPHPExcel4->setCellValue('Q8', 'Shift 1');
                $objPHPExcel4->setCellValue('R8', 'Shift 2');
                $objPHPExcel4->setCellValue('S8', 'Shift 3');
                $objPHPExcel4->setCellValue('T8', 'Shift 1');
                $objPHPExcel4->setCellValue('U8', 'Shift 2');
                $objPHPExcel4->setCellValue('V8', 'Shift 3');
                $objPHPExcel4->setCellValue('W8', 'Shift 1');
                $objPHPExcel4->setCellValue('X8', 'Shift 2');
                $objPHPExcel4->setCellValue('Y8', 'Shift 3');


                $objPHPExcel4->setSharedStyle($headerStyle, 'A2:Y8');


                if (isset($dtdetail4)){
                    $rowCount4 = 8;
                    foreach ($dtdetail4 as $row4){
                        $rowCount4++;

                        $objPHPExcel4->setSharedStyle($bodyStyle, 'A' . $rowCount4 . ':Y' . $rowCount4);

                        $steam_tds1[] = $row4->tds_shift1_steam;
                        $steam_tds2[] = $row4->tds_shift2_steam;
                        $steam_tds3[] = $row4->tds_shift3_steam;

                        $ndt_tds1_1[] = $row4->tds_shift1_1;
                        $ndt_tds2_1[] = $row4->tds_shift2_1;
                        $ndt_tds3_1[] = $row4->tds_shift3_1;
                        $ndt_tds1_2[] = $row4->tds_shift1_2;
                        $ndt_tds2_2[] = $row4->tds_shift2_2;
                        $ndt_tds3_2[] = $row4->tds_shift3_2;
                        $ndt_tds1_3[] = $row4->tds_shift1_3;
                        $ndt_tds2_3[] = $row4->tds_shift2_3;
                        $ndt_tds3_3[] = $row4->tds_shift3_3;
                        $ndt_tds1_4[] = $row4->tds_shift1_4;
                        $ndt_tds2_4[] = $row4->tds_shift2_4;
                        $ndt_tds3_4[] = $row4->tds_shift3_4;
                        $ndt_tds1_5[] = $row4->tds_shift1_5;
                        $ndt_tds2_5[] = $row4->tds_shift2_5;
                        $ndt_tds3_5[] = $row4->tds_shift3_5;
                        $ndt_tds1_6[] = $row4->tds_shift1_6;
                        $ndt_tds2_6[] = $row4->tds_shift2_6;
                        $ndt_tds3_6[] = $row4->tds_shift3_6;
                        $ndt_tds1_7[] = $row4->tds_shift1_7;
                        $ndt_tds2_7[] = $row4->tds_shift2_7;
                        $ndt_tds3_7[] = $row4->tds_shift3_7;
                        $ndt_tds1_8[] = $row4->tds_shift1_8;
                        $ndt_tds2_8[] = $row4->tds_shift2_8;
                        $ndt_tds3_8[] = $row4->tds_shift3_8;

                        $objPHPExcel4->setCellValue('A' . $rowCount4, $row4->tanggal);
                        $objPHPExcel4->setCellValue('B' . $rowCount4, $row4->tds_shift1_1);
                        $objPHPExcel4->setCellValue('C' . $rowCount4, $row4->tds_shift2_1);
                        $objPHPExcel4->setCellValue('D' . $rowCount4, $row4->tds_shift3_1);
                        $objPHPExcel4->setCellValue('E' . $rowCount4, $row4->tds_shift1_2);
                        $objPHPExcel4->setCellValue('F' . $rowCount4, $row4->tds_shift2_2);
                        $objPHPExcel4->setCellValue('G' . $rowCount4, $row4->tds_shift3_2);
                        $objPHPExcel4->setCellValue('H' . $rowCount4, $row4->tds_shift1_3);
                        $objPHPExcel4->setCellValue('I' . $rowCount4, $row4->tds_shift2_3);
                        $objPHPExcel4->setCellValue('J' . $rowCount4, $row4->tds_shift3_3);
                        $objPHPExcel4->setCellValue('K' . $rowCount4, $row4->tds_shift1_4);
                        $objPHPExcel4->setCellValue('L' . $rowCount4, $row4->tds_shift2_4);
                        $objPHPExcel4->setCellValue('M' . $rowCount4, $row4->tds_shift3_4);
                        $objPHPExcel4->setCellValue('N' . $rowCount4, $row4->tds_shift1_5);
                        $objPHPExcel4->setCellValue('O' . $rowCount4, $row4->tds_shift2_5);
                        $objPHPExcel4->setCellValue('P' . $rowCount4, $row4->tds_shift3_5);
                        $objPHPExcel4->setCellValue('Q' . $rowCount4, $row4->tds_shift1_6);
                        $objPHPExcel4->setCellValue('R' . $rowCount4, $row4->tds_shift2_6);
                        $objPHPExcel4->setCellValue('S' . $rowCount4, $row4->tds_shift3_6);
                        $objPHPExcel4->setCellValue('T' . $rowCount4, $row4->tds_shift1_7);
                        $objPHPExcel4->setCellValue('U' . $rowCount4, $row4->tds_shift2_7);
                        $objPHPExcel4->setCellValue('V' . $rowCount4, $row4->tds_shift3_7);
                        $objPHPExcel4->setCellValue('W' . $rowCount4, $row4->tds_shift1_8);
                        $objPHPExcel4->setCellValue('X' . $rowCount4, $row4->tds_shift2_8);
                        $objPHPExcel4->setCellValue('Y' . $rowCount4, $row4->tds_shift3_8);
                    }

                    $ndttds1_1 = array_diff($ndt_tds1_1, array('', 0));
                    $ndttds2_1 = array_diff($ndt_tds2_1, array('', 0));
                    $ndttds3_1 = array_diff($ndt_tds3_1, array('', 0));
                    $ndttds1_2 = array_diff($ndt_tds1_2, array('', 0));
                    $ndttds2_2 = array_diff($ndt_tds2_2, array('', 0));
                    $ndttds3_2 = array_diff($ndt_tds3_2, array('', 0));
                    $ndttds1_3 = array_diff($ndt_tds1_3, array('', 0));
                    $ndttds2_3 = array_diff($ndt_tds2_3, array('', 0));
                    $ndttds3_3 = array_diff($ndt_tds3_3, array('', 0));
                    $ndttds1_4 = array_diff($ndt_tds1_4, array('', 0));
                    $ndttds2_4 = array_diff($ndt_tds2_4, array('', 0));
                    $ndttds3_4 = array_diff($ndt_tds3_4, array('', 0));
                    $ndttds1_5 = array_diff($ndt_tds1_5, array('', 0));
                    $ndttds2_5 = array_diff($ndt_tds2_5, array('', 0));
                    $ndttds3_5 = array_diff($ndt_tds3_5, array('', 0));
                    $ndttds1_6 = array_diff($ndt_tds1_6, array('', 0));
                    $ndttds2_6 = array_diff($ndt_tds2_6, array('', 0));
                    $ndttds3_6 = array_diff($ndt_tds3_6, array('', 0));
                    $ndttds1_7 = array_diff($ndt_tds1_7, array('', 0));
                    $ndttds2_7 = array_diff($ndt_tds2_7, array('', 0));
                    $ndttds3_7 = array_diff($ndt_tds3_7, array('', 0));
                    $ndttds1_8 = array_diff($ndt_tds1_8, array('', 0));
                    $ndttds2_8 = array_diff($ndt_tds2_8, array('', 0));
                    $ndttds3_8 = array_diff($ndt_tds3_8, array('', 0));

                    if (is_array($ndttds1_1) && count($ndttds1_1) > 0){
                        $Mintds1_1   = min($ndttds1_1);
                        $Maxtds1_1   = max($ndttds1_1);
                        $Avgtds1_1   = number_format((array_sum($ndttds1_1)) / (count($ndttds1_1)), 2);
                        $Counttds1_1 = count($ndttds1_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_1    = array_sum($ndttds1_1) / count($ndttds1_1);
                        $fvariant_tds1_1 = 0.00;
                        $xsample_tds1_1  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_1 as $tds){
                            $fvariant_tds1_1 += pow($tds - $fmean_tds1_1, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_1 /= ( $xsample_tds1_1 ? count($ndttds1_1) - 1 : count($ndttds1_1));
                        $stdevtds1_1      = number_format(sqrt($fvariant_tds1_1), 2);
                        $totdsltds1_1     = count($ndttds1_1);
                        $inspecttds1_1    = $dt_tds1;
                        $outspecttds1_1   = $dt_tds2;
                        $prsouttds1_1     = number_format((($dt_tds2 / $totdsltds1_1) * (100)), 2);
                    } else {

                        $Mintds1_1      = '';
                        $Maxtds1_1      = '';
                        $Avgtds1_1      = '';
                        $stdevtds1_1    = '';
                        $totdsltds1_1   = '';
                        $inspecttds1_1  = '';
                        $outspecttds1_1 = '';
                        $prsouttds1_1   = '';
                    }

                    if (is_array($ndttds2_1) && count($ndttds2_1) > 0){
                        $Mintds2_1   = min($ndttds2_1);
                        $Maxtds2_1   = max($ndttds2_1);
                        $Avgtds2_1   = number_format((array_sum($ndttds2_1)) / (count($ndttds2_1)), 2);
                        $Counttds2_1 = count($ndttds2_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_1    = array_sum($ndttds2_1) / count($ndttds2_1);
                        $fvariant_tds2_1 = 0.00;
                        $xsample_tds2_1  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_1 as $tds){
                            $fvariant_tds2_1 += pow($tds - $fmean_tds2_1, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_1 /= ( $xsample_tds2_1 ? count($ndttds2_1) - 1 : count($ndttds2_1));
                        $stdevtds2_1      = number_format(sqrt($fvariant_tds2_1), 2);
                        $totdsltds2_1     = count($ndttds2_1);
                        $inspecttds2_1    = $dt_tds1;
                        $outspecttds2_1   = $dt_tds2;
                        $prsouttds2_1     = number_format((($dt_tds2 / $totdsltds2_1) * (100)), 2);
                    } else {
                        $Mintds2_1      = '';
                        $Maxtds2_1      = '';
                        $Avgtds2_1      = '';
                        $stdevtds2_1    = '';
                        $totdsltds2_1   = '';
                        $inspecttds2_1  = '';
                        $outspecttds2_1 = '';
                        $prsouttds2_1   = '';
                    }

                    if (is_array($ndttds3_1) && count($ndttds3_1) > 0){
                        $Mintds3_1   = min($ndttds3_1);
                        $Maxtds3_1   = max($ndttds3_1);
                        $Avgtds3_1   = number_format((array_sum($ndttds3_1)) / (count($ndttds3_1)), 2);
                        $Counttds3_1 = count($ndttds3_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_1    = array_sum($ndttds3_1) / count($ndttds3_1);
                        $fvariant_tds3_1 = 0.00;
                        $xsample_tds3_1  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_1 as $tds){
                            $fvariant_tds3_1 += pow($tds - $fmean_tds3_1, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_1 /= ( $xsample_tds3_1 ? count($ndttds3_1) - 1 : count($ndttds3_1));
                        $stdevtds3_1      = number_format(sqrt($fvariant_tds3_1), 2);
                        $totdsltds3_1     = count($ndttds3_1);
                        $inspecttds3_1    = $dt_tds1;
                        $outspecttds3_1   = $dt_tds2;
                        $prsouttds3_1     = number_format((($dt_tds2 / $totdsltds3_1) * (100)), 2);
                    } else {
                        $Mintds3_1      = '';
                        $Maxtds3_1      = '';
                        $Avgtds3_1      = '';
                        $stdevtds3_1    = '';
                        $totdsltds3_1   = '';
                        $inspecttds3_1  = '';
                        $outspecttds3_1 = '';
                        $prsouttds3_1   = '';
                    }

                    if (is_array($ndttds1_2) && count($ndttds1_2) > 0){
                        $Mintds1_2   = min($ndttds1_2);
                        $Maxtds1_2   = max($ndttds1_2);
                        $Avgtds1_2   = number_format((array_sum($ndttds1_2)) / (count($ndttds1_2)), 2);
                        $Counttds1_2 = count($ndttds1_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_2    = array_sum($ndttds1_2) / count($ndttds1_2);
                        $fvariant_tds1_2 = 0.00;
                        $xsample_tds1_2  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_2 as $tds){
                            $fvariant_tds1_2 += pow($tds - $fmean_tds1_2, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_2 /= ( $xsample_tds1_2 ? count($ndttds1_2) - 1 : count($ndttds1_2));
                        $stdevtds1_2      = number_format(sqrt($fvariant_tds1_2), 2);
                        $totdsltds1_2     = count($ndttds1_2);
                        $inspecttds1_2    = $dt_tds1;
                        $outspecttds1_2   = $dt_tds2;
                        $prsouttds1_2     = number_format((($dt_tds2 / $totdsltds1_2) * (100)), 2);
                    } else {
                        $Mintds1_2      = '';
                        $Maxtds1_2      = '';
                        $Avgtds1_2      = '';
                        $stdevtds1_2    = '';
                        $totdsltds1_2   = '';
                        $inspecttds1_2  = '';
                        $outspecttds1_2 = '';
                        $prsouttds1_2   = '';
                    }

                    if (is_array($ndttds2_2) && count($ndttds2_2) > 0){
                        $Mintds2_2   = min($ndttds2_2);
                        $Maxtds2_2   = max($ndttds2_2);
                        $Avgtds2_2   = number_format((array_sum($ndttds2_2)) / (count($ndttds2_2)), 2);
                        $Counttds2_2 = count($ndttds2_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_2    = array_sum($ndttds2_2) / count($ndttds2_2);
                        $fvariant_tds2_2 = 0.00;
                        $xsample_tds2_2  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_2 as $tds){
                            $fvariant_tds2_2 += pow($tds - $fmean_tds2_2, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_2 /= ( $xsample_tds2_2 ? count($ndttds2_2) - 1 : count($ndttds2_2));
                        $stdevtds2_2      = number_format(sqrt($fvariant_tds2_2), 2);
                        $totdsltds2_2     = count($ndttds2_2);
                        $inspecttds2_2    = $dt_tds1;
                        $outspecttds2_2   = $dt_tds2;
                        $prsouttds2_2     = number_format((($dt_tds2 / $totdsltds2_2) * (100)), 2);
                    } else {
                        $Mintds2_2      = '';
                        $Maxtds2_2      = '';
                        $Avgtds2_2      = '';
                        $stdevtds2_2    = '';
                        $totdsltds2_2   = '';
                        $inspecttds2_2  = '';
                        $outspecttds2_2 = '';
                        $prsouttds2_2   = '';
                    }

                    if (is_array($ndttds3_2) && count($ndttds3_2) > 0){
                        $Mintds3_2   = min($ndttds3_2);
                        $Maxtds3_2   = max($ndttds3_2);
                        $Avgtds3_2   = number_format((array_sum($ndttds3_2)) / (count($ndttds3_2)), 2);
                        $Counttds3_2 = count($ndttds3_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_2    = array_sum($ndttds3_2) / count($ndttds3_2);
                        $fvariant_tds3_2 = 0.00;
                        $xsample_tds3_2  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_2 as $tds){
                            $fvariant_tds3_2 += pow($tds - $fmean_tds3_2, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_2 /= ( $xsample_tds3_2 ? count($ndttds3_2) - 1 : count($ndttds3_2));
                        $stdevtds3_2      = number_format(sqrt($fvariant_tds3_2), 2);
                        $totdsltds3_2     = count($ndttds3_2);
                        $inspecttds3_2    = $dt_tds1;
                        $outspecttds3_2   = $dt_tds2;
                        $prsouttds3_2     = number_format((($dt_tds2 / $totdsltds3_2) * (100)), 2);
                    } else {
                        $Mintds3_2      = '';
                        $Maxtds3_2      = '';
                        $Avgtds3_2      = '';
                        $stdevtds3_2    = '';
                        $totdsltds3_2   = '';
                        $inspecttds3_2  = '';
                        $outspecttds3_2 = '';
                        $prsouttds3_2   = '';
                    }

                    if (is_array($ndttds1_3) && count($ndttds1_3) > 0){
                        $Mintds1_3   = min($ndttds1_3);
                        $Maxtds1_3   = max($ndttds1_3);
                        $Avgtds1_3   = number_format((array_sum($ndttds1_3)) / (count($ndttds1_3)), 2);
                        $Counttds1_3 = count($ndttds1_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_3    = array_sum($ndttds1_3) / count($ndttds1_3);
                        $fvariant_tds1_3 = 0.00;
                        $xsample_tds1_3  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_3 as $tds){
                            $fvariant_tds1_3 += pow($tds - $fmean_tds1_3, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_3 /= ( $xsample_tds1_3 ? count($ndttds1_3) - 1 : count($ndttds1_3));
                        $stdevtds1_3      = number_format(sqrt($fvariant_tds1_3), 2);
                        $totdsltds1_3     = count($ndttds1_3);
                        $inspecttds1_3    = $dt_tds1;
                        $outspecttds1_3   = $dt_tds2;
                        $prsouttds1_3     = number_format((($dt_tds2 / $totdsltds1_3) * (100)), 2);
                    } else {
                        $Mintds1_3      = '';
                        $Maxtds1_3      = '';
                        $Avgtds1_3      = '';
                        $stdevtds1_3    = '';
                        $totdsltds1_3   = '';
                        $inspecttds1_3  = '';
                        $outspecttds1_3 = '';
                        $prsouttds1_3   = '';
                    }

                    if (is_array($ndttds2_3) && count($ndttds2_3) > 0){
                        $Mintds2_3   = min($ndttds2_3);
                        $Maxtds2_3   = max($ndttds2_3);
                        $Avgtds2_3   = number_format((array_sum($ndttds2_3)) / (count($ndttds2_3)), 2);
                        $Counttds2_3 = count($ndttds2_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_3    = array_sum($ndttds2_3) / count($ndttds2_3);
                        $fvariant_tds2_3 = 0.00;
                        $xsample_tds2_3  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_3 as $tds){
                            $fvariant_tds2_3 += pow($tds - $fmean_tds2_3, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_3 /= ( $xsample_tds2_3 ? count($ndttds2_3) - 1 : count($ndttds2_3));
                        $stdevtds2_3      = number_format(sqrt($fvariant_tds2_3), 2);
                        $totdsltds2_3     = count($ndttds2_3);
                        $inspecttds2_3    = $dt_tds1;
                        $outspecttds2_3   = $dt_tds2;
                        $prsouttds2_3     = number_format((($dt_tds2 / $totdsltds2_3) * (100)), 2);
                    } else {
                        $Mintds2_3      = '';
                        $Maxtds2_3      = '';
                        $Avgtds2_3      = '';
                        $stdevtds2_3    = '';
                        $totdsltds2_3   = '';
                        $inspecttds2_3  = '';
                        $outspecttds2_3 = '';
                        $prsouttds2_3   = '';
                    }

                    if (is_array($ndttds3_3) && count($ndttds3_3) > 0){
                        $Mintds3_3   = min($ndttds3_3);
                        $Maxtds3_3   = max($ndttds3_3);
                        $Avgtds3_3   = number_format((array_sum($ndttds3_3)) / (count($ndttds3_3)), 2);
                        $Counttds3_3 = count($ndttds3_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_3    = array_sum($ndttds3_3) / count($ndttds3_3);
                        $fvariant_tds3_3 = 0.00;
                        $xsample_tds3_3  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_3 as $tds){
                            $fvariant_tds3_3 += pow($tds - $fmean_tds3_3, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_3 /= ( $xsample_tds3_3 ? count($ndttds3_3) - 1 : count($ndttds3_3));
                        $stdevtds3_3      = number_format(sqrt($fvariant_tds3_3), 2);
                        $totdsltds3_3     = count($ndttds3_3);
                        $inspecttds3_3    = $dt_tds1;
                        $outspecttds3_3   = $dt_tds2;
                        $prsouttds3_3     = number_format((($dt_tds2 / $totdsltds3_3) * (100)), 2);
                    } else {
                        $Mintds3_3      = '';
                        $Maxtds3_3      = '';
                        $Avgtds3_3      = '';
                        $stdevtds3_3    = '';
                        $totdsltds3_3   = '';
                        $inspecttds3_3  = '';
                        $outspecttds3_3 = '';
                        $prsouttds3_3   = '';
                    }

                    if (is_array($ndttds1_4) && count($ndttds1_4) > 0){
                        $Mintds1_4   = min($ndttds1_4);
                        $Maxtds1_4   = max($ndttds1_4);
                        $Avgtds1_4   = number_format((array_sum($ndttds1_4)) / (count($ndttds1_4)), 2);
                        $Counttds1_4 = count($ndttds1_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_4    = array_sum($ndttds1_4) / count($ndttds1_4);
                        $fvariant_tds1_4 = 0.00;
                        $xsample_tds1_4  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_4 as $tds){
                            $fvariant_tds1_4 += pow($tds - $fmean_tds1_4, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_4 /= ( $xsample_tds1_4 ? count($ndttds1_4) - 1 : count($ndttds1_4));
                        $stdevtds1_4      = number_format(sqrt($fvariant_tds1_4), 2);
                        $totdsltds1_4     = count($ndttds1_4);
                        $inspecttds1_4    = $dt_tds1;
                        $outspecttds1_4   = $dt_tds2;
                        $prsouttds1_4     = number_format((($dt_tds2 / $totdsltds1_4) * (100)), 2);
                    } else {
                        $Mintds1_4      = '';
                        $Maxtds1_4      = '';
                        $Avgtds1_4      = '';
                        $stdevtds1_4    = '';
                        $totdsltds1_4   = '';
                        $inspecttds1_4  = '';
                        $outspecttds1_4 = '';
                        $prsouttds1_4   = '';
                    }

                    if (is_array($ndttds2_4) && count($ndttds2_4) > 0){
                        $Mintds2_4   = min($ndttds2_4);
                        $Maxtds2_4   = max($ndttds2_4);
                        $Avgtds2_4   = number_format((array_sum($ndttds2_4)) / (count($ndttds2_4)), 2);
                        $Counttds2_4 = count($ndttds2_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_4    = array_sum($ndttds2_4) / count($ndttds2_4);
                        $fvariant_tds2_4 = 0.00;
                        $xsample_tds2_4  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_4 as $tds){
                            $fvariant_tds2_4 += pow($tds - $fmean_tds2_4, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_4 /= ( $xsample_tds2_4 ? count($ndttds2_4) - 1 : count($ndttds2_4));
                        $stdevtds2_4      = number_format(sqrt($fvariant_tds2_4), 2);
                        $totdsltds2_4     = count($ndttds2_4);
                        $inspecttds2_4    = $dt_tds1;
                        $outspecttds2_4   = $dt_tds2;
                        $prsouttds2_4     = number_format((($dt_tds2 / $totdsltds2_4) * (100)), 2);
                    } else {
                        $Mintds2_4      = '';
                        $Maxtds2_4      = '';
                        $Avgtds2_4      = '';
                        $stdevtds2_4    = '';
                        $totdsltds2_4   = '';
                        $inspecttds2_4  = '';
                        $outspecttds2_4 = '';
                        $prsouttds2_4   = '';
                    }

                    if (is_array($ndttds3_4) && count($ndttds3_4) > 0){
                        $Mintds3_4   = min($ndttds3_4);
                        $Maxtds3_4   = max($ndttds3_4);
                        $Avgtds3_4   = number_format((array_sum($ndttds3_4)) / (count($ndttds3_4)), 2);
                        $Counttds3_4 = count($ndttds3_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_4    = array_sum($ndttds3_4) / count($ndttds3_4);
                        $fvariant_tds3_4 = 0.00;
                        $xsample_tds3_4  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_4 as $tds){
                            $fvariant_tds3_4 += pow($tds - $fmean_tds3_4, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_4 /= ( $xsample_tds3_4 ? count($ndttds3_4) - 1 : count($ndttds3_4));
                        $stdevtds3_4      = number_format(sqrt($fvariant_tds3_4), 2);
                        $totdsltds3_4     = count($ndttds3_4);
                        $inspecttds3_4    = $dt_tds1;
                        $outspecttds3_4   = $dt_tds2;
                        $prsouttds3_4     = number_format((($dt_tds2 / $totdsltds3_4) * (100)), 2);
                    } else {
                        $Mintds3_4      = '';
                        $Maxtds3_4      = '';
                        $Avgtds3_4      = '';
                        $stdevtds3_4    = '';
                        $totdsltds3_4   = '';
                        $inspecttds3_4  = '';
                        $outspecttds3_4 = '';
                        $prsouttds3_4   = '';
                    }

                    if (is_array($ndttds1_5) && count($ndttds1_5) > 0){
                        $Mintds1_5   = min($ndttds1_5);
                        $Maxtds1_5   = max($ndttds1_5);
                        $Avgtds1_5   = number_format((array_sum($ndttds1_5)) / (count($ndttds1_5)), 2);
                        $Counttds1_5 = count($ndttds1_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_5    = array_sum($ndttds1_5) / count($ndttds1_5);
                        $fvariant_tds1_5 = 0.00;
                        $xsample_tds1_5  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_5 as $tds){
                            $fvariant_tds1_5 += pow($tds - $fmean_tds1_5, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_5 /= ( $xsample_tds1_5 ? count($ndttds1_5) - 1 : count($ndttds1_5));
                        $stdevtds1_5      = number_format(sqrt($fvariant_tds1_5), 2);
                        $totdsltds1_5     = count($ndttds1_5);
                        $inspecttds1_5    = $dt_tds1;
                        $outspecttds1_5   = $dt_tds2;
                        $prsouttds1_1     = number_format((($dt_tds2 / $totdsltds1_5) * (100)), 2);
                    } else {
                        $Mintds1_5      = '';
                        $Maxtds1_5      = '';
                        $Avgtds1_5      = '';
                        $stdevtds1_5    = '';
                        $totdsltds1_5   = '';
                        $inspecttds1_5  = '';
                        $outspecttds1_5 = '';
                        $prsouttds1_5   = '';
                    }

                    if (is_array($ndttds2_5) && count($ndttds2_5) > 0){
                        $Mintds2_5   = min($ndttds2_5);
                        $Maxtds2_5   = max($ndttds2_5);
                        $Avgtds2_5   = number_format((array_sum($ndttds2_5)) / (count($ndttds2_5)), 2);
                        $Counttds2_5 = count($ndttds2_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_5    = array_sum($ndttds2_5) / count($ndttds2_5);
                        $fvariant_tds2_5 = 0.00;
                        $xsample_tds2_5  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_5 as $tds){
                            $fvariant_tds2_5 += pow($tds - $fmean_tds2_5, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_5 /= ( $xsample_tds2_5 ? count($ndttds2_5) - 1 : count($ndttds2_5));
                        $stdevtds2_5      = number_format(sqrt($fvariant_tds2_5), 2);
                        $totdsltds2_5     = count($ndttds2_5);
                        $inspecttds2_5    = $dt_tds1;
                        $outspecttds2_5   = $dt_tds2;
                        $prsouttds2_5     = number_format((($dt_tds2 / $totdsltds2_5) * (100)), 2);
                    } else {
                        $Mintds2_5      = '';
                        $Maxtds2_5      = '';
                        $Avgtds2_5      = '';
                        $stdevtds2_5    = '';
                        $totdsltds2_5   = '';
                        $inspecttds2_5  = '';
                        $outspecttds2_5 = '';
                        $prsouttds2_5   = '';
                    }

                    if (is_array($ndttds3_5) && count($ndttds3_5) > 0){
                        $Mintds3_5   = min($ndttds3_5);
                        $Maxtds3_5   = max($ndttds3_5);
                        $Avgtds3_5   = number_format((array_sum($ndttds3_5)) / (count($ndttds3_5)), 2);
                        $Counttds3_5 = count($ndttds3_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_5    = array_sum($ndttds3_5) / count($ndttds3_5);
                        $fvariant_tds3_5 = 0.00;
                        $xsample_tds3_5  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_5 as $tds){
                            $fvariant_tds3_5 += pow($tds - $fmean_tds3_5, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_5 /= ( $xsample_tds3_5 ? count($ndttds3_5) - 1 : count($ndttds3_5));
                        $stdevtds3_5      = number_format(sqrt($fvariant_tds3_5), 2);
                        $totdsltds3_5     = count($ndttds3_5);
                        $inspecttds3_5    = $dt_tds1;
                        $outspecttds3_5   = $dt_tds2;
                        $prsouttds3_5     = number_format((($dt_tds2 / $totdsltds3_5) * (100)), 2);
                    } else {
                        $Mintds3_5      = '';
                        $Maxtds3_5      = '';
                        $Avgtds3_5      = '';
                        $stdevtds3_5    = '';
                        $totdsltds3_5   = '';
                        $inspecttds3_5  = '';
                        $outspecttds3_5 = '';
                        $prsouttds3_5   = '';
                    }

                    if (is_array($ndttds1_6) && count($ndttds1_6) > 0){
                        $Mintds1_6   = min($ndttds1_6);
                        $Maxtds1_6   = max($ndttds1_6);
                        $Avgtds1_6   = number_format((array_sum($ndttds1_6)) / (count($ndttds1_6)), 2);
                        $Counttds1_6 = count($ndttds1_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_6    = array_sum($ndttds1_6) / count($ndttds1_6);
                        $fvariant_tds1_6 = 0.00;
                        $xsample_tds1_6  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_6 as $tds){
                            $fvariant_tds1_6 += pow($tds - $fmean_tds1_6, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_6 /= ( $xsample_tds1_6 ? count($ndttds1_6) - 1 : count($ndttds1_6));
                        $stdevtds1_6      = number_format(sqrt($fvariant_tds1_6), 2);
                        $totdsltds1_6     = count($ndttds1_6);
                        $inspecttds1_6    = $dt_tds1;
                        $outspecttds1_6   = $dt_tds2;
                        $prsouttds1_6     = number_format((($dt_tds2 / $totdsltds1_6) * (100)), 2);
                    } else {
                        $Mintds1_6      = '';
                        $Maxtds1_6      = '';
                        $Avgtds1_6      = '';
                        $stdevtds1_6    = '';
                        $totdsltds1_6   = '';
                        $inspecttds1_6  = '';
                        $outspecttds1_6 = '';
                        $prsouttds1_6   = '';
                    }

                    if (is_array($ndttds2_6) && count($ndttds2_6) > 0){
                        $Mintds2_6   = min($ndttds2_6);
                        $Maxtds2_6   = max($ndttds2_6);
                        $Avgtds2_6   = number_format((array_sum($ndttds2_6)) / (count($ndttds2_6)), 2);
                        $Counttds2_6 = count($ndttds2_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_6    = array_sum($ndttds2_6) / count($ndttds2_6);
                        $fvariant_tds2_6 = 0.00;
                        $xsample_tds2_6  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_6 as $tds){
                            $fvariant_tds2_6 += pow($tds - $fmean_tds2_6, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_6 /= ( $xsample_tds2_6 ? count($ndttds2_6) - 1 : count($ndttds2_6));
                        $stdevtds2_6      = number_format(sqrt($fvariant_tds2_6), 2);
                        $totdsltds2_6     = count($ndttds2_6);
                        $inspecttds2_6    = $dt_tds1;
                        $outspecttds2_6   = $dt_tds2;
                        $prsouttds2_6     = number_format((($dt_tds2 / $totdsltds2_6) * (100)), 2);
                    } else {
                        $Mintds2_6      = '';
                        $Maxtds2_6      = '';
                        $Avgtds2_6      = '';
                        $stdevtds2_6    = '';
                        $totdsltds2_6   = '';
                        $inspecttds2_6  = '';
                        $outspecttds2_6 = '';
                        $prsouttds2_6   = '';
                    }

                    if (is_array($ndttds3_6) && count($ndttds3_6) > 0){
                        $Mintds3_6   = min($ndttds3_6);
                        $Maxtds3_6   = max($ndttds3_6);
                        $Avgtds3_6   = number_format((array_sum($ndttds3_6)) / (count($ndttds3_6)), 2);
                        $Counttds3_6 = count($ndttds3_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_6    = array_sum($ndttds3_6) / count($ndttds3_6);
                        $fvariant_tds3_6 = 0.00;
                        $xsample_tds3_6  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_6 as $tds){
                            $fvariant_tds3_6 += pow($tds - $fmean_tds3_6, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_6 /= ( $xsample_tds3_6 ? count($ndttds3_6) - 1 : count($ndttds3_6));
                        $stdevtds3_6      = number_format(sqrt($fvariant_tds3_6), 2);
                        $totdsltds3_6     = count($ndttds3_6);
                        $inspecttds3_6    = $dt_tds1;
                        $outspecttds3_6   = $dt_tds2;
                        $prsouttds3_6     = number_format((($dt_tds2 / $totdsltds3_6) * (100)), 2);
                    } else {
                        $Mintds3_6      = '';
                        $Maxtds3_6      = '';
                        $Avgtds3_6      = '';
                        $stdevtds3_6    = '';
                        $totdsltds3_6   = '';
                        $inspecttds3_6  = '';
                        $outspecttds3_6 = '';
                        $prsouttds3_6   = '';
                    }

                    if (is_array($ndttds1_7) && count($ndttds1_7) > 0){
                        $Mintds1_7   = min($ndttds1_7);
                        $Maxtds1_7   = max($ndttds1_7);
                        $Avgtds1_7   = number_format((array_sum($ndttds1_7)) / (count($ndttds1_7)), 2);
                        $Counttds1_7 = count($ndttds1_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_7    = array_sum($ndttds1_7) / count($ndttds1_7);
                        $fvariant_tds1_7 = 0.00;
                        $xsample_tds1_7  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_7 as $tds){
                            $fvariant_tds1_7 += pow($tds - $fmean_tds1_7, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_7 /= ( $xsample_tds1_7 ? count($ndttds1_7) - 1 : count($ndttds1_7));
                        $stdevtds1_7      = number_format(sqrt($fvariant_tds1_7), 2);
                        $totdsltds1_7     = count($ndttds1_7);
                        $inspecttds1_7    = $dt_tds1;
                        $outspecttds1_7   = $dt_tds2;
                        $prsouttds1_7     = number_format((($dt_tds2 / $totdsltds1_7) * (100)), 2);
                    } else {
                        $Mintds1_7      = '';
                        $Maxtds1_7      = '';
                        $Avgtds1_7      = '';
                        $stdevtds1_7    = '';
                        $totdsltds1_7   = '';
                        $inspecttds1_7  = '';
                        $outspecttds1_7 = '';
                        $prsouttds1_7   = '';
                    }

                    if (is_array($ndttds2_7) && count($ndttds2_7) > 0){
                        $Mintds2_7   = min($ndttds2_7);
                        $Maxtds2_7   = max($ndttds2_7);
                        $Avgtds2_7   = number_format((array_sum($ndttds2_7)) / (count($ndttds2_7)), 2);
                        $Counttds2_7 = count($ndttds2_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_7    = array_sum($ndttds2_7) / count($ndttds2_7);
                        $fvariant_tds2_7 = 0.00;
                        $xsample_tds2_7  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_7 as $tds){
                            $fvariant_tds2_7 += pow($tds - $fmean_tds2_7, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_7 /= ( $xsample_tds2_7 ? count($ndttds2_7) - 1 : count($ndttds2_7));
                        $stdevtds2_7      = number_format(sqrt($fvariant_tds2_7), 2);
                        $totdsltds2_7     = count($ndttds2_7);
                        $inspecttds2_7    = $dt_tds1;
                        $outspecttds2_7   = $dt_tds2;
                        $prsouttds2_7     = number_format((($dt_tds2 / $totdsltds2_7) * (100)), 2);
                    } else {
                        $Mintds2_7      = '';
                        $Maxtds2_7      = '';
                        $Avgtds2_7      = '';
                        $stdevtds2_7    = '';
                        $totdsltds2_7   = '';
                        $inspecttds2_7  = '';
                        $outspecttds2_7 = '';
                        $prsouttds2_7   = '';
                    }

                    if (is_array($ndttds3_7) && count($ndttds3_7) > 0){
                        $Mintds3_7   = min($ndttds3_7);
                        $Maxtds3_7   = max($ndttds3_7);
                        $Avgtds3_7   = number_format((array_sum($ndttds3_7)) / (count($ndttds3_7)), 2);
                        $Counttds3_7 = count($ndttds3_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_7    = array_sum($ndttds3_7) / count($ndttds3_7);
                        $fvariant_tds3_7 = 0.00;
                        $xsample_tds3_7  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_7 as $tds){
                            $fvariant_tds3_7 += pow($tds - $fmean_tds3_7, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_7 /= ( $xsample_tds3_7 ? count($ndttds3_7) - 1 : count($ndttds3_7));
                        $stdevtds3_7      = number_format(sqrt($fvariant_tds3_7), 2);
                        $totdsltds3_7     = count($ndttds3_7);
                        $inspecttds3_7    = $dt_tds1;
                        $outspecttds3_7   = $dt_tds2;
                        $prsouttds3_7     = number_format((($dt_tds2 / $totdsltds3_7) * (100)), 2);
                    } else {
                        $Mintds3_7      = '';
                        $Maxtds3_7      = '';
                        $Avgtds3_7      = '';
                        $stdevtds3_7    = '';
                        $totdsltds3_7   = '';
                        $inspecttds3_7  = '';
                        $outspecttds3_7 = '';
                        $prsouttds3_7   = '';
                    }

                    if (is_array($ndttds1_8) && count($ndttds1_8) > 0){
                        $Mintds1_8   = min($ndttds1_8);
                        $Maxtds1_8   = max($ndttds1_8);
                        $Avgtds1_8   = number_format((array_sum($ndttds1_8)) / (count($ndttds1_8)), 2);
                        $Counttds1_8 = count($ndttds1_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds1_8    = array_sum($ndttds1_8) / count($ndttds1_8);
                        $fvariant_tds1_8 = 0.00;
                        $xsample_tds1_8  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds1_8 as $tds){
                            $fvariant_tds1_8 += pow($tds - $fmean_tds1_8, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds1_8 /= ( $xsample_tds1_8 ? count($ndttds1_8) - 1 : count($ndttds1_8));
                        $stdevtds1_8      = number_format(sqrt($fvariant_tds1_8), 2);
                        $totdsltds1_8     = count($ndttds1_8);
                        $inspecttds1_8    = $dt_tds1;
                        $outspecttds1_8   = $dt_tds2;
                        $prsouttds1_8     = number_format((($dt_tds2 / $totdsltds1_8) * (100)), 2);
                    } else {
                        $Mintds1_8      = '';
                        $Maxtds1_8      = '';
                        $Avgtds1_8      = '';
                        $stdevtds1_8    = '';
                        $totdsltds1_8   = '';
                        $inspecttds1_8  = '';
                        $outspecttds1_8 = '';
                        $prsouttds1_8   = '';
                    }

                    if (is_array($ndttds2_8) && count($ndttds2_8) > 0){
                        $Mintds2_8   = min($ndttds2_8);
                        $Maxtds2_8   = max($ndttds2_8);
                        $Avgtds2_8   = number_format((array_sum($ndttds2_8)) / (count($ndttds2_8)), 2);
                        $Counttds2_8 = count($ndttds2_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds2_8    = array_sum($ndttds2_8) / count($ndttds2_8);
                        $fvariant_tds2_8 = 0.00;
                        $xsample_tds2_8  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds2_8 as $tds){
                            $fvariant_tds2_8 += pow($tds - $fmean_tds2_8, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds2_8 /= ( $xsample_tds2_8 ? count($ndttds2_8) - 1 : count($ndttds2_8));
                        $stdevtds2_8      = number_format(sqrt($fvariant_tds2_8), 2);
                        $totdsltds2_8     = count($ndttds2_8);
                        $inspecttds2_8    = $dt_tds1;
                        $outspecttds2_8   = $dt_tds2;
                        $prsouttds2_8     = number_format((($dt_tds2 / $totdsltds2_8) * (100)), 2);
                    } else {
                        $Mintds2_8      = '';
                        $Maxtds2_8      = '';
                        $Avgtds2_8      = '';
                        $stdevtds2_8    = '';
                        $totdsltds2_8   = '';
                        $inspecttds2_8  = '';
                        $outspecttds2_8 = '';
                        $prsouttds2_8   = '';
                    }

                    if (is_array($ndttds3_8) && count($ndttds3_8) > 0){
                        $Mintds3_8   = min($ndttds3_8);
                        $Maxtds3_8   = max($ndttds3_8);
                        $Avgtds3_8   = number_format((array_sum($ndttds3_8)) / (count($ndttds3_8)), 2);
                        $Counttds3_8 = count($ndttds3_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean_tds3_8    = array_sum($ndttds3_8) / count($ndttds3_8);
                        $fvariant_tds3_8 = 0.00;
                        $xsample_tds3_8  = false;
                        $dt_tds1         = 0;
                        $dt_tds2         = 0;
                        foreach ($ndttds3_8 as $tds){
                            $fvariant_tds3_8 += pow($tds - $fmean_tds3_8, 2);
                            if (($tds >= 10.5) && ($tds <= 11.5)){
                                $dt_tds1++;
                            }
                            if ((($tds > 0) && ($tds < 10.5)) || ($tds > 11.5)){
                                $dt_tds2++;
                            }
                        }
                        $fvariant_tds3_8 /= ( $xsample_tds3_8 ? count($ndttds3_8) - 1 : count($ndttds3_8));
                        $stdevtds3_8      = number_format(sqrt($fvariant_tds3_8), 2);
                        $totdsltds3_8     = count($ndttds3_8);
                        $inspecttds3_8    = $dt_tds1;
                        $outspecttds3_8   = $dt_tds2;
                        $prsouttds3_8     = number_format((($dt_tds2 / $totdsltds3_8) * (100)), 2);
                    } else {
                        $Mintds3_8      = '';
                        $Maxtds3_8      = '';
                        $Avgtds3_8      = '';
                        $stdevtds3_8    = '';
                        $totdsltds3_8   = '';
                        $inspecttds3_8  = '';
                        $outspecttds3_8 = '';
                        $prsouttds3_8   = '';
                    }

                    $rowfoot_d1  = $rowCount4 + 1;
                    $rowfoot_d2  = $rowfoot_d1 + 1;
                    $rowfoot_d3  = $rowfoot_d2 + 1;
                    $rowfoot_d4  = $rowfoot_d3 + 1;
                    $rowfoot_d5  = $rowfoot_d4 + 1;
                    $rowfoot_d6  = $rowfoot_d5 + 1;
                    $rowfoot_d7  = $rowfoot_d6 + 1;
                    $rowfoot_d8  = $rowfoot_d7 + 1;
                    $rowfoot_d9  = $rowfoot_d8 + 1;
                    $rowfoot_d10 = $rowfoot_d9 + 1;

                    $objPHPExcel4->mergeCells('A' . $rowfoot_d1 . ':Y' . $rowfoot_d1)->setCellValue('A' . $rowfoot_d1, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d2, 'Maximum');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d2, $Maxtds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d2, $Maxtds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d2, $Maxtds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d2, $Maxtds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d2, $Maxtds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d2, $Maxtds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d2, $Maxtds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d2, $Maxtds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d2, $Maxtds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d2, $Maxtds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d2, $Maxtds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d2, $Maxtds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d2, $Maxtds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d2, $Maxtds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d2, $Maxtds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d2, $Maxtds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d2, $Maxtds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d2, $Maxtds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d2, $Maxtds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d2, $Maxtds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d2, $Maxtds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d2, $Maxtds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d2, $Maxtds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d2, $Maxtds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d3, 'Minimum');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d3, $Mintds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d3, $Mintds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d3, $Mintds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d3, $Mintds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d3, $Mintds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d3, $Mintds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d3, $Mintds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d3, $Mintds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d3, $Mintds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d3, $Mintds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d3, $Mintds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d3, $Mintds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d3, $Mintds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d3, $Mintds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d3, $Mintds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d3, $Mintds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d3, $Mintds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d3, $Mintds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d3, $Mintds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d3, $Mintds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d3, $Mintds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d3, $Mintds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d3, $Mintds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d3, $Mintds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d4, 'Average');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d4, $Avgtds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d4, $Avgtds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d4, $Avgtds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d4, $Avgtds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d4, $Avgtds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d4, $Avgtds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d4, $Avgtds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d4, $Avgtds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d4, $Avgtds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d4, $Avgtds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d4, $Avgtds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d4, $Avgtds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d4, $Avgtds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d4, $Avgtds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d4, $Avgtds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d4, $Avgtds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d4, $Avgtds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d4, $Avgtds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d4, $Avgtds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d4, $Avgtds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d4, $Avgtds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d4, $Avgtds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d4, $Avgtds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d4, $Avgtds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d5, 'Stdev');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d5, $stdevtds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d5, $stdevtds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d5, $stdevtds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d5, $stdevtds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d5, $stdevtds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d5, $stdevtds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d5, $stdevtds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d5, $stdevtds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d5, $stdevtds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d5, $stdevtds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d5, $stdevtds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d5, $stdevtds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d5, $stdevtds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d5, $stdevtds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d5, $stdevtds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d5, $stdevtds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d5, $stdevtds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d5, $stdevtds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d5, $stdevtds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d5, $stdevtds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d5, $stdevtds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d5, $stdevtds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d5, $stdevtds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d5, $stdevtds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d6, 'Total Data');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d6, $totdsltds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d6, $totdsltds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d6, $totdsltds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d6, $totdsltds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d6, $totdsltds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d6, $totdsltds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d6, $totdsltds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d6, $totdsltds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d6, $totdsltds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d6, $totdsltds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d6, $totdsltds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d6, $totdsltds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d6, $totdsltds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d6, $totdsltds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d6, $totdsltds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d6, $totdsltds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d6, $totdsltds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d6, $totdsltds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d6, $totdsltds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d6, $totdsltds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d6, $totdsltds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d6, $totdsltds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d6, $totdsltds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d6, $totdsltds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d7, 'Whitin Spect');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d7, $inspecttds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d7, $inspecttds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d7, $inspecttds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d7, $inspecttds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d7, $inspecttds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d7, $inspecttds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d7, $inspecttds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d7, $inspecttds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d7, $inspecttds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d7, $inspecttds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d7, $inspecttds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d7, $inspecttds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d7, $inspecttds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d7, $inspecttds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d7, $inspecttds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d7, $inspecttds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d7, $inspecttds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d7, $inspecttds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d7, $inspecttds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d7, $inspecttds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d7, $inspecttds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d7, $inspecttds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d7, $inspecttds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d7, $inspecttds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d8, 'Outspect Data');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d8, $outspecttds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d8, $outspecttds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d8, $outspecttds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d8, $outspecttds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d8, $outspecttds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d8, $outspecttds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d8, $outspecttds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d8, $outspecttds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d8, $outspecttds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d8, $outspecttds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d8, $outspecttds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d8, $outspecttds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d8, $outspecttds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d8, $outspecttds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d8, $outspecttds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d8, $outspecttds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d8, $outspecttds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d8, $outspecttds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d8, $outspecttds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d8, $outspecttds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d8, $outspecttds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d8, $outspecttds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d8, $outspecttds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d8, $outspecttds3_8);

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d9, 'Percent Outs');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d9, $prsouttds1_1);
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d9, $prsouttds2_1);
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d9, $prsouttds3_1);
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d9, $prsouttds1_2);
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d9, $prsouttds2_2);
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d9, $prsouttds3_2);
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d9, $prsouttds1_3);
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d9, $prsouttds2_3);
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d9, $prsouttds3_3);
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d9, $prsouttds1_4);
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d9, $prsouttds2_4);
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d9, $prsouttds3_4);
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d9, $prsouttds1_5);
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d9, $prsouttds2_5);
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d9, $prsouttds3_5);
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d9, $prsouttds1_6);
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d9, $prsouttds2_6);
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d9, $prsouttds3_6);
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d9, $prsouttds1_7);
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d9, $prsouttds2_7);
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d9, $prsouttds3_7);
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d9, $prsouttds1_8);
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d9, $prsouttds2_8);
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d9, $prsouttds3_8);

                    $objPHPExcel4->mergeCells('A' . $rowfoot_d10 . ':Y' . $rowfoot_d10)->setCellValue('A' . $rowfoot_d10, '');

                    $objPHPExcel4->setSharedStyle($headerStyle, 'A' . $rowfoot_d1 . ':Y' . $rowfoot_d10);
                } else {
                    $rowCount4 = 9;

                    $objPHPExcel4->setSharedStyle($bodyStyle, 'A' . $rowCount4 . ':Y' . $rowCount4);

                    $objPHPExcel4->setCellValue('A' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('B' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('C' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('D' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('E' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('F' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('G' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('H' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('I' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('J' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('K' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('L' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('M' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('N' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('O' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('P' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('Q' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('R' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('S' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('T' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('U' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('V' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('W' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('X' . $rowCount4, '');
                    $objPHPExcel4->setCellValue('Y' . $rowCount4, '');

                    $rowfoot_d1  = $rowCount4 + 1;
                    $rowfoot_d2  = $rowfoot_d1 + 1;
                    $rowfoot_d3  = $rowfoot_d2 + 1;
                    $rowfoot_d4  = $rowfoot_d3 + 1;
                    $rowfoot_d5  = $rowfoot_d4 + 1;
                    $rowfoot_d6  = $rowfoot_d5 + 1;
                    $rowfoot_d7  = $rowfoot_d6 + 1;
                    $rowfoot_d8  = $rowfoot_d7 + 1;
                    $rowfoot_d9  = $rowfoot_d8 + 1;
                    $rowfoot_d10 = $rowfoot_d9 + 1;

                    $objPHPExcel4->mergeCells('A' . $rowfoot_d1 . ':Y' . $rowfoot_d1)->setCellValue('A' . $rowfoot_d1, '');


                    $objPHPExcel4->setCellValue('A' . $rowfoot_d2, 'Maximum');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d2, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d2, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d3, 'Minimum');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d3, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d3, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d4, 'Average');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d4, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d4, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d5, 'Stdev');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d5, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d5, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d6, 'Total Data');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d6, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d6, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d7, 'Whitin Spect');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d7, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d7, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d8, 'Outspect Data');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d8, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d8, '');

                    $objPHPExcel4->setCellValue('A' . $rowfoot_d9, 'Percent Outs');
                    $objPHPExcel4->setCellValue('B' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('C' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('D' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('E' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('F' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('G' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('H' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('I' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('J' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('K' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('L' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('M' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('N' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('O' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('P' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('Q' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('R' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('S' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('T' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('U' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('V' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('W' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('X' . $rowfoot_d9, '');
                    $objPHPExcel4->setCellValue('Y' . $rowfoot_d9, '');

                    $objPHPExcel4->mergeCells('A' . $rowfoot_d10 . ':Y' . $rowfoot_d10)->setCellValue('A' . $rowfoot_d10, '');
                    $objPHPExcel4->setSharedStyle($headerStyle, 'A' . $rowfoot_d1 . ':Y' . $rowfoot_d10);
                }

                $rowsapp_d1 = $rowfoot_d10 + 1;
                $rowsapp_d2 = $rowsapp_d1 + 1;
                $rowsapp_d3 = $rowsapp_d2 + 1;
                $rowsapp_d4 = $rowsapp_d3 + 1;
                $rowsapp_d5 = $rowsapp_d4 + 1;

                $objPHPExcel4->getStyle('A' . $rowsapp_d1 . ':Y' . $rowsapp_d5)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

                $objPHPExcel4->mergeCells('A' . $rowsapp_d1 . ':I' . $rowsapp_d1)->setCellValue('A' . $rowsapp_d1, 'Reported By');
                $objPHPExcel4->mergeCells('J' . $rowsapp_d1 . ':Q' . $rowsapp_d1)->setCellValue('J' . $rowsapp_d1, 'Checked By');
                $objPHPExcel4->mergeCells('R' . $rowsapp_d1 . ':Y' . $rowsapp_d1)->setCellValue('R' . $rowsapp_d1, 'Confirmed By');

                $objPHPExcel4->mergeCells('A' . $rowsapp_d2 . ':I' . $rowsapp_d2)->setCellValue('A' . $rowsapp_d2, '');
                $objPHPExcel4->mergeCells('J' . $rowsapp_d2 . ':Q' . $rowsapp_d2)->setCellValue('J' . $rowsapp_d2, '');
                $objPHPExcel4->mergeCells('R' . $rowsapp_d2 . ':Y' . $rowsapp_d2)->setCellValue('R' . $rowsapp_d2, '');

                $objPHPExcel4->mergeCells('A' . $rowsapp_d3 . ':I' . $rowsapp_d3)->setCellValue('A' . $rowsapp_d3, 'Name :');
                $objPHPExcel4->mergeCells('J' . $rowsapp_d3 . ':Q' . $rowsapp_d3)->setCellValue('J' . $rowsapp_d3, 'Name :');
                $objPHPExcel4->mergeCells('R' . $rowsapp_d3 . ':Y' . $rowsapp_d3)->setCellValue('R' . $rowsapp_d3, 'Name :');

                $objPHPExcel4->mergeCells('A' . $rowsapp_d4 . ':I' . $rowsapp_d4)->setCellValue('A' . $rowsapp_d4, 'Position :');
                $objPHPExcel4->mergeCells('J' . $rowsapp_d4 . ':Q' . $rowsapp_d4)->setCellValue('J' . $rowsapp_d4, 'Position :');
                $objPHPExcel4->mergeCells('R' . $rowsapp_d4 . ':Y' . $rowsapp_d4)->setCellValue('R' . $rowsapp_d4, 'Position :');

                $objPHPExcel4->mergeCells('A' . $rowsapp_d5 . ':I' . $rowsapp_d5)->setCellValue('A' . $rowsapp_d5, 'Date :');
                $objPHPExcel4->mergeCells('J' . $rowsapp_d5 . ':Q' . $rowsapp_d5)->setCellValue('J' . $rowsapp_d5, 'Date :');
                $objPHPExcel4->mergeCells('R' . $rowsapp_d5 . ':Y' . $rowsapp_d5)->setCellValue('R' . $rowsapp_d5, 'Date :');

                $objPHPExcel4->setSharedStyle($headerStyle, 'A' . $rowsapp_d1 . ':Y' . $rowsapp_d5);

            break;

            case $frmkode == 'frmnon013' && $frmvrs == '00': 

                $Doc = 'BWA/QAD-CHE/' . substr($dtstart, 0, 4) . '/' . substr($dtstart, 5, 2);
                if ($dtstart != $dtfinish){
                    $Tanggal = substr($dtstart, 8, 2) . '-' . substr($dtstart, 5, 2) . '-' . substr($dtstart, 0, 4) . ' s/d ' . substr($dtfinish, 8, 2) . '-' . substr($dtfinish, 5, 2) . '-' . substr($dtfinish, 0, 4);
                } else {
                    $Tanggal = substr($dtstart, 8, 2) . '-' . substr($dtstart, 5, 2) . '-' . substr($dtstart, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'Y') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:AE1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:Y3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Z2:AE2')->setCellValue('Z2', 'Doc : ' . $Doc);
                $objPHPExcel->mergeCells('Z3:AE3')->setCellValue('Z3', 'Date : ' . $Tanggal);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:Y4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('Z4:AE4')->setCellValue('Z4', 'Page : 1 of 5');

                $objPHPExcel->mergeCells('A5:AE5')->setCellValue('A5', ' ');

                $objPHPExcel->mergeCells('A6:A9')->setCellValue('A6', 'Sampling and Analysis Date)');
                $objPHPExcel->mergeCells('B6:H6')->setCellValue('B6', 'Total Plate Count (cfu/ml; * Spec in max cfu/ml)');
                $objPHPExcel->mergeCells('B7:B9')->setCellValue('B7', 'After Carbon 1 Filter(1000*)');
                $objPHPExcel->mergeCells('C7:C9')->setCellValue('C7', 'After Carbon 2 Filter(1000*)');
                $objPHPExcel->mergeCells('D7:D9')->setCellValue('D7', 'After Softener 1 (1000*)');
                $objPHPExcel->mergeCells('E7:E9')->setCellValue('E7', 'After Softener 2 (1000*)');
                $objPHPExcel->mergeCells('F7:F9')->setCellValue('F7', 'After Softener 3 (1000*)');
                $objPHPExcel->mergeCells('G7:G9')->setCellValue('G7', 'After RO. 01 (500*)');
                $objPHPExcel->mergeCells('H7:H9')->setCellValue('H7', 'After RO. 02 (500*)');

                $objPHPExcel->mergeCells('I6:O6')->setCellValue('I6', 'Coliform Count (cfu/ml; Spec: <1 cfu/ml)');
                $objPHPExcel->mergeCells('I7:I9')->setCellValue('I7', 'After Carbon 1 Filter(1000*)');
                $objPHPExcel->mergeCells('J7:J9')->setCellValue('J7', 'After Carbon 2 Filter(1000*)');
                $objPHPExcel->mergeCells('K7:K9')->setCellValue('K7', 'After Softener 1 (1000*)');
                $objPHPExcel->mergeCells('L7:L9')->setCellValue('L7', 'After Softener 2 (1000*)');
                $objPHPExcel->mergeCells('M7:M9')->setCellValue('M7', 'After Softener 3 (1000*)');
                $objPHPExcel->mergeCells('N7:N9')->setCellValue('N7', 'After RO. 01 (500*)');
                $objPHPExcel->mergeCells('O7:O9')->setCellValue('O7', 'After RO. 02 (500*)');

                $objPHPExcel->mergeCells('P6:V6')->setCellValue('P6', 'E. coli (Absence/10 ml) as Gas');
                $objPHPExcel->mergeCells('P7:P9')->setCellValue('P7', 'After Carbon 1 Filter(1000*)');
                $objPHPExcel->mergeCells('Q7:Q9')->setCellValue('Q7', 'After Carbon 2 Filter(1000*)');
                $objPHPExcel->mergeCells('R7:R9')->setCellValue('R7', 'After Softener 1 (1000*)');
                $objPHPExcel->mergeCells('S7:S9')->setCellValue('S7', 'After Softener 2 (1000*)');
                $objPHPExcel->mergeCells('T7:T9')->setCellValue('T7', 'After Softener 3 (1000*)');
                $objPHPExcel->mergeCells('U7:U9')->setCellValue('U7', 'After RO. 01 (500*)');
                $objPHPExcel->mergeCells('V7:V9')->setCellValue('V7', 'After RO. 02 (500*)');

                $objPHPExcel->mergeCells('W6:AC6')->setCellValue('W6', 'E. coli (Absence/10 ml) as Indol');
                $objPHPExcel->mergeCells('W7:W9')->setCellValue('W7', 'After Carbon 1 Filter(1000*)');
                $objPHPExcel->mergeCells('X7:X9')->setCellValue('X7', 'After Carbon 2 Filter(1000*)');
                $objPHPExcel->mergeCells('Y7:Y9')->setCellValue('Y7', 'After Softener 1 (1000*)');
                $objPHPExcel->mergeCells('Z7:Z9')->setCellValue('Z7', 'After Softener 2 (1000*)');
                $objPHPExcel->mergeCells('AA7:AA9')->setCellValue('AA7', 'After Softener 3 (1000*)');
                $objPHPExcel->mergeCells('AB7:AB9')->setCellValue('AB7', 'After RO. 01 (500*)');
                $objPHPExcel->mergeCells('AC7:AC9')->setCellValue('AC7', 'After RO. 02 (500*)');

                $objPHPExcel->mergeCells('AD6:AE9')->setCellValue('AD6', 'Keterangan');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AE5');
                $objPHPExcel->setSharedStyle($cellblue, 'A6:A9');
                $objPHPExcel->setSharedStyle($cellblue, 'B6:AC6');
                $objPHPExcel->setSharedStyle($cellblue, 'AD6:AE9');
                $objPHPExcel->setSharedStyle($cellblue, 'B7:B9');
                $objPHPExcel->setSharedStyle($cellblue, 'C7:C9');
                $objPHPExcel->setSharedStyle($cellblue, 'I7:I9');
                $objPHPExcel->setSharedStyle($cellblue, 'J7:J9');
                $objPHPExcel->setSharedStyle($cellblue, 'P7:P9');
                $objPHPExcel->setSharedStyle($cellblue, 'Q7:Q9');
                $objPHPExcel->setSharedStyle($cellblue, 'W7:W9');
                $objPHPExcel->setSharedStyle($cellblue, 'X7:X9');

                $objPHPExcel->setSharedStyle($cellungu, 'D7:F9');
                $objPHPExcel->setSharedStyle($cellungu, 'K7:M9');
                $objPHPExcel->setSharedStyle($cellungu, 'R7:T9');
                $objPHPExcel->setSharedStyle($cellungu, 'Y7:AA9');
                $objPHPExcel->setSharedStyle($cellcoklat, 'G7:H9');
                $objPHPExcel->setSharedStyle($cellcoklat, 'N7:O9');
                $objPHPExcel->setSharedStyle($cellcoklat, 'U7:V9');
                $objPHPExcel->setSharedStyle($cellcoklat, 'AB7:AC9');

                if (isset($dtdetail1)){
                    $rowCount = 9;
                    foreach ($dtdetail1 as $row){
                        $rowCount++;

                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':Y' . $rowCount);

                        $steam_ph1[] = $row->shift1_steam;
                        $steam_ph2[] = $row->shift2_steam;
                        $steam_ph3[] = $row->shift3_steam;
                        $fw_ph1   [] = $row->shift1_fw;
                        $fw_ph2   [] = $row->shift2_fw;
                        $fw_ph3   [] = $row->shift3_fw;

                        $ndt_ph1_1[] = $row->shift1_1;
                        $ndt_ph2_1[] = $row->shift2_1;
                        $ndt_ph3_1[] = $row->shift3_1;
                        $ndt_ph1_2[] = $row->shift1_2;
                        $ndt_ph2_2[] = $row->shift2_2;
                        $ndt_ph3_2[] = $row->shift3_2;
                        $ndt_ph1_3[] = $row->shift1_3;
                        $ndt_ph2_3[] = $row->shift2_3;
                        $ndt_ph3_3[] = $row->shift3_3;
                        $ndt_ph1_4[] = $row->shift1_4;
                        $ndt_ph2_4[] = $row->shift2_4;
                        $ndt_ph3_4[] = $row->shift3_4;
                        $ndt_ph1_5[] = $row->shift1_5;
                        $ndt_ph2_5[] = $row->shift2_5;
                        $ndt_ph3_5[] = $row->shift3_5;
                        $ndt_ph1_6[] = $row->shift1_6;
                        $ndt_ph2_6[] = $row->shift2_6;
                        $ndt_ph3_6[] = $row->shift3_6;
                        $ndt_ph1_7[] = $row->shift1_7;
                        $ndt_ph2_7[] = $row->shift2_7;
                        $ndt_ph3_7[] = $row->shift3_7;
                        $ndt_ph1_8[] = $row->shift1_8;
                        $ndt_ph2_8[] = $row->shift2_8;
                        $ndt_ph3_8[] = $row->shift3_8;

                        $objPHPExcel->setCellValue('A' . $rowCount, $row->tanggal);
                        $objPHPExcel->setCellValue('B' . $rowCount, $row->shift1_1);
                        $objPHPExcel->setCellValue('C' . $rowCount, $row->shift2_1);
                        $objPHPExcel->setCellValue('D' . $rowCount, $row->shift3_1);
                        $objPHPExcel->setCellValue('E' . $rowCount, $row->shift1_2);
                        $objPHPExcel->setCellValue('F' . $rowCount, $row->shift2_2);
                        $objPHPExcel->setCellValue('G' . $rowCount, $row->shift3_2);
                        $objPHPExcel->setCellValue('H' . $rowCount, $row->shift1_3);
                        $objPHPExcel->setCellValue('I' . $rowCount, $row->shift2_3);
                        $objPHPExcel->setCellValue('J' . $rowCount, $row->shift3_3);
                        $objPHPExcel->setCellValue('K' . $rowCount, $row->shift1_4);
                        $objPHPExcel->setCellValue('L' . $rowCount, $row->shift2_4);
                        $objPHPExcel->setCellValue('M' . $rowCount, $row->shift3_4);
                        $objPHPExcel->setCellValue('N' . $rowCount, $row->shift1_5);
                        $objPHPExcel->setCellValue('O' . $rowCount, $row->shift2_5);
                        $objPHPExcel->setCellValue('P' . $rowCount, $row->shift3_5);
                        $objPHPExcel->setCellValue('Q' . $rowCount, $row->shift1_6);
                        $objPHPExcel->setCellValue('R' . $rowCount, $row->shift2_6);
                        $objPHPExcel->setCellValue('S' . $rowCount, $row->shift3_6);
                        $objPHPExcel->setCellValue('T' . $rowCount, $row->shift1_7);
                        $objPHPExcel->setCellValue('U' . $rowCount, $row->shift2_7);
                        $objPHPExcel->setCellValue('V' . $rowCount, $row->shift3_7);
                        $objPHPExcel->setCellValue('W' . $rowCount, $row->shift1_8);
                        $objPHPExcel->setCellValue('X' . $rowCount, $row->shift2_8);
                        $objPHPExcel->setCellValue('Y' . $rowCount, $row->shift3_8);
                    }

                    $ndtph1_1 = array_diff($ndt_ph1_1, array('', 0));
                    $ndtph2_1 = array_diff($ndt_ph2_1, array('', 0));
                    $ndtph3_1 = array_diff($ndt_ph3_1, array('', 0));
                    $ndtph1_2 = array_diff($ndt_ph1_2, array('', 0));
                    $ndtph2_2 = array_diff($ndt_ph2_2, array('', 0));
                    $ndtph3_2 = array_diff($ndt_ph3_2, array('', 0));
                    $ndtph1_3 = array_diff($ndt_ph1_3, array('', 0));
                    $ndtph2_3 = array_diff($ndt_ph2_3, array('', 0));
                    $ndtph3_3 = array_diff($ndt_ph3_3, array('', 0));
                    $ndtph1_4 = array_diff($ndt_ph1_4, array('', 0));
                    $ndtph2_4 = array_diff($ndt_ph2_4, array('', 0));
                    $ndtph3_4 = array_diff($ndt_ph3_4, array('', 0));
                    $ndtph1_5 = array_diff($ndt_ph1_5, array('', 0));
                    $ndtph2_5 = array_diff($ndt_ph2_5, array('', 0));
                    $ndtph3_5 = array_diff($ndt_ph3_5, array('', 0));
                    $ndtph1_6 = array_diff($ndt_ph1_6, array('', 0));
                    $ndtph2_6 = array_diff($ndt_ph2_6, array('', 0));
                    $ndtph3_6 = array_diff($ndt_ph3_6, array('', 0));
                    $ndtph1_7 = array_diff($ndt_ph1_7, array('', 0));
                    $ndtph2_7 = array_diff($ndt_ph2_7, array('', 0));
                    $ndtph3_7 = array_diff($ndt_ph3_7, array('', 0));
                    $ndtph1_8 = array_diff($ndt_ph1_8, array('', 0));
                    $ndtph2_8 = array_diff($ndt_ph2_8, array('', 0));
                    $ndtph3_8 = array_diff($ndt_ph3_8, array('', 0));

                    if (is_array($ndtph1_1) && count($ndtph1_1) > 0){
                        $Minph1_1   = min($ndtph1_1);
                        $Maxph1_1   = max($ndtph1_1);
                        $Avgph1_1   = number_format((array_sum($ndtph1_1)) / (count($ndtph1_1)), 2);
                        $Countph1_1 = count($ndtph1_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_1    = array_sum($ndtph1_1) / count($ndtph1_1);
                        $fvariant1_1 = 0.00;
                        $xsample1_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_1 as $i){
                            $fvariant1_1 += pow($i - $fmean1_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_1   /= ( $xsample1_1 ? count($ndtph1_1) - 1 : count($ndtph1_1));
                        $stdevph1_1     = number_format(sqrt($fvariant1_1), 2);
                        $totalph1_1     = count($ndtph1_1);
                        $inspectph1_1   = $dt1;
                        $outspectph1_1  = $dt2;
                        $prsoutph1_1    = number_format((($dt2 / $totalph1_1) * (100)), 2);
                    } else {

                        $Minph1_1      = '';
                        $Maxph1_1      = '';
                        $Avgph1_1      = '';
                        $stdevph1_1    = '';
                        $totalph1_1    = '';
                        $inspectph1_1  = '';
                        $outspectph1_1 = '';
                        $prsoutph1_1   = '';
                    }

                    if (is_array($ndtph2_1) && count($ndtph2_1) > 0){
                        $Minph2_1   = min($ndtph2_1);
                        $Maxph2_1   = max($ndtph2_1);
                        $Avgph2_1   = number_format((array_sum($ndtph2_1)) / (count($ndtph2_1)), 2);
                        $Countph2_1 = count($ndtph2_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_1    = array_sum($ndtph2_1) / count($ndtph2_1);
                        $fvariant2_1 = 0.00;
                        $xsample2_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_1 as $i){
                            $fvariant2_1 += pow($i - $fmean2_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_1   /= ( $xsample2_1 ? count($ndtph2_1) - 1 : count($ndtph2_1));
                        $stdevph2_1     = number_format(sqrt($fvariant2_1), 2);
                        $totalph2_1     = count($ndtph2_1);
                        $inspectph2_1   = $dt1;
                        $outspectph2_1  = $dt2;
                        $prsoutph2_1    = number_format((($dt2 / $totalph2_1) * (100)), 2);
                    } else {
                        $Minph2_1      = '';
                        $Maxph2_1      = '';
                        $Avgph2_1      = '';
                        $stdevph2_1    = '';
                        $totalph2_1    = '';
                        $inspectph2_1  = '';
                        $outspectph2_1 = '';
                        $prsoutph2_1   = '';
                    }

                    if (is_array($ndtph3_1) && count($ndtph3_1) > 0){
                        $Minph3_1   = min($ndtph3_1);
                        $Maxph3_1   = max($ndtph3_1);
                        $Avgph3_1   = number_format((array_sum($ndtph3_1)) / (count($ndtph3_1)), 2);
                        $Countph3_1 = count($ndtph3_1);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_1    = array_sum($ndtph3_1) / count($ndtph3_1);
                        $fvariant3_1 = 0.00;
                        $xsample3_1  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_1 as $i){
                            $fvariant3_1 += pow($i - $fmean3_1, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_1   /= ( $xsample3_1 ? count($ndtph3_1) - 1 : count($ndtph3_1));
                        $stdevph3_1     = number_format(sqrt($fvariant3_1), 2);
                        $totalph3_1     = count($ndtph3_1);
                        $inspectph3_1   = $dt1;
                        $outspectph3_1  = $dt2;
                        $prsoutph3_1    = number_format((($dt2 / $totalph3_1) * (100)), 2);
                    } else {
                        $Minph3_1      = '';
                        $Maxph3_1      = '';
                        $Avgph3_1      = '';
                        $stdevph3_1    = '';
                        $totalph3_1    = '';
                        $inspectph3_1  = '';
                        $outspectph3_1 = '';
                        $prsoutph3_1   = '';
                    }

                    if (is_array($ndtph1_2) && count($ndtph1_2) > 0){
                        $Minph1_2   = min($ndtph1_2);
                        $Maxph1_2   = max($ndtph1_2);
                        $Avgph1_2   = number_format((array_sum($ndtph1_2)) / (count($ndtph1_2)), 2);
                        $Countph1_2 = count($ndtph1_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_2    = array_sum($ndtph1_2) / count($ndtph1_2);
                        $fvariant1_2 = 0.00;
                        $xsample1_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_2 as $i){
                            $fvariant1_2 += pow($i - $fmean1_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_2   /= ( $xsample1_2 ? count($ndtph1_2) - 1 : count($ndtph1_2));
                        $stdevph1_2     = number_format(sqrt($fvariant1_2), 2);
                        $totalph1_2     = count($ndtph1_2);
                        $inspectph1_2   = $dt1;
                        $outspectph1_2  = $dt2;
                        $prsoutph1_2    = number_format((($dt2 / $totalph1_2) * (100)), 2);
                    } else {
                        $Minph1_2      = '';
                        $Maxph1_2      = '';
                        $Avgph1_2      = '';
                        $stdevph1_2    = '';
                        $totalph1_2    = '';
                        $inspectph1_2  = '';
                        $outspectph1_2 = '';
                        $prsoutph1_2   = '';
                    }

                    if (is_array($ndtph2_2) && count($ndtph2_2) > 0){
                        $Minph2_2   = min($ndtph2_2);
                        $Maxph2_2   = max($ndtph2_2);
                        $Avgph2_2   = number_format((array_sum($ndtph2_2)) / (count($ndtph2_2)), 2);
                        $Countph2_2 = count($ndtph2_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_2    = array_sum($ndtph2_2) / count($ndtph2_2);
                        $fvariant2_2 = 0.00;
                        $xsample2_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_2 as $i){
                            $fvariant2_2 += pow($i - $fmean2_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_2   /= ( $xsample2_2 ? count($ndtph2_2) - 1 : count($ndtph2_2));
                        $stdevph2_2     = number_format(sqrt($fvariant2_2), 2);
                        $totalph2_2     = count($ndtph2_2);
                        $inspectph2_2   = $dt1;
                        $outspectph2_2  = $dt2;
                        $prsoutph2_2    = number_format((($dt2 / $totalph2_2) * (100)), 2);
                    } else {
                        $Minph2_2      = '';
                        $Maxph2_2      = '';
                        $Avgph2_2      = '';
                        $stdevph2_2    = '';
                        $totalph2_2    = '';
                        $inspectph2_2  = '';
                        $outspectph2_2 = '';
                        $prsoutph2_2   = '';
                    }

                    if (is_array($ndtph3_2) && count($ndtph3_2) > 0){
                        $Minph3_2   = min($ndtph3_2);
                        $Maxph3_2   = max($ndtph3_2);
                        $Avgph3_2   = number_format((array_sum($ndtph3_2)) / (count($ndtph3_2)), 2);
                        $Countph3_2 = count($ndtph3_2);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_2    = array_sum($ndtph3_2) / count($ndtph3_2);
                        $fvariant3_2 = 0.00;
                        $xsample3_2  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_2 as $i){
                            $fvariant3_2 += pow($i - $fmean3_2, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_2   /= ( $xsample3_2 ? count($ndtph3_2) - 1 : count($ndtph3_2));
                        $stdevph3_2     = number_format(sqrt($fvariant3_2), 2);
                        $totalph3_2     = count($ndtph3_2);
                        $inspectph3_2   = $dt1;
                        $outspectph3_2  = $dt2;
                        $prsoutph3_2    = number_format((($dt2 / $totalph3_2) * (100)), 2);
                    } else {
                        $Minph3_2      = '';
                        $Maxph3_2      = '';
                        $Avgph3_2      = '';
                        $stdevph3_2    = '';
                        $totalph3_2    = '';
                        $inspectph3_2  = '';
                        $outspectph3_2 = '';
                        $prsoutph3_2   = '';
                    }

                    if (is_array($ndtph1_3) && count($ndtph1_3) > 0){
                        $Minph1_3   = min($ndtph1_3);
                        $Maxph1_3   = max($ndtph1_3);
                        $Avgph1_3   = number_format((array_sum($ndtph1_3)) / (count($ndtph1_3)), 2);
                        $Countph1_3 = count($ndtph1_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_3    = array_sum($ndtph1_3) / count($ndtph1_3);
                        $fvariant1_3 = 0.00;
                        $xsample1_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_3 as $i){
                            $fvariant1_3 += pow($i - $fmean1_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_3   /= ( $xsample1_3 ? count($ndtph1_3) - 1 : count($ndtph1_3));
                        $stdevph1_3     = number_format(sqrt($fvariant1_3), 2);
                        $totalph1_3     = count($ndtph1_3);
                        $inspectph1_3   = $dt1;
                        $outspectph1_3  = $dt2;
                        $prsoutph1_3    = number_format((($dt2 / $totalph1_3) * (100)), 2);
                    } else {
                        $Minph1_3      = '';
                        $Maxph1_3      = '';
                        $Avgph1_3      = '';
                        $stdevph1_3    = '';
                        $totalph1_3    = '';
                        $inspectph1_3  = '';
                        $outspectph1_3 = '';
                        $prsoutph1_3   = '';
                    }

                    if (is_array($ndtph2_3) && count($ndtph2_3) > 0){
                        $Minph2_3   = min($ndtph2_3);
                        $Maxph2_3   = max($ndtph2_3);
                        $Avgph2_3   = number_format((array_sum($ndtph2_3)) / (count($ndtph2_3)), 2);
                        $Countph2_3 = count($ndtph2_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_3    = array_sum($ndtph2_3) / count($ndtph2_3);
                        $fvariant2_3 = 0.00;
                        $xsample2_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_3 as $i){
                            $fvariant2_3 += pow($i - $fmean2_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_3   /= ( $xsample2_3 ? count($ndtph2_3) - 1 : count($ndtph2_3));
                        $stdevph2_3     = number_format(sqrt($fvariant2_3), 2);
                        $totalph2_3     = count($ndtph2_3);
                        $inspectph2_3   = $dt1;
                        $outspectph2_3  = $dt2;
                        $prsoutph2_3    = number_format((($dt2 / $totalph2_3) * (100)), 2);
                    } else {
                        $Minph2_3      = '';
                        $Maxph2_3      = '';
                        $Avgph2_3      = '';
                        $stdevph2_3    = '';
                        $totalph2_3    = '';
                        $inspectph2_3  = '';
                        $outspectph2_3 = '';
                        $prsoutph2_3   = '';
                    }

                    if (is_array($ndtph3_3) && count($ndtph3_3) > 0){
                        $Minph3_3   = min($ndtph3_3);
                        $Maxph3_3   = max($ndtph3_3);
                        $Avgph3_3   = number_format((array_sum($ndtph3_3)) / (count($ndtph3_3)), 2);
                        $Countph3_3 = count($ndtph3_3);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_3    = array_sum($ndtph3_3) / count($ndtph3_3);
                        $fvariant3_3 = 0.00;
                        $xsample3_3  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_3 as $i){
                            $fvariant3_3 += pow($i - $fmean3_3, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_3   /= ( $xsample3_3 ? count($ndtph3_3) - 1 : count($ndtph3_3));
                        $stdevph3_3     = number_format(sqrt($fvariant3_3), 2);
                        $totalph3_3     = count($ndtph3_3);
                        $inspectph3_3   = $dt1;
                        $outspectph3_3  = $dt2;
                        $prsoutph3_3    = number_format((($dt2 / $totalph3_3) * (100)), 2);
                    } else {
                        $Minph3_3      = '';
                        $Maxph3_3      = '';
                        $Avgph3_3      = '';
                        $stdevph3_3    = '';
                        $totalph3_3    = '';
                        $inspectph3_3  = '';
                        $outspectph3_3 = '';
                        $prsoutph3_3   = '';
                    }

                    if (is_array($ndtph1_4) && count($ndtph1_4) > 0){
                        $Minph1_4   = min($ndtph1_4);
                        $Maxph1_4   = max($ndtph1_4);
                        $Avgph1_4   = number_format((array_sum($ndtph1_4)) / (count($ndtph1_4)), 2);
                        $Countph1_4 = count($ndtph1_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_4    = array_sum($ndtph1_4) / count($ndtph1_4);
                        $fvariant1_4 = 0.00;
                        $xsample1_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_4 as $i){
                            $fvariant1_4 += pow($i - $fmean1_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_4   /= ( $xsample1_4 ? count($ndtph1_4) - 1 : count($ndtph1_4));
                        $stdevph1_4     = number_format(sqrt($fvariant1_4), 2);
                        $totalph1_4     = count($ndtph1_4);
                        $inspectph1_4   = $dt1;
                        $outspectph1_4  = $dt2;
                        $prsoutph1_4    = number_format((($dt2 / $totalph1_4) * (100)), 2);
                    } else {
                        $Minph1_4      = '';
                        $Maxph1_4      = '';
                        $Avgph1_4      = '';
                        $stdevph1_4    = '';
                        $totalph1_4    = '';
                        $inspectph1_4  = '';
                        $outspectph1_4 = '';
                        $prsoutph1_4   = '';
                    }

                    if (is_array($ndtph2_4) && count($ndtph2_4) > 0){
                        $Minph2_4   = min($ndtph2_4);
                        $Maxph2_4   = max($ndtph2_4);
                        $Avgph2_4   = number_format((array_sum($ndtph2_4)) / (count($ndtph2_4)), 2);
                        $Countph2_4 = count($ndtph2_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_4    = array_sum($ndtph2_4) / count($ndtph2_4);
                        $fvariant2_4 = 0.00;
                        $xsample2_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_4 as $i){
                            $fvariant2_4 += pow($i - $fmean2_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_4   /= ( $xsample2_4 ? count($ndtph2_4) - 1 : count($ndtph2_4));
                        $stdevph2_4     = number_format(sqrt($fvariant2_4), 2);
                        $totalph2_4     = count($ndtph2_4);
                        $inspectph2_4   = $dt1;
                        $outspectph2_4  = $dt2;
                        $prsoutph2_4    = number_format((($dt2 / $totalph2_4) * (100)), 2);
                    } else {
                        $Minph2_4      = '';
                        $Maxph2_4      = '';
                        $Avgph2_4      = '';
                        $stdevph2_4    = '';
                        $totalph2_4    = '';
                        $inspectph2_4  = '';
                        $outspectph2_4 = '';
                        $prsoutph2_4   = '';
                    }

                    if (is_array($ndtph3_4) && count($ndtph3_4) > 0){
                        $Minph3_4   = min($ndtph3_4);
                        $Maxph3_4   = max($ndtph3_4);
                        $Avgph3_4   = number_format((array_sum($ndtph3_4)) / (count($ndtph3_4)), 2);
                        $Countph3_4 = count($ndtph3_4);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_4    = array_sum($ndtph3_4) / count($ndtph3_4);
                        $fvariant3_4 = 0.00;
                        $xsample3_4  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_4 as $i){
                            $fvariant3_4 += pow($i - $fmean3_4, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_4   /= ( $xsample3_4 ? count($ndtph3_4) - 1 : count($ndtph3_4));
                        $stdevph3_4     = number_format(sqrt($fvariant3_4), 2);
                        $totalph3_4     = count($ndtph3_4);
                        $inspectph3_4   = $dt1;
                        $outspectph3_4  = $dt2;
                        $prsoutph3_4    = number_format((($dt2 / $totalph3_4) * (100)), 2);
                    } else {
                        $Minph3_4      = '';
                        $Maxph3_4      = '';
                        $Avgph3_4      = '';
                        $stdevph3_4    = '';
                        $totalph3_4    = '';
                        $inspectph3_4  = '';
                        $outspectph3_4 = '';
                        $prsoutph3_4   = '';
                    }

                    if (is_array($ndtph1_5) && count($ndtph1_5) > 0){
                        $Minph1_5   = min($ndtph1_5);
                        $Maxph1_5   = max($ndtph1_5);
                        $Avgph1_5   = number_format((array_sum($ndtph1_5)) / (count($ndtph1_5)), 2);
                        $Countph1_5 = count($ndtph1_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_5    = array_sum($ndtph1_5) / count($ndtph1_5);
                        $fvariant1_5 = 0.00;
                        $xsample1_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_5 as $i){
                            $fvariant1_5 += pow($i - $fmean1_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_5   /= ( $xsample1_5 ? count($ndtph1_5) - 1 : count($ndtph1_5));
                        $stdevph1_5     = number_format(sqrt($fvariant1_5), 2);
                        $totalph1_5     = count($ndtph1_5);
                        $inspectph1_5   = $dt1;
                        $outspectph1_5  = $dt2;
                        $prsoutph1_1    = number_format((($dt2 / $totalph1_5) * (100)), 2);
                    } else {
                        $Minph1_5      = '';
                        $Maxph1_5      = '';
                        $Avgph1_5      = '';
                        $stdevph1_5    = '';
                        $totalph1_5    = '';
                        $inspectph1_5  = '';
                        $outspectph1_5 = '';
                        $prsoutph1_5   = '';
                    }

                    if (is_array($ndtph2_5) && count($ndtph2_5) > 0){
                        $Minph2_5   = min($ndtph2_5);
                        $Maxph2_5   = max($ndtph2_5);
                        $Avgph2_5   = number_format((array_sum($ndtph2_5)) / (count($ndtph2_5)), 2);
                        $Countph2_5 = count($ndtph2_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_5    = array_sum($ndtph2_5) / count($ndtph2_5);
                        $fvariant2_5 = 0.00;
                        $xsample2_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_5 as $i){
                            $fvariant2_5 += pow($i - $fmean2_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_5   /= ( $xsample2_5 ? count($ndtph2_5) - 1 : count($ndtph2_5));
                        $stdevph2_5     = number_format(sqrt($fvariant2_5), 2);
                        $totalph2_5     = count($ndtph2_5);
                        $inspectph2_5   = $dt1;
                        $outspectph2_5  = $dt2;
                        $prsoutph2_5    = number_format((($dt2 / $totalph2_5) * (100)), 2);
                    } else {
                        $Minph2_5      = '';
                        $Maxph2_5      = '';
                        $Avgph2_5      = '';
                        $stdevph2_5    = '';
                        $totalph2_5    = '';
                        $inspectph2_5  = '';
                        $outspectph2_5 = '';
                        $prsoutph2_5   = '';
                    }

                    if (is_array($ndtph3_5) && count($ndtph3_5) > 0){
                        $Minph3_5   = min($ndtph3_5);
                        $Maxph3_5   = max($ndtph3_5);
                        $Avgph3_5   = number_format((array_sum($ndtph3_5)) / (count($ndtph3_5)), 2);
                        $Countph3_5 = count($ndtph3_5);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_5    = array_sum($ndtph3_5) / count($ndtph3_5);
                        $fvariant3_5 = 0.00;
                        $xsample3_5  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_5 as $i){
                            $fvariant3_5 += pow($i - $fmean3_5, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_5   /= ( $xsample3_5 ? count($ndtph3_5) - 1 : count($ndtph3_5));
                        $stdevph3_5     = number_format(sqrt($fvariant3_5), 2);
                        $totalph3_5     = count($ndtph3_5);
                        $inspectph3_5   = $dt1;
                        $outspectph3_5  = $dt2;
                        $prsoutph3_5    = number_format((($dt2 / $totalph3_5) * (100)), 2);
                    } else {
                        $Minph3_5      = '';
                        $Maxph3_5      = '';
                        $Avgph3_5      = '';
                        $stdevph3_5    = '';
                        $totalph3_5    = '';
                        $inspectph3_5  = '';
                        $outspectph3_5 = '';
                        $prsoutph3_5   = '';
                    }

                    if (is_array($ndtph1_6) && count($ndtph1_6) > 0){
                        $Minph1_6   = min($ndtph1_6);
                        $Maxph1_6   = max($ndtph1_6);
                        $Avgph1_6   = number_format((array_sum($ndtph1_6)) / (count($ndtph1_6)), 2);
                        $Countph1_6 = count($ndtph1_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_6    = array_sum($ndtph1_6) / count($ndtph1_6);
                        $fvariant1_6 = 0.00;
                        $xsample1_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_6 as $i){
                            $fvariant1_6 += pow($i - $fmean1_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_6   /= ( $xsample1_6 ? count($ndtph1_6) - 1 : count($ndtph1_6));
                        $stdevph1_6     = number_format(sqrt($fvariant1_6), 2);
                        $totalph1_6     = count($ndtph1_6);
                        $inspectph1_6   = $dt1;
                        $outspectph1_6  = $dt2;
                        $prsoutph1_6    = number_format((($dt2 / $totalph1_6) * (100)), 2);
                    } else {
                        $Minph1_6      = '';
                        $Maxph1_6      = '';
                        $Avgph1_6      = '';
                        $stdevph1_6    = '';
                        $totalph1_6    = '';
                        $inspectph1_6  = '';
                        $outspectph1_6 = '';
                        $prsoutph1_6   = '';
                    }

                    if (is_array($ndtph2_6) && count($ndtph2_6) > 0){
                        $Minph2_6   = min($ndtph2_6);
                        $Maxph2_6   = max($ndtph2_6);
                        $Avgph2_6   = number_format((array_sum($ndtph2_6)) / (count($ndtph2_6)), 2);
                        $Countph2_6 = count($ndtph2_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_6    = array_sum($ndtph2_6) / count($ndtph2_6);
                        $fvariant2_6 = 0.00;
                        $xsample2_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_6 as $i){
                            $fvariant2_6 += pow($i - $fmean2_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_6   /= ( $xsample2_6 ? count($ndtph2_6) - 1 : count($ndtph2_6));
                        $stdevph2_6     = number_format(sqrt($fvariant2_6), 2);
                        $totalph2_6     = count($ndtph2_6);
                        $inspectph2_6   = $dt1;
                        $outspectph2_6  = $dt2;
                        $prsoutph2_6    = number_format((($dt2 / $totalph2_6) * (100)), 2);
                    } else {
                        $Minph2_6      = '';
                        $Maxph2_6      = '';
                        $Avgph2_6      = '';
                        $stdevph2_6    = '';
                        $totalph2_6    = '';
                        $inspectph2_6  = '';
                        $outspectph2_6 = '';
                        $prsoutph2_6   = '';
                    }

                    if (is_array($ndtph3_6) && count($ndtph3_6) > 0){
                        $Minph3_6   = min($ndtph3_6);
                        $Maxph3_6   = max($ndtph3_6);
                        $Avgph3_6   = number_format((array_sum($ndtph3_6)) / (count($ndtph3_6)), 2);
                        $Countph3_6 = count($ndtph3_6);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_6    = array_sum($ndtph3_6) / count($ndtph3_6);
                        $fvariant3_6 = 0.00;
                        $xsample3_6  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_6 as $i){
                            $fvariant3_6 += pow($i - $fmean3_6, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_6   /= ( $xsample3_6 ? count($ndtph3_6) - 1 : count($ndtph3_6));
                        $stdevph3_6     = number_format(sqrt($fvariant3_6), 2);
                        $totalph3_6     = count($ndtph3_6);
                        $inspectph3_6   = $dt1;
                        $outspectph3_6  = $dt2;
                        $prsoutph3_6    = number_format((($dt2 / $totalph3_6) * (100)), 2);
                    } else {
                        $Minph3_6      = '';
                        $Maxph3_6      = '';
                        $Avgph3_6      = '';
                        $stdevph3_6    = '';
                        $totalph3_6    = '';
                        $inspectph3_6  = '';
                        $outspectph3_6 = '';
                        $prsoutph3_6   = '';
                    }

                    if (is_array($ndtph1_7) && count($ndtph1_7) > 0){
                        $Minph1_7   = min($ndtph1_7);
                        $Maxph1_7   = max($ndtph1_7);
                        $Avgph1_7   = number_format((array_sum($ndtph1_7)) / (count($ndtph1_7)), 2);
                        $Countph1_7 = count($ndtph1_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_7    = array_sum($ndtph1_7) / count($ndtph1_7);
                        $fvariant1_7 = 0.00;
                        $xsample1_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_7 as $i){
                            $fvariant1_7 += pow($i - $fmean1_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_7   /= ( $xsample1_7 ? count($ndtph1_7) - 1 : count($ndtph1_7));
                        $stdevph1_7     = number_format(sqrt($fvariant1_7), 2);
                        $totalph1_7     = count($ndtph1_7);
                        $inspectph1_7   = $dt1;
                        $outspectph1_7  = $dt2;
                        $prsoutph1_7    = number_format((($dt2 / $totalph1_7) * (100)), 2);
                    } else {
                        $Minph1_7      = '';
                        $Maxph1_7      = '';
                        $Avgph1_7      = '';
                        $stdevph1_7    = '';
                        $totalph1_7    = '';
                        $inspectph1_7  = '';
                        $outspectph1_7 = '';
                        $prsoutph1_7   = '';
                    }

                    if (is_array($ndtph2_7) && count($ndtph2_7) > 0){
                        $Minph2_7   = min($ndtph2_7);
                        $Maxph2_7   = max($ndtph2_7);
                        $Avgph2_7   = number_format((array_sum($ndtph2_7)) / (count($ndtph2_7)), 2);
                        $Countph2_7 = count($ndtph2_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_7    = array_sum($ndtph2_7) / count($ndtph2_7);
                        $fvariant2_7 = 0.00;
                        $xsample2_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_7 as $i){
                            $fvariant2_7 += pow($i - $fmean2_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_7   /= ( $xsample2_7 ? count($ndtph2_7) - 1 : count($ndtph2_7));
                        $stdevph2_7     = number_format(sqrt($fvariant2_7), 2);
                        $totalph2_7     = count($ndtph2_7);
                        $inspectph2_7   = $dt1;
                        $outspectph2_7  = $dt2;
                        $prsoutph2_7    = number_format((($dt2 / $totalph2_7) * (100)), 2);
                    } else {
                        $Minph2_7      = '';
                        $Maxph2_7      = '';
                        $Avgph2_7      = '';
                        $stdevph2_7    = '';
                        $totalph2_7    = '';
                        $inspectph2_7  = '';
                        $outspectph2_7 = '';
                        $prsoutph2_7   = '';
                    }

                    if (is_array($ndtph3_7) && count($ndtph3_7) > 0){
                        $Minph3_7   = min($ndtph3_7);
                        $Maxph3_7   = max($ndtph3_7);
                        $Avgph3_7   = number_format((array_sum($ndtph3_7)) / (count($ndtph3_7)), 2);
                        $Countph3_7 = count($ndtph3_7);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_7    = array_sum($ndtph3_7) / count($ndtph3_7);
                        $fvariant3_7 = 0.00;
                        $xsample3_7  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_7 as $i){
                            $fvariant3_7 += pow($i - $fmean3_7, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_7   /= ( $xsample3_7 ? count($ndtph3_7) - 1 : count($ndtph3_7));
                        $stdevph3_7     = number_format(sqrt($fvariant3_7), 2);
                        $totalph3_7     = count($ndtph3_7);
                        $inspectph3_7   = $dt1;
                        $outspectph3_7  = $dt2;
                        $prsoutph3_7    = number_format((($dt2 / $totalph3_7) * (100)), 2);
                    } else {
                        $Minph3_7      = '';
                        $Maxph3_7      = '';
                        $Avgph3_7      = '';
                        $stdevph3_7    = '';
                        $totalph3_7    = '';
                        $inspectph3_7  = '';
                        $outspectph3_7 = '';
                        $prsoutph3_7   = '';
                    }

                    if (is_array($ndtph1_8) && count($ndtph1_8) > 0){
                        $Minph1_8   = min($ndtph1_8);
                        $Maxph1_8   = max($ndtph1_8);
                        $Avgph1_8   = number_format((array_sum($ndtph1_8)) / (count($ndtph1_8)), 2);
                        $Countph1_8 = count($ndtph1_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean1_8    = array_sum($ndtph1_8) / count($ndtph1_8);
                        $fvariant1_8 = 0.00;
                        $xsample1_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph1_8 as $i){
                            $fvariant1_8 += pow($i - $fmean1_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant1_8   /= ( $xsample1_8 ? count($ndtph1_8) - 1 : count($ndtph1_8));
                        $stdevph1_8     = number_format(sqrt($fvariant1_8), 2);
                        $totalph1_8     = count($ndtph1_8);
                        $inspectph1_8   = $dt1;
                        $outspectph1_8  = $dt2;
                        $prsoutph1_8    = number_format((($dt2 / $totalph1_8) * (100)), 2);
                    } else {
                        $Minph1_8      = '';
                        $Maxph1_8      = '';
                        $Avgph1_8      = '';
                        $stdevph1_8    = '';
                        $totalph1_8    = '';
                        $inspectph1_8  = '';
                        $outspectph1_8 = '';
                        $prsoutph1_8   = '';
                    }

                    if (is_array($ndtph2_8) && count($ndtph2_8) > 0){
                        $Minph2_8   = min($ndtph2_8);
                        $Maxph2_8   = max($ndtph2_8);
                        $Avgph2_8   = number_format((array_sum($ndtph2_8)) / (count($ndtph2_8)), 2);
                        $Countph2_8 = count($ndtph2_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean2_8    = array_sum($ndtph2_8) / count($ndtph2_8);
                        $fvariant2_8 = 0.00;
                        $xsample2_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph2_8 as $i){
                            $fvariant2_8 += pow($i - $fmean2_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant2_8   /= ( $xsample2_8 ? count($ndtph2_8) - 1 : count($ndtph2_8));
                        $stdevph2_8     = number_format(sqrt($fvariant2_8), 2);
                        $totalph2_8     = count($ndtph2_8);
                        $inspectph2_8   = $dt1;
                        $outspectph2_8  = $dt2;
                        $prsoutph2_8    = number_format((($dt2 / $totalph2_8) * (100)), 2);
                    } else {
                        $Minph2_8      = '';
                        $Maxph2_8      = '';
                        $Avgph2_8      = '';
                        $stdevph2_8    = '';
                        $totalph2_8    = '';
                        $inspectph2_8  = '';
                        $outspectph2_8 = '';
                        $prsoutph2_8   = '';
                    }

                    if (is_array($ndtph3_8) && count($ndtph3_8) > 0){
                        $Minph3_8   = min($ndtph3_8);
                        $Maxph3_8   = max($ndtph3_8);
                        $Avgph3_8   = number_format((array_sum($ndtph3_8)) / (count($ndtph3_8)), 2);
                        $Countph3_8 = count($ndtph3_8);
                        //nilai standard devisiasi (sttdev)
                        $fmean3_8    = array_sum($ndtph3_8) / count($ndtph3_8);
                        $fvariant3_8 = 0.00;
                        $xsample3_8  = false;
                        $dt1         = 0;
                        $dt2         = 0;
                        foreach ($ndtph3_8 as $i){
                            $fvariant3_8 += pow($i - $fmean3_8, 2);
                            if (($i >= 10.5) && ($i <= 11.5)){
                                $dt1++;
                            }
                            if ((($i > 0) && ($i < 10.5)) || ($i > 11.5)){
                                $dt2++;
                            }
                        }
                        $fvariant3_8   /= ( $xsample3_8 ? count($ndtph3_8) - 1 : count($ndtph3_8));
                        $stdevph3_8     = number_format(sqrt($fvariant3_8), 2);
                        $totalph3_8     = count($ndtph3_8);
                        $inspectph3_8   = $dt1;
                        $outspectph3_8  = $dt2;
                        $prsoutph3_8    = number_format((($dt2 / $totalph3_8) * (100)), 2);
                    } else {
                        $Minph3_8      = '';
                        $Maxph3_8      = '';
                        $Avgph3_8      = '';
                        $stdevph3_8    = '';
                        $totalph3_8    = '';
                        $inspectph3_8  = '';
                        $outspectph3_8 = '';
                        $prsoutph3_8   = '';
                    }

                    $rowfoot1  = $rowCount + 1;
                    $rowfoot2  = $rowfoot1 + 1;
                    $rowfoot3  = $rowfoot2 + 1;
                    $rowfoot4  = $rowfoot3 + 1;
                    $rowfoot5  = $rowfoot4 + 1;
                    $rowfoot6  = $rowfoot5 + 1;
                    $rowfoot7  = $rowfoot6 + 1;
                    $rowfoot8  = $rowfoot7 + 1;
                    $rowfoot9  = $rowfoot8 + 1;
                    $rowfoot10 = $rowfoot9 + 1;

                    $objPHPExcel->mergeCells('A' . $rowfoot1 . ':AE' . $rowfoot1)->setCellValue('A' . $rowfoot1, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot2, 'Maximum');
                    // $objPHPExcel->setCellValue('B' . $rowfoot2, $Maxph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot2, $Maxph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot2, $Maxph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot2, $Maxph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot2, $Maxph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot2, $Maxph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot2, $Maxph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot2, $Maxph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot2, $Maxph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot2, $Maxph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot2, $Maxph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot2, $Maxph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot2, $Maxph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot2, $Maxph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot2, $Maxph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot2, $Maxph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot2, $Maxph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot2, $Maxph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot2, $Maxph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot2, $Maxph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot2, $Maxph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot2, $Maxph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot2, $Maxph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot2, $Maxph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot3, 'Minimum');
                    // $objPHPExcel->setCellValue('B' . $rowfoot3, $Minph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot3, $Minph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot3, $Minph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot3, $Minph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot3, $Minph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot3, $Minph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot3, $Minph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot3, $Minph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot3, $Minph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot3, $Minph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot3, $Minph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot3, $Minph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot3, $Minph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot3, $Minph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot3, $Minph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot3, $Minph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot3, $Minph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot3, $Minph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot3, $Minph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot3, $Minph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot3, $Minph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot3, $Minph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot3, $Minph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot3, $Minph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot4, 'Average');
                    // $objPHPExcel->setCellValue('B' . $rowfoot4, $Avgph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot4, $Avgph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot4, $Avgph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot4, $Avgph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot4, $Avgph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot4, $Avgph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot4, $Avgph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot4, $Avgph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot4, $Avgph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot4, $Avgph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot4, $Avgph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot4, $Avgph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot4, $Avgph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot4, $Avgph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot4, $Avgph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot4, $Avgph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot4, $Avgph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot4, $Avgph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot4, $Avgph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot4, $Avgph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot4, $Avgph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot4, $Avgph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot4, $Avgph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot4, $Avgph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot5, 'Stdev');
                    // $objPHPExcel->setCellValue('B' . $rowfoot5, $stdevph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot5, $stdevph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot5, $stdevph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot5, $stdevph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot5, $stdevph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot5, $stdevph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot5, $stdevph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot5, $stdevph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot5, $stdevph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot5, $stdevph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot5, $stdevph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot5, $stdevph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot5, $stdevph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot5, $stdevph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot5, $stdevph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot5, $stdevph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot5, $stdevph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot5, $stdevph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot5, $stdevph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot5, $stdevph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot5, $stdevph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot5, $stdevph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot5, $stdevph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot5, $stdevph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot6, 'Total Data');
                    // $objPHPExcel->setCellValue('B' . $rowfoot6, $totalph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot6, $totalph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot6, $totalph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot6, $totalph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot6, $totalph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot6, $totalph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot6, $totalph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot6, $totalph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot6, $totalph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot6, $totalph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot6, $totalph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot6, $totalph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot6, $totalph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot6, $totalph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot6, $totalph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot6, $totalph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot6, $totalph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot6, $totalph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot6, $totalph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot6, $totalph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot6, $totalph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot6, $totalph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot6, $totalph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot6, $totalph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot7, 'Whitin Spect');
                    // $objPHPExcel->setCellValue('B' . $rowfoot7, $inspectph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot7, $inspectph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot7, $inspectph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot7, $inspectph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot7, $inspectph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot7, $inspectph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot7, $inspectph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot7, $inspectph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot7, $inspectph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot7, $inspectph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot7, $inspectph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot7, $inspectph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot7, $inspectph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot7, $inspectph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot7, $inspectph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot7, $inspectph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot7, $inspectph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot7, $inspectph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot7, $inspectph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot7, $inspectph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot7, $inspectph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot7, $inspectph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot7, $inspectph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot7, $inspectph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot8, 'Outspect Data');
                    // $objPHPExcel->setCellValue('B' . $rowfoot8, $outspectph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot8, $outspectph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot8, $outspectph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot8, $outspectph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot8, $outspectph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot8, $outspectph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot8, $outspectph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot8, $outspectph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot8, $outspectph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot8, $outspectph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot8, $outspectph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot8, $outspectph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot8, $outspectph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot8, $outspectph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot8, $outspectph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot8, $outspectph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot8, $outspectph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot8, $outspectph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot8, $outspectph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot8, $outspectph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot8, $outspectph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot8, $outspectph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot8, $outspectph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot8, $outspectph3_8);

                    // $objPHPExcel->setCellValue('A' . $rowfoot9, 'Percent Outs');
                    // $objPHPExcel->setCellValue('B' . $rowfoot9, $prsoutph1_1);
                    // $objPHPExcel->setCellValue('C' . $rowfoot9, $prsoutph2_1);
                    // $objPHPExcel->setCellValue('D' . $rowfoot9, $prsoutph3_1);
                    // $objPHPExcel->setCellValue('E' . $rowfoot9, $prsoutph1_2);
                    // $objPHPExcel->setCellValue('F' . $rowfoot9, $prsoutph2_2);
                    // $objPHPExcel->setCellValue('G' . $rowfoot9, $prsoutph3_2);
                    // $objPHPExcel->setCellValue('H' . $rowfoot9, $prsoutph1_3);
                    // $objPHPExcel->setCellValue('I' . $rowfoot9, $prsoutph2_3);
                    // $objPHPExcel->setCellValue('J' . $rowfoot9, $prsoutph3_3);
                    // $objPHPExcel->setCellValue('K' . $rowfoot9, $prsoutph1_4);
                    // $objPHPExcel->setCellValue('L' . $rowfoot9, $prsoutph2_4);
                    // $objPHPExcel->setCellValue('M' . $rowfoot9, $prsoutph3_4);
                    // $objPHPExcel->setCellValue('N' . $rowfoot9, $prsoutph1_5);
                    // $objPHPExcel->setCellValue('O' . $rowfoot9, $prsoutph2_5);
                    // $objPHPExcel->setCellValue('P' . $rowfoot9, $prsoutph3_5);
                    // $objPHPExcel->setCellValue('Q' . $rowfoot9, $prsoutph1_6);
                    // $objPHPExcel->setCellValue('R' . $rowfoot9, $prsoutph2_6);
                    // $objPHPExcel->setCellValue('S' . $rowfoot9, $prsoutph3_6);
                    // $objPHPExcel->setCellValue('T' . $rowfoot9, $prsoutph1_7);
                    // $objPHPExcel->setCellValue('U' . $rowfoot9, $prsoutph2_7);
                    // $objPHPExcel->setCellValue('V' . $rowfoot9, $prsoutph3_7);
                    // $objPHPExcel->setCellValue('W' . $rowfoot9, $prsoutph1_8);
                    // $objPHPExcel->setCellValue('X' . $rowfoot9, $prsoutph2_8);
                    // $objPHPExcel->setCellValue('Y' . $rowfoot9, $prsoutph3_8);

                    $objPHPExcel->mergeCells('A' . $rowfoot10 . ':AE' . $rowfoot10)->setCellValue('A' . $rowfoot10, '');

                    $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowfoot1 . ':AE' . $rowfoot10);
                } else {
                    $rowCount = 9;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AE' . $rowCount);

                    // $objPHPExcel->setCellValue('A' . $rowCount, '');
                    // $objPHPExcel->setCellValue('B' . $rowCount, '');
                    // $objPHPExcel->setCellValue('C' . $rowCount, '');
                    // $objPHPExcel->setCellValue('D' . $rowCount, '');
                    // $objPHPExcel->setCellValue('E' . $rowCount, '');
                    // $objPHPExcel->setCellValue('F' . $rowCount, '');
                    // $objPHPExcel->setCellValue('G' . $rowCount, '');
                    // $objPHPExcel->setCellValue('H' . $rowCount, '');
                    // $objPHPExcel->setCellValue('I' . $rowCount, '');
                    // $objPHPExcel->setCellValue('J' . $rowCount, '');
                    // $objPHPExcel->setCellValue('K' . $rowCount, '');
                    // $objPHPExcel->setCellValue('L' . $rowCount, '');
                    // $objPHPExcel->setCellValue('M' . $rowCount, '');
                    // $objPHPExcel->setCellValue('N' . $rowCount, '');
                    // $objPHPExcel->setCellValue('O' . $rowCount, '');
                    // $objPHPExcel->setCellValue('P' . $rowCount, '');
                    // $objPHPExcel->setCellValue('Q' . $rowCount, '');
                    // $objPHPExcel->setCellValue('R' . $rowCount, '');
                    // $objPHPExcel->setCellValue('S' . $rowCount, '');
                    // $objPHPExcel->setCellValue('T' . $rowCount, '');
                    // $objPHPExcel->setCellValue('U' . $rowCount, '');
                    // $objPHPExcel->setCellValue('V' . $rowCount, '');
                    // $objPHPExcel->setCellValue('W' . $rowCount, '');
                    // $objPHPExcel->setCellValue('X' . $rowCount, '');
                    // $objPHPExcel->setCellValue('Y' . $rowCount, '');

                    $rowfoot1  = $rowCount + 1;
                    $rowfoot2  = $rowfoot1 + 1;
                    $rowfoot3  = $rowfoot2 + 1;
                    $rowfoot4  = $rowfoot3 + 1;
                    $rowfoot5  = $rowfoot4 + 1;
                    $rowfoot6  = $rowfoot5 + 1;
                    $rowfoot7  = $rowfoot6 + 1;
                    $rowfoot8  = $rowfoot7 + 1;
                    $rowfoot9  = $rowfoot8 + 1;
                    $rowfoot10 = $rowfoot9 + 1;

                    $objPHPExcel->mergeCells('A' . $rowfoot1 . ':AE' . $rowfoot1)->setCellValue('A' . $rowfoot1, '');


                    // $objPHPExcel->setCellValue('A' . $rowfoot2, 'Maximum');
                    // $objPHPExcel->setCellValue('B' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot2, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot2, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot3, 'Minimum');
                    // $objPHPExcel->setCellValue('B' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot3, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot3, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot4, 'Average');
                    // $objPHPExcel->setCellValue('B' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot4, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot4, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot5, 'Stdev');
                    // $objPHPExcel->setCellValue('B' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot5, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot5, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot6, 'Total Data');
                    // $objPHPExcel->setCellValue('B' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot6, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot6, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot7, 'Whitin Spect');
                    // $objPHPExcel->setCellValue('B' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot7, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot7, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot8, 'Outspect Data');
                    // $objPHPExcel->setCellValue('B' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot8, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot8, '');

                    // $objPHPExcel->setCellValue('A' . $rowfoot9, 'Percent Outs');
                    // $objPHPExcel->setCellValue('B' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('C' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('D' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('E' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('F' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('G' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('H' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('I' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('J' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('K' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('L' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('M' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('N' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('O' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('P' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('Q' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('R' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('S' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('T' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('U' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('V' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('W' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('X' . $rowfoot9, '');
                    // $objPHPExcel->setCellValue('Y' . $rowfoot9, '');

                    $objPHPExcel->mergeCells('A' . $rowfoot10 . ':AE' . $rowfoot10)->setCellValue('A' . $rowfoot10, '');
                    $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowfoot1 . ':AE' . $rowfoot10);
                }

                $rowsapp1 = $rowfoot10 + 1;
                $rowsapp2 = $rowsapp1 + 1;
                $rowsapp3 = $rowsapp2 + 1;
                $rowsapp4 = $rowsapp3 + 1;
                $rowsapp5 = $rowsapp4 + 1;

                $objPHPExcel->getStyle('A' . $rowsapp1 . ':Y' . $rowsapp5)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

                $objPHPExcel->mergeCells('A' . $rowsapp1 . ':I' . $rowsapp1)->setCellValue('A' . $rowsapp1, 'Reported By');
                $objPHPExcel->mergeCells('J' . $rowsapp1 . ':Q' . $rowsapp1)->setCellValue('J' . $rowsapp1, 'Checked By');
                $objPHPExcel->mergeCells('R' . $rowsapp1 . ':AE' . $rowsapp1)->setCellValue('R' . $rowsapp1, 'Confirmed By');

                $objPHPExcel->mergeCells('A' . $rowsapp2 . ':I' . $rowsapp2)->setCellValue('A' . $rowsapp2, '');
                $objPHPExcel->mergeCells('J' . $rowsapp2 . ':Q' . $rowsapp2)->setCellValue('J' . $rowsapp2, '');
                $objPHPExcel->mergeCells('R' . $rowsapp2 . ':AE' . $rowsapp2)->setCellValue('R' . $rowsapp2, '');

                $objPHPExcel->mergeCells('A' . $rowsapp3 . ':I' . $rowsapp3)->setCellValue('A' . $rowsapp3, 'Name :');
                $objPHPExcel->mergeCells('J' . $rowsapp3 . ':Q' . $rowsapp3)->setCellValue('J' . $rowsapp3, 'Name :');
                $objPHPExcel->mergeCells('R' . $rowsapp3 . ':AE' . $rowsapp3)->setCellValue('R' . $rowsapp3, 'Name :');

                $objPHPExcel->mergeCells('A' . $rowsapp4 . ':I' . $rowsapp4)->setCellValue('A' . $rowsapp4, 'Position :');
                $objPHPExcel->mergeCells('J' . $rowsapp4 . ':Q' . $rowsapp4)->setCellValue('J' . $rowsapp4, 'Position :');
                $objPHPExcel->mergeCells('R' . $rowsapp4 . ':AE' . $rowsapp4)->setCellValue('R' . $rowsapp4, 'Position :');

                $objPHPExcel->mergeCells('A' . $rowsapp5 . ':I' . $rowsapp5)->setCellValue('A' . $rowsapp5, 'Date :');
                $objPHPExcel->mergeCells('J' . $rowsapp5 . ':Q' . $rowsapp5)->setCellValue('J' . $rowsapp5, 'Date :');
                $objPHPExcel->mergeCells('R' . $rowsapp5 . ':AE' . $rowsapp5)->setCellValue('R' . $rowsapp5, 'Date :');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowsapp1 . ':AE' . $rowsapp5);

            break;
            
            case $frmkode == 'frmnon011' && $frmvrs == '00': 
                break;
            // case $frmkode == 'frmnon008' && $frmvrs == '00':
            //     break;
            case $frmkode == 'frmnon007' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmnon001' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dok     = $dtheader_row->no_doc;
                    $tanggal = $dtheader_row->tgl_inproses;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'S') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:S1');
                $objPHPExcel->mergeCells('A2:A5');
                $objPHPExcel->mergeCells('B2:Q5')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('R2:S5')->setCellValue('R2', 'Dok: ' . $dok);
                $objPHPExcel->setCellValue('A6', 'JUDUL');
                $objPHPExcel->mergeCells('B6:Q6')->setCellValue('B6', '' . $frmjdl);
                $objPHPExcel->mergeCells('R6:S6')->setCellValue('R6', 'Tanggal: ' . $tanggal);

                $objPHPExcel->mergeCells('A7:A10')->setCellValue('A7', 'No');
                $objPHPExcel->mergeCells('B7:B10')->setCellValue('B7', 'Kode Sampel');
                $objPHPExcel->mergeCells('C7:C10')->setCellValue('C7', 'Jam Sampling');
                $objPHPExcel->mergeCells('D7:K7')->setCellValue('D7', 'Analysis Parameters');
                $objPHPExcel->mergeCells('L7:L10')->setCellValue('L7', 'FCI');
                $objPHPExcel->mergeCells('M7:M10')->setCellValue('M7', 'TDS');
                $objPHPExcel->mergeCells('N7:N10')->setCellValue('N7', 'Color');
                $objPHPExcel->mergeCells('O7:O10')->setCellValue('O7', 'Turbidity');
                $objPHPExcel->mergeCells('P7:P10')->setCellValue('P7', 'Residual Ozon');
                $objPHPExcel->mergeCells('Q7:Q10')->setCellValue('Q7', 'Odour / Taste');
                $objPHPExcel->mergeCells('R7:R10')->setCellValue('R7', 'Dianalisa Oleh');
                $objPHPExcel->mergeCells('S7:S10')->setCellValue('S7', 'Remarks');

                $objPHPExcel->mergeCells('D8:D10')->setCellValue('D8', 'pH');
                $objPHPExcel->mergeCells('E8:H8')->setCellValue('E8', 'Chloride');
                $objPHPExcel->mergeCells('I8:K8')->setCellValue('I8', 'TH');

                $objPHPExcel->mergeCells('E9:G9')->setCellValue('E9', 'Titran AgNo3');
                $objPHPExcel->mergeCells('H9:H10')->setCellValue('H9', 'Hasil Chloride (ppm)');
                $objPHPExcel->mergeCells('I9:J9')->setCellValue('I9', 'Titran EDTA');
                $objPHPExcel->mergeCells('K9:K10')->setCellValue('K9', 'Hasil TH (ppm)');

                $objPHPExcel->setCellValue('E10', 'mL (s)');
                $objPHPExcel->setCellValue('F10', 'mL (b)');
                $objPHPExcel->setCellValue('G10', 'N');
                $objPHPExcel->setCellValue('I10', 'mL');
                $objPHPExcel->setCellValue('J10', 'M');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:S10');

                $rowCount = 10;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':S' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ap_ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ap_cl_tnagn03001n_ml_s);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ap_cl_tnagn03001n_ml_b);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ap_cl_tnagn03001n_n);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->ap_cl_hasil_ppm);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->ap_th_edta_ml);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->ap_th_edta_m);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->ap_th_hasil_ppm);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->ap_fci);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->ap_tds);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->ap_color);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->ap_turbidity);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->ap_residual_ozon);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->ap_odour_flavour);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->analisis_oleh);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->remarks);

                    $no++;
                }
                $rowend = $rowCount + 1;
                $objPHPExcel->getStyle('J' . $rowend . ':S' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':I' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('J' . $rowend . ':S' . $rowend)->setCellValue('J' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmlqs088' && $frmvrs == '05': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun     = substr($dtheader_row->create_date, 0, 4);
                    $dtbulan     = substr($dtheader_row->create_date, 5, 2);
                    $create_date = $dtheader_row->create_date;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'W') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }



                $objPHPExcel->mergeCells('A1:W1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:R3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('S2:W2')->setCellValue('S2', 'Tahun : ' . $dttahun);
                $objPHPExcel->mergeCells('S3:W3')->setCellValue('S3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('S4:W4')->setCellValue('S4', '');

                $objPHPExcel->mergeCells('A5:W5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Jenis Sampling');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('D6:I6')->setCellValue('D6', 'Moisture Content (0.7 % Max)');
                $objPHPExcel->mergeCells('J6:M6')->setCellValue('J6', 'Free Fatty Acid (3.0 % Max)');
                $objPHPExcel->mergeCells('N6:P6')->setCellValue('N6', 'Warna');
                $objPHPExcel->mergeCells('Q6:U6')->setCellValue('Q6', 'Iodine Value (8.5-10.0 %');
                $objPHPExcel->mergeCells('V6:V8')->setCellValue('V6', 'Sludge');
                $objPHPExcel->mergeCells('W6:W8')->setCellValue('W6', 'Keterangan');

                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Jam Analisa');
                $objPHPExcel->mergeCells('E7:G7')->setCellValue('E7', 'Berat (g)');
                $objPHPExcel->mergeCells('H7:H8')->setCellValue('H7', 'Hasil');
                $objPHPExcel->mergeCells('I7:I8')->setCellValue('I7', 'Paraf');
                $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Berat Contoh (g)');
                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Volume NaOH (mL)');
                $objPHPExcel->mergeCells('L7:L8')->setCellValue('L7', 'Hasil');
                $objPHPExcel->mergeCells('M7:M8')->setCellValue('M7', 'Paraf');
                $objPHPExcel->mergeCells('N7:N8')->setCellValue('N7', 'Yellow (30 Max)');
                $objPHPExcel->mergeCells('O7:O8')->setCellValue('O7', 'Red (8 Max)');
                $objPHPExcel->mergeCells('P7:P8')->setCellValue('P7', 'Blue');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Berat Contoh (g)');
                $objPHPExcel->mergeCells('R7:S7')->setCellValue('R7', 'Volume Thiosulfate');
                $objPHPExcel->mergeCells('T7:T8')->setCellValue('T7', 'Hasil');
                $objPHPExcel->mergeCells('U7:U8')->setCellValue('U7', 'Paraf');

                $objPHPExcel->setCellValue('E8', 'Petridish Kosong');
                $objPHPExcel->setCellValue('F8', 'Conoh');
                $objPHPExcel->setCellValue('G8', 'Petridish + Contoh');
                $objPHPExcel->setCellValue('R8', 'Blanko (mL)');
                $objPHPExcel->setCellValue('S8', 'Contoh (mL)');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:W8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':W' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->detail_tgl_produksi);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jns_sampel);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->jam_analisa_mc);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->petridish_kosong);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->mc_contoh);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->petridish_contoh);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->mc_hasil);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->mc_cekby);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->berat_contoh);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->vol_naoh);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->ffa_hasil);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->ffa_cekby);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->yellow);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->red);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->blue);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->iodine_berat_contoh);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->vt_blanko);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->vt_contoh);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->iodine_hasil);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->iodine_cekby);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->sludge);
                    $objPHPExcel->setCellValue('W' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('L' . $rowend . ':W' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':K' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('L' . $rowend . ':W' . $rowend)->setCellValue('L' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmlqs087' && $frmvrs == '05': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun     = substr($dtheader_row->create_date, 0, 4);
                    $dtbulan     = substr($dtheader_row->create_date, 5, 2);
                    $create_date = $dtheader_row->create_date;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);


                foreach (range('A', 'V') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:W1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:R3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('S2:V2')->setCellValue('S2', 'Tahun : ' . $dttahun);
                $objPHPExcel->mergeCells('S3:V3')->setCellValue('S3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('S4:V4')->setCellValue('S4', '');

                $objPHPExcel->mergeCells('A5:V5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Jenis Sampling');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('D6:I6')->setCellValue('D6', 'Moisture Content (13% Max)');
                $objPHPExcel->mergeCells('J6:Q6')->setCellValue('J6', 'Fat Content (20 % Max)');
                $objPHPExcel->mergeCells('R6:U6')->setCellValue('R6', 'FFA sebagai Asam Laurat (7.0% Max');
                $objPHPExcel->mergeCells('V6:V8')->setCellValue('V6', 'Keterangan');

                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Jam Analisa');
                $objPHPExcel->mergeCells('E7:G7')->setCellValue('E7', 'Berat (g)');
                $objPHPExcel->mergeCells('H7:H8')->setCellValue('H7', 'Hasil');
                $objPHPExcel->mergeCells('I7:I8')->setCellValue('I7', 'Paraf');
                $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Jam Analisa');
                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Kode Bottom');
                $objPHPExcel->mergeCells('L7:O7')->setCellValue('L7', 'Berat (g)');
                $objPHPExcel->mergeCells('P7:P8')->setCellValue('P7', 'Hasil');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Paraf');
                $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Berat Contoh (g)');
                $objPHPExcel->mergeCells('S7:S8')->setCellValue('S7', 'Volume NaOH (mL)');
                $objPHPExcel->mergeCells('T7:T8')->setCellValue('T7', 'Hasil');
                $objPHPExcel->mergeCells('U7:U8')->setCellValue('U7', 'Paraf');

                $objPHPExcel->setCellValue('E8', 'Petridish Kosong');
                $objPHPExcel->setCellValue('F8', 'Conoh');
                $objPHPExcel->setCellValue('G8', 'Petridish + Contoh');
                $objPHPExcel->setCellValue('L8', 'Bottom Kosong');
                $objPHPExcel->setCellValue('M8', 'Contoh');
                $objPHPExcel->mergeCells('N8:O8')->setCellValue('N8', 'Bottom + Fat');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:V8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':V' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->detail_tgl_produksi);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jns_sampel);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->jam_analisa_mc);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->petridish_kosong);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->mc_contoh);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->petridish_contoh);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->mc_hasil);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->mc_cekby);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->jam_analisa_fc);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->kode_bottom);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->bottom_kosong);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->fc_contoh);
                    $objPHPExcel->mergeCells('N' . $rowCount . ':O' . $rowCount)->setCellValue('N' . $rowCount, $row->bottom_fat);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->fc_hasil);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->fc_cekby);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->berat_contoh);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->vol_naoh);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->ffa_hasil);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->ffa_cekby);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('L' . $rowend . ':V' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':K' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('L' . $rowend . ':V' . $rowend)->setCellValue('L' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmlqs083' && $frmvrs == '06': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $bln_thn      = substr($dtheader_row->tgl_produksi,5,2).' / '.substr($dtheader_row->tgl_produksi,0,4);
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    //$lokasi_sampling = $dtheader_row->lokasi_sampling;
                    if($dtheader_row->jenis_produk=='Produk Akhir Coconut Cream'){$cek1='√';}else{$cek1='';}

                }
                
                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'S') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:O1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->setCellValue('Q2', 'Bln/Thn :');
                $objPHPExcel->mergeCells('R2:S2')->setCellValue('R2', $bln_thn);
                $objPHPExcel->setCellValue('Q3', 'HLM :');
                $objPHPExcel->mergeCells('R3:S3')->setCellValue('R3', '');
//                $objPHPExcel->mergeCells('M3:O3')->setCellValue('M3', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl); // judul form
                $objPHPExcel->mergeCells('R4:S4')->setCellValue('M4', '');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:S4');
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:S5')->setCellValue('A5', '');

                // data header
                $objPHPExcel->mergeCells('A6:S6')->setCellValue('A6', 'Coret yang tidak perlu dan berikan tanda √ pada:');

                $objPHPExcel->mergeCells('A7:B7')->setCellValue('A7', 'Jenis Produk');
                //$objPHPExcel->mergeCells('A8:B11')->setCellValue('A8','' );
                $objPHPExcel->setCellValue('C7', ':');
                $objPHPExcel->setCellValue('D7', $cek1);
                $objPHPExcel->mergeCells('E7:K7')->setCellValue('E7', 'Produk Akhir Coconut Cream');
                $objPHPExcel->setCellValue('L7', '');
                $objPHPExcel->setCellValue('M7', '');
                $objPHPExcel->mergeCells('N7:S7')->setCellValue('N7', 'Shelf Life Coconut Cream');
                
                $objPHPExcel->mergeCells('A8:B8')->setCellValue('A8', '');
                //$objPHPExcel->mergeCells('A8:B11')->setCellValue('A8','' );
                $objPHPExcel->setCellValue('C8', '');
                $objPHPExcel->setCellValue('D8', '');
                $objPHPExcel->mergeCells('E8:K8')->setCellValue('E8', 'Produk Akhir Fruit Ice (Pina / Mango /Pink Guava)');
                $objPHPExcel->setCellValue('L8', '');
                $objPHPExcel->setCellValue('M8', '');
                $objPHPExcel->mergeCells('N8:S8')->setCellValue('N8', 'Shelf Life  Fruit Ice (Pina / Mango /Pink Guava)');

                $objPHPExcel->mergeCells('A9:B9')->setCellValue('A9', '');
                //$objPHPExcel->mergeCells('A9:B11')->setCellValue('A9','' );
                $objPHPExcel->setCellValue('C9', '');
                $objPHPExcel->setCellValue('D9', '');
                $objPHPExcel->mergeCells('E9:K9')->setCellValue('E9', 'Product Akhir Coconut Water Beverages');
                $objPHPExcel->setCellValue('L9', '');
                $objPHPExcel->setCellValue('M9', '');
                $objPHPExcel->mergeCells('N9:S9')->setCellValue('N9', 'Shelf Life Coconut Water Beverages');

                $objPHPExcel->mergeCells('A10:B10')->setCellValue('A10', '');
                //$objPHPExcel->mergeCells('A10:B11')->setCellValue('A10','' );
                $objPHPExcel->setCellValue('C10', '');
                $objPHPExcel->setCellValue('D10', '');
                $objPHPExcel->mergeCells('E10:K10')->setCellValue('E10', 'Product akhir Coconut Milk Beverages ( Simply Coconut)');
                $objPHPExcel->setCellValue('L10', '');
                $objPHPExcel->setCellValue('M10', '');
                $objPHPExcel->mergeCells('N10:S10')->setCellValue('N10', 'Shelf life Coconut Milk Beverages ( Simply Coconut)');

                $objPHPExcel->mergeCells('A11:B11')->setCellValue('A11', '');
                //$objPHPExcel->mergeCells('A11:B11')->setCellValue('A11','' );
                $objPHPExcel->setCellValue('C11', '');
                $objPHPExcel->setCellValue('D11', '');
                $objPHPExcel->mergeCells('E11:K11')->setCellValue('E11', 'Produk Akhir Aseptic Coconut Water – Single Strength');
                $objPHPExcel->setCellValue('L11', '');
                $objPHPExcel->setCellValue('M11', '');
                $objPHPExcel->mergeCells('N11:S11')->setCellValue('N11', 'Shelf Life  Aseptic Coconut Water – Single Strength');

                $objPHPExcel->mergeCells('A12:S12')->setCellValue('A12', '');

                $objPHPExcel->mergeCells('A13:A14')->setCellValue('A13', 'No.');
                $objPHPExcel->mergeCells('B13:B14')->setCellValue('B13', 'Kode Sampel/Kode Pack');
                $objPHPExcel->mergeCells('C13:E14')->setCellValue('C13', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('F13:F14')->setCellValue('F13', 'Jam Sampling');
                $objPHPExcel->mergeCells('G13:G14')->setCellValue('G13', 'Tanggal Kadaluwarsa');
                $objPHPExcel->mergeCells('H13:H14')->setCellValue('H13', 'No. Lab.');
                $objPHPExcel->mergeCells('I13:I14')->setCellValue('I13', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('J13:J14')->setCellValue('J13', 'Dianalisa oleh');
                $objPHPExcel->mergeCells('K13:K14')->setCellValue('K13', 'pH');
                $objPHPExcel->mergeCells('L13:O13')->setCellValue('L13', 'Commercial sterility produk low acid');
                $objPHPExcel->setCellValue('P13', 'Commercial sterility produk high acid');
                $objPHPExcel->mergeCells('Q13:Q14')->setCellValue('Q13', 'Paraf');
                $objPHPExcel->mergeCells('R13:R14')->setCellValue('R13', 'TAB (cfu/ml)');
                $objPHPExcel->mergeCells('S13:S14')->setCellValue('S13', 'Keterangan');

                $objPHPExcel->mergeCells('L14:N14')->setCellValue('J14', '35°C (CS/US)');
                $objPHPExcel->setCellValue('O14', '55°C (CS/US)');
                $objPHPExcel->setCellValue('P14', '30°C (CS/US)');

                $objPHPExcel->setSharedStyle($headerStyle, 'A13:S14');

                // jumlah row header tabel sebelum detail
                $rowCount = 14;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':S' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->mergeCells('C'.$rowCount.':E'.$rowCount)->setCellValue('C' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->tgl_expired);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->no_lab);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->analis_oleh);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->ph);
                    $objPHPExcel->mergeCells('L'.$rowCount.':N'.$rowCount)->setCellValue('L' . $rowCount, $row->csp_la_35);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->csp_la_55);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->csp_ha_30);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->checkby);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->tab);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->keterangan);

                    $no++;
                }

                $ket1 = $rowCount + 1;
                $ket2 = $ket1 + 1;
                $ket3 = $ket2 + 1;

                $objPHPExcel->mergeCells('A' . $ket1 . ':S' . $ket1)->setCellValue('A' . $ket1, 'Definisi :');
                $objPHPExcel->mergeCells('A' . $ket2 . ':S' . $ket2)->setCellValue('A' . $ket2, 'CS : Commercially Sterile');
                $objPHPExcel->mergeCells('A' . $ket3 . ':S' . $ket3)->setCellValue('A' . $ket3, 'US : Unsterile');
                $rowend = $ket3 + 1;

                $objPHPExcel->getStyle('L' . $rowend . ':S' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':K' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('L' . $rowend . ':S' . $rowend)->setCellValue('L' . $rowend, $frmnm . '-' . $frmvrs);
                break;
            case $frmkode == 'frmlqs083' && $frmvrs == '07': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $bln_thn      = substr($dtheader_row->tgl_produksi,5,2).' / '.substr($dtheader_row->tgl_produksi,0,4);
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    $filler       = $dtheader_row->filler;
                    if($dtheader_row->jenis_produk=='Produk Akhir Coconut Cream'){$cek1='√';}else{$cek1='';}

                }
                
                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'S') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:O1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->setCellValue('Q2', 'Bln/Thn :');
                $objPHPExcel->mergeCells('R2:S2')->setCellValue('R2', $bln_thn);
                $objPHPExcel->setCellValue('Q3', 'HLM :');
                $objPHPExcel->mergeCells('R3:S3')->setCellValue('R3', '');
//                $objPHPExcel->mergeCells('M3:O3')->setCellValue('M3', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl); // judul form
                $objPHPExcel->mergeCells('R4:S4')->setCellValue('M4', '');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:S4');
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:S5')->setCellValue('A5', 'Filler : '.$filler);

                // data header
                $objPHPExcel->mergeCells('A6:S6')->setCellValue('A6', 'Coret yang tidak perlu dan berikan tanda √ pada:');

                $objPHPExcel->mergeCells('A7:B7')->setCellValue('A7', 'Jenis Produk');
                //$objPHPExcel->mergeCells('A8:B11')->setCellValue('A8','' );
                $objPHPExcel->setCellValue('C7', ':');
                $objPHPExcel->setCellValue('D7', $cek1);
                $objPHPExcel->mergeCells('E7:K7')->setCellValue('E7', 'Produk Akhir Coconut Cream');
                $objPHPExcel->setCellValue('L7', '');
                $objPHPExcel->setCellValue('M7', '');
                $objPHPExcel->mergeCells('N7:S7')->setCellValue('N7', 'Shelf Life Coconut Cream');
                
                $objPHPExcel->mergeCells('A8:B8')->setCellValue('A8', '');
                //$objPHPExcel->mergeCells('A8:B11')->setCellValue('A8','' );
                $objPHPExcel->setCellValue('C8', '');
                $objPHPExcel->setCellValue('D8', '');
                $objPHPExcel->mergeCells('E8:K8')->setCellValue('E8', 'Produk Akhir Fruit Ice (Pina / Mango /Pink Guava)');
                $objPHPExcel->setCellValue('L8', '');
                $objPHPExcel->setCellValue('M8', '');
                $objPHPExcel->mergeCells('N8:S8')->setCellValue('N8', 'Shelf Life  Fruit Ice (Pina / Mango /Pink Guava)');

                $objPHPExcel->mergeCells('A9:B9')->setCellValue('A9', '');
                //$objPHPExcel->mergeCells('A9:B11')->setCellValue('A9','' );
                $objPHPExcel->setCellValue('C9', '');
                $objPHPExcel->setCellValue('D9', '');
                $objPHPExcel->mergeCells('E9:K9')->setCellValue('E9', 'Product Akhir Coconut Water Beverages');
                $objPHPExcel->setCellValue('L9', '');
                $objPHPExcel->setCellValue('M9', '');
                $objPHPExcel->mergeCells('N9:S9')->setCellValue('N9', 'Shelf Life Coconut Water Beverages');

                $objPHPExcel->mergeCells('A10:B10')->setCellValue('A10', '');
                //$objPHPExcel->mergeCells('A10:B11')->setCellValue('A10','' );
                $objPHPExcel->setCellValue('C10', '');
                $objPHPExcel->setCellValue('D10', '');
                $objPHPExcel->mergeCells('E10:K10')->setCellValue('E10', 'Product akhir Coconut Milk Beverages ( Simply Coconut)');
                $objPHPExcel->setCellValue('L10', '');
                $objPHPExcel->setCellValue('M10', '');
                $objPHPExcel->mergeCells('N10:S10')->setCellValue('N10', 'Shelf life Coconut Milk Beverages ( Simply Coconut)');

                $objPHPExcel->mergeCells('A11:B11')->setCellValue('A11', '');
                //$objPHPExcel->mergeCells('A11:B11')->setCellValue('A11','' );
                $objPHPExcel->setCellValue('C11', '');
                $objPHPExcel->setCellValue('D11', '');
                $objPHPExcel->mergeCells('E11:K11')->setCellValue('E11', 'Produk Akhir Aseptic Coconut Water – Single Strength');
                $objPHPExcel->setCellValue('L11', '');
                $objPHPExcel->setCellValue('M11', '');
                $objPHPExcel->mergeCells('N11:S11')->setCellValue('N11', 'Shelf Life  Aseptic Coconut Water – Single Strength');

                $objPHPExcel->mergeCells('A12:S12')->setCellValue('A12', '');

                $objPHPExcel->mergeCells('A13:A14')->setCellValue('A13', 'No.');
                $objPHPExcel->mergeCells('B13:B14')->setCellValue('B13', 'Kode Sampel/Kode Pack');
                $objPHPExcel->mergeCells('C13:E14')->setCellValue('C13', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('F13:F14')->setCellValue('F13', 'Jam Sampling');
                $objPHPExcel->mergeCells('G13:G14')->setCellValue('G13', 'Tanggal Kadaluwarsa');
                $objPHPExcel->mergeCells('H13:H14')->setCellValue('H13', 'No. Lab.');
                $objPHPExcel->mergeCells('I13:I14')->setCellValue('I13', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('J13:J14')->setCellValue('J13', 'Dianalisa oleh');
                $objPHPExcel->mergeCells('K13:K14')->setCellValue('K13', 'pH');
                $objPHPExcel->mergeCells('L13:O13')->setCellValue('L13', 'Commercial sterility produk low acid');
                $objPHPExcel->setCellValue('P13', 'Commercial sterility produk high acid');
                $objPHPExcel->mergeCells('Q13:Q14')->setCellValue('Q13', 'Paraf');
                $objPHPExcel->mergeCells('R13:R14')->setCellValue('R13', 'TAB (cfu/ml)');
                $objPHPExcel->mergeCells('S13:S14')->setCellValue('S13', 'Keterangan');

                $objPHPExcel->mergeCells('L14:N14')->setCellValue('L14', '35°C (CS/US)');
                $objPHPExcel->getColumnDimension('N14')->setWidth(20);
                $objPHPExcel->setCellValue('O14', '55°C (CS/US)');
                $objPHPExcel->setCellValue('P14', '30°C (CS/US)');

                $objPHPExcel->setSharedStyle($headerStyle, 'A13:S14');

                // jumlah row header tabel sebelum detail
                $rowCount = 14;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':S' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->mergeCells('C'.$rowCount.':E'.$rowCount)->setCellValue('C' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->tgl_expired);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->no_lab);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->analis_oleh);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->ph);
                    $objPHPExcel->mergeCells('L'.$rowCount.':N'.$rowCount)->setCellValue('L' . $rowCount, $row->csp_la_35);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->csp_la_55);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->csp_ha_30);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->checkby);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->tab);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->keterangan);

                    $no++;
                }

                $ket1 = $rowCount + 1;
                $ket2 = $ket1 + 1;
                $ket3 = $ket2 + 1;

                $objPHPExcel->mergeCells('A' . $ket1 . ':S' . $ket1)->setCellValue('A' . $ket1, 'Definisi :');
                $objPHPExcel->mergeCells('A' . $ket2 . ':S' . $ket2)->setCellValue('A' . $ket2, 'CS : Commercially Sterile');
                $objPHPExcel->mergeCells('A' . $ket3 . ':S' . $ket3)->setCellValue('A' . $ket3, 'US : Unsterile');
                $rowend = $ket3 + 1;

                $objPHPExcel->getStyle('L' . $rowend . ':S' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':K' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('L' . $rowend . ':S' . $rowend)->setCellValue('L' . $rowend, $frmnm . '-' . $frmvrs);
                break;    
            case $frmkode == 'frmlqs081' && $frmvrs == '04': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun      = $dtheader_row->dttahun;
                    $dtbulan      = $dtheader_row->dtbulan;
                    $tgl_produksi = $dtheader_row->tgl_produksi;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AC') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:AC1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:Y3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Z2:AC2')->setCellValue('Z2', 'Tahun :' . $dttahun);
                $objPHPExcel->mergeCells('Z3:AC3')->setCellValue('Z3', 'Bulan :' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:Y4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('Z4:AC4')->setCellValue('Z4', '');

                $objPHPExcel->mergeCells('A5:AC8')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A9:A11')->setCellValue('A9', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B9:B11')->setCellValue('B9', 'Jam Sampling');
                $objPHPExcel->mergeCells('C9:C11')->setCellValue('C9', 'Kode Produk');
                $objPHPExcel->mergeCells('D9:D11')->setCellValue('D9', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('E9:F10')->setCellValue('E9', 'pH');
                $objPHPExcel->mergeCells('G9:K10')->setCellValue('G9', 'Specific Gravity (gr/ml)');
                $objPHPExcel->mergeCells('L9:M10')->setCellValue('L9', 'Dry Matter (%)');
                $objPHPExcel->mergeCells('N9:O10')->setCellValue('N9', 'Fat Content(%)');
                $objPHPExcel->mergeCells('P9:S10')->setCellValue('P9', 'Spin Test(%)');
                $objPHPExcel->mergeCells('T9:U10')->setCellValue('T9', 'Brix(oB)');
                $objPHPExcel->mergeCells('V9:W10')->setCellValue('V9', 'Odour and Flavour *');
                $objPHPExcel->mergeCells('X9:Y10')->setCellValue('X9', 'Colour and Apperance **');
                $objPHPExcel->mergeCells('Z9:AB10')->setCellValue('Z9', 'Viscosity (cps)');
                $objPHPExcel->mergeCells('AC9:AC11')->setCellValue('AC9', 'Keterangan');

                $objPHPExcel->setCellValue('E11', 'Hasil');
                $objPHPExcel->setCellValue('F11', 'Paraf');
                $objPHPExcel->setCellValue('G11', 'Picno kosong (A)');
                $objPHPExcel->setCellValue('H11', 'Berat Air (B-A)');
                $objPHPExcel->setCellValue('I11', 'Picno + contoh (C)');
                $objPHPExcel->setCellValue('J11', 'Hasil');
                $objPHPExcel->setCellValue('K11', 'Paraf');
                $objPHPExcel->setCellValue('L11', 'Hasil');
                $objPHPExcel->setCellValue('M11', 'Paraf');
                $objPHPExcel->setCellValue('N11', 'Hasil');
                $objPHPExcel->setCellValue('O11', 'Paraf');
                $objPHPExcel->setCellValue('P11', 'Cream');
                $objPHPExcel->setCellValue('Q11', 'Skim');
                $objPHPExcel->setCellValue('R11', 'Sludge');
                $objPHPExcel->setCellValue('S11', 'Paraf');
                $objPHPExcel->setCellValue('T11', 'Hasil');
                $objPHPExcel->setCellValue('U11', 'Paraf');
                $objPHPExcel->setCellValue('V11', 'Hasil');
                $objPHPExcel->setCellValue('W11', 'Paraf');
                $objPHPExcel->setCellValue('X11', 'Hasil');
                $objPHPExcel->setCellValue('Y11', 'Paraf');
                $objPHPExcel->setCellValue('Z11', 'Hasil');
                $objPHPExcel->mergeCells('AA11:AB11')->setCellValue('AA11', 'Paraf');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AC11');

                $rowCount = 11;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AC' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->kode_produk);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->tanggal_analisa);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ph_hasil);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ph_cekby);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->picno_kosong);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->picno_air);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->picno_contoh);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->gravity_hasil);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->gravity_cekby);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->dm_hasil);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->dm_cekby);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->fc_hasil);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->fc_cekby);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->st_cream);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->st_skim);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->st_sludge);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->st_cekby);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->brix_hasil);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->brix_cekby);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->odour_hasil);
                    $objPHPExcel->setCellValue('W' . $rowCount, $row->odour_cekby);
                    $objPHPExcel->setCellValue('X' . $rowCount, $row->colour_hasil);
                    $objPHPExcel->setCellValue('Y' . $rowCount, $row->colour_cekby);
                    $objPHPExcel->setCellValue('Z' . $rowCount, $row->visco_hasil);
                    $objPHPExcel->mergeCells('AA' . $rowCount . ':AB' . $rowCount)->setCellValue('AA' . $rowCount, $row->visco_cekby);
                    $objPHPExcel->setCellValue('AC' . $rowCount, $row->ket);

                    $no++;
                }


                $rowend  = $rowCount + 1;
                $rowend1 = $rowCount + 2;

                $objPHPExcel->setCellValue('A' . $rowend, 'Definisi :');
                $objPHPExcel->setCellValue('A' . $rowend1, 'pH :-log H+');
                $objPHPExcel->setCellValue('C' . $rowend1, 'cps : centipoise');
                $objPHPExcel->setCellValue('G' . $rowend1, '* Normal : Creamy White');
                $objPHPExcel->setCellValue('J' . $rowend1, '** Normal : Sweet Natural Coconut Flavour, Free From Foreign or Objectionable Flavour/Odour');

                $rowend2 = $rowCount + 3;

                $objPHPExcel->getStyle('P' . $rowend2 . ':AC' . $rowend2)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend2 . ':O' . $rowend2)->setCellValue('A' . $rowend2, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('P' . $rowend2 . ':AC' . $rowend2)->setCellValue('P' . $rowend2, $frmnm);

                break;
            case $frmkode == 'frmlqs077' && $frmvrs == '05': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $tgl_data = substr($dtheader_row->tgl_data, 8, 2) . '-' . substr($dtheader_row->tgl_data, 5, 2) . '-' . substr($dtheader_row->tgl_data, 0, 4);
                    //$lokasi_sampling = $dtheader_row->lokasi_sampling;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'S') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                    // $objPHPExcel->getStyle($columnID)->getAlignment()->setWrapText(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:S1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:R3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->setCellValue('S2', 'Doc :');
                $objPHPExcel->setCellValue('S3', 'Tgl :' . $tgl_data);

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:S5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'No');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Kode Contoh');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Tgl/Kode Produksi (BBD/Expiry Date');
                $objPHPExcel->mergeCells('D6:F6')->setCellValue('D6', 'Dianalisa');
                $objPHPExcel->mergeCells('G6:G8')->setCellValue('G6', 'pH');
                //$objPHPExcel->getActiveSheet()->getStyle('G6:G8'.$objPHPExcel->getActiveSheet()->getHighestRow())->getAlignment()->setWrapText(true); 
                $objPHPExcel->mergeCells('H6:J6')->setCellValue('H6', 'Uji Streak');
                $objPHPExcel->mergeCells('K6:K6')->setCellValue('K6', 'Morfologi Koloni');
                $objPHPExcel->mergeCells('L6:M6')->setCellValue('L6', 'Cerapan Mikroskopik');
                $objPHPExcel->mergeCells('N6:O6')->setCellValue('N6', 'Uji Biokimia');
                $objPHPExcel->mergeCells('P6:R6')->setCellValue('P6', 'Uji Pemanasan Contoh');
                $objPHPExcel->mergeCells('S6:S8')->setCellValue('S6', 'Keterangan');

                $objPHPExcel->mergeCells('D7:D8')->setCellValue('D7', 'Tanggal');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'Oleh');
                $objPHPExcel->mergeCells('F7:F8')->setCellValue('F7', 'Paraf');

                $objPHPExcel->setCellValue('H7', 'NA');
                $objPHPExcel->setCellValue('I7', 'TGEA');
                $objPHPExcel->setCellValue('J7', 'OSA');

                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Bentuk/Penampilan/Warna?');
                $objPHPExcel->mergeCells('L7:L8')->setCellValue('L7', 'Bentuk/Penampilan/Berspora?');
                $objPHPExcel->mergeCells('M7:M8')->setCellValue('M7', 'Gram Stain');
                $objPHPExcel->mergeCells('N7:N8')->setCellValue('N7', 'Katalase');
                $objPHPExcel->mergeCells('O7:O8')->setCellValue('O7', 'Oksidase');

                $objPHPExcel->setCellValue('P7', 'T = 80°C');
                $objPHPExcel->mergeCells('Q7:R7')->setCellValue('Q7', 'T = 100°C');

                $objPHPExcel->mergeCells('S7:S8')->setCellValue('S7', 'Keterangan');

                $objPHPExcel->setCellValue('H8', 'Inkubasi 35°C');
                $objPHPExcel->setCellValue('I8', 'Inkubasi 55°C');
                $objPHPExcel->setCellValue('J8', 'Inkubasi 30°C');

                $objPHPExcel->setCellValue('P8', 'I/35°C');
                $objPHPExcel->setCellValue('Q8', 'I/35°C');
                $objPHPExcel->setCellValue('R8', 'I/35°C');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:S8');

                // jumlah row header tabel sebelum detail
                $rowCount = 8;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':S' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':S' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_contoh);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->tgl_kd_produksi);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->analisa_tgl);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->analisa_oleh);
                    // $objPHPExcel->setCellValue('F'.$rowCount,$row->no_lab);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->us_na_i35);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->us_tgea_i55);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->us_osa_i30);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->mk_warna);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->cm_spora);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->cm_gram);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->ub_katalase);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->ub_oksidase);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->upj_t80_i35);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->upj_t100_i35);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->upj_t100_i55);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('J' . $rowend . ':S' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:S8')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':I' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('J' . $rowend . ':S' . $rowend)->setCellValue('J' . $rowend, $frmnm . '-' . $frmvrs);
                break;
            case $frmkode == 'frmlqs052' && $frmvrs == '09': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun      = $dtheader_row->dttahun;
                    $dtbulan      = $dtheader_row->dtbulan;
                    $tgl_produksi = $dtheader_row->tgl_produksi;
                    $filler       = $dtheader_row->filler;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AJ') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }
                $objPHPExcel->getColumnDimension('D')->setWidth(20);

                $objPHPExcel->mergeCells('A1:AJ1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:AG3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('AH2:AJ2')->setCellValue('AH2', 'Tahun : ' . $dttahun);
                $objPHPExcel->mergeCells('AH3:AJ3')->setCellValue('AH3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:AG4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('AH4:AJ4')->setCellValue('Z4', '');

                $objPHPExcel->mergeCells('A5:AJ5')->setCellValue('A5', 'Filler : ' . $filler);

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Kode Produk');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Jam Sampel');
                $objPHPExcel->mergeCells('D6:D8')->setCellValue('D6', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('E6:F7')->setCellValue('E6', 'pH (6.0-6.4');
                $objPHPExcel->mergeCells('G6:K6')->setCellValue('G6', 'Specific Gravity (0.995-1.005)');
                $objPHPExcel->mergeCells('L6:R6')->setCellValue('L6', 'Dry Matter (%)');
                $objPHPExcel->mergeCells('S6:T7')->setCellValue('S6', 'Fat Content(%)');
                $objPHPExcel->mergeCells('U6:Y6')->setCellValue('U6', 'Peroxide Value (2 meg/kg max');
                $objPHPExcel->mergeCells('Z6:AC6')->setCellValue('Z6', 'Free Fatty Acid/ FFA (0.1 % max)');
                $objPHPExcel->mergeCells('AD6:AE7')->setCellValue('AD6', 'Viscosity (cps)');
                $objPHPExcel->mergeCells('AF6:AG7')->setCellValue('AF6', 'Odour/ Flavour Normal**');
                $objPHPExcel->mergeCells('AH6:AI7')->setCellValue('AH6', 'Colour and Apperance*');
                $objPHPExcel->mergeCells('AJ6:AJ8')->setCellValue('AJ6', 'Keterangan');

                $objPHPExcel->mergeCells('G7:I7')->setCellValue('G7', 'Berat (g)');
                $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Hasil');
                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Paraf');
                $objPHPExcel->mergeCells('L7:M7')->setCellValue('M7', 'Jam Analisa');
                $objPHPExcel->mergeCells('N7:P7')->setCellValue('N7', 'Berat (g)');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Hasil');
                $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Paraf');
                $objPHPExcel->mergeCells('V7:W7')->setCellValue('V7', 'Volume Thio (mL)');
                $objPHPExcel->mergeCells('X7:X8')->setCellValue('X7', 'Hasil');
                $objPHPExcel->mergeCells('Y7:Y8')->setCellValue('Y7', 'Paraf');
                $objPHPExcel->mergeCells('Z7:Z8')->setCellValue('Z7', 'Berat Contoh (g)');
                $objPHPExcel->mergeCells('AA7:AA8')->setCellValue('AA7', 'Volume NaOH (ml)');
                $objPHPExcel->mergeCells('AB7:AB8')->setCellValue('AB7', 'Hasil');
                $objPHPExcel->mergeCells('AC7:AC8')->setCellValue('AC7', 'Paraf');

                $objPHPExcel->setCellValue('E8', 'Hasil');
                $objPHPExcel->setCellValue('F8', 'Paraf');
                $objPHPExcel->setCellValue('G8', 'Picno kosong (A)');
                $objPHPExcel->setCellValue('H8', 'Air');
                $objPHPExcel->setCellValue('I8', 'Picno + contoh (C)');
                $objPHPExcel->setCellValue('L8', 'Start');
                $objPHPExcel->setCellValue('M8', 'Finish');
                $objPHPExcel->setCellValue('N8', 'Petridish Kosong (Wo)');
                $objPHPExcel->setCellValue('O8', 'Contoh (Ws)');
                $objPHPExcel->setCellValue('P8', 'Petridish + Contoh (Wt)');
                $objPHPExcel->setCellValue('S8', 'Hasil');
                $objPHPExcel->setCellValue('T8', 'Paraf');
                $objPHPExcel->setCellValue('V8', 'Blanko (B)');
                $objPHPExcel->setCellValue('W8', 'Contoh (S)');
                $objPHPExcel->setCellValue('AD8', 'Hasil');
                $objPHPExcel->setCellValue('AE8', 'Paraf');
                $objPHPExcel->setCellValue('AF8', 'Hasil');
                $objPHPExcel->setCellValue('AG8', 'Paraf');
                $objPHPExcel->setCellValue('AH8', 'Hasil');
                $objPHPExcel->setCellValue('AI8', 'Paraf');



                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AJ8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AJ' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_produk);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampel);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ph_hasil);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ph_paraf);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->sg_berat_pk);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->sg_berat_air);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->sg_berat_pc);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->sg_hasil);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->sg_paraf);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->dm_jam_analisa);
                    $objPHPExcel->setCellValue('M' . $rowCount, '');
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->dm_berat_pk);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->dm_berat_contoh);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->dm_berat_pc);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->dm_hasil);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->dm_paraf);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->fc_hasil);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->fc_paraf);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->pv_berat_cth);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->pv_vt_blanko);
                    $objPHPExcel->setCellValue('W' . $rowCount, $row->pv_vt_contoh);
                    $objPHPExcel->setCellValue('X' . $rowCount, $row->pv_hasil);
                    $objPHPExcel->setCellValue('Y' . $rowCount, $row->pv_paraf);
                    $objPHPExcel->setCellValue('Z' . $rowCount, $row->ffa_berat_cth);
                    $objPHPExcel->setCellValue('AA' . $rowCount, $row->ffa_volume);
                    $objPHPExcel->setCellValue('AB' . $rowCount, $row->ffa_hasil);
                    $objPHPExcel->setCellValue('AC' . $rowCount, $row->ffa_paraf);
                    $objPHPExcel->setCellValue('AD' . $rowCount, $row->visco_hasil);
                    $objPHPExcel->setCellValue('AE' . $rowCount, $row->visco_paraf);
                    $objPHPExcel->setCellValue('AF' . $rowCount, $row->odour_hasil);
                    $objPHPExcel->setCellValue('AG' . $rowCount, $row->odour_paraf);
                    $objPHPExcel->setCellValue('AH' . $rowCount, $row->colour_hasil);
                    $objPHPExcel->setCellValue('AI' . $rowCount, $row->colour_paraf);
                    $objPHPExcel->setCellValue('AJ' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 3;
                $rowket4 = $rowCount + 4;
                $rowket5 = $rowCount + 5;
                $rowend  = $rowCount + 7;

                $objPHPExcel->setCellValue('A' . $rowket1, 'Definisi :');
                $objPHPExcel->setCellValue('H' . $rowket1, 'Keterangan :');

                $objPHPExcel->setCellValue('A' . $rowket2, 'pH :-log H+');
                $objPHPExcel->setCellValue('C' . $rowket2, 'ml : mililiter');
                $objPHPExcel->setCellValue('E' . $rowket2, 'FC : Fat Content');
                $objPHPExcel->setCellValue('H' . $rowket2, 'FC: 17.0 ± 1%, DM: 20 - 25%, Visc: ≤1000 cps');
                $objPHPExcel->setCellValue('N' . $rowket2, '*Normal : Creamy White');


                $objPHPExcel->setCellValue('A' . $rowket3, 'cps : centipoise');
                $objPHPExcel->setCellValue('C' . $rowket3, 'kg : kilogram');
                $objPHPExcel->setCellValue('E' . $rowket3, 'DM : Dry Matter');
                $objPHPExcel->setCellValue('H' . $rowket3, 'FC: 22.0 ± 1%, DM: 26 - 29%, Visc: ≤2000 cps');
                $objPHPExcel->setCellValue('N' . $rowket3, '** Normal : Sweet Natural Coconut Flavour, Free From Foreign or Objectionable Flavour/Odour');

                $objPHPExcel->setCellValue('A' . $rowket4, 'g : gram');
                $objPHPExcel->setCellValue('C' . $rowket4, 'max : maximum');
                $objPHPExcel->setCellValue('E' . $rowket4, 'Visc : Viscosity');
                $objPHPExcel->setCellValue('H' . $rowket4, 'FC: 24.0 ± 1%, DM: 28 - 32%, Visc: ≤2000 cps');

                $objPHPExcel->setCellValue('A' . $rowket5, 'meq : miliequivalen');
                $objPHPExcel->setCellValue('C' . $rowket5, 'Hlm : halaman');
                $objPHPExcel->setCellValue('E' . $rowket5, 'Thio : Thioslfate');
                $objPHPExcel->setCellValue('H' . $rowket5, 'FC: 30.0 ± 1%, DM: Minimal 33%');


                $objPHPExcel->getStyle('S' . $rowend . ':AJ' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':R' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('S' . $rowend . ':AJ' . $rowend)->setCellValue('S' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmlqs052' && $frmvrs == '10': 

                foreach ($dtheader as $dtheader_row){
                    $dttahun      = $dtheader_row->dttahun;
                    $dtbulan      = $dtheader_row->dtbulan;
                    $tgl_produksi = $dtheader_row->tgl_produksi;
                    $filler       = $dtheader_row->filler;
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'AL') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }
                $objPHPExcel->getColumnDimension('D')->setWidth(20);

                $objPHPExcel->mergeCells('A1:AL1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:AI3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('AJ2:AL2')->setCellValue('AJ2', 'Tahun : ' . $dttahun);
                $objPHPExcel->mergeCells('AJ3:AL3')->setCellValue('AJ3', 'Bulan : ' . $dtbulan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:AI4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('AJ4:AL4')->setCellValue('AJ4', '');

                $objPHPExcel->mergeCells('A5:AL5')->setCellValue('A5', 'Filler : ' . $filler);

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Kode Produk');
                $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Jam Sampel');
                $objPHPExcel->mergeCells('D6:D8')->setCellValue('D6', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('E6:F7')->setCellValue('E6', 'pH (6.0-6.4');
                $objPHPExcel->mergeCells('G6:K6')->setCellValue('G6', 'Specific Gravity (0.995-1.005)');
                $objPHPExcel->mergeCells('L6:R6')->setCellValue('L6', 'Dry Matter (%)');
                $objPHPExcel->mergeCells('S6:T7')->setCellValue('S6', 'Fat Content(%)');
                $objPHPExcel->mergeCells('U6:Y6')->setCellValue('U6', 'Peroxide Value (2 meg/kg max');
                $objPHPExcel->mergeCells('Z6:AC6')->setCellValue('Z6', 'Free Fatty Acid/ FFA (0.1 % max)');
                $objPHPExcel->mergeCells('AD6:AG7')->setCellValue('AD6', 'Viscosity (cps)');
                $objPHPExcel->mergeCells('AH6:AI7')->setCellValue('AH6', 'Odour/ Flavour Normal**');
                $objPHPExcel->mergeCells('AJ6:AK7')->setCellValue('AJ6', 'Colour and Apperance*');
                $objPHPExcel->mergeCells('AL6:AL8')->setCellValue('AL6', 'Keterangan');

                $objPHPExcel->mergeCells('G7:I7')->setCellValue('G7', 'Berat (g)');
                $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Hasil');
                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Paraf');
                $objPHPExcel->mergeCells('L7:M7')->setCellValue('M7', 'Jam Analisa');
                $objPHPExcel->mergeCells('N7:P7')->setCellValue('N7', 'Berat (g)');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Hasil');
                $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Paraf');
                $objPHPExcel->mergeCells('V7:W7')->setCellValue('V7', 'Volume Thio (mL)');
                $objPHPExcel->mergeCells('X7:X8')->setCellValue('X7', 'Hasil');
                $objPHPExcel->mergeCells('Y7:Y8')->setCellValue('Y7', 'Paraf');
                $objPHPExcel->mergeCells('Z7:Z8')->setCellValue('Z7', 'Berat Contoh (g)');
                $objPHPExcel->mergeCells('AA7:AA8')->setCellValue('AA7', 'Volume NaOH (ml)');
                $objPHPExcel->mergeCells('AB7:AB8')->setCellValue('AB7', 'Hasil');
                $objPHPExcel->mergeCells('AC7:AC8')->setCellValue('AC7', 'Paraf');

                $objPHPExcel->setCellValue('E8', 'Hasil');
                $objPHPExcel->setCellValue('F8', 'Paraf');
                $objPHPExcel->setCellValue('G8', 'Picno kosong (A)');
                $objPHPExcel->setCellValue('H8', 'Air');
                $objPHPExcel->setCellValue('I8', 'Picno + contoh (C)');
                $objPHPExcel->setCellValue('L8', 'Start');
                $objPHPExcel->setCellValue('M8', 'Finish');
                $objPHPExcel->setCellValue('N8', 'Petridish Kosong (Wo)');
                $objPHPExcel->setCellValue('O8', 'Contoh (Ws)');
                $objPHPExcel->setCellValue('P8', 'Petridish + Contoh (Wt)');
                $objPHPExcel->setCellValue('S8', 'Hasil');
                $objPHPExcel->setCellValue('T8', 'Paraf');
                $objPHPExcel->setCellValue('V8', 'Blanko (B)');
                $objPHPExcel->setCellValue('W8', 'Contoh (S)');
                $objPHPExcel->setCellValue('AD8', 'Spindel 2 (12 rpm)');
                $objPHPExcel->setCellValue('AE8', 'Spindel 2 (60 rpm)');
                $objPHPExcel->setCellValue('AF8', 'Spindel 3 (60 rpm)');
                $objPHPExcel->setCellValue('AG8', 'Paraf');
                $objPHPExcel->setCellValue('AH8', 'Hasil');
                $objPHPExcel->setCellValue('AI8', 'Paraf');
                $objPHPExcel->setCellValue('AJ8', 'Hasil');
                $objPHPExcel->setCellValue('AK8', 'Paraf');



                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AL8');

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AL' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl_produksi);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_produk);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampel);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->ph_hasil);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->ph_paraf);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->sg_berat_pk);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->sg_berat_air);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->sg_berat_pc);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->sg_hasil);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->sg_paraf);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->dm_jam_analisa);
                    $objPHPExcel->setCellValue('M' . $rowCount, '');
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->dm_berat_pk);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->dm_berat_contoh);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->dm_berat_pc);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->dm_hasil);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->dm_paraf);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->fc_hasil);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->fc_paraf);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->pv_berat_cth);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->pv_vt_blanko);
                    $objPHPExcel->setCellValue('W' . $rowCount, $row->pv_vt_contoh);
                    $objPHPExcel->setCellValue('X' . $rowCount, $row->pv_hasil);
                    $objPHPExcel->setCellValue('Y' . $rowCount, $row->pv_paraf);
                    $objPHPExcel->setCellValue('Z' . $rowCount, $row->ffa_berat_cth);
                    $objPHPExcel->setCellValue('AA' . $rowCount, $row->ffa_volume);
                    $objPHPExcel->setCellValue('AB' . $rowCount, $row->ffa_hasil);
                    $objPHPExcel->setCellValue('AC' . $rowCount, $row->ffa_paraf);
                    $objPHPExcel->setCellValue('AD' . $rowCount, $row->visco_hasil);
                    $objPHPExcel->setCellValue('AE' . $rowCount, $row->visco_hasil2);
                    $objPHPExcel->setCellValue('AF' . $rowCount, $row->visco_hasil3);
                    $objPHPExcel->setCellValue('AG' . $rowCount, $row->visco_paraf);
                    $objPHPExcel->setCellValue('AH' . $rowCount, $row->odour_hasil);
                    $objPHPExcel->setCellValue('AI' . $rowCount, $row->odour_paraf);
                    $objPHPExcel->setCellValue('AJ' . $rowCount, $row->colour_hasil);
                    $objPHPExcel->setCellValue('AK' . $rowCount, $row->colour_paraf);
                    $objPHPExcel->setCellValue('AL' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowket1 = $rowCount + 1;
                $rowket2 = $rowCount + 2;
                $rowket3 = $rowCount + 3;
                $rowket4 = $rowCount + 4;
                $rowket5 = $rowCount + 5;
                $rowend  = $rowCount + 7;

                $objPHPExcel->setCellValue('A' . $rowket1, 'Definisi :');
                $objPHPExcel->setCellValue('H' . $rowket1, 'Keterangan :');

                $objPHPExcel->setCellValue('A' . $rowket2, 'pH :-log H+');
                $objPHPExcel->setCellValue('C' . $rowket2, 'ml : mililiter');
                $objPHPExcel->setCellValue('E' . $rowket2, 'FC : Fat Content');
                $objPHPExcel->setCellValue('H' . $rowket2, 'FC: 17.0 ± 1%, DM: 20 - 25%, Visc: ≤1000 cps');
                $objPHPExcel->setCellValue('N' . $rowket2, '*Normal : Creamy White');


                $objPHPExcel->setCellValue('A' . $rowket3, 'cps : centipoise');
                $objPHPExcel->setCellValue('C' . $rowket3, 'kg : kilogram');
                $objPHPExcel->setCellValue('E' . $rowket3, 'DM : Dry Matter');
                $objPHPExcel->setCellValue('H' . $rowket3, 'FC: 22.0 ± 1%, DM: 26 - 29%, Visc: ≤2000 cps');
                $objPHPExcel->setCellValue('N' . $rowket3, '** Normal : Sweet Natural Coconut Flavour, Free From Foreign or Objectionable Flavour/Odour');

                $objPHPExcel->setCellValue('A' . $rowket4, 'g : gram');
                $objPHPExcel->setCellValue('C' . $rowket4, 'max : maximum');
                $objPHPExcel->setCellValue('E' . $rowket4, 'Visc : Viscosity');
                $objPHPExcel->setCellValue('H' . $rowket4, 'FC: 24.0 ± 1%, DM: 28 - 32%, Visc: ≤2000 cps');

                $objPHPExcel->setCellValue('A' . $rowket5, 'meq : miliequivalen');
                $objPHPExcel->setCellValue('C' . $rowket5, 'Hlm : halaman');
                $objPHPExcel->setCellValue('E' . $rowket5, 'Thio : Thioslfate');
                $objPHPExcel->setCellValue('H' . $rowket5, 'FC: 30.0 ± 1%, DM: Minimal 33%');


                $objPHPExcel->getStyle('S' . $rowend . ':AL' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':R' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('S' . $rowend . ':AL' . $rowend)->setCellValue('S' . $rowend, $frmnm);

                break;
                case $frmkode == 'frmlqs052' && $frmvrs == '11': 

                    foreach ($dtheader as $dtheader_row){
                        $dttahun      = $dtheader_row->dttahun;
                        $dtbulan      = $dtheader_row->dtbulan;
                        $tgl_produksi = $dtheader_row->tgl_produksi;
                        $filler       = $dtheader_row->filler;
                    }

                    $objPHPExcel = $obj->createSheet(0);

                    $objDrawing->setCoordinates('A2');
                    $objDrawing->setWorksheet($objPHPExcel);

                    foreach (range('A', 'AJ') as $columnID){
                        $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                    }


                    $objPHPExcel->getColumnDimension('D')->setWidth(20);

                    $objPHPExcel->mergeCells('A1:AJ1');
                    $objPHPExcel->mergeCells('A2:A3');
                    $objPHPExcel->mergeCells('B2:AF3')->setCellValue('B2', $frmcop);
                    $objPHPExcel->mergeCells('AG2:AJ2')->setCellValue('AG2', 'Tahun : ' . $dttahun);
                    $objPHPExcel->mergeCells('AG3:AJ3')->setCellValue('AG3', 'Bulan : ' . $dtbulan);

                    $objPHPExcel->setCellValue('A4', 'JUDUL');
                    $objPHPExcel->mergeCells('B4:AF4')->setCellValue('B4', '' . $frmjdl);
                    $objPHPExcel->mergeCells('AG4:AJ4')->setCellValue('AG4', '');

                    $objPHPExcel->mergeCells('A5:AJ5')->setCellValue('A5', 'Filler : ' . $filler);

                    $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Tanggal Produksi');
                    $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Kode Produk');
                    $objPHPExcel->mergeCells('C6:C8')->setCellValue('C6', 'Jam Sampel');
                    $objPHPExcel->mergeCells('D6:D8')->setCellValue('D6', 'Tanggal Analisa');
                    $objPHPExcel->mergeCells('E6:F7')->setCellValue('E6', 'pH (6.0-6.4');
                    $objPHPExcel->mergeCells('G6:K6')->setCellValue('G6', 'Specific Gravity (0.995-1.005)');
                    $objPHPExcel->mergeCells('L6:R6')->setCellValue('L6', 'Dry Matter (%)');
                    $objPHPExcel->mergeCells('S6:T7')->setCellValue('S6', 'Fat Content(%)');
                    $objPHPExcel->mergeCells('U6:Y6')->setCellValue('U6', 'Peroxide Value (2 meg/kg max');
                    $objPHPExcel->mergeCells('Z6:AC6')->setCellValue('Z6', 'Free Fatty Acid/ FFA (0.1 % max)');
                    $objPHPExcel->mergeCells('AD6:AE7')->setCellValue('AD6', 'Viscosity (cps)');
                    $objPHPExcel->mergeCells('AF6:AG7')->setCellValue('AF6', 'Odour/ Flavour Normal**');
                    $objPHPExcel->mergeCells('AH6:AI7')->setCellValue('AH6', 'Colour and Apperance*');
                    $objPHPExcel->mergeCells('AJ6:AJ8')->setCellValue('AJ6', 'Keterangan');

                    $objPHPExcel->mergeCells('G7:I7')->setCellValue('G7', 'Berat (g)');
                    $objPHPExcel->mergeCells('J7:J8')->setCellValue('J7', 'Hasil');
                    $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Paraf');
                    $objPHPExcel->mergeCells('L7:M7')->setCellValue('M7', 'Jam Analisa');
                    $objPHPExcel->mergeCells('N7:P7')->setCellValue('N7', 'Berat (g)');
                    $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Hasil');
                    $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Paraf');
                    $objPHPExcel->mergeCells('V7:W7')->setCellValue('V7', 'Volume Thio (mL)');
                    $objPHPExcel->mergeCells('X7:X8')->setCellValue('X7', 'Hasil');
                    $objPHPExcel->mergeCells('Y7:Y8')->setCellValue('Y7', 'Paraf');
                    $objPHPExcel->mergeCells('Z7:Z8')->setCellValue('Z7', 'Berat Contoh (g)');
                    $objPHPExcel->mergeCells('AA7:AA8')->setCellValue('AA7', 'Volume NaOH (ml)');
                    $objPHPExcel->mergeCells('AB7:AB8')->setCellValue('AB7', 'Hasil');
                    $objPHPExcel->mergeCells('AC7:AC8')->setCellValue('AC7', 'Paraf');

                    $objPHPExcel->setCellValue('E8', 'Hasil');
                    $objPHPExcel->setCellValue('F8', 'Paraf');
                    $objPHPExcel->setCellValue('G8', 'Picno kosong (A)');
                    $objPHPExcel->setCellValue('H8', 'Air');
                    $objPHPExcel->setCellValue('I8', 'Picno + contoh (C)');
                    $objPHPExcel->setCellValue('L8', 'Start');
                    $objPHPExcel->setCellValue('M8', 'Finish');
                    $objPHPExcel->setCellValue('N8', 'Petridish Kosong (Wo)');
                    $objPHPExcel->setCellValue('O8', 'Contoh (Ws)');
                    $objPHPExcel->setCellValue('P8', 'Petridish + Contoh (Wt)');
                    $objPHPExcel->setCellValue('S8', 'Hasil');
                    $objPHPExcel->setCellValue('T8', 'Paraf');
                    $objPHPExcel->setCellValue('V8', 'Blanko (B)');
                    $objPHPExcel->setCellValue('W8', 'Contoh (S)');
                    $objPHPExcel->setCellValue('AD8', 'Hasil');
                    $objPHPExcel->setCellValue('AE8', 'Paraf');
                    $objPHPExcel->setCellValue('AF8', 'Hasil');
                    $objPHPExcel->setCellValue('AG8', 'Paraf');
                    $objPHPExcel->setCellValue('AH8', 'Hasil');
                    $objPHPExcel->setCellValue('AI8', 'Paraf');



                    $objPHPExcel->setSharedStyle($headerStyle, 'A2:AJ8');

                    $rowCount = 8;
                    $no       = 1;
                    foreach ($dtdetail as $row){
                        $rowCount++;

                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AJ' . $rowCount);

                        $objPHPExcel->setCellValue('A' . $rowCount, $tgl_produksi);
                        $objPHPExcel->setCellValue('B' . $rowCount, $row->kd_produk);
                        $objPHPExcel->setCellValue('C' . $rowCount, $row->jam_sampel);
                        $objPHPExcel->setCellValue('D' . $rowCount, $row->tgl_analisa);
                        $objPHPExcel->setCellValue('E' . $rowCount, $row->ph_hasil);
                        $objPHPExcel->setCellValue('F' . $rowCount, $row->ph_paraf);
                        $objPHPExcel->setCellValue('G' . $rowCount, $row->sg_berat_pk);
                        $objPHPExcel->setCellValue('H' . $rowCount, $row->sg_berat_air);
                        $objPHPExcel->setCellValue('I' . $rowCount, $row->sg_berat_pc);
                        $objPHPExcel->setCellValue('J' . $rowCount, $row->sg_hasil);
                        $objPHPExcel->setCellValue('K' . $rowCount, $row->sg_paraf);
                        $objPHPExcel->setCellValue('L' . $rowCount, $row->dm_jam_analisa);
                        $objPHPExcel->setCellValue('M' . $rowCount, '');
                        $objPHPExcel->setCellValue('N' . $rowCount, $row->dm_berat_pk);
                        $objPHPExcel->setCellValue('O' . $rowCount, $row->dm_berat_contoh);
                        $objPHPExcel->setCellValue('P' . $rowCount, $row->dm_berat_pc);
                        $objPHPExcel->setCellValue('Q' . $rowCount, $row->dm_hasil);
                        $objPHPExcel->setCellValue('R' . $rowCount, $row->dm_paraf);
                        $objPHPExcel->setCellValue('S' . $rowCount, $row->fc_hasil);
                        $objPHPExcel->setCellValue('T' . $rowCount, $row->fc_paraf);
                        $objPHPExcel->setCellValue('U' . $rowCount, $row->pv_berat_cth);
                        $objPHPExcel->setCellValue('V' . $rowCount, $row->pv_vt_blanko);
                        $objPHPExcel->setCellValue('W' . $rowCount, $row->pv_vt_contoh);
                        $objPHPExcel->setCellValue('X' . $rowCount, $row->pv_hasil);
                        $objPHPExcel->setCellValue('Y' . $rowCount, $row->pv_paraf);
                        $objPHPExcel->setCellValue('Z' . $rowCount, $row->ffa_berat_cth);
                        $objPHPExcel->setCellValue('AA' . $rowCount, $row->ffa_volume);
                        $objPHPExcel->setCellValue('AB' . $rowCount, $row->ffa_hasil);
                        $objPHPExcel->setCellValue('AC' . $rowCount, $row->ffa_paraf);
                        $objPHPExcel->setCellValue('AD' . $rowCount, $row->visco_hasil);
                        $objPHPExcel->setCellValue('AE' . $rowCount, $row->visco_paraf);
                        $objPHPExcel->setCellValue('AF' . $rowCount, $row->odour_hasil);
                        $objPHPExcel->setCellValue('AG' . $rowCount, $row->odour_paraf);
                        $objPHPExcel->setCellValue('AH' . $rowCount, $row->colour_hasil);
                        $objPHPExcel->setCellValue('AI' . $rowCount, $row->colour_paraf);
                        $objPHPExcel->setCellValue('AJ' . $rowCount, $row->keterangan);

                        $no++;
                    }

                    $rowket1 = $rowCount + 1;
                    $rowket2 = $rowCount + 2;
                    $rowket3 = $rowCount + 3;
                    $rowket4 = $rowCount + 4;
                    $rowket5 = $rowCount + 5;
                    $rowend  = $rowCount + 7;

                    $objPHPExcel->setCellValue('A' . $rowket1, 'Definisi :');
                    $objPHPExcel->setCellValue('H' . $rowket1, 'Keterangan :');

                    $objPHPExcel->setCellValue('A' . $rowket2, 'pH :-log H+');
                    $objPHPExcel->setCellValue('C' . $rowket2, 'ml : mililiter');
                    $objPHPExcel->setCellValue('E' . $rowket2, 'FC : Fat Content');
                    $objPHPExcel->setCellValue('H' . $rowket2, 'FC: 17.0 ± 1%, DM: 20 - 25%, Visc: ≤1000 cps');
                    $objPHPExcel->setCellValue('N' . $rowket2, '*Normal : Creamy White');


                    $objPHPExcel->setCellValue('A' . $rowket3, 'cps : centipoise');
                    $objPHPExcel->setCellValue('C' . $rowket3, 'kg : kilogram');
                    $objPHPExcel->setCellValue('E' . $rowket3, 'DM : Dry Matter');
                    $objPHPExcel->setCellValue('H' . $rowket3, 'FC: 22.0 ± 1%, DM: 26 - 29%, Visc: ≤2000 cps');
                    $objPHPExcel->setCellValue('N' . $rowket3, '** Normal : Sweet Natural Coconut Flavour, Free From Foreign or Objectionable Flavour/Odour');

                    $objPHPExcel->setCellValue('A' . $rowket4, 'g : gram');
                    $objPHPExcel->setCellValue('C' . $rowket4, 'max : maximum');
                    $objPHPExcel->setCellValue('E' . $rowket4, 'Visc : Viscosity');
                    $objPHPExcel->setCellValue('H' . $rowket4, 'FC: 24.0 ± 1%, DM: 28 - 32%, Visc: ≤2000 cps');

                    $objPHPExcel->setCellValue('A' . $rowket5, 'meq : miliequivalen');
                    $objPHPExcel->setCellValue('C' . $rowket5, 'Hlm : halaman');
                    $objPHPExcel->setCellValue('E' . $rowket5, 'Thio : Thioslfate');
                    $objPHPExcel->setCellValue('H' . $rowket5, 'FC: 30.0 ± 1%, DM: Minimal 33%');


                    $objPHPExcel->getStyle('R' . $rowend . ':AJ' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                    $objPHPExcel->mergeCells('A' . $rowend . ':P' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                    $objPHPExcel->mergeCells('R' . $rowend . ':AJ' . $rowend)->setCellValue('R' . $rowend, $frmnm);

                    break;   
            case $frmkode == 'frmlqs082' && $frmvrs == '04': 
                // utk ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $bulan_tahun  = $dtheader_row->bulan . '/' . $dtheader_row->tahun;
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    $nm_produk    = $dtheader_row->nm_produk;
                    $jns_produk   = $dtheader_row->jns_produk;
                    $filler       = $dtheader_row->filler;
                    if($dtheader_row->nm_jns_produk=='CMB'){
                        $cek1 = '√';
                    }elseif($dtheader_row->nm_jns_produk=='CwB'){
                        $cek2 = '√';
                    }elseif($dtheader_row->nm_jns_produk=='Single Strength'){
                        $cek3 = '√';
                    }else{
                        $cek1 = '';
                        $cek2 = '';
                        $cek3 = '';
                    }

                }
                
                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'EB') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:EB1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:DT3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->mergeCells('DU2:EB3')->setCellValue('DU2', 'Bulan/Tahun: ' . $bulan_tahun);
                // $objPHPExcel->mergeCells('K3:L3')->setCellValue('K3', 'Date : ' . $tanggal);

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:DT4')->setCellValue('B4', '' . $frmjdl); // judul form
                $objPHPExcel->mergeCells('DU4:EB4')->setCellValue('DU4', '');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:EB4');

                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:EB5');

                // data header
                $objPHPExcel->mergeCells('A6:EB6')->setCellValue('A6', 'Nama Produk   :  ' . $nm_produk);

                $objPHPExcel->mergeCells('A7:N7')->setCellValue('A7', 'Tgl.Produksi     :  ' . $tgl_produksi); 
                $objPHPExcel->setCellValue('O7', $cek3);               
                $objPHPExcel->mergeCells('P7:V7')->setCellValue('P7', 'Single Strength');
                $objPHPExcel->setCellValue('W7', $cek1);
                $objPHPExcel->mergeCells('X7:AD7')->setCellValue('X7', 'Coconut Milk Beverages'); 
                $objPHPExcel->setCellValue('AE7', $cek2);
                $objPHPExcel->mergeCells('AF7:AL7')->setCellValue('AF7', 'High Acid/Acidified Coconut Water Beverages'); 
                $objPHPExcel->mergeCells('AN7:EB7')->setCellValue('AN7', 'Low Acid Coconut Water Beverages'); 

                $objPHPExcel->mergeCells('A8:EB8')->setCellValue('A8', 'Filler               : ' . $filler);               

                $objPHPExcel->mergeCells('A9:E13')->setCellValue('A9', 'Kode Contoh/Kode Pack');
                $objPHPExcel->mergeCells('F9:I13')->setCellValue('F9', 'Jenis Sampel');
                $objPHPExcel->mergeCells('J9:L13')->setCellValue('J9', 'Jam Sampling');
                $objPHPExcel->mergeCells('M9:O13')->setCellValue('M9', 'Tanggal Analisa');

                $objPHPExcel->mergeCells('P9:S12')->setCellValue('P9', 'pH');
                $objPHPExcel->mergeCells('T9:W12')->setCellValue('T9', 'Brix (oBrix)');
                $objPHPExcel->mergeCells('X9:AA12')->setCellValue('X9', 'Viscosity (cps)');
                $objPHPExcel->mergeCells('AB9:AE12')->setCellValue('AB9', 'Fat Content (%)');
                $objPHPExcel->mergeCells('AF9:AM12')->setCellValue('AF9', 'Sulfur Diokside (ppm)');
                $objPHPExcel->mergeCells('AN9:AZ12')->setCellValue('AN9', 'Dry Matter (%)');
                $objPHPExcel->mergeCells('BA9:BN12')->setCellValue('BA9', 'Specific Gravity (g/ml)');
                $objPHPExcel->mergeCells('BO9:BW12')->setCellValue('BO9', 'Acidity (% citric acid monohydrate)');
                $objPHPExcel->mergeCells('BX9:CF12')->setCellValue('BX9', 'Vitamin C (mg/100mL)');
                $objPHPExcel->mergeCells('CG9:CN12')->setCellValue('CG9', 'Spin test (%)');

                $objPHPExcel->mergeCells('CO9:CR12')->setCellValue('CO9', 'Salinity (%)');
                $objPHPExcel->mergeCells('CS9:CV12')->setCellValue('CS9', 'Turbidity (NTU)');
                $objPHPExcel->mergeCells('CW9:DE12')->setCellValue('CW9', 'Chloride (ppm)');
                $objPHPExcel->mergeCells('DF9:DI12')->setCellValue('DF9', 'Dissolved Oxygen (mg/L)');
                $objPHPExcel->mergeCells('DJ9:DN12')->setCellValue('DJ9', 'Colour (PtCo)');
                $objPHPExcel->mergeCells('DO9:DS12')->setCellValue('DO9', 'Odour/Flavour');
                $objPHPExcel->mergeCells('DT9:DX12')->setCellValue('DT9', 'Appearance');
                $objPHPExcel->mergeCells('DY9:EB13')->setCellValue('DY9', 'Keterangan');

                $objPHPExcel->mergeCells('P13:Q13')->setCellValue('P13', 'Hasil');
                $objPHPExcel->mergeCells('R13:S13')->setCellValue('R13', 'Paraf');
                $objPHPExcel->mergeCells('T13:U13')->setCellValue('T13', 'Hasil');
                $objPHPExcel->mergeCells('V13:W13')->setCellValue('V13', 'Paraf');
                $objPHPExcel->mergeCells('X13:Y13')->setCellValue('X13', 'Hasil');
                $objPHPExcel->mergeCells('Z13:AA13')->setCellValue('Z13', 'Paraf');
                $objPHPExcel->mergeCells('AB13:AC13')->setCellValue('AB13', 'Hasil');
                $objPHPExcel->mergeCells('AD13:AE13')->setCellValue('AD13', 'Paraf');
                $objPHPExcel->mergeCells('AF13:AG13')->setCellValue('AF13', 'Ws (g)');
                $objPHPExcel->mergeCells('AH13:AI13')->setCellValue('AH13', 'VNaOH (ml)');
                $objPHPExcel->mergeCells('AJ13:AK13')->setCellValue('AJ13', 'Hasil');
                $objPHPExcel->mergeCells('AL13:AM13')->setCellValue('AL13', 'Paraf');
                $objPHPExcel->mergeCells('AN13:AP13')->setCellValue('AN13', 'W0 (g)');
                $objPHPExcel->mergeCells('AQ13:AS13')->setCellValue('AQ13', 'Ws (g)');
                $objPHPExcel->mergeCells('AT13:AV13')->setCellValue('AT13', 'Wt(g)');
                $objPHPExcel->mergeCells('AW13:AX13')->setCellValue('AW13', 'Hasil');
                $objPHPExcel->mergeCells('AY13:AZ13')->setCellValue('AY13', 'Paraf');
                $objPHPExcel->mergeCells('BA13:BC13')->setCellValue('BA13', 'Wp (g)');
                $objPHPExcel->mergeCells('BD13:BF13')->setCellValue('BD13', 'Wa (g)');
                $objPHPExcel->mergeCells('BG13:BI13')->setCellValue('BG13', 'Ws (g)');
                $objPHPExcel->mergeCells('BJ13:BL13')->setCellValue('BJ13', 'Hasil');
                $objPHPExcel->mergeCells('BM13:BN13')->setCellValue('BM13', 'Paraf');
                $objPHPExcel->mergeCells('BO13:BQ13')->setCellValue('BO13', 'Ws (g)');
                $objPHPExcel->mergeCells('BR13:BS13')->setCellValue('BR13', 'VNaOH (ml)');
                $objPHPExcel->mergeCells('BT13:BU13')->setCellValue('BT13', 'Hasil');
                $objPHPExcel->mergeCells('BV13:BW13')->setCellValue('BV13', 'Paraf');
                $objPHPExcel->mergeCells('BX13:BZ13')->setCellValue('BX13', 'Ws (g)');
                $objPHPExcel->mergeCells('CA13:CB13')->setCellValue('CA13', 'VI2 (ml)');
                $objPHPExcel->mergeCells('CC13:CD13')->setCellValue('CC13', 'Hasil');
                $objPHPExcel->mergeCells('CE13:CF13')->setCellValue('CE13', 'Paraf');
                $objPHPExcel->mergeCells('CG13:CH13')->setCellValue('CG13', 'Cream');
                $objPHPExcel->mergeCells('CI13:CJ13')->setCellValue('CI13', 'Skim');
                $objPHPExcel->mergeCells('CK13:CL13')->setCellValue('CK13', 'Sludge');
                $objPHPExcel->mergeCells('CM13:CN13')->setCellValue('CM13', 'Paraf');
                $objPHPExcel->mergeCells('CO13:CP13')->setCellValue('CO13', 'Hasil');
                $objPHPExcel->mergeCells('CQ13:CR13')->setCellValue('CQ13', 'Paraf');
                $objPHPExcel->mergeCells('CS13:CT13')->setCellValue('CS13', 'Hasil');
                $objPHPExcel->mergeCells('CU13:CV13')->setCellValue('CU13', 'Paraf');
                $objPHPExcel->mergeCells('CW13:CY13')->setCellValue('CW13', 'Ws (g)');
                $objPHPExcel->mergeCells('CZ13:DA13')->setCellValue('CZ13', 'VI2 (ml)');
                $objPHPExcel->mergeCells('DB13:DC13')->setCellValue('DB13', 'Hasil');
                $objPHPExcel->mergeCells('DD13:DE13')->setCellValue('DD13', 'Paraf');
                $objPHPExcel->mergeCells('DF13:DG13')->setCellValue('DF13', 'Hasil');
                $objPHPExcel->mergeCells('DH13:DI13')->setCellValue('DH13', 'Paraf');
                $objPHPExcel->mergeCells('DJ13:DL13')->setCellValue('DJ13', 'Hasil');
                $objPHPExcel->mergeCells('DM13:DN13')->setCellValue('DM13', 'Paraf');
                $objPHPExcel->mergeCells('DO13:DQ13')->setCellValue('DO13', 'Hasil');
                $objPHPExcel->mergeCells('DR13:DS13')->setCellValue('DR13', 'Paraf');
                $objPHPExcel->mergeCells('DT13:DV13')->setCellValue('DT13', 'Hasil');
                $objPHPExcel->mergeCells('DW13:DX13')->setCellValue('DW13', 'Paraf');

                $objPHPExcel->setSharedStyle($headerStyle, 'A9:EB13');

                // jumlah row header tabel sebelum detail
                $rowCount = 13;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':EB' . $rowCount);

                    $objPHPExcel->mergeCells('A'.$rowCount.':E'.$rowCount)->setCellValue('A' . $rowCount, $row->kd_contoh);
                    $objPHPExcel->mergeCells('F'.$rowCount.':I'.$rowCount)->setCellValue('F' . $rowCount, $jns_produk);
                    $objPHPExcel->mergeCells('J'.$rowCount.':L'.$rowCount)->setCellValue('J' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->mergeCells('M'.$rowCount.':O'.$rowCount)->setCellValue('M' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->mergeCells('P'.$rowCount.':Q'.$rowCount)->setCellValue('P' . $rowCount, $row->ph_hasil);
                    $objPHPExcel->mergeCells('R'.$rowCount.':S'.$rowCount)->setCellValue('R' . $rowCount, $row->ph_paraf);
                    $objPHPExcel->mergeCells('T'.$rowCount.':U'.$rowCount)->setCellValue('T' . $rowCount, $row->brix_hasil);
                    $objPHPExcel->mergeCells('V'.$rowCount.':W'.$rowCount)->setCellValue('V' . $rowCount, $row->brix_paraf);
                    $objPHPExcel->mergeCells('X'.$rowCount.':Y'.$rowCount)->setCellValue('X' . $rowCount, $row->visco_hasil);
                    $objPHPExcel->mergeCells('Z'.$rowCount.':AA'.$rowCount)->setCellValue('Z' . $rowCount, $row->visco_paraf);
                    $objPHPExcel->mergeCells('AB'.$rowCount.':AC'.$rowCount)->setCellValue('AB' . $rowCount, $row->fat_hasil);
                    $objPHPExcel->mergeCells('AD'.$rowCount.':AE'.$rowCount)->setCellValue('AD' . $rowCount, $row->fat_paraf);
                    $objPHPExcel->mergeCells('AF'.$rowCount.':AG'.$rowCount)->setCellValue('AF' . $rowCount, $row->sulfur_ws);
                    $objPHPExcel->mergeCells('AH'.$rowCount.':AI'.$rowCount)->setCellValue('AH' . $rowCount, $row->sulfur_vnaoh);
                    $objPHPExcel->mergeCells('AJ'.$rowCount.':AK'.$rowCount)->setCellValue('AJ' . $rowCount, $row->sulfur_hasil);
                    $objPHPExcel->mergeCells('AL'.$rowCount.':AM'.$rowCount)->setCellValue('AL' . $rowCount, $row->sulfur_paraf);
                    $objPHPExcel->mergeCells('AN'.$rowCount.':AP'.$rowCount)->setCellValue('AN' . $rowCount, $row->dry_w0);
                    $objPHPExcel->mergeCells('AQ'.$rowCount.':AS'.$rowCount)->setCellValue('AQ' . $rowCount, $row->dry_ws);
                    $objPHPExcel->mergeCells('AT'.$rowCount.':AV'.$rowCount)->setCellValue('AT' . $rowCount, $row->dry_wt);
                    $objPHPExcel->mergeCells('AW'.$rowCount.':AX'.$rowCount)->setCellValue('AW' . $rowCount, $row->dry_hasil);
                    $objPHPExcel->mergeCells('AY'.$rowCount.':AZ'.$rowCount)->setCellValue('AY' . $rowCount, $row->dry_paraf);
                    $objPHPExcel->mergeCells('BA'.$rowCount.':BC'.$rowCount)->setCellValue('BA' . $rowCount, $row->spec_gravity_wp);
                    $objPHPExcel->mergeCells('BD'.$rowCount.':BF'.$rowCount)->setCellValue('BD' . $rowCount, $row->spec_gravity_wa);
                    $objPHPExcel->mergeCells('BG'.$rowCount.':BI'.$rowCount)->setCellValue('BG' . $rowCount, $row->spec_gravity_ws);
                    $objPHPExcel->mergeCells('BJ'.$rowCount.':BL'.$rowCount)->setCellValue('BJ' . $rowCount, $row->spec_gravity_hasil);
                    $objPHPExcel->mergeCells('BM'.$rowCount.':BN'.$rowCount)->setCellValue('BM' . $rowCount, $row->spec_gravity_paraf);
                    $objPHPExcel->mergeCells('BO'.$rowCount.':BQ'.$rowCount)->setCellValue('BO' . $rowCount, $row->acidity_ws);
                    $objPHPExcel->mergeCells('BR'.$rowCount.':BS'.$rowCount)->setCellValue('BR' . $rowCount, $row->acidity_vnaoh);
                    $objPHPExcel->mergeCells('BT'.$rowCount.':BU'.$rowCount)->setCellValue('BT' . $rowCount, $row->acidity_hasil);
                    $objPHPExcel->mergeCells('BV'.$rowCount.':BW'.$rowCount)->setCellValue('BV' . $rowCount, $row->acidity_paraf);
                    $objPHPExcel->mergeCells('BX'.$rowCount.':BZ'.$rowCount)->setCellValue('BX' . $rowCount, $row->vitaminc_ws);
                    $objPHPExcel->mergeCells('CA'.$rowCount.':CB'.$rowCount)->setCellValue('CA' . $rowCount, $row->vitaminc_l2);
                    $objPHPExcel->mergeCells('CC'.$rowCount.':CD'.$rowCount)->setCellValue('CC' . $rowCount, $row->vitaminc_hasil);
                    $objPHPExcel->mergeCells('CE'.$rowCount.':CF'.$rowCount)->setCellValue('CE' . $rowCount, $row->vitaminc_paraf);
                    $objPHPExcel->mergeCells('CG'.$rowCount.':CH'.$rowCount)->setCellValue('CG' . $rowCount, $row->spin_cream);
                    $objPHPExcel->mergeCells('CI'.$rowCount.':CJ'.$rowCount)->setCellValue('CI' . $rowCount, $row->spin_skim);
                    $objPHPExcel->mergeCells('CK'.$rowCount.':CL'.$rowCount)->setCellValue('CK' . $rowCount, $row->spin_sludge);
                    $objPHPExcel->mergeCells('CM'.$rowCount.':CN'.$rowCount)->setCellValue('CM' . $rowCount, $row->spin_paraf);
                    $objPHPExcel->mergeCells('CO'.$rowCount.':CP'.$rowCount)->setCellValue('CP' . $rowCount, $row->salinity_hasil);
                    $objPHPExcel->mergeCells('CR'.$rowCount.':CR'.$rowCount)->setCellValue('CQ' . $rowCount, $row->salinity_paraf);
                    $objPHPExcel->mergeCells('CS'.$rowCount.':CT'.$rowCount)->setCellValue('CS' . $rowCount, $row->turbidity_hasil);
                    $objPHPExcel->mergeCells('CU'.$rowCount.':CV'.$rowCount)->setCellValue('CU' . $rowCount, $row->turbidity_paraf);
                    $objPHPExcel->mergeCells('CW'.$rowCount.':CY'.$rowCount)->setCellValue('CW' . $rowCount, $row->chloride_ws);
                    $objPHPExcel->mergeCells('CZ'.$rowCount.':DA'.$rowCount)->setCellValue('CZ' . $rowCount, $row->chloride_l2);
                    $objPHPExcel->mergeCells('DB'.$rowCount.':DC'.$rowCount)->setCellValue('DB' . $rowCount, $row->chloride_hasil);
                    $objPHPExcel->mergeCells('DD'.$rowCount.':DE'.$rowCount)->setCellValue('DD' . $rowCount, $row->chloride_paraf);
                    $objPHPExcel->mergeCells('DF'.$rowCount.':DG'.$rowCount)->setCellValue('DF' . $rowCount, $row->dissolved_hasil);
                    $objPHPExcel->mergeCells('DH'.$rowCount.':DI'.$rowCount)->setCellValue('DH' . $rowCount, $row->dissolved_paraf);
                    $objPHPExcel->mergeCells('DJ'.$rowCount.':DL'.$rowCount)->setCellValue('DJ' . $rowCount, $row->colour_hasil);
                    $objPHPExcel->mergeCells('DM'.$rowCount.':DN'.$rowCount)->setCellValue('DM' . $rowCount, $row->colour_paraf);
                    $objPHPExcel->mergeCells('DO'.$rowCount.':DQ'.$rowCount)->setCellValue('DO' . $rowCount, $row->odour_hasil);
                    $objPHPExcel->mergeCells('DR'.$rowCount.':DS'.$rowCount)->setCellValue('DR' . $rowCount, $row->odour_paraf);
                    $objPHPExcel->mergeCells('DT'.$rowCount.':DV'.$rowCount)->setCellValue('DT' . $rowCount, $row->appearance_hasil);
                    $objPHPExcel->mergeCells('DW'.$rowCount.':DX'.$rowCount)->setCellValue('DW' . $rowCount, $row->appearance_paraf);
                    $objPHPExcel->mergeCells('DY'.$rowCount.':EB'.$rowCount)->setCellValue('DY' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('BO' . $rowend . ':EB' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':BN' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('BO' . $rowend . ':EB' . $rowend)->setCellValue('BO' . $rowend, $frmnm . '-' . $frmvrs);
            break;          
            case $frmkode == 'frmlqs039' && $frmvrs == '07': 
                foreach ($dtheader as $dtheader_row){
                    $tgl          = substr($dtheader_row->tgl_produksi, 8, 2) . '-' . substr($dtheader_row->tgl_produksi, 5, 2) . '-' . substr($dtheader_row->tgl_produksi, 0, 4);
                    $tgl_produksi = substr($dtheader_row->tgl_produksi, 5, 2) . '/' . substr($dtheader_row->tgl_produksi, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell 
                foreach (range('A', 'AX') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel 
                $objPHPExcel->mergeCells('A1:AX1');

                // merge row A1 Ke A3 utk icon 
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG) 
                $objPHPExcel->mergeCells('B2:AS3')->setCellValue('B2', $frmcop);

                // untuk tapil data pojok kanan (tanggal, doc, rev, dll) 
                $objPHPExcel->mergeCells('AT2:AX3')->setCellValue('AT2', 'Bulan/Tahun :' . $tgl_produksi);
                $objPHPExcel->mergeCells('AT4:AX4')->setCellValue('AT4', '');

                $objPHPExcel->setCellValue('A4', 'JUDUL'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:AS4')->setCellValue('B4', '' . $frmjdl); // judul form
                // space antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:B5')->setCellValue('A5', '');

                // tabel detail 
                $objPHPExcel->mergeCells('A9:A11')->setCellValue('A9', 'Tanggal Produksi');
                $objPHPExcel->mergeCells('B9:B11')->setCellValue('B9', 'Jam Sampling');
                $objPHPExcel->mergeCells('C9:C11')->setCellValue('C9', 'Kode Contoh');
                $objPHPExcel->mergeCells('D9:D11')->setCellValue('D9', 'No. Lab');
                $objPHPExcel->mergeCells('E9:E11')->setCellValue('E9', 'Tanggal Analisa');
                $objPHPExcel->mergeCells('F9:F11')->setCellValue('F9', 'Jam Analisa');
                $objPHPExcel->mergeCells('G9:G11')->setCellValue('G9', 'Dianalisa Oleh');
                $objPHPExcel->mergeCells('H9:AX9')->setCellValue('H9', 'Hasil Analisa Mikrobiologi');

                $objPHPExcel->mergeCells('H10:P10')->setCellValue('H10', 'Total Plate Count (cfu/ml)');
                $objPHPExcel->mergeCells('Q10:V10')->setCellValue('Q10', 'Enumerasi Coliform (cfu/ml)');
                $objPHPExcel->mergeCells('W10:AB10')->setCellValue('W10', 'Yeast (cfu/ml)');
                $objPHPExcel->mergeCells('AC10:AH10')->setCellValue('AC10', 'Mould (cfu/ml)');
                $objPHPExcel->mergeCells('AI10:AJ10')->setCellValue('AI10', 'TSC (cfu/ml)');
                $objPHPExcel->mergeCells('AK10:AM10')->setCellValue('AK10', 'TTR (cfu/ml)');
                $objPHPExcel->mergeCells('AN10:AP10')->setCellValue('AN10', 'Deteksi E. coli');
                $objPHPExcel->mergeCells('AQ10:AT10')->setCellValue('AQ10', 'Deteksi Salmonella');
                $objPHPExcel->mergeCells('AU10:AW10')->setCellValue('AU10', 'Deteksi S. aureus');
                $objPHPExcel->mergeCells('AX10:AX11')->setCellValue('AX10', 'Keterangan');

                // kolom tpc 0 - 7
                $objPHPExcel->setCellValue('H11', '10^0');
                $objPHPExcel->setCellValue('I11', '10^1');
                $objPHPExcel->setCellValue('J11', '10^2');
                $objPHPExcel->setCellValue('K11', '10^3');
                $objPHPExcel->setCellValue('L11', '10^4');
                $objPHPExcel->setCellValue('M11', '10^5');
                $objPHPExcel->setCellValue('N11', '10^6');
                $objPHPExcel->setCellValue('O11', '10^7');
                $objPHPExcel->setCellValue('P11', 'Paraf');

                // kolom enumerasi or tcc 0 - 7
                $objPHPExcel->setCellValue('Q11', '10^0');
                $objPHPExcel->setCellValue('R11', '10^1');
                $objPHPExcel->setCellValue('S11', '10^2');
                $objPHPExcel->setCellValue('T11', '10^3');
                $objPHPExcel->setCellValue('U11', '10^4');
                $objPHPExcel->setCellValue('V11', 'Paraf');

                // kolom yeast
                $objPHPExcel->setCellValue('W11', '10^0');
                $objPHPExcel->setCellValue('X11', '10^1');
                $objPHPExcel->setCellValue('Y11', '10^2');
                $objPHPExcel->setCellValue('Z11', '10^3');
                $objPHPExcel->setCellValue('AA11', '10^4');
                $objPHPExcel->setCellValue('AB11', 'Paraf');

                // kolom mould
                $objPHPExcel->setCellValue('AC11', '10^0');
                $objPHPExcel->setCellValue('AD11', '10^1');
                $objPHPExcel->setCellValue('AE11', '10^2');
                $objPHPExcel->setCellValue('AF11', '10^3');
                $objPHPExcel->setCellValue('AG11', '10^4');
                $objPHPExcel->setCellValue('AH11', 'Paraf');

                // kolom TSC
                $objPHPExcel->setCellValue('AI11', '35 C');
                $objPHPExcel->setCellValue('AJ11', 'Paraf');

                // kolom TTR
                $objPHPExcel->setCellValue('AK11', '35 C');
                $objPHPExcel->setCellValue('AL11', '55 C');
                $objPHPExcel->setCellValue('AM11', 'Paraf');

                // kolom deteksi e. coli
                $objPHPExcel->setCellValue('AN11', 'Gas');
                $objPHPExcel->setCellValue('AO11', 'Indol');
                $objPHPExcel->setCellValue('AP11', 'Paraf');

                // kolom deteksi salmonella
                $objPHPExcel->setCellValue('AQ11', 'HE');
                $objPHPExcel->setCellValue('AR11', 'XLD');
                $objPHPExcel->setCellValue('AS11', 'BSA');
                $objPHPExcel->setCellValue('AT11', 'Paraf');

                // kolom deteksi s. aureus
                $objPHPExcel->setCellValue('AU11', 'BPM');
                $objPHPExcel->setCellValue('AV11', 'Latex');
                $objPHPExcel->setCellValue('AW11', 'Paraf');


                $objPHPExcel->setSharedStyle($headerStyle, 'A2:AX11');

                // jumlah row header tabel sebelum detail 
                $rowCount = 11;

                $no = 1;
                foreach ($dtdetail as $row){

                    if ($row->operator == '0'){
                        $operator = "<";
                    } elseif ($row->operator == '1'){
                        $operator = ">";
                    } else {
                        $operator = $row->operator;
                    }
                    if ($row->operator2 == '0'){
                        $operator2 = "<";
                    } elseif ($row->operator2 == '1'){
                        $operator2 = ">";
                    } else {
                        $operator2 = $row->operator2;
                    }
                    if ($row->operator3 == '0'){
                        $operator3 = "<";
                    } elseif ($row->operator3 == '1'){
                        $operator3 = ">";
                    } else {
                        $operator3 = $row->operator3;
                    }
                    if ($row->operator4 == '0'){
                        $operator4 = "<";
                    } elseif ($row->operator4 == '1'){
                        $operator4 = ">";
                    } else {
                        $operator4 = $row->operator4;
                    }
                    if ($row->operator5 == '0'){
                        $operator5 = "<";
                    } elseif ($row->operator5 == '1'){
                        $operator5 = ">";
                    } else {
                        $operator5 = $row->operator5;
                    }
                    if ($row->operator6 == '0'){
                        $operator6 = "<";
                    } elseif ($row->operator6 == '1'){
                        $operator6 = ">";
                    } else {
                        $operator6 = $row->operator6;
                    }
                    if ($row->operator7 == '0'){
                        $operator7 = "<";
                    } elseif ($row->operator7 == '1'){
                        $operator7 = ">";
                    } else {
                        $operator7 = $row->operator7;
                    }
                    if ($row->operator8 == '0'){
                        $operator8 = "<";
                    } elseif ($row->operator8 == '1'){
                        $operator8 = ">";
                    } else {
                        $operator8 = $row->operator8;
                    }
                    if ($row->operator9 == '0'){
                        $operator9 = "<";
                    } elseif ($row->operator9 == '1'){
                        $operator9 = ">";
                    } else {
                        $operator9 = $row->operator9;
                    }
                    if ($row->operator10 == '0'){
                        $operator10 = "<";
                    } elseif ($row->operator10 == '1'){
                        $operator10 = ">";
                    } else {
                        $operator10 = $row->operator10;
                    }
                    if ($row->operator11 == '0'){
                        $operator11 = "<";
                    } elseif ($row->operator11 == '1'){
                        $operator11 = ">";
                    } else {
                        $operator11 = $row->operator11;
                    }
                    if ($row->operator12 == '0'){
                        $operator12 = "<";
                    } elseif ($row->operator12 == '1'){
                        $operator12 = ">";
                    } else {
                        $operator12 = $row->operator12;
                    }
                    if ($row->operator13 == '0'){
                        $operator13 = "<";
                    } elseif ($row->operator13 == '1'){
                        $operator13 = ">";
                    } else {
                        $operator13 = $row->operator13;
                    }
                    if ($row->operator14 == '0'){
                        $operator14 = "<";
                    } elseif ($row->operator14 == '1'){
                        $operator14 = ">";
                    } else {
                        $operator14 = $row->operator14;
                    }
                    if ($row->operator15 == '0'){
                        $operator15 = "<";
                    } elseif ($row->operator15 == '1'){
                        $operator15 = ">";
                    } else {
                        $operator15 = $row->operator15;
                    }
                    if ($row->operator16 == '0'){
                        $operator16 = "<";
                    } elseif ($row->operator16 == '1'){
                        $operator16 = ">";
                    } else {
                        $operator16 = $row->operator16;
                    }
                    if ($row->operator17 == '0'){
                        $operator17 = "<";
                    } elseif ($row->operator17 == '1'){
                        $operator17 = ">";
                    } else {
                        $operator17 = $row->operator17;
                    }
                    if ($row->operator18 == '0'){
                        $operator18 = "<";
                    } elseif ($row->operator18 == '1'){
                        $operator18 = ">";
                    } else {
                        $operator18 = $row->operator18;
                    }
                    if ($row->operator19 == '0'){
                        $operator19 = "<";
                    } elseif ($row->operator19 == '1'){
                        $operator19 = ">";
                    } else {
                        $operator19 = $row->operator19;
                    }
                    if ($row->operator20 == '0'){
                        $operator20 = "<";
                    } elseif ($row->operator20 == '1'){
                        $operator20 = ">";
                    } else {
                        $operator20 = $row->operator20;
                    }
                    if ($row->operator21 == '0'){
                        $operator21 = "<";
                    } elseif ($row->operator21 == '1'){
                        $operator21 = ">";
                    } else {
                        $operator21 = $row->operator21;
                    }
                    if ($row->operator22 == '0'){
                        $operator22 = "<";
                    } elseif ($row->operator22 == '1'){
                        $operator22 = ">";
                    } else {
                        $operator22 = $row->operator22;
                    }
                    if ($row->operator23 == '0'){
                        $operator23 = "<";
                    } elseif ($row->operator23 == '1'){
                        $operator23 = ">";
                    } else {
                        $operator23 = $row->operator23;
                    }
                    if ($row->operator24 == '0'){
                        $operator24 = "<";
                    } elseif ($row->operator24 == '1'){
                        $operator24 = ">";
                    } else {
                        $operator24 = $row->operator24;
                    }
                    if ($row->operator25 == '0'){
                        $operator25 = "<";
                    } elseif ($row->operator25 == '1'){
                        $operator25 = ">";
                    } else {
                        $operator25 = $row->operator25;
                    }
                    if ($row->operator26 == '0'){
                        $operator26 = "<";
                    } elseif ($row->operator26 == '1'){
                        $operator26 = ">";
                    } else {
                        $operator26 = $row->operator26;
                    }

                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':AX' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $tgl);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->no_lab);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->jam_analisa);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->analisa_oleh);


                    $objPHPExcel->setCellValue('H' . $rowCount, $operator . ' ' . $row->ham_tpc_0);
                    $objPHPExcel->setCellValue('I' . $rowCount, $operator8 . ' ' . $row->ham_tpc_1);
                    $objPHPExcel->setCellValue('J' . $rowCount, $operator9 . ' ' . $row->ham_tpc_2);
                    $objPHPExcel->setCellValue('K' . $rowCount, $operator10 . ' ' . $row->ham_tpc_3);
                    $objPHPExcel->setCellValue('L' . $rowCount, $operator11 . ' ' . $row->ham_tpc_4);
                    $objPHPExcel->setCellValue('M' . $rowCount, $operator12 . ' ' . $row->ham_tpc_5);
                    $objPHPExcel->setCellValue('N' . $rowCount, $operator13 . ' ' . $row->ham_tpc_6);
                    $objPHPExcel->setCellValue('O' . $rowCount, $operator14 . ' ' . $row->ham_tpc_7);

                    $objPHPExcel->setCellValue('Q' . $rowCount, $operator2 . ' ' . $row->ham_ec_0);
                    $objPHPExcel->setCellValue('R' . $rowCount, $operator15 . ' ' . $row->ham_ec_1);
                    $objPHPExcel->setCellValue('S' . $rowCount, $operator16 . ' ' . $row->ham_ec_2);
                    $objPHPExcel->setCellValue('T' . $rowCount, $operator17 . ' ' . $row->ham_ec_3);
                    $objPHPExcel->setCellValue('U' . $rowCount, $operator18 . ' ' . $row->ham_ec_4);

                    $objPHPExcel->setCellValue('W' . $rowCount, $operator3 . ' ' . $row->ham_yeast_0);
                    $objPHPExcel->setCellValue('X' . $rowCount, $operator19 . ' ' . $row->ham_yeast_1);
                    $objPHPExcel->setCellValue('Y' . $rowCount, $operator20 . ' ' . $row->ham_yeast_2);
                    $objPHPExcel->setCellValue('Z' . $rowCount, $operator21 . ' ' . $row->ham_yeast_3);
                    $objPHPExcel->setCellValue('AA' . $rowCount, $operator22 . ' ' . $row->ham_yeast_4);

                    $objPHPExcel->setCellValue('AC' . $rowCount, $operator4 . ' ' . $row->ham_mould_0);
                    $objPHPExcel->setCellValue('AD' . $rowCount, $operator23 . ' ' . $row->ham_mould_1);
                    $objPHPExcel->setCellValue('AE' . $rowCount, $operator24 . ' ' . $row->ham_mould_2);
                    $objPHPExcel->setCellValue('AF' . $rowCount, $operator25 . ' ' . $row->ham_mould_3);
                    $objPHPExcel->setCellValue('AG' . $rowCount, $operator26 . ' ' . $row->ham_mould_4);

                    $objPHPExcel->setCellValue('AI' . $rowCount, $operator5 . ' ' . $row->ham_tsc_35_celcius);

                    $objPHPExcel->setCellValue('AK' . $rowCount, $operator6 . ' ' . $row->ham_ttr_35_celcius);
                    $objPHPExcel->setCellValue('AL' . $rowCount, $operator7 . ' ' . $row->ham_ttr_55_celcius);

                    $objPHPExcel->setCellValue('AN' . $rowCount, $row->ham_detect_ecoll_gas);
                    $objPHPExcel->setCellValue('AO' . $rowCount, $row->ham_detect_ecoll_indol);

                    $objPHPExcel->setCellValue('AP' . $rowCount, $row->ham_detect_salmonella_he);
                    $objPHPExcel->setCellValue('AQ' . $rowCount, $row->ham_detect_salmonella_xld);
                    $objPHPExcel->setCellValue('AR' . $rowCount, $row->ham_detect_salmonella_bsa);

                    $objPHPExcel->setCellValue('AU' . $rowCount, $row->ham_detect_saureus_bpm);
                    $objPHPExcel->setCellValue('AV' . $rowCount, $row->ham_detect_saureus_latex);

                    $objPHPExcel->setCellValue('AX' . $rowCount, $row->keterangan);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('AA' . $rowend . ':AX' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':Z' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('AA' . $rowend . ':AX' . $rowend)->setCellValue('AA' . $rowend, $frmnm . '-' . $frmvrs);
                break;
            case $frmkode == 'frmfss098' && $frmvrs == '02': 

                if (isset($dtdetail1)){
                    $jmldt1 = count($dtdetail1);
                } else {
                    $jmldt1 = '0';
                }
                if (isset($dtdetail2)){
                    $jmldt2 = count($dtdetail2);
                } else {
                    $jmldt2 = '0';
                }
                if (isset($dtdetail3)){
                    $jmldt3 = count($dtdetail3);
                } else {
                    $jmldt3 = '0';
                }
                if (isset($dtdetail4)){
                    $jmldt4 = count($dtdetail4);
                } else {
                    $jmldt4 = '0';
                }
                if ($jmldt1 > $jmldt2){
                    $count1 = $jmldt1;
                } else {
                    $count1 = $jmldt2;
                }
                if ($jmldt3 > $jmldt4){
                    $count2 = $jmldt3;
                } else {
                    $count2 = $jmldt4;
                }

                foreach ($dtheader as $dtheader_row){
                    $docno          = $dtheader_row->dok;
                    $productiondate = substr($dtheader_row->tanggal, 8, 2) . '-' . substr($dtheader_row->tanggal, 5, 2) . '-' . substr($dtheader_row->tanggal, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'M') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:M1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:J3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('K2:M2')->setCellValue('K2', 'Doc No: ' . $docno);
                $objPHPExcel->mergeCells('K3:M3')->setCellValue('K3', 'P/D : ' . $productiondate);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:J4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('K4:M4')->setCellValue('K4', '');

                $objPHPExcel->mergeCells('A5:G5')->setCellValue('A5', 'BOILER WATER CHEMICAL ANALYSIS');
                $objPHPExcel->mergeCells('H5:M5')->setCellValue('H5', 'STEAM CONDENSATE CHEMICAL ANALYSIS');

                $objPHPExcel->mergeCells('A6:B6')->setCellValue('A6', 'Sampling');
                $objPHPExcel->mergeCells('C6:C7')->setCellValue('C6', 'pH (10.5-11.5)');
                $objPHPExcel->mergeCells('D6:D7')->setCellValue('D6', 'TA (ppm) 800 max');
                $objPHPExcel->mergeCells('E6:E7')->setCellValue('E6', 'Sulfite 10-60 ppm');
                $objPHPExcel->mergeCells('F6:F7')->setCellValue('F6', 'Phospate 10-60 ppm');
                $objPHPExcel->mergeCells('G6:G7')->setCellValue('G6', 'TDS (ppm) 3500 max');
                $objPHPExcel->mergeCells('H6:H7')->setCellValue('H6', 'Sampling Time');
                $objPHPExcel->mergeCells('I6:I7')->setCellValue('I6', 'pH 6.5-8.5');
                $objPHPExcel->mergeCells('J6:J7')->setCellValue('J6', 'TDS (ppm) 20 max');
                $objPHPExcel->mergeCells('K6:K7')->setCellValue('K6', 'Colour (Clear)');
                $objPHPExcel->mergeCells('L6:L7')->setCellValue('L6', 'Odour and Taste (Normal)');
                $objPHPExcel->mergeCells('M6:M7')->setCellValue('M6', 'Remarks');

                $objPHPExcel->setCellValue('A7', 'Point');
                $objPHPExcel->setCellValue('B7', 'Time');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:M7');

                $rowCount = 7;

                if ((isset($dtdetail1)) || (isset($dtdetail2))){
                    foreach ($dtdetail1 as $dtdetail1row){
                        $nama_kimia  [] = $dtdetail1row->nama_kimia;
                        $jam_sampling[] = $dtdetail1row->jam_sampling;
                        $ph          [] = $dtdetail1row->ph;
                        $ta_ppm      [] = $dtdetail1row->ta_ppm;
                        $sulfit_ppm  [] = $dtdetail1row->sulfit_ppm;
                        $phospat     [] = $dtdetail1row->phospat;
                        $tds         [] = $dtdetail1row->tds;
                    }
                    foreach ($dtdetail2 as $dtdetail2row){
                        $jam_sampling2[] = $dtdetail2row->jam_sampling;
                        $ph2          [] = $dtdetail2row->ph;
                        $tds2         [] = $dtdetail2row->tds;
                        $colour2      [] = $dtdetail2row->colour;
                        $odour2       [] = $dtdetail2row->odour;
                        $remarks2     [] = $dtdetail2row->remarks;
                    }
                    for ($i = 0; $i < $count1; $i++){
                        $rowCount++;

                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':M' . $rowCount);

                        if (!isset($nama_kimia[$i])){
                            $objPHPExcel->setCellValue('A' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('A' . $rowCount, $nama_kimia[$i]);
                        }
                        if (!isset($jam_sampling[$i])){
                            $objPHPExcel->setCellValue('B' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('B' . $rowCount, $jam_sampling[$i]);
                        }
                        if (!isset($ph[$i])){
                            $objPHPExcel->setCellValue('C' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('C' . $rowCount, $ph[$i]);
                        }
                        if (!isset($ta_ppm[$i])){
                            $objPHPExcel->setCellValue('D' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('D' . $rowCount, $ta_ppm[$i]);
                        }
                        if (!isset($sulfit_ppm[$i])){
                            $objPHPExcel->setCellValue('E' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('E' . $rowCount, $sulfit_ppm[$i]);
                        }
                        if (!isset($phospat[$i])){
                            $objPHPExcel->setCellValue('F' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('F' . $rowCount, $phospat[$i]);
                        }
                        if (!isset($tds[$i])){
                            $objPHPExcel->setCellValue('G' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('G' . $rowCount, $tds[$i]);
                        }
                        if (!isset($jam_sampling2[$i])){
                            $objPHPExcel->setCellValue('H' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('H' . $rowCount, $jam_sampling2[$i]);
                        }
                        if (!isset($ph2[$i])){
                            $objPHPExcel->setCellValue('I' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('I' . $rowCount, $ph2[$i]);
                        }
                        if (!isset($tds2[$i])){
                            $objPHPExcel->setCellValue('J' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('J' . $rowCount, $tds2[$i]);
                        }
                        if (!isset($colour2[$i])){
                            $objPHPExcel->setCellValue('K' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('K' . $rowCount, $colour2[$i]);
                        }
                        if (!isset($odour2[$i])){
                            $objPHPExcel->setCellValue('L' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('L' . $rowCount, $odour2[$i]);
                        }
                        if (!isset($remarks2[$i])){
                            $objPHPExcel->setCellValue('M' . $rowCount, '');
                        } else {
                            $objPHPExcel->setCellValue('M' . $rowCount, $remarks2[$i]);
                        }
                    }
                } else {
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':M' . $rowCount);
                    $objPHPExcel->setCellValue('A' . $rowCount, '');
                    $objPHPExcel->setCellValue('B' . $rowCount, '');
                    $objPHPExcel->setCellValue('C' . $rowCount, '');
                    $objPHPExcel->setCellValue('D' . $rowCount, '');
                    $objPHPExcel->setCellValue('E' . $rowCount, '');
                    $objPHPExcel->setCellValue('F' . $rowCount, '');
                    $objPHPExcel->setCellValue('G' . $rowCount, '');
                    $objPHPExcel->setCellValue('H' . $rowCount, '');
                    $objPHPExcel->setCellValue('I' . $rowCount, '');
                    $objPHPExcel->setCellValue('J' . $rowCount, '');
                    $objPHPExcel->setCellValue('K' . $rowCount, '');
                    $objPHPExcel->setCellValue('L' . $rowCount, '');
                    $objPHPExcel->setCellValue('M' . $rowCount, '');
                }


                $rowCount2 = $rowCount + 1;
                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowCount2 . ':M' . $rowCount2);

                $objPHPExcel->mergeCells('A' . $rowCount2 . ':E' . $rowCount2)->setCellValue('A' . $rowCount2, 'FEED WATER CHEMICAL ANALYSIS (BOILER)');
                $objPHPExcel->mergeCells('F' . $rowCount2 . ':M' . $rowCount2)->setCellValue('F' . $rowCount2, 'COOLING TOWER CHEMICAL ANALYSIS (PWH)');

                $rowCount3 = $rowCount2 + 1;
                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowCount3 . ':M' . $rowCount3);

                $objPHPExcel->setCellValue('A' . $rowCount3, 'Sampling Time');
                $objPHPExcel->setCellValue('B' . $rowCount3, 'pH (8-10)');
                $objPHPExcel->mergeCells('C' . $rowCount3 . ':D' . $rowCount3)->setCellValue('C' . $rowCount3, 'Th (ppm) 20 max');
                $objPHPExcel->setCellValue('E' . $rowCount3, 'Remarks');
                $objPHPExcel->setCellValue('F' . $rowCount3, 'Sampling Time');
                $objPHPExcel->setCellValue('G' . $rowCount3, 'pH 6.5-8.5');
                $objPHPExcel->setCellValue('H' . $rowCount3, 'TA (ppm)');
                $objPHPExcel->setCellValue('I' . $rowCount3, 'TH (ppm)');
                $objPHPExcel->setCellValue('J' . $rowCount3, 'Phospate (ppm)');
                $objPHPExcel->setCellValue('K' . $rowCount3, 'TDS (ppm)');
                $objPHPExcel->mergeCells('L' . $rowCount3 . ':M' . $rowCount3)->setCellValue('L' . $rowCount3, 'Remarks');

                $rowCount4 = $rowCount3;

                if ((isset($dtdetail3)) || (isset($dtdetail4))){
                    if (isset($dtdetail3)){
                        foreach ($dtdetail3 as $dtdetail3row){
                            $jam_sampling3[] = $dtdetail3row->jam_sampling;
                            $ph3          [] = $dtdetail3row->ph;
                            $th_ppm3      [] = $dtdetail3row->th_ppm;
                            $remarks3     [] = $dtdetail3row->remarks;
                        }
                    }
                    if (isset($dtdetail4)){
                        foreach ($dtdetail4 as $dtdetail4row){
                            $jam_sampling4[] = $dtdetail4row->jam_sampling;
                            $ph4          [] = $dtdetail4row->ph;
                            $ta_ppm4      [] = $dtdetail4row->ta_ppm;
                            $th_ppm4      [] = $dtdetail4row->th_ppm;
                            $phospat4     [] = $dtdetail4row->phospat;
                            $tds4         [] = $dtdetail4row->tds;
                            $remarks4     [] = $dtdetail4row->remarks;
                        }
                    }
                    for ($i = 0; $i < $count2; $i++){
                        $rowCount4++;
                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount4 . ':M' . $rowCount4);

                        if (!isset($jam_sampling3[$i])){
                            $objPHPExcel->setCellValue('A' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('A' . $rowCount4, $jam_sampling3[$i]);
                        }
                        if (!isset($ph3[$i])){
                            $objPHPExcel->setCellValue('B' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('B' . $rowCount4, $ph3[$i]);
                        }
                        if (!isset($th_ppm3[$i])){
                            $objPHPExcel->mergeCells('C' . $rowCount4 . ':D' . $rowCount4)->setCellValue('C' . $rowCount4, '');
                        } else {
                            $objPHPExcel->mergeCells('C' . $rowCount4 . ':D' . $rowCount4)->setCellValue('C' . $rowCount4, $th_ppm3[$i]);
                        }
                        if (!isset($remarks3[$i])){
                            $objPHPExcel->setCellValue('E' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('E' . $rowCount4, $remarks3[$i]);
                        }
                        if (!isset($jam_sampling4[$i])){
                            $objPHPExcel->setCellValue('F' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('F' . $rowCount4, $jam_sampling4[$i]);
                        }
                        if (!isset($ph4[$i])){
                            $objPHPExcel->setCellValue('G' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('G' . $rowCount4, $ph4[$i]);
                        }
                        if (!isset($ta_ppm4[$i])){
                            $objPHPExcel->setCellValue('H' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('H' . $rowCount4, $ta_ppm4[$i]);
                        }
                        if (!isset($th_ppm4[$i])){
                            $objPHPExcel->setCellValue('I' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('I' . $rowCount4, $th_ppm4[$i]);
                        }
                        if (!isset($phospat4[$i])){
                            $objPHPExcel->setCellValue('J' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('J' . $rowCount4, $phospat4[$i]);
                        }
                        if (!isset($tds4[$i])){
                            $objPHPExcel->setCellValue('K' . $rowCount4, '');
                        } else {
                            $objPHPExcel->setCellValue('K' . $rowCount4, $tds4[$i]);
                        }
                        if (!isset($remarks4[$i])){
                            $objPHPExcel->mergeCells('L' . $rowCount4 . ':M' . $rowCount4)->setCellValue('L' . $rowCount4, '');
                        } else {
                            $objPHPExcel->mergeCells('L' . $rowCount4 . ':M' . $rowCount4)->setCellValue('L' . $rowCount4, $remarks4[$i]);
                        }
                    }
                } else {
                    $objPHPExcel->setCellValue('A' . $rowCount4, '');
                    $objPHPExcel->setCellValue('B' . $rowCount4, '');
                    $objPHPExcel->mergeCells('C' . $rowCount4 . ':D' . $rowCount4)->setCellValue('C' . $rowCount4, '');
                    $objPHPExcel->setCellValue('E' . $rowCount4, '');
                    $objPHPExcel->setCellValue('F' . $rowCount4, '');
                    $objPHPExcel->setCellValue('G' . $rowCount4, '');
                    $objPHPExcel->setCellValue('H' . $rowCount4, '');
                    $objPHPExcel->setCellValue('I' . $rowCount4, '');
                    $objPHPExcel->setCellValue('J' . $rowCount4, '');
                    $objPHPExcel->setCellValue('K' . $rowCount4, '');
                    $objPHPExcel->mergeCells('L' . $rowCount4 . ':M' . $rowCount4)->setCellValue('L' . $rowCount4, '');
                }

                $rowCount5 = $rowCount4 + 1;
                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowCount5 . ':M' . $rowCount5);
                $objPHPExcel->mergeCells('A' . $rowCount5 . ':M' . $rowCount5)->setCellValue('A' . $rowCount5, 'Non-confermance Record');

                $rowCount6 = $rowCount5 + 1;
                $rowCount7 = $rowCount6 + 1;
                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowCount6 . ':M' . $rowCount7);
                $objPHPExcel->mergeCells('A' . $rowCount6 . ':A' . $rowCount7)->setCellValue('A' . $rowCount6, 'Time');
                $objPHPExcel->mergeCells('B' . $rowCount6 . ':C' . $rowCount7)->setCellValue('B' . $rowCount6, 'Description');
                $objPHPExcel->mergeCells('D' . $rowCount6 . ':E' . $rowCount7)->setCellValue('D' . $rowCount6, 'Proposed Disposition/ Action');
                $objPHPExcel->mergeCells('F' . $rowCount6 . ':F' . $rowCount7)->setCellValue('F' . $rowCount6, 'Informed by');
                $objPHPExcel->mergeCells('G' . $rowCount6 . ':G' . $rowCount7)->setCellValue('G' . $rowCount6, 'Received by');
                $objPHPExcel->mergeCells('H' . $rowCount6 . ':I' . $rowCount6)->setCellValue('H' . $rowCount6, 'Action Taken');
                $objPHPExcel->mergeCells('J' . $rowCount6 . ':M' . $rowCount6)->setCellValue('J' . $rowCount6, 'Verification');
                $objPHPExcel->setCellValue('H' . $rowCount7, 'Time');
                $objPHPExcel->setCellValue('I' . $rowCount7, 'By');
                $objPHPExcel->setCellValue('J' . $rowCount7, 'Time');
                $objPHPExcel->setCellValue('K' . $rowCount7, 'Result');
                $objPHPExcel->setCellValue('L' . $rowCount7, 'By');


                if (isset($dtdetail5)){
                    $rowCount8 = $rowCount7;
                    foreach ($dtdetail5 as $dtdetail5row){
                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount8 . ':M' . $rowCount8);

                        $objPHPExcel->setCellValue('A' . $rowCount8, $dtdetail5row->jam);
                        $objPHPExcel->mergeCells('B' . $rowCount8 . ':C' . $rowCount8)->setCellValue('B' . $rowCount8, $dtdetail5row->deskripsi_nc);
                        $objPHPExcel->mergeCells('D' . $rowCount8 . ':E' . $rowCount8)->setCellValue('D' . $rowCount8, $dtdetail5row->proposal_da);
                        $objPHPExcel->setCellValue('F' . $rowCount8, $dtdetail5row->dilaporkan_oleh);
                        $objPHPExcel->setCellValue('G' . $rowCount8, $dtdetail5row->diterima_oleh);
                        $objPHPExcel->setCellValue('H' . $rowCount8, $dtdetail5row->waktu_at);
                        $objPHPExcel->setCellValue('I' . $rowCount8, $dtdetail5row->at_oleh);
                        $objPHPExcel->setCellValue('J' . $rowCount8, $dtdetail5row->waktu_verifikasi);
                        $objPHPExcel->mergeCells('K' . $rowCount8 . ':L' . $rowCount8)->setCellValue('K' . $rowCount8, $dtdetail5row->hasil_verifikasi);
                        $objPHPExcel->setCellValue('M' . $rowCount8, $dtdetail5row->diverifikasi_oleh);
                    }
                } else {
                    $rowCount8 = $rowCount7 + 1;
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount8 . ':M' . $rowCount8);

                    $objPHPExcel->setCellValue('A' . $rowCount8, '');
                    $objPHPExcel->mergeCells('B' . $rowCount8 . ':C' . $rowCount8)->setCellValue('B' . $rowCount8, '');
                    $objPHPExcel->mergeCells('D' . $rowCount8 . ':E' . $rowCount8)->setCellValue('D' . $rowCount8, '');
                    $objPHPExcel->setCellValue('F' . $rowCount8, '');
                    $objPHPExcel->setCellValue('G' . $rowCount8, '');
                    $objPHPExcel->setCellValue('H' . $rowCount8, '');
                    $objPHPExcel->setCellValue('I' . $rowCount8, '');
                    $objPHPExcel->setCellValue('J' . $rowCount8, '');
                    $objPHPExcel->mergeCells('K' . $rowCount8 . ':L' . $rowCount8)->setCellValue('K' . $rowCount8, '');
                    $objPHPExcel->setCellValue('M' . $rowCount8, '');
                }
                $rowCount9 = $rowCount8 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount9 . ':M' . $rowCount9);
                $objPHPExcel->mergeCells('A' . $rowCount9 . ':M' . $rowCount9)->setCellValue('A' . $rowCount9, 'Definitions :');

                $rowCount10 = $rowCount9 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount10 . ':M' . $rowCount10);
                $objPHPExcel->mergeCells('A' . $rowCount10 . ':M' . $rowCount10)->setCellValue('A' . $rowCount10, 'TA : Total Alkalinity    TDS : Total Dissolved Solid   TH : Total Hardness   pH : -Log (H+)  ppm : parts per million');

                $rowCount11 = $rowCount10 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount11 . ':M' . $rowCount11);
                $objPHPExcel->mergeCells('A' . $rowCount11 . ':M' . $rowCount11)->setCellValue('A' . $rowCount11, '');

                $rowCount12 = $rowCount11 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount12 . ':M' . $rowCount12);
                $objPHPExcel->mergeCells('A' . $rowCount12 . ':D' . $rowCount12)->setCellValue('A' . $rowCount12, 'Reported by :');
                $objPHPExcel->mergeCells('E' . $rowCount12 . ':I' . $rowCount12)->setCellValue('E' . $rowCount12, 'Confirmed by :');
                $objPHPExcel->mergeCells('J' . $rowCount12 . ':M' . $rowCount12)->setCellValue('J' . $rowCount12, 'Noted by :');

                $rowCount13 = $rowCount12 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount13 . ':M' . $rowCount13);
                $objPHPExcel->mergeCells('A' . $rowCount13 . ':D' . $rowCount13)->setCellValue('A' . $rowCount13, '');
                $objPHPExcel->mergeCells('E' . $rowCount13 . ':I' . $rowCount13)->setCellValue('E' . $rowCount13, '');
                $objPHPExcel->mergeCells('J' . $rowCount13 . ':M' . $rowCount13)->setCellValue('J' . $rowCount13, '');

                $rowCount14 = $rowCount13 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount14 . ':M' . $rowCount14);
                $objPHPExcel->mergeCells('A' . $rowCount14 . ':D' . $rowCount14)->setCellValue('A' . $rowCount14, 'Name :');
                $objPHPExcel->mergeCells('E' . $rowCount14 . ':I' . $rowCount14)->setCellValue('E' . $rowCount14, 'Name :');
                $objPHPExcel->mergeCells('J' . $rowCount14 . ':M' . $rowCount14)->setCellValue('J' . $rowCount14, 'Name :');

                $rowCount15 = $rowCount14 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount15 . ':M' . $rowCount15);
                $objPHPExcel->mergeCells('A' . $rowCount15 . ':D' . $rowCount15)->setCellValue('A' . $rowCount15, 'Position :');
                $objPHPExcel->mergeCells('E' . $rowCount15 . ':I' . $rowCount15)->setCellValue('E' . $rowCount15, 'Position :');
                $objPHPExcel->mergeCells('J' . $rowCount15 . ':M' . $rowCount15)->setCellValue('J' . $rowCount15, 'Position :');

                $rowCount16 = $rowCount15 + 1;
                $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount16 . ':M' . $rowCount16);
                $objPHPExcel->mergeCells('A' . $rowCount16 . ':D' . $rowCount16)->setCellValue('A' . $rowCount16, 'Date :');
                $objPHPExcel->mergeCells('E' . $rowCount16 . ':I' . $rowCount16)->setCellValue('E' . $rowCount16, 'Date :');
                $objPHPExcel->mergeCells('J' . $rowCount16 . ':M' . $rowCount16)->setCellValue('J' . $rowCount16, 'Date :');

                $rowend = $rowCount16 + 1;
                $objPHPExcel->getStyle('G' . $rowend . ':M' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':F' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('G' . $rowend . ':M' . $rowend)->setCellValue('G' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmfss097' && $frmvrs == '06': 
                foreach ($dtheader as $dtheader_row){
                    $tgl_laporan = substr($dtheader_row->tgl_inproses, 8, 2) . '-' . substr($dtheader_row->tgl_inproses, 5, 2) . '-' . substr($dtheader_row->tgl_inproses, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(1);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);


                foreach (range('A', 'V') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel->mergeCells('A1:V1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:R3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('S2:V2')->setCellValue('S2', 'Doc No : ');
                $objPHPExcel->mergeCells('S3:V3')->setCellValue('S3', 'P/D : ' . $tgl_laporan);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('S4:V4')->setCellValue('S4', 'Page : 1 of 2');

                $objPHPExcel->mergeCells('A5:V5')->setCellValue('A5', 'DRINKING WATER IN-PROCESS');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'Time of Sampling');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Sampling Point');
                $objPHPExcel->mergeCells('C6:D8')->setCellValue('C6', 'pH');
                $objPHPExcel->mergeCells('E6:P6')->setCellValue('E6', 'Chemical Analysis');
                $objPHPExcel->mergeCells('Q6:U6')->setCellValue('Q6', 'Microbiological Analysis');
                $objPHPExcel->mergeCells('V6:V8')->setCellValue('V6', 'Remark');

                $objPHPExcel->mergeCells('E7:F7')->setCellValue('E7', 'Chloride');
                $objPHPExcel->setCellValue('G7', 'Total Hardness');
                $objPHPExcel->setCellValue('H7', 'Free Cl2');
                $objPHPExcel->mergeCells('I7:J7')->setCellValue('I7', 'TDS');
                $objPHPExcel->mergeCells('K7:L7')->setCellValue('K7', 'Colour');
                $objPHPExcel->setCellValue('M7', 'Turbidity');
                $objPHPExcel->mergeCells('N7:O7')->setCellValue('N7', 'Residual Ozone');
                $objPHPExcel->setCellValue('P7', 'Odour & Taste');
                $objPHPExcel->mergeCells('Q7:R7')->setCellValue('Q7', 'Total Plate Count Max');
                $objPHPExcel->setCellValue('S7', 'TCC');
                $objPHPExcel->setCellValue('T7', 'E. Coli');
                $objPHPExcel->setCellValue('U7', 'Salmo');

                $objPHPExcel->mergeCells('E8:F8')->setCellValue('E8', 'ppm Max');
                $objPHPExcel->setCellValue('G8', '10 ppm max');
                $objPHPExcel->setCellValue('H8', '0.1 ppm max');
                $objPHPExcel->mergeCells('I8:J8')->setCellValue('I8', 'ppm Max');
                $objPHPExcel->mergeCells('K8:L8')->setCellValue('K8', 'PtCo max');
                $objPHPExcel->setCellValue('M8', '1.5 NTU Max');
                $objPHPExcel->mergeCells('N8:O8')->setCellValue('N8', '(ppm)');
                $objPHPExcel->setCellValue('P8', 'Normal*');
                $objPHPExcel->mergeCells('Q8:R8')->setCellValue('Q8', 'cfu/ ml');
                $objPHPExcel->setCellValue('S8', '<1 cfu/ ml');
                $objPHPExcel->setCellValue('T8', 'Abs/ 25 ml');
                $objPHPExcel->setCellValue('U8', 'Abs/ 25 ml');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:V8');

                $objPHPExcel->getStyle('A2:V8')->getAlignment()->setWrapText(true);

                $rowCount = 8;
                $no       = 1;
                foreach ($dtdetail1 as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':V' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':V' . $rowCount)->getAlignment()->setWrapText(true);

                    if ($row->kode_sample == 'RW'){
                        $ket_ph    = '6.5-7.5';
                        $ket_cl    = '30';
                        $ket_tds   = '100';
                        $ket_clr   = '40';
                        $ket_ozone = '';
                        $ket_tpc   = '1000';
                    } elseif ($row->kode_sample == 'ARO'){
                        $ket_ph    = '5.0-7.5';
                        $ket_cl    = '10';
                        $ket_tds   = '10';
                        $ket_clr   = '5';
                        $ket_ozone = '500';
                        $ket_tpc   = '';
                    } elseif ($row->kode_sample == 'PW'){
                        $$ket_ph   = '5.0-7.5';
                        $ket_cl    = '10';
                        $ket_tds   = '10';
                        $ket_clr   = '5';
                        $ket_ozone = '0.2-0.6';
                        $ket_tpc   = '100';
                    } else {
                        $ket_ph    = '5.0-7.5';
                        $ket_cl    = '10';
                        $ket_tds   = '10';
                        $ket_clr   = '5';
                        $ket_ozone = '0.1-0.4';
                        $ket_tpc   = '100';
                    }

                    if ($row->operator == '1'){
                        $operator = '>';
                    } elseif ($row->operator == '0'){
                        $operator = '<';
                    } else {
                        $operator = '';
                    }
                    if ($row->operator8 == '1'){
                        $operator8 = '>';
                    } elseif ($row->operator8 == '0'){
                        $operator8 = '<';
                    } else {
                        $operator8 = '';
                    }
                    if ($row->operator9 == '1'){
                        $operator9 = '>';
                    } elseif ($row->operator9 == '0'){
                        $operator9 = '<';
                    } else {
                        $operator9 = '';
                    }
                    if ($row->operator10 == '1'){
                        $operator10 = '>';
                    } elseif ($row->operator10 == '0'){
                        $operator10 = '<';
                    } else {
                        $operator10 = '';
                    }
                    if ($row->operator11 == '1'){
                        $operator11 = '>';
                    } elseif ($row->operator11 == '0'){
                        $operator11 = '<';
                    } else {
                        $operator11 = '';
                    }
                    if ($row->operator12 == '1'){
                        $operator12 = '>';
                    } elseif ($row->operator12 == '0'){
                        $operator12 = '<';
                    } else {
                        $operator12 = '';
                    }
                    if ($row->operator13 == '1'){
                        $operator13 = '>';
                    } elseif ($row->operator13 == '0'){
                        $operator13 = '<';
                    } else {
                        $operator13 = '';
                    }
                    if ($row->operator14 == '1'){
                        $operator14 = '>';
                    } elseif ($row->operator14 == '0'){
                        $operator14 = '<';
                    } else {
                        $operator14 = '';
                    }
                    if ($row->operator2 == '1'){
                        $operator2 = '>';
                    } elseif ($row->operator2 == '0'){
                        $operator2 = '<';
                    } else {
                        $operator2 = '';
                    }
                    if ($row->operator15 == '1'){
                        $operator15 = '>';
                    } elseif ($row->operator15 == '0'){
                        $operator15 = '<';
                    } else {
                        $operator15 = '';
                    }
                    if ($row->operator16 == '1'){
                        $operator16 = '>';
                    } elseif ($row->operator16 == '0'){
                        $operator16 = '<';
                    } else {
                        $operator16 = '';
                    }
                    if ($row->operator17 == '1'){
                        $operator17 = '>';
                    } elseif ($row->operator17 == '0'){
                        $operator17 = '<';
                    } else {
                        $operator17 = '';
                    }
                    if ($row->operator18 == '1'){
                        $operator18 = '>';
                    } elseif ($row->operator18 == '0'){
                        $operator18 = '<';
                    } else {
                        $operator18 = '';
                    }


                    if (($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator . ' ' . $row->tpc0;
                    } elseif (($row->tpc0 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator8 . ' ' . ($row->tpc1 * 10);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator9 . ' ' . ($row->tpc2 * 100);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator10 . ' ' . ($row->tpc3 * 1000);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc5 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator11 . ' ' . ($row->tpc4 * 10000);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc6 == '') && ($row->tpc7 == '')){
                        $tpc = $operator12 . ' ' . ($row->tpc5 * 100000);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc7 == '')){
                        $tpc = $operator13 . ' ' . ($row->tpc6 * 1000000);
                    } elseif (($row->tpc0 == '') && ($row->tpc1 == '') && ($row->tpc2 == '') && ($row->tpc3 == '') && ($row->tpc4 == '') && ($row->tpc5 == '') && ($row->tpc6 == '')){
                        $tpc = $operator14 . ' ' . ($row->tpc7 * 10000000);
                    } else {
                        $tpc = '';
                    }

                    if (($row->tcc1 == '') && ($row->tcc2 == '') && ($row->tcc3 == '') && ($row->tcc4 == '')){
                        $tcc = $operator2 . ' ' . $row->tcc0;
                    } elseif (($row->tcc0 == '') && ($row->tcc2 == '') && ($row->tcc3 == '') && ($row->tcc4 == '')){
                        $tcc = $operator15 . ' ' . $row->tcc1;
                    } elseif (($row->tcc0 == '') && ($row->tcc1 == '') && ($row->tcc3 == '') && ($row->tcc4 == '')){
                        $tcc = $operator16 . ' ' . $row->tcc2;
                    } elseif (($row->tcc0 == '') && ($row->tcc1 == '') && ($row->tcc2 == '') && ($row->tcc4 == '')){
                        $tcc = $operator17 . ' ' . $row->tcc3;
                    } elseif (($row->tcc0 == '') && ($row->tcc1 == '') && ($row->tcc2 == '') && ($row->tcc3 == '')){
                        $tcc = $operator18 . ' ' . $row->tcc4;
                    } else {
                        $tcc = '';
                    }

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('C' . $rowCount, $ket_ph);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ap_ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $ket_cl);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->cl_hppm);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->th_hppm);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->fci);
                    $objPHPExcel->setCellValue('I' . $rowCount, $ket_tds);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->tds);
                    $objPHPExcel->setCellValue('K' . $rowCount, $ket_clr);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->color);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->turbidity);
                    $objPHPExcel->setCellValue('N' . $rowCount, $ket_ozone);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->residual_ozon);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->odour_flavour);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $ket_tpc);
                    $objPHPExcel->setCellValue('R' . $rowCount, $tpc);
                    $objPHPExcel->setCellValue('S' . $rowCount, $tcc);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->e_coli);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->salmonella);
                    $objPHPExcel->setCellValue('V' . $rowCount, $row->remarks);

                    $no++;
                }

                $rowhead2 = $rowCount + 1;
                $objPHPExcel->mergeCells('A' . $rowhead2 . ':B' . $rowhead2)->setCellValue('A' . $rowhead2, '');
                $objPHPExcel->mergeCells('C' . $rowhead2 . ':F' . $rowhead2)->setCellValue('C' . $rowhead2, 'Start Production (Hour)');
                $objPHPExcel->mergeCells('G' . $rowhead2 . ':I' . $rowhead2)->setCellValue('G' . $rowhead2, 'Stop Production (Hour)');
                $objPHPExcel->mergeCells('J' . $rowhead2 . ':M' . $rowhead2)->setCellValue('J' . $rowhead2, 'Total Production');
                $objPHPExcel->mergeCells('N' . $rowhead2 . ':P' . $rowhead2)->setCellValue('N' . $rowhead2, 'Total Sample');
                $objPHPExcel->mergeCells('Q' . $rowhead2 . ':V' . $rowhead2)->setCellValue('Q' . $rowhead2, 'Remark');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowhead2 . ':V' . $rowhead2);
                $objPHPExcel->getStyle('A' . $rowhead2 . ':V' . $rowhead2)->getAlignment()->setWrapText(true);

                $rowCount2 = $rowhead2;
                foreach ($dtdetail6 as $row2){
                    $rowCount2++;
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount2 . ':V' . $rowCount2);

                    $objPHPExcel->mergeCells('A' . $rowCount2 . ':B' . $rowCount2)->setCellValue('A' . $rowCount2, '');
                    $objPHPExcel->mergeCells('C' . $rowCount2 . ':F' . $rowCount2)->setCellValue('C' . $rowCount2, $row2->jam_start_production);
                    $objPHPExcel->mergeCells('G' . $rowCount2 . ':I' . $rowCount2)->setCellValue('G' . $rowCount2, $row2->jam_stop_production);
                    $objPHPExcel->mergeCells('J' . $rowCount2 . ':M' . $rowCount2)->setCellValue('J' . $rowCount2, $row2->total_production);
                    $objPHPExcel->mergeCells('N' . $rowCount2 . ':P' . $rowCount2)->setCellValue('N' . $rowCount2, $row2->total_sample);
                    $objPHPExcel->mergeCells('Q' . $rowCount2 . ':V' . $rowCount2)->setCellValue('Q' . $rowCount2, $row2->remarks);
                }

                $rowhead3 = $rowCount2 + 1;
                $rowhead4 = $rowhead3 + 1;
                $rowhead5 = $rowhead4 + 1;
                $rowhead6 = $rowhead5 + 1;

                $objPHPExcel->mergeCells('A' . $rowhead3 . ':V' . $rowhead3)->setCellValue('A' . $rowhead3, 'DRINKING WATER FINISHED PRODUCT FOR ASES KARA CUP 220 ML');

                $objPHPExcel->mergeCells('A' . $rowhead4 . ':A' . $rowhead6)->setCellValue('A' . $rowhead4, 'Product Sample');
                $objPHPExcel->mergeCells('B' . $rowhead4 . ':M' . $rowhead4)->setCellValue('B' . $rowhead4, 'Chemical Analysis');
                $objPHPExcel->mergeCells('N' . $rowhead4 . ':U' . $rowhead4)->setCellValue('N' . $rowhead4, 'Microbiological Analysis');
                $objPHPExcel->mergeCells('V' . $rowhead4 . ':V' . $rowhead6)->setCellValue('V' . $rowhead4, 'Remark');

                $objPHPExcel->setCellValue('B' . $rowhead5, 'pH');
                $objPHPExcel->mergeCells('C' . $rowhead5 . ':D' . $rowhead5)->setCellValue('C' . $rowhead5, 'Chloride');
                $objPHPExcel->mergeCells('E' . $rowhead5 . ':F' . $rowhead5)->setCellValue('E' . $rowhead5, 'Total Hardness');
                $objPHPExcel->setCellValue('G' . $rowhead5, 'TDS');
                $objPHPExcel->setCellValue('H' . $rowhead5, 'Colour');
                $objPHPExcel->mergeCells('I' . $rowhead5 . ':J' . $rowhead5)->setCellValue('I' . $rowhead5, 'Turbidity');
                $objPHPExcel->mergeCells('K' . $rowhead5 . ':L' . $rowhead5)->setCellValue('K' . $rowhead5, 'Residual Ozone');
                $objPHPExcel->setCellValue('M' . $rowhead5, 'Odour & Taste');
                $objPHPExcel->mergeCells('N' . $rowhead5 . ':O' . $rowhead5)->setCellValue('N' . $rowhead5, 'Total Plate Count Max');
                $objPHPExcel->mergeCells('P' . $rowhead5 . ':Q' . $rowhead5)->setCellValue('P' . $rowhead5, 'TCC');
                $objPHPExcel->mergeCells('R' . $rowhead5 . ':S' . $rowhead5)->setCellValue('R' . $rowhead5, 'E.Coli');
                $objPHPExcel->mergeCells('T' . $rowhead5 . ':U' . $rowhead5)->setCellValue('T' . $rowhead5, 'Salmo');

                $objPHPExcel->setCellValue('B' . $rowhead6, '5.7-7.5');
                $objPHPExcel->mergeCells('C' . $rowhead6 . ':D' . $rowhead6)->setCellValue('C' . $rowhead6, '10 ppm Max');
                $objPHPExcel->mergeCells('E' . $rowhead6 . ':F' . $rowhead6)->setCellValue('E' . $rowhead6, '10 ppm max');
                $objPHPExcel->setCellValue('G' . $rowhead6, '10 ppm max');
                $objPHPExcel->setCellValue('H' . $rowhead6, '5 PtCo max');
                $objPHPExcel->mergeCells('I' . $rowhead6 . ':J' . $rowhead6)->setCellValue('I' . $rowhead6, '1.5 NTU Max');
                $objPHPExcel->mergeCells('K' . $rowhead6 . ':L' . $rowhead6)->setCellValue('K' . $rowhead6, '0 PPM');
                $objPHPExcel->setCellValue('M' . $rowhead6, 'Normal*');
                $objPHPExcel->mergeCells('N' . $rowhead6 . ':O' . $rowhead6)->setCellValue('N' . $rowhead6, '100 cfu/ml');
                $objPHPExcel->mergeCells('P' . $rowhead6 . ':Q' . $rowhead6)->setCellValue('P' . $rowhead6, '<1 cfu/ml');
                $objPHPExcel->mergeCells('R' . $rowhead6 . ':S' . $rowhead6)->setCellValue('R' . $rowhead6, 'Abs 25 ml');
                $objPHPExcel->mergeCells('T' . $rowhead6 . ':U' . $rowhead6)->setCellValue('T' . $rowhead6, 'Abs 25 ml');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowhead3 . ':V' . $rowhead6);
                $objPHPExcel->getStyle('A' . $rowhead3 . ':V' . $rowhead6)->getAlignment()->setWrapText(true);

                $rowCount3 = $rowhead6;
                foreach ($dtdetail2 as $row3){
                    $rowCount3++;
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount3 . ':V' . $rowCount3);
                    $objPHPExcel->getStyle('A' . $rowCount3 . ':V' . $rowCount3)->getAlignment()->setWrapText(true);

                    if ($row3->operator == '1'){
                        $operator = '<';
                    } elseif ($row3->operator == '0'){
                        $operator = '>';
                    } else {
                        $operator = '';
                    }
                    if ($row3->operator8 == '1'){
                        $operator8 = '<';
                    } elseif ($row3->operator8 == '0'){
                        $operator8 = '>';
                    } else {
                        $operator8 = '';
                    }
                    if ($row3->operator9 == '1'){
                        $operator9 = '<';
                    } elseif ($row3->operator9 == '0'){
                        $operator9 = '>';
                    } else {
                        $operator9 = '';
                    }
                    if ($row3->operator10 == '1'){
                        $operator10 = '<';
                    } elseif ($row3->operator10 == '0'){
                        $operator10 = '>';
                    } else {
                        $operator10 = '';
                    }
                    if ($row3->operator11 == '1'){
                        $operator11 = '<';
                    } elseif ($row3->operator11 == '0'){
                        $operator11 = '>';
                    } else {
                        $operator11 = '';
                    }
                    if ($row3->operator12 == '1'){
                        $operator12 = '<';
                    } elseif ($row3->operator12 == '0'){
                        $operator12 = '>';
                    } else {
                        $operator12 = '';
                    }
                    if ($row3->operator13 == '1'){
                        $operator13 = '<';
                    } elseif ($row3->operator13 == '0'){
                        $operator13 = '>';
                    } else {
                        $operator13 = '';
                    }
                    if ($row3->operator14 == '1'){
                        $operator14 = '<';
                    } elseif ($row3->operator14 == '0'){
                        $operator14 = '>';
                    } else {
                        $operator14 = '';
                    }
                    if ($row3->operator2 == '1'){
                        $operator2 = '<';
                    } elseif ($row3->operator2 == '0'){
                        $operator2 = '>';
                    } else {
                        $operator2 = '';
                    }
                    if ($row3->operator15 == '1'){
                        $operator15 = '<';
                    } elseif ($row3->operator15 == '0'){
                        $operator15 = '>';
                    } else {
                        $operator15 = '';
                    }
                    if ($row3->operator16 == '1'){
                        $operator16 = '<';
                    } elseif ($row3->operator16 == '0'){
                        $operator16 = '>';
                    } else {
                        $operator16 = '';
                    }
                    if ($row3->operator17 == '1'){
                        $operator17 = '<';
                    } elseif ($row3->operator17 == '0'){
                        $operator17 = '>';
                    } else {
                        $operator17 = '';
                    }
                    if ($row3->operator18 == '1'){
                        $operator18 = '<';
                    } elseif ($row3->operator18 == '0'){
                        $operator18 = '>';
                    } else {
                        $operator18 = '';
                    }

                    if (($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator . ' ' . $row3->tpc0;
                    } elseif (($row3->tpc0 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator8 . ' ' . ($row3->tpc1 * $vtpc1);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator9 . ' ' . ($row3->tpc2 * $vtpc2);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator10 . ' ' . ($row3->tpc3 * $vtpc3);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator11 . ' ' . ($row3->tpc4 * $vtpc4);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc6 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator12 . ' ' . ($row3->tpc5 * $vtpc5);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc7 == '')){
                        $tpc2 = $operator13 . ' ' . ($row3->tpc6 * $vtpc6);
                    } elseif (($row3->tpc0 == '') && ($row3->tpc1 == '') && ($row3->tpc2 == '') && ($row3->tpc3 == '') && ($row3->tpc4 == '') && ($row3->tpc5 == '') && ($row3->tpc6 == '')){
                        $tpc2 = $operator14 . ' ' . ($row3->tpc7 * $vtpc7);
                    } else {
                        $tpc2 = '';
                    }

                    if (($row3->tcc1 == '') && ($row3->tcc2 == '') && ($row3->tcc3 == '') && ($row3->tcc4 == '')){
                        $tcc2 = $operator2 . ' ' . $row3->tcc0;
                    } elseif (($row3->tcc0 == '') && ($row3->tcc2 == '') && ($row3->tcc3 == '') && ($row3->tcc4 == '')){
                        $tcc2 = $operator15 . ' ' . $row3->tcc1;
                    } elseif (($row3->tcc0 == '') && ($row3->tcc1 == '') && ($row3->tcc3 == '') && ($row3->tcc4 == '')){
                        $tcc2 = $operator16 . ' ' . $row3->tcc2;
                    } elseif (($row3->tcc0 == '') && ($row3->tcc1 == '') && ($row3->tcc2 == '') && ($row3->tcc4 == '')){
                        $tcc2 = $operator17 . ' ' . $row3->tcc3;
                    } elseif (($row3->tcc0 == '') && ($row3->tcc1 == '') && ($row3->tcc2 == '') && ($row3->tcc3 == '')){
                        $tcc2 = $operator18 . ' ' . $row3->tcc4;
                    } else {
                        $tcc2 = '';
                    }

                    $objPHPExcel->setCellValue('A' . $rowCount3, $row3->kode_sample);
                    $objPHPExcel->setCellValue('B' . $rowCount3, $row3->ap_ph);
                    $objPHPExcel->mergeCells('C' . $rowCount3 . ':D' . $rowCount3)->setCellValue('C' . $rowCount3, $row3->cl_hppm);
                    $objPHPExcel->mergeCells('E' . $rowCount3 . ':F' . $rowCount3)->setCellValue('E' . $rowCount3, $row3->th_hppm);
                    $objPHPExcel->setCellValue('G' . $rowCount3, $row3->tds);
                    $objPHPExcel->setCellValue('H' . $rowCount3, $row3->color);
                    $objPHPExcel->mergeCells('I' . $rowCount3 . ':J' . $rowCount3)->setCellValue('I' . $rowCount3, $row3->turbidity);
                    $objPHPExcel->mergeCells('K' . $rowCount3 . ':L' . $rowCount3)->setCellValue('K' . $rowCount3, $row3->residual_ozon);
                    $objPHPExcel->setCellValue('M' . $rowCount3, $row3->odour_taste);
                    $objPHPExcel->mergeCells('N' . $rowCount3 . ':O' . $rowCount3)->setCellValue('N' . $rowCount3, $tpc2);
                    $objPHPExcel->mergeCells('P' . $rowCount3 . ':Q' . $rowCount3)->setCellValue('P' . $rowCount3, $tcc2);
                    $objPHPExcel->mergeCells('R' . $rowCount3 . ':S' . $rowCount3)->setCellValue('R' . $rowCount3, $row3->e_coli);
                    $objPHPExcel->mergeCells('T' . $rowCount3 . ':U' . $rowCount3)->setCellValue('T' . $rowCount3, $row3->salmonella);
                    $objPHPExcel->setCellValue('V' . $rowCount3, $row3->remarks);
                }

                $rowhead7 = $rowCount3 + 1;
                $rowhead8 = $rowhead7 + 1;
                $rowhead9 = $rowhead8 + 1;

                $objPHPExcel->mergeCells('A' . $rowhead7 . ':V' . $rowhead7)->setCellValue('A' . $rowhead7, 'NON-CONFERMANCE RECORD');
                $objPHPExcel->mergeCells('A' . $rowhead8 . ':A' . $rowhead9)->setCellValue('A' . $rowhead8, 'Time');
                $objPHPExcel->mergeCells('B' . $rowhead8 . ':G' . $rowhead9)->setCellValue('B' . $rowhead8, 'Description of Non-conformance');
                $objPHPExcel->mergeCells('H' . $rowhead8 . ':N' . $rowhead9)->setCellValue('H' . $rowhead8, 'Proposed Disposition/ Action');
                $objPHPExcel->mergeCells('O' . $rowhead8 . ':O' . $rowhead9)->setCellValue('O' . $rowhead8, 'Informed By');
                $objPHPExcel->mergeCells('P' . $rowhead8 . ':P' . $rowhead9)->setCellValue('P' . $rowhead8, 'Received By');
                $objPHPExcel->mergeCells('Q' . $rowhead8 . ':R' . $rowhead8)->setCellValue('Q' . $rowhead8, 'Action Taken');
                $objPHPExcel->mergeCells('S' . $rowhead8 . ':U' . $rowhead8)->setCellValue('S' . $rowhead8, 'Verification');
                $objPHPExcel->mergeCells('V' . $rowhead8 . ':V' . $rowhead9)->setCellValue('V' . $rowhead8, 'Remark');

                $objPHPExcel->setCellValue('Q' . $rowhead9, 'Time');
                $objPHPExcel->setCellValue('R' . $rowhead9, 'By');
                $objPHPExcel->setCellValue('S' . $rowhead9, 'Time');
                $objPHPExcel->setCellValue('T' . $rowhead9, 'Result');
                $objPHPExcel->setCellValue('U' . $rowhead9, 'By');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowhead7 . ':V' . $rowhead9);
                $objPHPExcel->getStyle('A' . $rowhead7 . ':V' . $rowhead9)->getAlignment()->setWrapText(true);


                if (isset($dtdetail3)){
                    $rowCount4 = $rowhead9;
                    foreach ($dtdetail3 as $row4){
                        $rowCount4++;
                        $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount4 . ':V' . $rowCount4);
                        $objPHPExcel->getStyle('A' . $rowCount4 . ':V' . $rowCount4)->getAlignment()->setWrapText(true);

                        $objPHPExcel->setCellValue('A' . $rowCount4, $row4->jam);
                        $objPHPExcel->mergeCells('B' . $rowCount4 . ':G' . $rowCount4)->setCellValue('B' . $rowCount4, $row4->deskripsi_nc);
                        $objPHPExcel->mergeCells('H' . $rowCount4 . ':N' . $rowCount4)->setCellValue('H' . $rowCount4, $row4->proposal_da);
                        $objPHPExcel->setCellValue('O' . $rowCount4, $row4->dilaporkan_oleh);
                        $objPHPExcel->setCellValue('P' . $rowCount4, $row4->diterima_oleh);
                        $objPHPExcel->setCellValue('Q' . $rowCount4, $row4->waktu_at);
                        $objPHPExcel->setCellValue('R' . $rowCount4, $row4->at_oleh);
                        $objPHPExcel->setCellValue('S' . $rowCount4, $row4->waktu_verifikasi);
                        $objPHPExcel->setCellValue('T' . $rowCount4, $row4->hasil_verifikasi);
                        $objPHPExcel->setCellValue('U' . $rowCount4, $row4->diverifikasi_oleh);
                        $objPHPExcel->mergeCells('V' . $rowCount4 . ':V' . $rowCount4)->setCellValue('V' . $rowCount4, $row4->remarks);
                    }
                } else {
                    $rowCount4 = $rowhead9 + 1;
                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount4 . ':V' . $rowCount4);

                    $objPHPExcel->setCellValue('A' . $rowCount4, '');
                    $objPHPExcel->mergeCells('B' . $rowCount4 . ':G' . $rowCount4)->setCellValue('B' . $rowCount4, '');
                    $objPHPExcel->mergeCells('H' . $rowCount4 . ':N' . $rowCount4)->setCellValue('H' . $rowCount4, '');
                    $objPHPExcel->setCellValue('O' . $rowCount4, '');
                    $objPHPExcel->setCellValue('P' . $rowCount4, '');
                    $objPHPExcel->setCellValue('Q' . $rowCount4, '');
                    $objPHPExcel->setCellValue('R' . $rowCount4, '');
                    $objPHPExcel->setCellValue('S' . $rowCount4, '');
                    $objPHPExcel->setCellValue('T' . $rowCount4, '');
                    $objPHPExcel->setCellValue('U' . $rowCount4, '');
                    $objPHPExcel->mergeCells('V' . $rowCount4 . ':V' . $rowCount4)->setCellValue('V' . $rowCount4, '');
                }

                $rowket1 = $rowCount4 + 1;
                $rowket2 = $rowket1 + 1;
                $rowket3 = $rowket2 + 1;
                $rowket4 = $rowket3 + 1;
                $rowket5 = $rowket4 + 1;
                $rowket6 = $rowket5 + 1;

                $objPHPExcel->mergeCells('A' . $rowket1 . ':V' . $rowket1)->setCellValue('A' . $rowket1, '');
                $objPHPExcel->mergeCells('A' . $rowket2 . ':V' . $rowket2)->setCellValue('A' . $rowket2, 'Definition');

                $objPHPExcel->setCellValue('A' . $rowket3, 'Max');
                $objPHPExcel->setCellValue('B' . $rowket3, ': Maximum');
                $objPHPExcel->mergeCells('C' . $rowket3 . ':D' . $rowket3)->setCellValue('C' . $rowket3, 'TDS');
                $objPHPExcel->mergeCells('E' . $rowket3 . ':H' . $rowket3)->setCellValue('E' . $rowket3, ': Total Dissolved Solid');
                $objPHPExcel->mergeCells('I' . $rowket3 . ':J' . $rowket3)->setCellValue('I' . $rowket3, 'ppm');
                $objPHPExcel->mergeCells('K' . $rowket3 . ':M' . $rowket3)->setCellValue('K' . $rowket3, ': Part per million');
                $objPHPExcel->mergeCells('N' . $rowket3 . ':O' . $rowket3)->setCellValue('N' . $rowket3, 'Cl2');
                $objPHPExcel->mergeCells('P' . $rowket3 . ':S' . $rowket3)->setCellValue('P' . $rowket3, ': Chlorine');
                $objPHPExcel->setCellValue('T' . $rowket3, '');
                $objPHPExcel->mergeCells('U' . $rowket3 . ':V' . $rowket3)->setCellValue('U' . $rowket3, ': Not Analyzed');

                $objPHPExcel->setCellValue('A' . $rowket4, 'Min');
                $objPHPExcel->setCellValue('B' . $rowket4, ': Minimum');
                $objPHPExcel->mergeCells('C' . $rowket4 . ':D' . $rowket4)->setCellValue('C' . $rowket4, 'PtCo');
                $objPHPExcel->mergeCells('E' . $rowket4 . ':H' . $rowket4)->setCellValue('E' . $rowket4, ': Platinum Cobalt');
                $objPHPExcel->mergeCells('I' . $rowket4 . ':J' . $rowket4)->setCellValue('I' . $rowket4, 'E.Coli');
                $objPHPExcel->mergeCells('K' . $rowket4 . ':M' . $rowket4)->setCellValue('K' . $rowket4, ': Escherichia coli');
                $objPHPExcel->mergeCells('N' . $rowket4 . ':O' . $rowket4)->setCellValue('N' . $rowket4, 'TPC');
                $objPHPExcel->mergeCells('P' . $rowket4 . ':S' . $rowket4)->setCellValue('P' . $rowket4, ': Total Plate Count');
                $objPHPExcel->setCellValue('T' . $rowket4, '');
                $objPHPExcel->mergeCells('U' . $rowket4 . ':V' . $rowket4)->setCellValue('U' . $rowket4, ': Analyzed');

                $objPHPExcel->setCellValue('A' . $rowket5, 'Cl2');
                $objPHPExcel->setCellValue('B' . $rowket5, ': Chlorine');
                $objPHPExcel->mergeCells('C' . $rowket5 . ':D' . $rowket5)->setCellValue('C' . $rowket5, 'NTU');
                $objPHPExcel->mergeCells('E' . $rowket5 . ':H' . $rowket5)->setCellValue('E' . $rowket5, ': Nephelometric Turbidity Units');
                $objPHPExcel->mergeCells('I' . $rowket5 . ':J' . $rowket5)->setCellValue('I' . $rowket5, 'Abs');
                $objPHPExcel->mergeCells('K' . $rowket5 . ':M' . $rowket5)->setCellValue('K' . $rowket5, ': Absence');
                $objPHPExcel->mergeCells('N' . $rowket5 . ':O' . $rowket5)->setCellValue('N' . $rowket5, 'Salmo');
                $objPHPExcel->mergeCells('P' . $rowket5 . ':S' . $rowket5)->setCellValue('P' . $rowket5, ': Salmonella');
                $objPHPExcel->setCellValue('T' . $rowket5, '');
                $objPHPExcel->mergeCells('U' . $rowket5 . ':V' . $rowket5)->setCellValue('U' . $rowket5, '');

                $objPHPExcel->setCellValue('A' . $rowket6, 'pH');
                $objPHPExcel->setCellValue('B' . $rowket6, ': Log (H+)');
                $objPHPExcel->mergeCells('C' . $rowket6 . ':D' . $rowket6)->setCellValue('C' . $rowket6, 'cfu/ml');
                $objPHPExcel->mergeCells('E' . $rowket6 . ':H' . $rowket6)->setCellValue('E' . $rowket6, ': Colony forming units/mililiter');
                $objPHPExcel->mergeCells('I' . $rowket6 . ':J' . $rowket6)->setCellValue('I' . $rowket6, 'TCC');
                $objPHPExcel->mergeCells('K' . $rowket6 . ':M' . $rowket6)->setCellValue('K' . $rowket6, ': Total Coliform Count');
                $objPHPExcel->mergeCells('N' . $rowket6 . ':O' . $rowket6)->setCellValue('N' . $rowket6, 'Normal*');
                $objPHPExcel->mergeCells('P' . $rowket6 . ':S' . $rowket6)->setCellValue('P' . $rowket6, ': Odourless and Testeless');
                $objPHPExcel->setCellValue('T' . $rowket6, '');
                $objPHPExcel->mergeCells('U' . $rowket6 . ':V' . $rowket6)->setCellValue('U' . $rowket6, '');

                $rowspace1 = $rowket6 + 1;
                $objPHPExcel->mergeCells('A' . $rowspace1 . ':V' . $rowspace1)->setCellValue('A' . $rowspace1, '');

                $rowApp1 = $rowspace1 + 1;
                $rowApp2 = $rowApp1 + 1;
                $rowApp3 = $rowApp2 + 1;
                $rowApp4 = $rowApp3 + 1;
                $rowApp5 = $rowApp4 + 1;

                $objPHPExcel->mergeCells('A' . $rowApp1 . ':H' . $rowApp1)->setCellValue('A' . $rowApp1, 'Reported By');
                $objPHPExcel->mergeCells('I' . $rowApp1 . ':O' . $rowApp1)->setCellValue('I' . $rowApp1, 'Confirmed By');
                $objPHPExcel->mergeCells('P' . $rowApp1 . ':S' . $rowApp1)->setCellValue('P' . $rowApp1, 'Noted By');
                $objPHPExcel->mergeCells('T' . $rowApp1 . ':V' . $rowApp1)->setCellValue('T' . $rowApp1, 'Approved By');

                $objPHPExcel->mergeCells('A' . $rowApp2 . ':B' . $rowApp2)->setCellValue('A' . $rowApp2, '');
                $objPHPExcel->mergeCells('C' . $rowApp2 . ':F' . $rowApp2)->setCellValue('C' . $rowApp2, '');
                $objPHPExcel->mergeCells('G' . $rowApp2 . ':H' . $rowApp2)->setCellValue('G' . $rowApp2, '');
                $objPHPExcel->mergeCells('I' . $rowApp2 . ':L' . $rowApp2)->setCellValue('I' . $rowApp2, '');
                $objPHPExcel->mergeCells('M' . $rowApp2 . ':O' . $rowApp2)->setCellValue('M' . $rowApp2, '');
                $objPHPExcel->mergeCells('P' . $rowApp2 . ':S' . $rowApp2)->setCellValue('P' . $rowApp2, '');
                $objPHPExcel->mergeCells('T' . $rowApp2 . ':V' . $rowApp2)->setCellValue('T' . $rowApp2, '');

                $objPHPExcel->mergeCells('A' . $rowApp3 . ':B' . $rowApp3)->setCellValue('A' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('C' . $rowApp3 . ':F' . $rowApp3)->setCellValue('C' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('G' . $rowApp3 . ':H' . $rowApp3)->setCellValue('G' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('I' . $rowApp3 . ':L' . $rowApp3)->setCellValue('I' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('M' . $rowApp3 . ':O' . $rowApp3)->setCellValue('M' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('P' . $rowApp3 . ':S' . $rowApp3)->setCellValue('P' . $rowApp3, 'Name :');
                $objPHPExcel->mergeCells('T' . $rowApp3 . ':V' . $rowApp3)->setCellValue('T' . $rowApp3, 'Name :');

                $objPHPExcel->mergeCells('A' . $rowApp4 . ':B' . $rowApp4)->setCellValue('A' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('C' . $rowApp4 . ':F' . $rowApp4)->setCellValue('C' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('G' . $rowApp4 . ':H' . $rowApp4)->setCellValue('G' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('I' . $rowApp4 . ':L' . $rowApp4)->setCellValue('I' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('M' . $rowApp4 . ':O' . $rowApp4)->setCellValue('M' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('P' . $rowApp4 . ':S' . $rowApp4)->setCellValue('P' . $rowApp4, 'Position :');
                $objPHPExcel->mergeCells('T' . $rowApp4 . ':V' . $rowApp4)->setCellValue('T' . $rowApp4, 'Position :');

                $objPHPExcel->mergeCells('A' . $rowApp5 . ':B' . $rowApp5)->setCellValue('A' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('C' . $rowApp5 . ':F' . $rowApp5)->setCellValue('C' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('G' . $rowApp5 . ':H' . $rowApp5)->setCellValue('G' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('I' . $rowApp5 . ':L' . $rowApp5)->setCellValue('I' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('M' . $rowApp5 . ':O' . $rowApp5)->setCellValue('M' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('P' . $rowApp5 . ':S' . $rowApp5)->setCellValue('P' . $rowApp5, 'Date :');
                $objPHPExcel->mergeCells('T' . $rowApp5 . ':V' . $rowApp5)->setCellValue('T' . $rowApp5, 'Date :');

                $objPHPExcel->setSharedStyle($headerStyle, 'A' . $rowApp1 . ':V' . $rowApp5);

                $rowend = $rowApp5 + 1;

                $objPHPExcel->getStyle('L' . $rowend . ':V' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':K' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('L' . $rowend . ':V' . $rowend)->setCellValue('L' . $rowend, $frmnm);


                $objPHPExcel2 = $obj->createSheet(2);

                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');

                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);


                foreach (range('A', 'V') as $columnID){
                    $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }

                $objPHPExcel2->mergeCells('A1:V1');
                $objPHPExcel2->mergeCells('A2:A3');
                $objPHPExcel2->mergeCells('B2:R3')->setCellValue('B2', $frmcop);
                $objPHPExcel2->mergeCells('S2:V2')->setCellValue('S2', 'Doc No : ');
                $objPHPExcel2->mergeCells('S3:V3')->setCellValue('S3', 'P/D : ' . $tgl_laporan);

                $objPHPExcel2->setCellValue('A4', 'JUDUL');
                $objPHPExcel2->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel2->mergeCells('S4:V4')->setCellValue('S4', 'Page : 2 of 2');

                $objPHPExcel2->mergeCells('A5:V5')->setCellValue('A5', 'DRINKING WATER IN-PROCESS');

                $objPHPExcel2->mergeCells('A6:A8')->setCellValue('A6', 'Time of Sampling');
                $objPHPExcel2->mergeCells('B6:B8')->setCellValue('B6', 'Sampling Point');
                $objPHPExcel2->mergeCells('C6:D8')->setCellValue('C6', 'pH 5.0-7.5');
                $objPHPExcel2->mergeCells('E6:P6')->setCellValue('E6', 'Chemical Analysis');
                $objPHPExcel2->mergeCells('Q6:U6')->setCellValue('Q6', 'Microbiological Analysis');
                $objPHPExcel2->mergeCells('V6:V8')->setCellValue('V6', 'Remark');

                $objPHPExcel2->mergeCells('E7:F7')->setCellValue('E7', 'Chloride');
                $objPHPExcel2->mergeCells('G7:H7')->setCellValue('G7', 'Total Hardness');
                $objPHPExcel2->mergeCells('I7:J7')->setCellValue('I7', 'TDS');
                $objPHPExcel2->mergeCells('K7:L7')->setCellValue('K7', 'Colour');
                $objPHPExcel2->setCellValue('M7', 'Turbidity');
                $objPHPExcel2->mergeCells('N7:O7')->setCellValue('N7', 'Residual Ozone');
                $objPHPExcel2->setCellValue('P7', 'Odour & Flavour');
                $objPHPExcel2->mergeCells('Q7:R7')->setCellValue('Q7', 'Total Plate Count Max');
                $objPHPExcel2->setCellValue('S7', 'TCC');
                $objPHPExcel2->setCellValue('T7', 'E. Coli');
                $objPHPExcel2->setCellValue('U7', 'Salmo');

                $objPHPExcel2->mergeCells('E8:F8')->setCellValue('E8', 'ppm Max');
                $objPHPExcel2->mergeCells('G8:H8')->setCellValue('G8', '10 ppm max');
                $objPHPExcel2->mergeCells('I8:J8')->setCellValue('I8', 'ppm Max');
                $objPHPExcel2->mergeCells('K8:L8')->setCellValue('K8', 'PtCo max');
                $objPHPExcel2->setCellValue('M8', '1.5 NTU Max');
                $objPHPExcel2->mergeCells('N8:O8')->setCellValue('N8', '(ppm)');
                $objPHPExcel2->setCellValue('P8', 'Normal*');
                $objPHPExcel2->mergeCells('Q8:R8')->setCellValue('Q8', 'cfu/ ml');
                $objPHPExcel2->setCellValue('S8', '<1 cfu/ ml');
                $objPHPExcel2->setCellValue('T8', 'Abs/ 25 ml');
                $objPHPExcel2->setCellValue('U8', 'Abs/ 25 ml');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A2:V8');

                $rowCount5 = 8;
                $no        = 1;
                foreach ($dtdetail4 as $row5){
                    $rowCount5++;

                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount5 . ':V' . $rowCount5);


                    if ($row5->operator == '1'){
                        $operator = '>';
                    } elseif ($row5->operator == '0'){
                        $operator = '<';
                    } else {
                        $operator = '';
                    }
                    if ($row5->operator8 == '1'){
                        $operator8 = '>';
                    } elseif ($row5->operator8 == '0'){
                        $operator8 = '<';
                    } else {
                        $operator8 = '';
                    }
                    if ($row5->operator9 == '1'){
                        $operator9 = '>';
                    } elseif ($row5->operator9 == '0'){
                        $operator9 = '<';
                    } else {
                        $operator9 = '';
                    }
                    if ($row5->operator10 == '1'){
                        $operator10 = '>';
                    } elseif ($row5->operator10 == '0'){
                        $operator10 = '<';
                    } else {
                        $operator10 = '';
                    }
                    if ($row5->operator11 == '1'){
                        $operator11 = '>';
                    } elseif ($row5->operator11 == '0'){
                        $operator11 = '<';
                    } else {
                        $operator11 = '';
                    }
                    if ($row5->operator12 == '1'){
                        $operator12 = '>';
                    } elseif ($row5->operator12 == '0'){
                        $operator12 = '<';
                    } else {
                        $operator12 = '';
                    }
                    if ($row5->operator13 == '1'){
                        $operator13 = '>';
                    } elseif ($row5->operator13 == '0'){
                        $operator13 = '<';
                    } else {
                        $operator13 = '';
                    }
                    if ($row5->operator14 == '1'){
                        $operator14 = '>';
                    } elseif ($row5->operator14 == '0'){
                        $operator14 = '<';
                    } else {
                        $operator14 = '';
                    }
                    if ($row5->operator2 == '1'){
                        $operator2 = '>';
                    } elseif ($row5->operator2 == '0'){
                        $operator2 = '<';
                    } else {
                        $operator2 = '';
                    }
                    if ($row5->operator15 == '1'){
                        $operator15 = '>';
                    } elseif ($row5->operator15 == '0'){
                        $operator15 = '<';
                    } else {
                        $operator15 = '';
                    }
                    if ($row5->operator16 == '1'){
                        $operator16 = '>';
                    } elseif ($row5->operator16 == '0'){
                        $operator16 = '<';
                    } else {
                        $operator16 = '';
                    }
                    if ($row5->operator17 == '1'){
                        $operator17 = '>';
                    } elseif ($row5->operator17 == '0'){
                        $operator17 = '<';
                    } else {
                        $operator17 = '';
                    }
                    if ($row5->operator18 == '1'){
                        $operator18 = '>';
                    } elseif ($row5->operator18 == '0'){
                        $operator18 = '<';
                    } else {
                        $operator18 = '';
                    }


                    if (($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator . ' ' . $row5->tpc0;
                    } elseif (($row5->tpc0 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator8 . ' ' . ($row5->tpc1 * 10);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator9 . ' ' . ($row5->tpc2 * 100);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator10 . ' ' . ($row5->tpc3 * 1000);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator11 . ' ' . ($row5->tpc4 * 10000);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc6 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator12 . ' ' . ($row5->tpc5 * 100000);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc7 == '')){
                        $tpc_b = $operator13 . ' ' . ($row5->tpc6 * 1000000);
                    } elseif (($row5->tpc0 == '') && ($row5->tpc1 == '') && ($row5->tpc2 == '') && ($row5->tpc3 == '') && ($row5->tpc4 == '') && ($row5->tpc5 == '') && ($row5->tpc6 == '')){
                        $tpc_b = $operator14 . ' ' . ($row5->tpc7 * 10000000);
                    } else {
                        $tpc_b = '';
                    }

                    if (($row5->tcc1 == '') && ($row5->tcc2 == '') && ($row5->tcc3 == '') && ($row5->tcc4 == '')){
                        $tcc_b = $operator2 . ' ' . $row5->tcc0;
                    } elseif (($row5->tcc0 == '') && ($row5->tcc2 == '') && ($row5->tcc3 == '') && ($row5->tcc4 == '')){
                        $tcc_b = $operator15 . ' ' . $row5->tcc1;
                    } elseif (($row5->tcc0 == '') && ($row5->tcc1 == '') && ($row5->tcc3 == '') && ($row5->tcc4 == '')){
                        $tcc_b = $operator16 . ' ' . $row5->tcc2;
                    } elseif (($row5->tcc0 == '') && ($row5->tcc1 == '') && ($row5->tcc2 == '') && ($row5->tcc4 == '')){
                        $tcc_b = $operator17 . ' ' . $row5->tcc3;
                    } elseif (($row5->tcc0 == '') && ($row5->tcc1 == '') && ($row5->tcc2 == '') && ($row5->tcc3 == '')){
                        $tcc_b = $operator18 . ' ' . $row5->tcc4;
                    } else {
                        $tcc_b = '';
                    }

                    $objPHPExcel2->setCellValue('A' . $rowCount5, $row5->jam_sampling);
                    $objPHPExcel2->setCellValue('B' . $rowCount5, $row5->kode_sample);
                    $objPHPExcel2->mergeCells('C' . $rowCount5 . ':D' . $rowCount5)->setCellValue('C' . $rowCount5, $row5->ap_ph);
                    $objPHPExcel2->mergeCells('E' . $rowCount5 . ':F' . $rowCount5)->setCellValue('E' . $rowCount5, $row5->cl_hppm);
                    $objPHPExcel2->mergeCells('G' . $rowCount5 . ':H' . $rowCount5)->setCellValue('G' . $rowCount5, $row5->th_hppm);
                    $objPHPExcel2->mergeCells('I' . $rowCount5 . ':J' . $rowCount5)->setCellValue('I' . $rowCount5, $row5->tds);
                    $objPHPExcel2->mergeCells('K' . $rowCount5 . ':L' . $rowCount5)->setCellValue('K' . $rowCount5, $row5->color);
                    $objPHPExcel2->setCellValue('M' . $rowCount5, $row5->turbidity);

                    $objPHPExcel2->mergeCells('N' . $rowCount5 . ':O' . $rowCount5)->setCellValue('N' . $rowCount5, $row5->residual_ozon);
                    $objPHPExcel2->setCellValue('P' . $rowCount5, $row5->odour_flavour);
                    $objPHPExcel2->mergeCells('Q' . $rowCount5 . ':R' . $rowCount5)->setCellValue('Q' . $rowCount5, $tpc_b);
                    $objPHPExcel2->setCellValue('S' . $rowCount5, $tcc_b);
                    $objPHPExcel2->setCellValue('T' . $rowCount5, $row5->e_coli);
                    $objPHPExcel2->setCellValue('U' . $rowCount5, $row5->salmonella);
                    $objPHPExcel2->setCellValue('V' . $rowCount5, $row5->remarks);

                    $no++;
                }

                $rowhead_b2 = $rowCount5 + 1;
                $objPHPExcel2->mergeCells('A' . $rowhead_b2 . ':B' . $rowhead_b2)->setCellValue('A' . $rowhead_b2, '');
                $objPHPExcel2->mergeCells('C' . $rowhead_b2 . ':F' . $rowhead_b2)->setCellValue('C' . $rowhead_b2, 'Start Production (Hour)');
                $objPHPExcel2->mergeCells('G' . $rowhead_b2 . ':I' . $rowhead_b2)->setCellValue('G' . $rowhead_b2, 'Stop Production (Hour)');
                $objPHPExcel2->mergeCells('J' . $rowhead_b2 . ':M' . $rowhead_b2)->setCellValue('J' . $rowhead_b2, 'Total Production');
                $objPHPExcel2->mergeCells('N' . $rowhead_b2 . ':P' . $rowhead_b2)->setCellValue('N' . $rowhead_b2, 'Total Sample');
                $objPHPExcel2->mergeCells('Q' . $rowhead_b2 . ':V' . $rowhead_b2)->setCellValue('Q' . $rowhead_b2, 'Remark');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowhead_b2 . ':V' . $rowhead_b2);

                $rowCount6 = $rowhead_b2;
                foreach ($dtdetail7 as $row6){
                    $rowCount6++;
                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount6 . ':V' . $rowCount6);

                    $objPHPExcel2->mergeCells('A' . $rowCount6 . ':B' . $rowCount6)->setCellValue('A' . $rowCount6, '');
                    $objPHPExcel2->mergeCells('C' . $rowCount6 . ':F' . $rowCount6)->setCellValue('C' . $rowCount6, $row6->jam_start_production);
                    $objPHPExcel2->mergeCells('G' . $rowCount6 . ':I' . $rowCount6)->setCellValue('G' . $rowCount6, $row6->jam_stop_production);
                    $objPHPExcel2->mergeCells('J' . $rowCount6 . ':M' . $rowCount6)->setCellValue('J' . $rowCount6, $row6->total_production);
                    $objPHPExcel2->mergeCells('N' . $rowCount6 . ':P' . $rowCount6)->setCellValue('N' . $rowCount6, $row6->total_sample);
                    $objPHPExcel2->mergeCells('Q' . $rowCount6 . ':V' . $rowCount6)->setCellValue('Q' . $rowCount6, $row6->remarks);
                }

                $rowhead_b3 = $rowCount6 + 1;
                $rowhead_b4 = $rowhead_b3 + 1;
                $rowhead_b5 = $rowhead_b4 + 1;
                $rowhead_b6 = $rowhead_b5 + 1;

                $objPHPExcel2->mergeCells('A' . $rowhead_b3 . ':V' . $rowhead_b3)->setCellValue('A' . $rowhead_b3, 'DRINKING WATER FINISHED PRODUCT FOR ASES KARA BOTTLE 19 LITTRES');

                $objPHPExcel2->mergeCells('A' . $rowhead_b4 . ':A' . $rowhead_b6)->setCellValue('A' . $rowhead_b4, 'Product Sample');
                $objPHPExcel2->mergeCells('B' . $rowhead_b4 . ':M' . $rowhead_b4)->setCellValue('B' . $rowhead_b4, 'Chemical Analysis');
                $objPHPExcel2->mergeCells('N' . $rowhead_b4 . ':U' . $rowhead_b4)->setCellValue('N' . $rowhead_b4, 'Microbiological Analysis');
                $objPHPExcel2->mergeCells('V' . $rowhead_b4 . ':V' . $rowhead_b6)->setCellValue('V' . $rowhead_b4, 'Remark');

                $objPHPExcel2->setCellValue('B' . $rowhead_b5, 'pH');
                $objPHPExcel2->mergeCells('C' . $rowhead_b5 . ':D' . $rowhead_b5)->setCellValue('C' . $rowhead_b5, 'Chloride');
                $objPHPExcel2->mergeCells('E' . $rowhead_b5 . ':F' . $rowhead_b5)->setCellValue('E' . $rowhead_b5, 'Total Hardness');
                $objPHPExcel2->setCellValue('G' . $rowhead_b5, 'TDS');
                $objPHPExcel2->setCellValue('H' . $rowhead_b5, 'Colour');
                $objPHPExcel2->mergeCells('I' . $rowhead_b5 . ':J' . $rowhead_b5)->setCellValue('I' . $rowhead_b5, 'Turbidity');
                $objPHPExcel2->mergeCells('K' . $rowhead_b5 . ':L' . $rowhead_b5)->setCellValue('K' . $rowhead_b5, 'Residual Ozone');
                $objPHPExcel2->setCellValue('M' . $rowhead_b5, 'Odour & Taste');
                $objPHPExcel2->mergeCells('N' . $rowhead_b5 . ':O' . $rowhead_b5)->setCellValue('N' . $rowhead_b5, 'Total Plate Count Max');
                $objPHPExcel2->mergeCells('P' . $rowhead_b5 . ':Q' . $rowhead_b5)->setCellValue('P' . $rowhead_b5, 'TCC');
                $objPHPExcel2->mergeCells('R' . $rowhead_b5 . ':S' . $rowhead_b5)->setCellValue('R' . $rowhead_b5, 'E.Coli');
                $objPHPExcel2->mergeCells('T' . $rowhead_b5 . ':U' . $rowhead_b5)->setCellValue('T' . $rowhead_b5, 'Salmo');

                $objPHPExcel2->setCellValue('B' . $rowhead_b6, '5.7-7.5');
                $objPHPExcel2->mergeCells('C' . $rowhead_b6 . ':D' . $rowhead_b6)->setCellValue('C' . $rowhead_b6, '10 ppm Max');
                $objPHPExcel2->mergeCells('E' . $rowhead_b6 . ':F' . $rowhead_b6)->setCellValue('E' . $rowhead_b6, '10 ppm max');
                $objPHPExcel2->setCellValue('G' . $rowhead_b6, '10 ppm max');
                $objPHPExcel2->setCellValue('H' . $rowhead_b6, '5 PtCo max');
                $objPHPExcel2->mergeCells('I' . $rowhead_b6 . ':J' . $rowhead_b6)->setCellValue('I' . $rowhead_b6, '1.5 NTU Max');
                $objPHPExcel2->mergeCells('K' . $rowhead_b6 . ':L' . $rowhead_b6)->setCellValue('K' . $rowhead_b6, '0 PPM');
                $objPHPExcel2->setCellValue('M' . $rowhead_b6, 'Normal*');
                $objPHPExcel2->mergeCells('N' . $rowhead_b6 . ':O' . $rowhead_b6)->setCellValue('N' . $rowhead_b6, '100 cfu/ml');
                $objPHPExcel2->mergeCells('P' . $rowhead_b6 . ':Q' . $rowhead_b6)->setCellValue('P' . $rowhead_b6, '<1 cfu/ml');
                $objPHPExcel2->mergeCells('R' . $rowhead_b6 . ':S' . $rowhead_b6)->setCellValue('R' . $rowhead_b6, 'Abs 25 ml');
                $objPHPExcel2->mergeCells('T' . $rowhead_b6 . ':U' . $rowhead_b6)->setCellValue('T' . $rowhead_b6, 'Abs 25 ml');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowhead_b3 . ':V' . $rowhead_b6);

                $rowCount7 = $rowhead_b6;
                foreach ($dtdetail5 as $row7){
                    $rowCount7++;
                    $objPHPExcel2->setSharedStyle($bodyStyle, 'A' . $rowCount7 . ':V' . $rowCount7);

                    if ($row7->operator == '1'){
                        $operator = '<';
                    } elseif ($row7->operator == '0'){
                        $operator = '>';
                    } else {
                        $operator = '';
                    }
                    if ($row7->operator8 == '1'){
                        $operator8 = '<';
                    } elseif ($row7->operator8 == '0'){
                        $operator8 = '>';
                    } else {
                        $operator8 = '';
                    }
                    if ($row7->operator9 == '1'){
                        $operator9 = '<';
                    } elseif ($row7->operator9 == '0'){
                        $operator9 = '>';
                    } else {
                        $operator9 = '';
                    }
                    if ($row7->operator10 == '1'){
                        $operator10 = '<';
                    } elseif ($row7->operator10 == '0'){
                        $operator10 = '>';
                    } else {
                        $operator10 = '';
                    }
                    if ($row7->operator11 == '1'){
                        $operator11 = '<';
                    } elseif ($row7->operator11 == '0'){
                        $operator11 = '>';
                    } else {
                        $operator11 = '';
                    }
                    if ($row7->operator12 == '1'){
                        $operator12 = '<';
                    } elseif ($row7->operator12 == '0'){
                        $operator12 = '>';
                    } else {
                        $operator12 = '';
                    }
                    if ($row7->operator13 == '1'){
                        $operator13 = '<';
                    } elseif ($row7->operator13 == '0'){
                        $operator13 = '>';
                    } else {
                        $operator13 = '';
                    }
                    if ($row7->operator14 == '1'){
                        $operator14 = '<';
                    } elseif ($row7->operator14 == '0'){
                        $operator14 = '>';
                    } else {
                        $operator14 = '';
                    }
                    if ($row7->operator2 == '1'){
                        $operator2 = '<';
                    } elseif ($row7->operator2 == '0'){
                        $operator2 = '>';
                    } else {
                        $operator2 = '';
                    }
                    if ($row7->operator15 == '1'){
                        $operator15 = '<';
                    } elseif ($row7->operator15 == '0'){
                        $operator15 = '>';
                    } else {
                        $operator15 = '';
                    }
                    if ($row7->operator16 == '1'){
                        $operator16 = '<';
                    } elseif ($row7->operator16 == '0'){
                        $operator16 = '>';
                    } else {
                        $operator16 = '';
                    }
                    if ($row7->operator17 == '1'){
                        $operator17 = '<';
                    } elseif ($row7->operator17 == '0'){
                        $operator17 = '>';
                    } else {
                        $operator17 = '';
                    }
                    if ($row7->operator18 == '1'){
                        $operator18 = '<';
                    } elseif ($row7->operator18 == '0'){
                        $operator18 = '>';
                    } else {
                        $operator18 = '';
                    }

                    if (($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator . ' ' . $row7->tpc0;
                    } elseif (($row7->tpc0 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator8 . ' ' . ($row7->tpc1 * 10);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator9 . ' ' . ($row7->tpc2 * 100);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator10 . ' ' . ($row7->tpc3 * 1000);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator11 . ' ' . ($row7->tpc4 * 10000);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc6 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator12 . ' ' . ($row7->tpc5 * 100000);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc7 == '')){
                        $tpc2_b = $operator13 . ' ' . ($row7->tpc6 * 1000000);
                    } elseif (($row7->tpc0 == '') && ($row7->tpc1 == '') && ($row7->tpc2 == '') && ($row7->tpc3 == '') && ($row7->tpc4 == '') && ($row7->tpc5 == '') && ($row7->tpc6 == '')){
                        $tpc2_b = $operator14 . ' ' . ($row7->tpc7 * 10000000);
                    } else {
                        $tpc2_b = '';
                    }

                    if (($row7->tcc1 == '') && ($row7->tcc2 == '') && ($row7->tcc3 == '') && ($row7->tcc4 == '')){
                        $tcc2 = $operator2 . ' ' . $row7->tcc0;
                    } elseif (($row7->tcc0 == '') && ($row7->tcc2 == '') && ($row7->tcc3 == '') && ($row7->tcc4 == '')){
                        $tcc2 = $operator15 . ' ' . $row7->tcc1;
                    } elseif (($row7->tcc0 == '') && ($row7->tcc1 == '') && ($row7->tcc3 == '') && ($row7->tcc4 == '')){
                        $tcc2 = $operator16 . ' ' . $row7->tcc2;
                    } elseif (($row7->tcc0 == '') && ($row7->tcc1 == '') && ($row7->tcc2 == '') && ($row7->tcc4 == '')){
                        $tcc2 = $operator17 . ' ' . $row7->tcc3;
                    } elseif (($row7->tcc0 == '') && ($row7->tcc1 == '') && ($row7->tcc2 == '') && ($row7->tcc3 == '')){
                        $tcc2 = $operator18 . ' ' . $row7->tcc4;
                    } else {
                        $tcc2 = '';
                    }

                    $objPHPExcel2->setCellValue('A' . $rowCount7, $row7->kode_sample);
                    $objPHPExcel2->setCellValue('B' . $rowCount7, $row7->ap_ph);
                    $objPHPExcel2->mergeCells('C' . $rowCount7 . ':D' . $rowCount7)->setCellValue('C' . $rowCount7, $row7->cl_hppm);
                    $objPHPExcel2->mergeCells('E' . $rowCount7 . ':F' . $rowCount7)->setCellValue('E' . $rowCount7, $row7->th_hppm);
                    $objPHPExcel2->setCellValue('G' . $rowCount7, $row7->tds);
                    $objPHPExcel2->setCellValue('H' . $rowCount7, $row7->color);
                    $objPHPExcel2->mergeCells('I' . $rowCount7 . ':J' . $rowCount7)->setCellValue('I' . $rowCount7, $row7->turbidity);
                    $objPHPExcel2->mergeCells('K' . $rowCount7 . ':L' . $rowCount7)->setCellValue('K' . $rowCount7, $row7->residual_ozon);
                    $objPHPExcel2->setCellValue('M' . $rowCount7, $row7->odour_taste);
                    $objPHPExcel2->mergeCells('N' . $rowCount7 . ':O' . $rowCount7)->setCellValue('N' . $rowCount7, $tpc2_b);
                    $objPHPExcel2->mergeCells('P' . $rowCount7 . ':Q' . $rowCount7)->setCellValue('P' . $rowCount7, $tcc2);
                    $objPHPExcel2->mergeCells('R' . $rowCount7 . ':S' . $rowCount7)->setCellValue('R' . $rowCount7, $row7->e_coli);
                    $objPHPExcel2->mergeCells('T' . $rowCount7 . ':U' . $rowCount7)->setCellValue('T' . $rowCount7, $row7->salmonella);
                    $objPHPExcel2->setCellValue('V' . $rowCount7, $row7->remarks);
                }


                $rowket_b1 = $rowCount7 + 1;
                $rowket_b2 = $rowket_b1 + 1;
                $rowket_b3 = $rowket_b2 + 1;
                $rowket_b4 = $rowket_b3 + 1;
                $rowket_b5 = $rowket_b4 + 1;
                $rowket_b6 = $rowket_b5 + 1;

                $objPHPExcel2->mergeCells('A' . $rowket_b1 . ':V' . $rowket_b1)->setCellValue('A' . $rowket_b1, '');
                $objPHPExcel2->mergeCells('A' . $rowket_b2 . ':V' . $rowket_b2)->setCellValue('A' . $rowket_b2, 'Definition');

                $objPHPExcel2->setCellValue('A' . $rowket_b3, 'Max');
                $objPHPExcel2->setCellValue('B' . $rowket_b3, ': Maximum');
                $objPHPExcel2->mergeCells('C' . $rowket_b3 . ':D' . $rowket_b3)->setCellValue('C' . $rowket_b3, 'TDS');
                $objPHPExcel2->mergeCells('E' . $rowket_b3 . ':H' . $rowket_b3)->setCellValue('E' . $rowket_b3, ': Total Dissolved Solid');
                $objPHPExcel2->mergeCells('I' . $rowket_b3 . ':J' . $rowket_b3)->setCellValue('I' . $rowket_b3, 'ppm');
                $objPHPExcel2->mergeCells('K' . $rowket_b3 . ':M' . $rowket_b3)->setCellValue('K' . $rowket_b3, ': Part per million');
                $objPHPExcel2->mergeCells('N' . $rowket_b3 . ':O' . $rowket_b3)->setCellValue('N' . $rowket_b3, 'Cl2');
                $objPHPExcel2->mergeCells('P' . $rowket_b3 . ':S' . $rowket_b3)->setCellValue('P' . $rowket_b3, ': Chlorine');
                $objPHPExcel2->setCellValue('T' . $rowket_b3, '');
                $objPHPExcel2->mergeCells('U' . $rowket_b3 . ':V' . $rowket_b3)->setCellValue('U' . $rowket_b3, ': Not Analyzed');

                $objPHPExcel2->setCellValue('A' . $rowket_b4, 'Min');
                $objPHPExcel2->setCellValue('B' . $rowket_b4, ': Minimum');
                $objPHPExcel2->mergeCells('C' . $rowket_b4 . ':D' . $rowket_b4)->setCellValue('C' . $rowket_b4, 'PtCo');
                $objPHPExcel2->mergeCells('E' . $rowket_b4 . ':H' . $rowket_b4)->setCellValue('E' . $rowket_b4, ': Platinum Cobalt');
                $objPHPExcel2->mergeCells('I' . $rowket_b4 . ':J' . $rowket_b4)->setCellValue('I' . $rowket_b4, 'E.Coli');
                $objPHPExcel2->mergeCells('K' . $rowket_b4 . ':M' . $rowket_b4)->setCellValue('K' . $rowket_b4, ': Escherichia coli');
                $objPHPExcel2->mergeCells('N' . $rowket_b4 . ':O' . $rowket_b4)->setCellValue('N' . $rowket_b4, 'TPC');
                $objPHPExcel2->mergeCells('P' . $rowket_b4 . ':S' . $rowket_b4)->setCellValue('P' . $rowket_b4, ': Total Plate Count');
                $objPHPExcel2->setCellValue('T' . $rowket_b4, '');
                $objPHPExcel2->mergeCells('U' . $rowket_b4 . ':V' . $rowket_b4)->setCellValue('U' . $rowket_b4, ': Analyzed');

                $objPHPExcel2->setCellValue('A' . $rowket_b5, 'Cl2');
                $objPHPExcel2->setCellValue('B' . $rowket_b5, ': Chlorine');
                $objPHPExcel2->mergeCells('C' . $rowket_b5 . ':D' . $rowket_b5)->setCellValue('C' . $rowket_b5, 'NTU');
                $objPHPExcel2->mergeCells('E' . $rowket_b5 . ':H' . $rowket_b5)->setCellValue('E' . $rowket_b5, ': Nephelometric Turbidity Units');
                $objPHPExcel2->mergeCells('I' . $rowket_b5 . ':J' . $rowket_b5)->setCellValue('I' . $rowket_b5, 'Abs');
                $objPHPExcel2->mergeCells('K' . $rowket_b5 . ':M' . $rowket_b5)->setCellValue('K' . $rowket_b5, ': Absence');
                $objPHPExcel2->mergeCells('N' . $rowket_b5 . ':O' . $rowket_b5)->setCellValue('N' . $rowket_b5, 'Salmo');
                $objPHPExcel2->mergeCells('P' . $rowket_b5 . ':S' . $rowket_b5)->setCellValue('P' . $rowket_b5, ': Salmonella');
                $objPHPExcel2->setCellValue('T' . $rowket_b5, '');
                $objPHPExcel2->mergeCells('U' . $rowket_b5 . ':V' . $rowket_b5)->setCellValue('U' . $rowket_b5, '');

                $objPHPExcel2->setCellValue('A' . $rowket_b6, 'pH');
                $objPHPExcel2->setCellValue('B' . $rowket_b6, ': Log (H+)');
                $objPHPExcel2->mergeCells('C' . $rowket_b6 . ':D' . $rowket_b6)->setCellValue('C' . $rowket_b6, 'cfu/ml');
                $objPHPExcel2->mergeCells('E' . $rowket_b6 . ':H' . $rowket_b6)->setCellValue('E' . $rowket_b6, ': Colony forming units/mililiter');
                $objPHPExcel2->mergeCells('I' . $rowket_b6 . ':J' . $rowket_b6)->setCellValue('I' . $rowket_b6, 'TCC');
                $objPHPExcel2->mergeCells('K' . $rowket_b6 . ':M' . $rowket_b6)->setCellValue('K' . $rowket_b6, ': Total Coliform Count');
                $objPHPExcel2->mergeCells('N' . $rowket_b6 . ':O' . $rowket_b6)->setCellValue('N' . $rowket_b6, 'Normal*');
                $objPHPExcel2->mergeCells('P' . $rowket_b6 . ':S' . $rowket_b6)->setCellValue('P' . $rowket_b6, ': Odourless and Testeless');
                $objPHPExcel2->setCellValue('T' . $rowket_b6, '');
                $objPHPExcel2->mergeCells('U' . $rowket_b6 . ':V' . $rowket_b6)->setCellValue('U' . $rowket_b6, '');

                $rowspace_b1 = $rowket_b6 + 1;
                $objPHPExcel2->mergeCells('A' . $rowspace_b1 . ':V' . $rowspace_b1)->setCellValue('A' . $rowspace_b1, '');

                $rowApp_b1 = $rowspace_b1 + 1;
                $rowApp_b2 = $rowApp_b1 + 1;
                $rowApp_b3 = $rowApp_b2 + 1;
                $rowApp_b4 = $rowApp_b3 + 1;
                $rowApp_b5 = $rowApp_b4 + 1;

                $objPHPExcel2->mergeCells('A' . $rowApp_b1 . ':H' . $rowApp_b1)->setCellValue('A' . $rowApp_b1, 'Reported By');
                $objPHPExcel2->mergeCells('I' . $rowApp_b1 . ':O' . $rowApp_b1)->setCellValue('I' . $rowApp_b1, 'Confirmed By');
                $objPHPExcel2->mergeCells('P' . $rowApp_b1 . ':S' . $rowApp_b1)->setCellValue('P' . $rowApp_b1, 'Noted By');
                $objPHPExcel2->mergeCells('T' . $rowApp_b1 . ':V' . $rowApp_b1)->setCellValue('T' . $rowApp_b1, 'Approved By');

                $objPHPExcel2->mergeCells('A' . $rowApp_b2 . ':B' . $rowApp_b2)->setCellValue('A' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('C' . $rowApp_b2 . ':F' . $rowApp_b2)->setCellValue('C' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('G' . $rowApp_b2 . ':H' . $rowApp_b2)->setCellValue('G' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('I' . $rowApp_b2 . ':L' . $rowApp_b2)->setCellValue('I' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('M' . $rowApp_b2 . ':O' . $rowApp_b2)->setCellValue('M' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('P' . $rowApp_b2 . ':S' . $rowApp_b2)->setCellValue('P' . $rowApp_b2, '');
                $objPHPExcel2->mergeCells('T' . $rowApp_b2 . ':V' . $rowApp_b2)->setCellValue('T' . $rowApp_b2, '');

                $objPHPExcel2->mergeCells('A' . $rowApp_b3 . ':B' . $rowApp_b3)->setCellValue('A' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('C' . $rowApp_b3 . ':F' . $rowApp_b3)->setCellValue('C' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('G' . $rowApp_b3 . ':H' . $rowApp_b3)->setCellValue('G' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('I' . $rowApp_b3 . ':L' . $rowApp_b3)->setCellValue('I' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('M' . $rowApp_b3 . ':O' . $rowApp_b3)->setCellValue('M' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('P' . $rowApp_b3 . ':S' . $rowApp_b3)->setCellValue('P' . $rowApp_b3, 'Name :');
                $objPHPExcel2->mergeCells('T' . $rowApp_b3 . ':V' . $rowApp_b3)->setCellValue('T' . $rowApp_b3, 'Name :');

                $objPHPExcel2->mergeCells('A' . $rowApp_b4 . ':B' . $rowApp_b4)->setCellValue('A' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('C' . $rowApp_b4 . ':F' . $rowApp_b4)->setCellValue('C' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('G' . $rowApp_b4 . ':H' . $rowApp_b4)->setCellValue('G' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('I' . $rowApp_b4 . ':L' . $rowApp_b4)->setCellValue('I' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('M' . $rowApp_b4 . ':O' . $rowApp_b4)->setCellValue('M' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('P' . $rowApp_b4 . ':S' . $rowApp_b4)->setCellValue('P' . $rowApp_b4, 'Position :');
                $objPHPExcel2->mergeCells('T' . $rowApp_b4 . ':V' . $rowApp_b4)->setCellValue('T' . $rowApp_b4, 'Position :');

                $objPHPExcel2->mergeCells('A' . $rowApp_b5 . ':B' . $rowApp_b5)->setCellValue('A' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('C' . $rowApp_b5 . ':F' . $rowApp_b5)->setCellValue('C' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('G' . $rowApp_b5 . ':H' . $rowApp_b5)->setCellValue('G' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('I' . $rowApp_b5 . ':L' . $rowApp_b5)->setCellValue('I' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('M' . $rowApp_b5 . ':O' . $rowApp_b5)->setCellValue('M' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('P' . $rowApp_b5 . ':S' . $rowApp_b5)->setCellValue('P' . $rowApp_b5, 'Date :');
                $objPHPExcel2->mergeCells('T' . $rowApp_b5 . ':V' . $rowApp_b5)->setCellValue('T' . $rowApp_b5, 'Date :');

                $objPHPExcel2->setSharedStyle($headerStyle, 'A' . $rowApp_b1 . ':V' . $rowApp_b5);

                $rowend_b = $rowApp_b5 + 1;

                $objPHPExcel2->getStyle('L' . $rowend_b . ':V' . $rowend_b)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel2->mergeCells('A' . $rowend_b . ':K' . $rowend_b)->setCellValue('A' . $rowend_b, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel2->mergeCells('L' . $rowend_b . ':V' . $rowend_b)->setCellValue('L' . $rowend_b, $frmnm);


                break;
            case $frmkode == 'frmfss086' && $frmvrs == '02': 

                // utk setup ambil data pojok kanan (tanggal, doc, rev, dll)
                foreach ($dtheader as $dtheader_row){
                    $docno       = $dtheader_row->docno;
                    $revision    = $dtheader_row->revision;
                    $tgl_laporan = substr($dtheader_row->tgl_laporan, 8, 2) . '-' . substr($dtheader_row->tgl_laporan, 5, 2) . '-' . substr($dtheader_row->tgl_laporan, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                // untuk setup total panjang tabel ke kanan, 1 kolom 1 cell
                foreach (range('A', 'U') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }

                // space 1 row diatas tabel
                $objPHPExcel->mergeCells('A1:U1');

                // merge row A1 Ke A3 utk icon
                $objPHPExcel->mergeCells('A2:A3');

                // untuk kop header (PT PULAU SAMBU GUNTUNG)
                $objPHPExcel->mergeCells('B2:R3')->setCellValue('B2', $frmcop);

                // untuk tampil data pojok kanan (tanggal, doc, rev, dll)
                $objPHPExcel->mergeCells('S2:U2')->setCellValue('S2', 'DOC :' . $docno);
                $objPHPExcel->mergeCells('S3:U3')->setCellValue('S3', 'REV :' . $revision);
                $objPHPExcel->mergeCells('S4:U4')->setCellValue('S4', 'DATE :' . $tgl_laporan);

                $objPHPExcel->setCellValue('A4', 'TITLE'); // text di bawah icon
                $objPHPExcel->mergeCells('B4:R4')->setCellValue('B4', '' . $frmjdl);  // judul form
                $objPHPExcel->mergeCells('T4:U4')->setCellValue('T4', '');

                // spaceh antara kop dan tabel detail
                $objPHPExcel->mergeCells('A5:U5')->setCellValue('A5', '');

                $objPHPExcel->mergeCells('A6:A8')->setCellValue('A6', 'No');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Container No');
                $objPHPExcel->mergeCells('C6:N6')->setCellValue('C6', 'Inspection On Condition of Containers Upon Unloading');
                $objPHPExcel->mergeCells('O6:T6')->setCellValue('O6', 'Status or Non-Conformances');
                $objPHPExcel->mergeCells('U6:U8')->setCellValue('U6', 'Remark');

                $objPHPExcel->mergeCells('C7:D7')->setCellValue('C7', 'Inspection On');
                $objPHPExcel->mergeCells('E7:E8')->setCellValue('E7', 'Exterior Condition');
                $objPHPExcel->mergeCells('F7:L7')->setCellValue('F7', 'Interior Condition Upon Opening');
                $objPHPExcel->mergeCells('M7:N7')->setCellValue('M7', 'Checked by');


                $objPHPExcel->setCellValue('C8', 'Date');
                $objPHPExcel->setCellValue('D8', 'Time');
                $objPHPExcel->setCellValue('F8', 'Pest Activity');
                $objPHPExcel->setCellValue('G8', 'Odour / Smell');
                $objPHPExcel->setCellValue('H8', 'Floor');
                $objPHPExcel->setCellValue('I8', 'Wall');
                $objPHPExcel->setCellValue('J8', 'Roof');
                $objPHPExcel->setCellValue('K8', 'Cleanliness');
                $objPHPExcel->setCellValue('L8', 'D/H/S');
                $objPHPExcel->setCellValue('M8', 'QAD Name/Sign');
                $objPHPExcel->setCellValue('N8', 'LOG Name/Sign');
                $objPHPExcel->mergeCells('O7:O8')->setCellValue('O7', 'Description');
                $objPHPExcel->mergeCells('P7:P8')->setCellValue('P7', 'Proposed Corrective Action');
                $objPHPExcel->mergeCells('Q7:Q8')->setCellValue('Q7', 'Action by Name/sign Date/time');
                $objPHPExcel->mergeCells('R7:R8')->setCellValue('R7', 'Disposed By (QAD) Name/sign');
                $objPHPExcel->mergeCells('S7:S8')->setCellValue('S7', 'Accepted By (LOG) Name/sign');
                $objPHPExcel->mergeCells('T7:T8')->setCellValue('T7', 'QAD Disposition');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:U8');

                // jumlah row header tabel sebelum detail
                $rowCount = 8;

                $no = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':U' . $rowCount);
                    $objPHPExcel->getStyle('A' . $rowCount . ':U' . $rowCount)->getAlignment()->setWrapText(true);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->container_no);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->io_date);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->io_time);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->io_exterior);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->io_pest);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->io_odour);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->io_floor);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->io_wall);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->io_roof);
                    $objPHPExcel->setCellValue('K' . $rowCount, $row->io_cleanliness);
                    $objPHPExcel->setCellValue('L' . $rowCount, $row->io_dhs);
                    $objPHPExcel->setCellValue('M' . $rowCount, $row->io_checkqad_name);
                    $objPHPExcel->setCellValue('N' . $rowCount, $row->io_logqad_name);
                    $objPHPExcel->setCellValue('O' . $rowCount, $row->snc_desc);
                    $objPHPExcel->setCellValue('P' . $rowCount, $row->snc_proposed);
                    $objPHPExcel->setCellValue('Q' . $rowCount, $row->snc_action_name);
                    $objPHPExcel->setCellValue('R' . $rowCount, $row->snc_disposed_name);
                    $objPHPExcel->setCellValue('S' . $rowCount, $row->snc_accepted_name);
                    $objPHPExcel->setCellValue('T' . $rowCount, $row->snc_qad_dispose);
                    $objPHPExcel->setCellValue('U' . $rowCount, $row->remark);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('K' . $rowend . ':U' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);
                $objPHPExcel->getStyle('A6:U8')->getAlignment()->setWrapText(true);

                $objPHPExcel->mergeCells('A' . $rowend . ':J' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('K' . $rowend . ':U' . $rowend)->setCellValue('K' . $rowend, $frmnm);
                break;

            case $frmkode == 'frmnon015' && $frmvrs == '00': 
               
            $Doc = 'CNO/PMK/'.substr($dtstart,0,4).'/'.substr($dtstart,5,2);
                if($dtstart != $dtfinish){$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4).' s/d '.substr($dtfinish,8,2).'-'.substr($dtfinish,5,2).'-'.substr($dtfinish,0,4);}
                else{$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4);
            }
            $dttglStart  = $this->uri->segment(8);
            $dttglFinish = $this->uri->segment(9);
            $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
            $data7       = array('dtheader' => $dtheader);
            foreach($dtheader as $dt_headerrow){
                        $dttglStart = $dt_headerrow->tgl_data;
            }

            #############3.view_rekap_swabbing_wf_drp##################
            #############3.view_rekap_swabbing_wf_drp##################

                $objDrawing1 = new PHPExcel_Worksheet_Drawing();
                $objDrawing1->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel1 = $obj->createSheet(1);
                $objDrawing1->setCoordinates('A2');
                $objDrawing1->setWorksheet($objPHPExcel1);
                foreach(range('A','AP') as $columnID){
                $objPHPExcel1->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel1->mergeCells('A1:AP1');
                 $objPHPExcel1->mergeCells('B2:AO5')->setCellValue('B2',$frmcop);
                 $objPHPExcel1->setCellValue('AP2','Tahun: '.$thn);
                 $objPHPExcel1->setCellValue('AP3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel1->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel1->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel1->setCellValue('AO4','Hal: ');
                 $objPHPExcel1->setCellValue('A6','JUDUL');
                 $objPHPExcel1->mergeCells('B6:AP6')->setCellValue('B6',''.$frmjdl);  
                 $objPHPExcel1->mergeCells('A7:A9')->setCellValue('A7',' Tanggal/Shift');            
                 $objPHPExcel1->mergeCells('B7:M7')->setCellValue('B7',' LINE 1 ');
                 $objPHPExcel1->mergeCells('N7:AC7')->setCellValue('N7',' LINE 4 ');
                 $objPHPExcel1->mergeCells('AD7:AP7')->setCellValue('AD7','LINE 5');
                 $objPHPExcel1->setCellValue('AP7','KETERANGAN');
                
                $objPHPExcel1->mergecells('B8:E8')->setCellValue('B8','Dry Discharge');
                $objPHPExcel1->mergeCells('F8:I8')->setCellValue('F8','BFR Near Inspection Table');
                $objPHPExcel1->mergeCells('J8:M8')->setCellValue('J8','BFR Near Pack Area');

                $objPHPExcel1->mergecells('N8:Q8')->setCellValue('N8','BFR Near Inspection Table');
                $objPHPExcel1->mergeCells('R8:U8')->setCellValue('R8','BFR Near Pack Area');
                $objPHPExcel1->mergeCells('V8:Y8')->setCellValue('V8','Cooler A');
                $objPHPExcel1->mergeCells('Z8:AC8')->setCellValue('Z8','Cooler B');
                $objPHPExcel1->mergeCells('AD8:AG8')->setCellValue('AD8','BFR Near Inspection Table');
             
                $objPHPExcel1->mergecells('AH8:AK8')->setCellValue('AH8','BFR Near Pack Area');
                $objPHPExcel1->mergeCells('AL8:AO8')->setCellValue('AL8','Cooler');

              

                $objPHPExcel1->setCellValue('B9','TPC');
                $objPHPExcel1->setCellValue('C9','Yest');
                $objPHPExcel1->setCellValue('D9','Mould');
                $objPHPExcel1->setCellValue('E9','Y&M');

                $objPHPExcel1->setCellValue('F9','TPC');
                $objPHPExcel1->setCellValue('G9','Yest');
                $objPHPExcel1->setCellValue('H9','Mould');
                $objPHPExcel1->setCellValue('I9','Y&M');


                $objPHPExcel1->setCellValue('J9','TPC');
                $objPHPExcel1->setCellValue('K9','Yest');
                $objPHPExcel1->setCellValue('L9','Mould');
                $objPHPExcel1->setCellValue('M9','Y&M');

                $objPHPExcel1->setCellValue('N9','TPC');
                $objPHPExcel1->setCellValue('O9','Yest');
                $objPHPExcel1->setCellValue('P9','Mould');
                $objPHPExcel1->setCellValue('Q9','Y&M');

                $objPHPExcel1->setCellValue('R9','TPC');
                $objPHPExcel1->setCellValue('S9','Yest');
                $objPHPExcel1->setCellValue('T9','Mould');
                $objPHPExcel1->setCellValue('U9','Y&M');

                $objPHPExcel1->setCellValue('V9','TPC');
                $objPHPExcel1->setCellValue('W9','Yest');
                $objPHPExcel1->setCellValue('X9','Mould');
                $objPHPExcel1->setCellValue('Y9','Y&M');

                $objPHPExcel1->setCellValue('Z9','TPC');
                $objPHPExcel1->setCellValue('AA9','Yest');
                $objPHPExcel1->setCellValue('AB9','Mould');
                $objPHPExcel1->setCellValue('AC9','Y&M');

                $objPHPExcel1->setCellValue('AD9','TPC');
                $objPHPExcel1->setCellValue('AE9','Yest');
                $objPHPExcel1->setCellValue('AF9','Mould');
                $objPHPExcel1->setCellValue('AG9','Y&M');

                $objPHPExcel1->setCellValue('AH9','TPC');
                $objPHPExcel1->setCellValue('AI9','Yest');
                $objPHPExcel1->setCellValue('AJ9','Mould');
                $objPHPExcel1->setCellValue('AK9','Y&M');

                $objPHPExcel1->setCellValue('AL9','TPC');
                $objPHPExcel1->setCellValue('AM9','Yest');
                $objPHPExcel1->setCellValue('AN9','Mould');
                $objPHPExcel1->setCellValue('AO9','Y&M');

                $objPHPExcel1->setSharedStyle($cellyellow1, 'A10:AG10');


                $objPHPExcel1->setCellValue('A10','Specification');
                $objPHPExcel1->setCellValue('B10','Max 45cfu/15min');
                $objPHPExcel1->setCellValue('C10','');
                $objPHPExcel1->setCellValue('D10','');
                $objPHPExcel1->setCellValue('E10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('F10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('G10','');
                $objPHPExcel1->setCellValue('H10','');
                $objPHPExcel1->setCellValue('I10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('J10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('K10','');
                $objPHPExcel1->setCellValue('L10','');
                $objPHPExcel1->setCellValue('M10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('N10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('O10','');
                $objPHPExcel1->setCellValue('P10','');
                $objPHPExcel1->setCellValue('Q10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('R10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('S10','');
                $objPHPExcel1->setCellValue('T10','');
                $objPHPExcel1->setCellValue('U10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('V10','Max 45cfu/15min');
                $objPHPExcel1->setCellValue('W10','');
                $objPHPExcel1->setCellValue('X10','');
                $objPHPExcel1->setCellValue('Y10','Max 15cfu/15min');

                 $objPHPExcel1->setCellValue('Z10','Max 45cfu/15min');
                $objPHPExcel1->setCellValue('AA10','');
                $objPHPExcel1->setCellValue('AB10','');
                $objPHPExcel1->setCellValue('AC10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('AD10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('AE10','');
                $objPHPExcel1->setCellValue('AF10','');
                $objPHPExcel1->setCellValue('AG10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('AH10','Max 30cfu/15min');
                $objPHPExcel1->setCellValue('AI10','');
                $objPHPExcel1->setCellValue('AJ10','');
                $objPHPExcel1->setCellValue('AK10','Max 15cfu/15min');

                $objPHPExcel1->setCellValue('AL10','Max 45cfu/15min');
                $objPHPExcel1->setCellValue('AM10','');
                $objPHPExcel1->setCellValue('AN10','');
                $objPHPExcel1->setCellValue('AO10','Max 15cfu/15min');


                $objPHPExcel1->setSharedStyle($headerStyle, 'A2:AP10');
                
                  
                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail1)){
                 $rowCount1 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail1 as $row1){
                 $tgl_data = $row1->tgl_data;
                 $shift    = $row1->shift;

                 $ha_tpc    = $row1->ha_tpc;
                 $ha_entero = $row1->ha_entero;
                 $ha_yeast  = $row1->ha_yeast;
                 $ha_mould  = $row1->ha_mould;

                 $l1it_tpc    = $row1->l1it_tpc;
                 $l1it_entero = $row1->l1it_entero;
                 $l1it_yeast  = $row1->l1it_yeast;
                 $l1it_mould  = $row1->l1it_mould;

                 $l1ba_tpc    = $row1->l1ba_tpc;
                 $l1ba_entero = $row1->l1ba_entero;
                 $l1ba_yeast  = $row1->l1ba_yeast;
                 $l1ba_mould  = $row1->l1ba_mould;

                 $l4it_tpc    = $row1->l4it_tpc;
                 $l4it_entero = $row1->l4it_entero;
                 $l4it_yeast  = $row1->l4it_yeast;
                 $l4it_mould  = $row1->l4it_mould;

                 $l4ba_tpc    = $row1->l4ba_tpc;
                 $l4ba_entero = $row1->l4ba_entero;
                 $l4ba_yeast  = $row1->l4ba_yeast;
                 $l4ba_mould  = $row1->l4ba_mould;

                 $l5it_tpc    = $row1->l5it_tpc;
                 $l5it_entero = $row1->l5it_entero;
                 $l5it_yeast  = $row1->l5it_yeast;
                 $l5it_mould  = $row1->l5it_mould;

                 $l5ba_tpc    = $row1->l5ba_tpc;
                 $l5ba_entero = $row1->l5ba_entero;
                 $l5ba_yeast  = $row1->l5ba_yeast;
                 $l5ba_mould  = $row1->l5ba_mould;
                 $rowCount1++;

                 $objPHPExcel1->setSharedStyle($bodyStyle, 'A'.$rowCount1.':AP'.$rowCount1);
                 $objPHPExcel1->setCellValue('A'.$rowCount1,$tgl_data.'/'.$shift);

                 $objPHPExcel1->setCellValue('B'.$rowCount1,'');               
                 $objPHPExcel1->setCellValue('C'.$rowCount1,'');                 
                 $objPHPExcel1->setCellValue('D'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('E'.$rowCount1,'');

                 $objPHPExcel1->setCellValue('F'.$rowCount1,$l1it_tpc);
                 $objPHPExcel1->setCellValue('G'.$rowCount1,$l1it_yeast);
                 $objPHPExcel1->setCellValue('H'.$rowCount1,$l1it_mould);
                 $l1it_yeast_mould = $l1it_yeast+ $l1it_mould;
                 $objPHPExcel1->setCellValue('I'.$rowCount1,$l1it_yeast_mould);

                 $objPHPExcel1->setCellValue('J'.$rowCount1,$l1ba_tpc);
                 $objPHPExcel1->setCellValue('K'.$rowCount1,$l1ba_yeast);
                 $objPHPExcel1->setCellValue('L'.$rowCount1,$l1ba_mould);
                 $l1ba_yeast_mould = $l1ba_yeast+$l1ba_mould;
                 $objPHPExcel1->setCellValue('M'.$rowCount1,$l1ba_yeast_mould);

                 $objPHPExcel1->setCellValue('N'.$rowCount1,$l4it_tpc);
                 $objPHPExcel1->setCellValue('O'.$rowCount1,$l4it_yeast);                 
                 $objPHPExcel1->setCellValue('P'.$rowCount1,$l4it_mould);
                 $l4it_yeast_mould = $l4it_yeast+$l4it_mould;
                 $objPHPExcel1->setCellValue('Q'.$rowCount1,$l4it_yeast_mould);

                 $objPHPExcel1->setCellValue('R'.$rowCount1,$l4ba_tpc);
                 $objPHPExcel1->setCellValue('S'.$rowCount1,$l4ba_yeast);
                 $objPHPExcel1->setCellValue('T'.$rowCount1,$l4ba_mould);
                 $l4ba_yeast_mould = $l4ba_yeast+$l4ba_mould;
                 $objPHPExcel1->setCellValue('U'.$rowCount1,$l4ba_yeast_mould);

                 $objPHPExcel1->setCellValue('V'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('W'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('X'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('Y'.$rowCount1,'');

                 $objPHPExcel1->setCellValue('Z'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('AA'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('AB'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('AC'.$rowCount1,'');

                 $objPHPExcel1->setCellValue('AD'.$rowCount1,$l5it_tpc);
                 $objPHPExcel1->setCellValue('AE'.$rowCount1,$l5it_yeast);
                 $objPHPExcel1->setCellValue('AF'.$rowCount1,$l5it_mould);
                 $l5it_yeast_mould = $l5it_yeast+$l5it_mould;
                 $objPHPExcel1->setCellValue('AG'.$rowCount1,$l5it_yeast_mould);

                 $objPHPExcel1->setCellValue('AH'.$rowCount1,$l5ba_tpc);
                 $objPHPExcel1->setCellValue('AI'.$rowCount1,$l5ba_yeast);
                 $l5ba_yeast_mould = $l5ba_yeast+$l5ba_mould;
                 $objPHPExcel1->setCellValue('AJ'.$rowCount1,$l5ba_mould);
                 $objPHPExcel1->setCellValue('AK'.$rowCount1,$l5ba_yeast_mould);
                 $no++;
                    }
                }

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                // $data_dtdetail1 =$this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                  
               if(isset($dtdetail1)){
    
                 foreach ($dtdetail1 as $row1){
             //    $tgl_produksi[]= $row2->tgl_produksi;
                 $dt_ha_tpc2        []  = $row1->ha_tpc;
                 $dt_ha_yeast2       [] = $row1->ha_yeast;
                 $dt_ha_mould2      []  = $row1->ha_mould;
                 $dt_ha_yeast_mould2[]  = $row1->ha_yeast+$row1->ha_mould;

                
                 $dt_l1it_tpc2        [] = $row1->l1it_tpc;
                 $dt_l1it_yeast2      [] = $row1->l1it_yeast;
                 $dt_l1it_mould2      [] = $row1->l1it_mould;
                 $dt_l1it_yeast_mould2[] = $row1->l1it_yeast+$row1->l1it_mould;


                 $dt_l1ba_tpc2        [] = $row1->l1ba_tpc;
                 $dt_l1ba_yeast2      [] = $row1->l1ba_yeast;
                 $dt_l1ba_mould2      [] = $row1->l1ba_mould;
                 $dt_l1ba_yeast_mould2[] = $row1->l1ba_yeast+$row1->l1ba_mould;

               
                 $dt_l1ba_tpc2        [] = $row1->l1ba_tpc;
                 $dt_l1ba_yeast2      [] = $row1->l1ba_yeast;
                 $dt_l1ba_mould2      [] = $row1->l1ba_mould;
                 $dt_l1ba_yeast_mould2[] = $row1->l1ba_yeast+ $row1->l1ba_mould;

                 $dt_l4it_tpc2        [] = $row1->l4it_tpc;
                 $dt_l4it_yeast2      [] = $row1->l4it_yeast;
                 $dt_l4it_mould2      [] = $row1->l4it_mould;
                 $dt_l4it_yeast_mould2[] = $row1->l4it_yeast+$row1->l4it_mould;

                 $dt_l4ba_tpc2        [] = $row1->l4ba_tpc;
                 $dt_l4ba_yeast2      [] = $row1->l4ba_yeast;
                 $dt_l4ba_mould2      [] = $row1->l4ba_mould;
                 $dt_l4ba_yeast_mould2[] = $row1->l4ba_yeast+$row1->l4ba_mould;

                 $dt_l5it_tpc2        [] = $row1->l5it_tpc;
                 $dt_l5it_yeast2      [] = $row1->l5it_yeast;
                 $dt_l5it_mould2      [] = $row1->l5it_mould;
                 $dt_l5it_yeast_mould2[] = $row1->l5it_yeast+$row1->l5it_mould;

                 $dt_l5ba_tpc2        [] = $row1->l5ba_tpc;
                 $dt_l5ba_yeast2      [] = $row1->l5ba_yeast;
                 $dt_l5ba_mould2      [] = $row1->l5ba_mould;
                 $dt_l5ba_yeast_mould2[] = $row1->l5ba_yeast+$row1->l5ba_mould;

                $ndtl1it_tpc2         = array_diff($dt_l1it_tpc2 , array('',0));
                $ndtl1it_yeast2       = array_diff($dt_l1it_yeast2 , array('',0));
                $ndtl1it_mould2       = array_diff($dt_l1it_mould2 , array('',0));
                $ndtl1it_yeast_mould2 = array_diff($dt_l1it_yeast_mould2 , array('',0));

                $ndtl1ba_tpc2         = array_diff($dt_l1ba_tpc2 , array('',0));
                $ndtl1ba_yeast2       = array_diff($dt_l1ba_yeast2 , array('',0));
                $ndtl1ba_mould2       = array_diff($dt_l1ba_mould2 , array('',0));
                $ndtl1ba_yeast_mould2 = array_diff($dt_l1ba_yeast_mould2 , array('',0));

                $ndtl4it_tpc2         = array_diff($dt_l4it_tpc2 , array('',0));
                $ndtl4it_yeast2       = array_diff($dt_l4it_yeast2 , array('',0));
                $ndtl4it_mould2       = array_diff($dt_l4it_mould2 , array('',0));
                $ndtl4it_yeast_mould2 = array_diff($dt_l4it_yeast_mould2 , array('',0));

                $ndtl4ba_tpc2         = array_diff($dt_l4ba_tpc2 , array('',0));
                $ndtl4ba_yeast2       = array_diff($dt_l4ba_yeast2 , array('',0));
                $ndtl4ba_mould2       = array_diff($dt_l4ba_mould2 , array('',0));
                $ndtl4ba_yeast_mould2 = array_diff($dt_l4ba_yeast_mould2 , array('',0));

                $ndtl5it_tpc2         = array_diff($dt_l5it_tpc2 , array('',0));
                $ndtl5it_yeast2       = array_diff($dt_l5it_yeast2 , array('',0));
                $ndtl5it_mould2       = array_diff($dt_l5it_mould2 , array('',0));
                $ndtl5it_yeast_mould2 = array_diff($dt_l5it_yeast_mould2 , array('',0));

                $ndtl5ba_tpc2         = array_diff($dt_l5ba_tpc2 , array('',0));
                $ndtl5ba_yeast2       = array_diff($dt_l5ba_yeast2 , array('',0));
                $ndtl5ba_mould2       = array_diff($dt_l5ba_mould2 , array('',0));
                $ndtl5ba_yeast_mould2 = array_diff($dt_l5ba_yeast_mould2 , array('',0));
                }
               

                   if(is_array($ndtl1it_tpc2) && count ($ndtl1it_tpc2) > 0)
                {
                    $Minl1it_tpc2   = min($ndtl1it_tpc2);
                    $Maxl1it_tpc2   = max($ndtl1it_tpc2);
                    $Avgl1it_tpc2   = number_format((array_sum($ndtl1it_tpc2)) /(count($ndtl1it_tpc2)),2);
                    $Countl1it_tpc2 = count($ndtl1it_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1it_tpc2    = array_sum($ndtl1it_tpc2) / count($ndtl1it_tpc2);
                    $fvariantl1it_tpc2 = 0.00;
                    $xsamplel1it_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl1it_tpc2 as $i){
                    $fvariantl1it_tpc2 += pow($i - $fmeanl1it_tpc2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1it_tpc2 /= ($xsamplel1it_tpc2   ? count($ndtl1it_tpc2)-1 : count($ndtl1it_tpc2));
                    $stdevl1it_tpc2     = number_format(sqrt($fvariantl1it_tpc2  ),2);
                    $totall1it_tpc2     = count($ndtl1it_tpc2);
                    $inspectl1it_tpc2   = $dt1;
                    $outspectl1it_tpc2  = $dt2;
                    $prsoutl1it_tpc2    = number_format((($dt2 /$totall1it_tpc2  )* (100)),2);

                } else {

                    $Minl1it_tpc2      = '';
                    $Maxl1it_tpc2      = '';
                    $Avgl1it_tpc2      = '';
                    $stdevl1it_tpc2    = '';
                    $totall1it_tpc2    = '';
                    $inspectl1it_tpc2  = '';
                    $outspectl1it_tpc2 = '';
                    $prsoutl1it_tpc2   = '';
                }


              
                       if(is_array($ndtl1it_yeast2) && count ($ndtl1it_yeast2) > 0)
                {
                    $Minl1it_yeast2   = min($ndtl1it_yeast2);
                    $Maxl1it_yeast2   = max($ndtl1it_yeast2);
                    $Avgl1it_yeast2   = number_format((array_sum($ndtl1it_yeast2)) /(count($ndtl1it_yeast2)),2);
                    $Countl1it_yeast2 = count($ndtl1it_yeast2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1it_yeast2    = array_sum($ndtl1it_yeast2) / count($ndtl1it_yeast2);
                    $fvariantl1it_yeast2 = 0.00;
                    $xsamplel1it_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl1it_yeast2 as $i){
                    $fvariantl1it_yeast2 += pow($i - $fmeanl1it_yeast2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1it_yeast2 /= ($xsamplel1it_yeast2   ? count($ndtl1it_yeast2)-1 : count($ndtl1it_yeast2));
                    $stdevl1it_yeast2     = number_format(sqrt($fvariantl1it_yeast2  ),2);
                    $totall1it_yeast2     = count($ndtl1it_yeast2);
                    $inspectl1it_yeast2   = $dt1;
                    $outspectl1it_yeast2  = $dt2;
                    $prsoutl1it_yeast2    = number_format((($dt2 /$totall1it_yeast2  )* (100)),2);

                } else {

                    $Minl1it_yeast2      = '';
                    $Maxl1it_yeast2      = '';
                    $Avgl1it_yeast2      = '';
                    $stdevl1it_yeast2    = '';
                    $totall1it_yeast2    = '';
                    $inspectl1it_yeast2  = '';
                    $outspectl1it_yeast2 = '';
                    $prsoutl1it_yeast2   = '';
                }

                       if(is_array($ndtl1it_mould2) && count ($ndtl1it_mould2) > 0)
                {
                    $Minl1it_mould2   = min($ndtl1it_mould2);
                    $Maxl1it_mould2   = max($ndtl1it_mould2);
                    $Avgl1it_mould2   = number_format((array_sum($ndtl1it_mould2)) /(count($ndtl1it_mould2)),2);
                    $Countl1it_mould2 = count($ndtl1it_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1it_mould2    = array_sum($ndtl1it_mould2) / count($ndtl1it_mould2);
                    $fvariantl1it_mould2 = 0.00;
                    $xsamplel1it_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl1it_mould2 as $i){
                    $fvariantl1it_mould2 += pow($i - $fmeanl1it_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1it_mould2 /= ($xsamplel1it_mould2   ? count($ndtl1it_mould2)-1 : count($ndtl1it_mould2));
                    $stdevl1it_mould2     = number_format(sqrt($fvariantl1it_mould2  ),2);
                    $totall1it_mould2     = count($ndtl1it_mould2);
                    $inspectl1it_mould2   = $dt1;
                    $outspectl1it_mould2  = $dt2;
                    $prsoutl1it_mould2    = number_format((($dt2 /$totall1it_mould2  )* (100)),2);

                } else {

                    $Minl1it_mould2      = '';
                    $Maxl1it_mould2      = '';
                    $Avgl1it_mould2      = '';
                    $stdevl1it_mould2    = '';
                    $totall1it_mould2    = '';
                    $inspectl1it_mould2  = '';
                    $outspectl1it_mould2 = '';
                    $prsoutl1it_mould2   = '';
                }


                       if(is_array($ndtl1it_yeast_mould2) && count ($ndtl1it_yeast_mould2) > 0)
                {
                    $Minl1it_yeast_mould2   = min($ndtl1it_yeast_mould2);
                    $Maxl1it_yeast_mould2   = max($ndtl1it_yeast_mould2);
                    $Avgl1it_yeast_mould2   = number_format((array_sum($ndtl1it_yeast_mould2)) /(count($ndtl1it_yeast_mould2)),2);
                    $Countl1it_yeast_mould2 = count($ndtl1it_yeast_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1it_yeast_mould2    = array_sum($ndtl1it_yeast_mould2) / count($ndtl1it_yeast_mould2);
                    $fvariantl1it_yeast_mould2 = 0.00;
                    $xsamplel1it_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl1it_yeast_mould2 as $i){
                    $fvariantl1it_yeast_mould2 += pow($i - $fmeanl1it_yeast_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1it_yeast_mould2 /= ($xsamplel1it_yeast_mould2   ? count($ndtl1it_yeast_mould2)-1 : count($ndtl1it_yeast_mould2));
                    $stdevl1it_yeast_mould2     = number_format(sqrt($fvariantl1it_yeast_mould2  ),2);
                    $totall1it_yeast_mould2     = count($ndtl1it_yeast_mould2);
                    $inspectl1it_yeast_mould2   = $dt1;
                    $outspectl1it_yeast_mould2  = $dt2;
                    $prsoutl1it_yeast_mould2    = number_format((($dt2 /$totall1it_yeast_mould2  )* (100)),2);

                } else {

                    $Minl1it_yeast_mould2      = '';
                    $Maxl1it_yeast_mould2      = '';
                    $Avgl1it_yeast_mould2      = '';
                    $stdevl1it_yeast_mould2    = '';
                    $totall1it_yeast_mould2    = '';
                    $inspectl1it_yeast_mould2  = '';
                    $outspectl1it_yeast_mould2 = '';
                    $prsoutl1it_yeast_mould2   = '';
                }
                      if(is_array($ndtl1ba_tpc2) && count ($ndtl1ba_tpc2) > 0)
                {
                    $Minl1ba_tpc2   = min($ndtl1ba_tpc2);
                    $Maxl1ba_tpc2   = max($ndtl1ba_tpc2);
                    $Avgl1ba_tpc2   = number_format((array_sum($ndtl1ba_tpc2)) /(count($ndtl1ba_tpc2)),2);
                    $Countl1ba_tpc2 = count($ndtl1ba_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1ba_tpc2    = array_sum($ndtl1ba_tpc2) / count($ndtl1ba_tpc2);
                    $fvariantl1ba_tpc2 = 0.00;
                    $xsamplel1ba_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl1ba_tpc2 as $i){
                    $fvariantl1ba_tpc2 += pow($i - $fmeanl1ba_tpc2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1ba_tpc2 /= ($xsamplel1ba_tpc2   ? count($ndtl1ba_tpc2)-1 : count($ndtl1ba_tpc2));
                    $stdevl1ba_tpc2     = number_format(sqrt($fvariantl1ba_tpc2  ),2);
                    $totall1ba_tpc2     = count($ndtl1ba_tpc2);
                    $inspectl1ba_tpc2   = $dt1;
                    $outspectl1ba_tpc2  = $dt2;
                    $prsoutl1ba_tpc2    = number_format((($dt2 /$totall1ba_tpc2  )* (100)),2);

                } else {

                    $Minl1ba_tpc2      = '';
                    $Maxl1ba_tpc2      = '';
                    $Avgl1ba_tpc2      = '';
                    $stdevl1ba_tpc2    = '';
                    $totall1ba_tpc2    = '';
                    $inspectl1ba_tpc2  = '';
                    $outspectl1ba_tpc2 = '';
                    $prsoutl1ba_tpc2   = '';
                }


               

                         if(is_array($ndtl1ba_yeast2) && count ($ndtl1ba_yeast2) > 0)
                {
                    $Minl1ba_yeast2   = min($ndtl1ba_yeast2);
                    $Maxl1ba_yeast2   = max($ndtl1ba_yeast2);
                    $Avgl1ba_yeast2   = number_format((array_sum($ndtl1ba_yeast2)) /(count($ndtl1ba_yeast2)),2);
                    $Countl1ba_yeast2 = count($ndtl1ba_yeast2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1ba_yeast2    = array_sum($ndtl1ba_yeast2) / count($ndtl1ba_yeast2);
                    $fvariantl1ba_yeast2 = 0.00;
                    $xsamplel1ba_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl1ba_yeast2 as $i){
                    $fvariantl1ba_yeast2 += pow($i - $fmeanl1ba_yeast2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1ba_yeast2 /= ($xsamplel1ba_yeast2   ? count($ndtl1ba_yeast2)-1 : count($ndtl1ba_yeast2));
                    $stdevl1ba_yeast2     = number_format(sqrt($fvariantl1ba_yeast2  ),2);
                    $totall1ba_yeast2     = count($ndtl1ba_yeast2);
                    $inspectl1ba_yeast2   = $dt1;
                    $outspectl1ba_yeast2  = $dt2;
                    $prsoutl1ba_yeast2    = number_format((($dt2 /$totall1ba_yeast2  )* (100)),2);

                } else {

                    $Minl1ba_yeast2      = '';
                    $Maxl1ba_yeast2      = '';
                    $Avgl1ba_yeast2      = '';
                    $stdevl1ba_yeast2    = '';
                    $totall1ba_yeast2    = '';
                    $inspectl1ba_yeast2  = '';
                    $outspectl1ba_yeast2 = '';
                    $prsoutl1ba_yeast2   = '';
                }

                   if(is_array($ndtl1ba_mould2) && count ($ndtl1ba_mould2) > 0)
                {
                    $Minl1ba_mould2   = min($ndtl1ba_mould2);
                    $Maxl1ba_mould2   = max($ndtl1ba_mould2);
                    $Avgl1ba_mould2   = number_format((array_sum($ndtl1ba_mould2)) /(count($ndtl1ba_mould2)),2);
                    $Countl1ba_mould2 = count($ndtl1ba_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1ba_mould2    = array_sum($ndtl1ba_mould2) / count($ndtl1ba_mould2);
                    $fvariantl1ba_mould2 = 0.00;
                    $xsamplel1ba_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl1ba_mould2 as $i){
                    $fvariantl1ba_mould2 += pow($i - $fmeanl1ba_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1ba_mould2 /= ($xsamplel1ba_mould2   ? count($ndtl1ba_mould2)-1 : count($ndtl1ba_mould2));
                    $stdevl1ba_mould2     = number_format(sqrt($fvariantl1ba_mould2  ),2);
                    $totall1ba_mould2     = count($ndtl1ba_mould2);
                    $inspectl1ba_mould2   = $dt1;
                    $outspectl1ba_mould2  = $dt2;
                    $prsoutl1ba_mould2    = number_format((($dt2 /$totall1ba_mould2  )* (100)),2);

                } else {

                    $Minl1ba_mould2      = '';
                    $Maxl1ba_mould2      = '';
                    $Avgl1ba_mould2      = '';
                    $stdevl1ba_mould2    = '';
                    $totall1ba_mould2    = '';
                    $inspectl1ba_mould2  = '';
                    $outspectl1ba_mould2 = '';
                    $prsoutl1ba_mould2   = '';
                }

                          if(is_array($ndtl1ba_yeast_mould2) && count ($ndtl1ba_yeast_mould2) > 0)
                {
                    $Minl1ba_yeast_mould2   = min($ndtl1ba_yeast_mould2);
                    $Maxl1ba_yeast_mould2   = max($ndtl1ba_yeast_mould2);
                    $Avgl1ba_yeast_mould2   = number_format((array_sum($ndtl1ba_yeast_mould2)) /(count($ndtl1ba_yeast_mould2)),2);
                    $Countl1ba_yeast_mould2 = count($ndtl1ba_yeast_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1ba_yeast_mould2    = array_sum($ndtl1ba_yeast_mould2) / count($ndtl1ba_yeast_mould2);
                    $fvariantl1ba_yeast_mould2 = 0.00;
                    $xsamplel1ba_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl1ba_yeast_mould2 as $i){
                    $fvariantl1ba_yeast_mould2 += pow($i - $fmeanl1ba_yeast_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1ba_yeast_mould2 /= ($xsamplel1ba_yeast_mould2   ? count($ndtl1ba_yeast_mould2)-1 : count($ndtl1ba_yeast_mould2));
                    $stdevl1ba_yeast_mould2     = number_format(sqrt($fvariantl1ba_yeast_mould2  ),2);
                    $totall1ba_yeast_mould2     = count($ndtl1ba_yeast_mould2);
                    $inspectl1ba_yeast_mould2   = $dt1;
                    $outspectl1ba_yeast_mould2  = $dt2;
                    $prsoutl1ba_yeast_mould2    = number_format((($dt2 /$totall1ba_yeast_mould2  )* (100)),2);

                } else {

                    $Minl1ba_yeast_mould2      = '';
                    $Maxl1ba_yeast_mould2      = '';
                    $Avgl1ba_yeast_mould2      = '';
                    $stdevl1ba_yeast_mould2    = '';
                    $totall1ba_yeast_mould2    = '';
                    $inspectl1ba_yeast_mould2  = '';
                    $outspectl1ba_yeast_mould2 = '';
                    $prsoutl1ba_yeast_mould2   = '';
                }




                   if(is_array($ndtl4it_tpc2) && count ($ndtl4it_tpc2) > 0)
                {
                    $Minl4it_tpc2   = min($ndtl4it_tpc2);
                    $Maxl4it_tpc2   = max($ndtl4it_tpc2);
                    $Avgl4it_tpc2   = number_format((array_sum($ndtl4it_tpc2)) /(count($ndtl4it_tpc2)),2);
                    $Countl4it_tpc2 = count($ndtl4it_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4it_tpc2    = array_sum($ndtl4it_tpc2) / count($ndtl4it_tpc2);
                    $fvariantl4it_tpc2 = 0.00;
                    $xsamplel4it_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl4it_tpc2 as $i){
                    $fvariantl4it_tpc2 += pow($i - $fmeanl4it_tpc2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4it_tpc2 /= ($xsamplel4it_tpc2   ? count($ndtl4it_tpc2)-1 : count($ndtl4it_tpc2));
                    $stdevl4it_tpc2     = number_format(sqrt($fvariantl4it_tpc2  ),2);
                    $totall4it_tpc2     = count($ndtl4it_tpc2);
                    $inspectl4it_tpc2   = $dt1;
                    $outspectl4it_tpc2  = $dt2;
                    $prsoutl4it_tpc2    = number_format((($dt2 /$totall4it_tpc2  )* (100)),2);

                } else {

                    $Minl4it_tpc2      = '';
                    $Maxl4it_tpc2      = '';
                    $Avgl4it_tpc2      = '';
                    $stdevl4it_tpc2    = '';
                    $totall4it_tpc2    = '';
                    $inspectl4it_tpc2  = '';
                    $outspectl4it_tpc2 = '';
                    $prsoutl4it_tpc2   = '';
                }


                  if(is_array($ndtl4it_yeast2) && count ($ndtl4it_yeast2) > 0)
                {
                    $Minl4it_yeast2   = min($ndtl4it_yeast2);
                    $Maxl4it_yeast2   = max($ndtl4it_yeast2);
                    $Avgl4it_yeast2   = number_format((array_sum($ndtl4it_yeast2)) /(count($ndtl4it_yeast2)),2);
                    $Countl4it_yeast2 = count($ndtl4it_yeast2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4it_yeast2    = array_sum($ndtl4it_yeast2) / count($ndtl4it_yeast2);
                    $fvariantl4it_yeast2 = 0.00;
                    $xsamplel4it_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl4it_yeast2 as $i){
                    $fvariantl4it_yeast2 += pow($i - $fmeanl4it_yeast2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4it_yeast2 /= ($xsamplel4it_yeast2   ? count($ndtl4it_yeast2)-1 : count($ndtl4it_yeast2));
                    $stdevl4it_yeast2     = number_format(sqrt($fvariantl4it_yeast2  ),2);
                    $totall4it_yeast2     = count($ndtl4it_yeast2);
                    $inspectl4it_yeast2   = $dt1;
                    $outspectl4it_yeast2  = $dt2;
                    $prsoutl4it_yeast2    = number_format((($dt2 /$totall4it_yeast2  )* (100)),2);

                } else {

                    $Minl4it_yeast2      = '';
                    $Maxl4it_yeast2      = '';
                    $Avgl4it_yeast2      = '';
                    $stdevl4it_yeast2    = '';
                    $totall4it_yeast2    = '';
                    $inspectl4it_yeast2  = '';
                    $outspectl4it_yeast2 = '';
                    $prsoutl4it_yeast2   = '';
                }



                  if(is_array($ndtl4it_mould2) && count ($ndtl4it_mould2) > 0)
                {
                    $Minl4it_mould2   = min($ndtl4it_mould2);
                    $Maxl4it_mould2   = max($ndtl4it_mould2);
                    $Avgl4it_mould2   = number_format((array_sum($ndtl4it_mould2)) /(count($ndtl4it_mould2)),2);
                    $Countl4it_mould2 = count($ndtl4it_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4it_mould2    = array_sum($ndtl4it_mould2) / count($ndtl4it_mould2);
                    $fvariantl4it_mould2 = 0.00;
                    $xsamplel4it_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl4it_mould2 as $i){
                    $fvariantl4it_mould2 += pow($i - $fmeanl4it_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4it_mould2 /= ($xsamplel4it_mould2   ? count($ndtl4it_mould2)-1 : count($ndtl4it_mould2));
                    $stdevl4it_mould2     = number_format(sqrt($fvariantl4it_mould2  ),2);
                    $totall4it_mould2     = count($ndtl4it_mould2);
                    $inspectl4it_mould2   = $dt1;
                    $outspectl4it_mould2  = $dt2;
                    $prsoutl4it_mould2    = number_format((($dt2 /$totall4it_mould2  )* (100)),2);

                } else {

                    $Minl4it_mould2      = '';
                    $Maxl4it_mould2      = '';
                    $Avgl4it_mould2      = '';
                    $stdevl4it_mould2    = '';
                    $totall4it_mould2    = '';
                    $inspectl4it_mould2  = '';
                    $outspectl4it_mould2 = '';
                    $prsoutl4it_mould2   = '';
                }


                  if(is_array($ndtl4it_yeast_mould2) && count ($ndtl4it_yeast_mould2) > 0)
                {
                    $Minl4it_yeast_mould2   = min($ndtl4it_yeast_mould2);
                    $Maxl4it_yeast_mould2   = max($ndtl4it_yeast_mould2);
                    $Avgl4it_yeast_mould2   = number_format((array_sum($ndtl4it_yeast_mould2)) /(count($ndtl4it_yeast_mould2)),2);
                    $Countl4it_yeast_mould2 = count($ndtl4it_yeast_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4it_yeast_mould2    = array_sum($ndtl4it_yeast_mould2) / count($ndtl4it_yeast_mould2);
                    $fvariantl4it_yeast_mould2 = 0.00;
                    $xsamplel4it_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl4it_yeast_mould2 as $i){
                    $fvariantl4it_yeast_mould2 += pow($i - $fmeanl4it_yeast_mould2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4it_yeast_mould2 /= ($xsamplel4it_yeast_mould2   ? count($ndtl4it_yeast_mould2)-1 : count($ndtl4it_yeast_mould2));
                    $stdevl4it_yeast_mould2     = number_format(sqrt($fvariantl4it_yeast_mould2  ),2);
                    $totall4it_yeast_mould2     = count($ndtl4it_yeast_mould2);
                    $inspectl4it_yeast_mould2   = $dt1;
                    $outspectl4it_yeast_mould2  = $dt2;
                    $prsoutl4it_yeast_mould2    = number_format((($dt2 /$totall4it_yeast_mould2  )* (100)),2);

                } else {

                    $Minl4it_yeast_mould2      = '';
                    $Maxl4it_yeast_mould2      = '';
                    $Avgl4it_yeast_mould2      = '';
                    $stdevl4it_yeast_mould2    = '';
                    $totall4it_yeast_mould2    = '';
                    $inspectl4it_yeast_mould2  = '';
                    $outspectl4it_yeast_mould2 = '';
                    $prsoutl4it_yeast_mould2   = '';
                }



                  if(is_array($ndtl4ba_tpc2) && count ($ndtl4ba_tpc2) > 0)
                {
                    $Minl4ba_tpc2   = min($ndtl4ba_tpc2);
                    $Maxl4ba_tpc2   = max($ndtl4ba_tpc2);
                    $Avgl4ba_tpc2   = number_format((array_sum($ndtl4ba_tpc2)) /(count($ndtl4ba_tpc2)),2);
                    $Countl4ba_tpc2 = count($ndtl4ba_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4ba_tpc2    = array_sum($ndtl4ba_tpc2) / count($ndtl4ba_tpc2);
                    $fvariantl4ba_tpc2 = 0.00;
                    $xsamplel4ba_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl4ba_tpc2 as $i){
                    $fvariantl4ba_tpc2 += pow($i - $fmeanl4ba_tpc2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4ba_tpc2 /= ($xsamplel4ba_tpc2   ? count($ndtl4ba_tpc2)-1 : count($ndtl4ba_tpc2));
                    $stdevl4ba_tpc2     = number_format(sqrt($fvariantl4ba_tpc2  ),2);
                    $totall4ba_tpc2     = count($ndtl4ba_tpc2);
                    $inspectl4ba_tpc2   = $dt1;
                    $outspectl4ba_tpc2  = $dt2;
                    $prsoutl4ba_tpc2    = number_format((($dt2 /$totall4ba_tpc2  )* (100)),2);

                } else {

                    $Minl4ba_tpc2      = '';
                    $Maxl4ba_tpc2      = '';
                    $Avgl4ba_tpc2      = '';
                    $stdevl4ba_tpc2    = '';
                    $totall4ba_tpc2    = '';
                    $inspectl4ba_tpc2  = '';
                    $outspectl4ba_tpc2 = '';
                    $prsoutl4ba_tpc2   = '';
                }



                  if(is_array($ndtl4ba_yeast2) && count ($ndtl4ba_yeast2) > 0)
                {
                    $Minl4ba_yeast2   = min($ndtl4ba_yeast2);
                    $Maxl4ba_yeast2   = max($ndtl4ba_yeast2);
                    $Avgl4ba_yeast2   = number_format((array_sum($ndtl4ba_yeast2)) /(count($ndtl4ba_yeast2)),2);
                    $Countl4ba_yeast2 = count($ndtl4ba_yeast2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4ba_yeast2    = array_sum($ndtl4ba_yeast2) / count($ndtl4ba_yeast2);
                    $fvariantl4ba_yeast2 = 0.00;
                    $xsamplel4ba_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl4ba_yeast2 as $i){
                    $fvariantl4ba_yeast2 += pow($i - $fmeanl4ba_yeast2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4ba_yeast2 /= ($xsamplel4ba_yeast2    ? count($ndtl4ba_yeast2)-1 : count($ndtl4ba_yeast2));
                    $stdevl4ba_yeast2     = number_format(sqrt($fvariantl4ba_yeast2   ),2);
                    $totall4ba_yeast2     = count($ndtl4ba_yeast2);
                    $inspectl4ba_yeast2   = $dt1;
                    $outspectl4ba_yeast2  = $dt2;
                    $prsoutl4ba_yeast2    = number_format((($dt2 /$totall4ba_yeast2   )* (100)),2);

                } else {

                    $Minl4ba_yeast2      = '';
                    $Maxl4ba_yeast2      = '';
                    $Avgl4ba_yeast2      = '';
                    $stdevl4ba_yeast2    = '';
                    $totall4ba_yeast2    = '';
                    $inspectl4ba_yeast2  = '';
                    $outspectl4ba_yeast2 = '';
                    $prsoutl4ba_yeast2   = '';
                }


                  if(is_array($ndtl4ba_mould2) && count ($ndtl4ba_mould2) > 0)
                {
                    $Minl4ba_mould2   = min($ndtl4ba_mould2);
                    $Maxl4ba_mould2   = max($ndtl4ba_mould2);
                    $Avgl4ba_mould2   = number_format((array_sum($ndtl4ba_mould2)) /(count($ndtl4ba_mould2)),2);
                    $Countl4ba_mould2 = count($ndtl4ba_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4ba_mould2    = array_sum($ndtl4ba_mould2) / count($ndtl4ba_mould2);
                    $fvariantl4ba_mould2 = 0.00;
                    $xsamplel4ba_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl4ba_mould2 as $i){
                    $fvariantl4ba_mould2 += pow($i - $fmeanl4ba_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4ba_mould2 /= ($xsamplel4ba_mould2    ? count($ndtl4ba_mould2)-1 : count($ndtl4ba_mould2));
                    $stdevl4ba_mould2     = number_format(sqrt($fvariantl4ba_mould2   ),2);
                    $totall4ba_mould2     = count($ndtl4ba_mould2);
                    $inspectl4ba_mould2   = $dt1;
                    $outspectl4ba_mould2  = $dt2;
                    $prsoutl4ba_mould2    = number_format((($dt2 /$totall4ba_mould2   )* (100)),2);

                } else {

                    $Minl4ba_mould2      = '';
                    $Maxl4ba_mould2      = '';
                    $Avgl4ba_mould2      = '';
                    $stdevl4ba_mould2    = '';
                    $totall4ba_mould2    = '';
                    $inspectl4ba_mould2  = '';
                    $outspectl4ba_mould2 = '';
                    $prsoutl4ba_mould2   = '';
                }


                  if(is_array($ndtl4ba_yeast_mould2) && count ($ndtl4ba_yeast_mould2) > 0)
                {
                    $Minl4ba_yeast_mould2   = min($ndtl4ba_yeast_mould2);
                    $Maxl4ba_yeast_mould2   = max($ndtl4ba_yeast_mould2);
                    $Avgl4ba_yeast_mould2   = number_format((array_sum($ndtl4ba_yeast_mould2)) /(count($ndtl4ba_yeast_mould2)),2);
                    $Countl4ba_yeast_mould2 = count($ndtl4ba_yeast_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4ba_yeast_mould2    = array_sum($ndtl4ba_yeast_mould2) / count($ndtl4ba_yeast_mould2);
                    $fvariantl4ba_yeast_mould2 = 0.00;
                    $xsamplel4ba_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl4ba_yeast_mould2 as $i){
                    $fvariantl4ba_yeast_mould2 += pow($i - $fmeanl4ba_yeast_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4ba_yeast_mould2 /= ($xsamplel4ba_yeast_mould2    ? count($ndtl4ba_yeast_mould2)-1 : count($ndtl4ba_yeast_mould2));
                    $stdevl4ba_yeast_mould2     = number_format(sqrt($fvariantl4ba_yeast_mould2   ),2);
                    $totall4ba_yeast_mould2     = count($ndtl4ba_yeast_mould2);
                    $inspectl4ba_yeast_mould2   = $dt1;
                    $outspectl4ba_yeast_mould2  = $dt2;
                    $prsoutl4ba_yeast_mould2    = number_format((($dt2 /$totall4ba_yeast_mould2   )* (100)),2);

                } else {

                    $Minl4ba_yeast_mould2      = '';
                    $Maxl4ba_yeast_mould2      = '';
                    $Avgl4ba_yeast_mould2      = '';
                    $stdevl4ba_yeast_mould2    = '';
                    $totall4ba_yeast_mould2    = '';
                    $inspectl4ba_yeast_mould2  = '';
                    $outspectl4ba_yeast_mould2 = '';
                    $prsoutl4ba_yeast_mould2   = '';
                }


                 if(is_array($ndtl5it_tpc2) && count ($ndtl5it_tpc2) > 0)
                {
                    $Minl5it_tpc2   = min($ndtl5it_tpc2);
                    $Maxl5it_tpc2   = max($ndtl5it_tpc2);
                    $Avgl5it_tpc2   = number_format((array_sum($ndtl5it_tpc2)) /(count($ndtl5it_tpc2)),2);
                    $Countl5it_tpc2 = count($ndtl5it_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5it_tpc2    = array_sum($ndtl5it_tpc2) / count($ndtl5it_tpc2);
                    $fvariantl5it_tpc2 = 0.00;
                    $xsamplel5it_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl5it_tpc2 as $i){
                    $fvariantl5it_tpc2 += pow($i - $fmeanl5it_tpc2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5it_tpc2 /= ($xsamplel5it_tpc2    ? count($ndtl5it_tpc2)-1 : count($ndtl5it_tpc2));
                    $stdevl5it_tpc2     = number_format(sqrt($fvariantl5it_tpc2   ),2);
                    $totall5it_tpc2     = count($ndtl5it_tpc2);
                    $inspectl5it_tpc2   = $dt1;
                    $outspectl5it_tpc2  = $dt2;
                    $prsoutl5it_tpc2    = number_format((($dt2 /$totall5it_tpc2   )* (100)),2);

                } else {

                    $Minl5it_tpc2      = '';
                    $Maxl5it_tpc2      = '';
                    $Avgl5it_tpc2      = '';
                    $stdevl5it_tpc2    = '';
                    $totall5it_tpc2    = '';
                    $inspectl5it_tpc2  = '';
                    $outspectl5it_tpc2 = '';
                    $prsoutl5it_tpc2   = '';
                }

               
                   if(is_array($ndtl5it_yeast2) && count ($ndtl5it_yeast2) > 0)
                {
                    $Minl5it_yeast2   = min($ndtl5it_yeast2);
                    $Maxl5it_yeast2   = max($ndtl5it_yeast2);
                    $Avgl5it_yeast2   = number_format((array_sum($ndtl5it_yeast2)) /(count($ndtl5it_yeast2)),2);
                    $Countl5it_yeast2 = count($ndtl5it_yeast2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5it_yeast2    = array_sum($ndtl5it_yeast2) / count($ndtl5it_yeast2);
                    $fvariantl5it_yeast2 = 0.00;
                    $xsamplel5it_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl5it_yeast2 as $i){
                    $fvariantl5it_yeast2 += pow($i - $fmeanl5it_yeast2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5it_yeast2 /= ($xsamplel5it_yeast2    ? count($ndtl5it_yeast2)-1 : count($ndtl5it_yeast2));
                    $stdevl5it_yeast2     = number_format(sqrt($fvariantl5it_yeast2   ),2);
                    $totall5it_yeast2     = count($ndtl5it_yeast2);
                    $inspectl5it_yeast2   = $dt1;
                    $outspectl5it_yeast2  = $dt2;
                    $prsoutl5it_yeast2    = number_format((($dt2 /$totall5it_yeast2   )* (100)),2);

                } else {

                    $Minl5it_yeast2      = '';
                    $Maxl5it_yeast2      = '';
                    $Avgl5it_yeast2      = '';
                    $stdevl5it_yeast2    = '';
                    $totall5it_yeast2    = '';
                    $inspectl5it_yeast2  = '';
                    $outspectl5it_yeast2 = '';
                    $prsoutl5it_yeast2   = '';
                }


                  if(is_array($ndtl5it_mould2) && count ($ndtl5it_mould2) > 0)
                {
                    $Minl5it_mould2   = min($ndtl5it_mould2);
                    $Maxl5it_mould2   = max($ndtl5it_mould2);
                    $Avgl5it_mould2   = number_format((array_sum($ndtl5it_mould2)) /(count($ndtl5it_mould2)),2);
                    $Countl5it_mould2 = count($ndtl5it_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5it_mould2    = array_sum($ndtl5it_mould2) / count($ndtl5it_mould2);
                    $fvariantl5it_mould2 = 0.00;
                    $xsamplel5it_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl5it_mould2 as $i){
                    $fvariantl5it_mould2 += pow($i - $fmeanl5it_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5it_mould2 /= ($xsamplel5it_mould2    ? count($ndtl5it_mould2)-1 : count($ndtl5it_mould2));
                    $stdevl5it_mould2     = number_format(sqrt($fvariantl5it_mould2   ),2);
                    $totall5it_mould2     = count($ndtl5it_mould2);
                    $inspectl5it_mould2   = $dt1;
                    $outspectl5it_mould2  = $dt2;
                    $prsoutl5it_mould2    = number_format((($dt2 /$totall5it_mould2   )* (100)),2);

                } else {

                    $Minl5it_mould2      = '';
                    $Maxl5it_mould2      = '';
                    $Avgl5it_mould2      = '';
                    $stdevl5it_mould2    = '';
                    $totall5it_mould2    = '';
                    $inspectl5it_mould2  = '';
                    $outspectl5it_mould2 = '';
                    $prsoutl5it_mould2   = '';
                }

                    if(is_array($ndtl5it_yeast_mould2) && count ($ndtl5it_yeast_mould2) > 0)
                {
                    $Minl5it_yeast_mould2   = min($ndtl5it_yeast_mould2);
                    $Maxl5it_yeast_mould2   = max($ndtl5it_yeast_mould2);
                    $Avgl5it_yeast_mould2   = number_format((array_sum($ndtl5it_yeast_mould2)) /(count($ndtl5it_yeast_mould2)),2);
                    $Countl5it_yeast_mould2 = count($ndtl5it_yeast_mould2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5it_yeast_mould2    = array_sum($ndtl5it_yeast_mould2) / count($ndtl5it_yeast_mould2);
                    $fvariantl5it_yeast_mould2 = 0.00;
                    $xsamplel5it_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl5it_yeast_mould2 as $i){
                    $fvariantl5it_yeast_mould2 += pow($i - $fmeanl5it_yeast_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5it_yeast_mould2 /= ($xsamplel5it_yeast_mould2    ? count($ndtl5it_yeast_mould2)-1 : count($ndtl5it_yeast_mould2));
                    $stdevl5it_yeast_mould2     = number_format(sqrt($fvariantl5it_yeast_mould2   ),2);
                    $totall5it_yeast_mould2     = count($ndtl5it_yeast_mould2);
                    $inspectl5it_yeast_mould2   = $dt1;
                    $outspectl5it_yeast_mould2  = $dt2;
                    $prsoutl5it_yeast_mould2    = number_format((($dt2 /$totall5it_yeast_mould2   )* (100)),2);

                } else {

                    $Minl5it_yeast_mould2      = '';
                    $Maxl5it_yeast_mould2      = '';
                    $Avgl5it_yeast_mould2      = '';
                    $stdevl5it_yeast_mould2    = '';
                    $totall5it_yeast_mould2    = '';
                    $inspectl5it_yeast_mould2  = '';
                    $outspectl5it_yeast_mould2 = '';
                    $prsoutl5it_yeast_mould2   = '';
                }



                  if(is_array($ndtl5ba_tpc2 ) && count ($ndtl5ba_tpc2 ) > 0)
                {
                    $Minl5ba_tpc2   = min($ndtl5ba_tpc2 );
                    $Maxl5ba_tpc2   = max($ndtl5ba_tpc2 );
                    $Avgl5ba_tpc2   = number_format((array_sum($ndtl5ba_tpc2 )) /(count($ndtl5ba_tpc2 )),2);
                    $Countl5ba_tpc2 = count($ndtl5ba_tpc2 );
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5ba_tpc2    = array_sum($ndtl5ba_tpc2 ) / count($ndtl5ba_tpc2 );
                    $fvariantl5ba_tpc2 = 0.00;
                    $xsamplel5ba_tpc2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtl5ba_tpc2  as $i){
                    $fvariantl5ba_tpc2 += pow($i - $fmeanl5ba_tpc2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5ba_tpc2 /= ($xsamplel5ba_tpc2    ? count($ndtl5ba_tpc2 )-1 : count($ndtl5ba_tpc2 ));
                    $stdevl5ba_tpc2     = number_format(sqrt($fvariantl5ba_tpc2   ),2);
                    $totall5ba_tpc2     = count($ndtl5ba_tpc2 );
                    $inspectl5ba_tpc2   = $dt1;
                    $outspectl5ba_tpc2  = $dt2;
                    $prsoutl5ba_tpc2    = number_format((($dt2 /$totall5ba_tpc2   )* (100)),2);

                } else {

                    $Minl5ba_tpc2      = '';
                    $Maxl5ba_tpc2      = '';
                    $Avgl5ba_tpc2      = '';
                    $stdevl5ba_tpc2    = '';
                    $totall5ba_tpc2    = '';
                    $inspectl5ba_tpc2  = '';
                    $outspectl5ba_tpc2 = '';
                    $prsoutl5ba_tpc2   = '';
                }




                   if(is_array($ndtl5ba_yeast2 ) && count ($ndtl5ba_yeast2 ) > 0)
                {
                    $Minl5ba_yeast2   = min($ndtl5ba_yeast2 );
                    $Maxl5ba_yeast2   = max($ndtl5ba_yeast2 );
                    $Avgl5ba_yeast2   = number_format((array_sum($ndtl5ba_yeast2 )) /(count($ndtl5ba_yeast2 )),2);
                    $Countl5ba_yeast2 = count($ndtl5ba_yeast2 );
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5ba_yeast2    = array_sum($ndtl5ba_yeast2 ) / count($ndtl5ba_yeast2 );
                    $fvariantl5ba_yeast2 = 0.00;
                    $xsamplel5ba_yeast2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl5ba_yeast2  as $i){
                    $fvariantl5ba_yeast2 += pow($i - $fmeanl5ba_yeast2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5ba_yeast2 /= ($xsamplel5ba_yeast2    ? count($ndtl5ba_yeast2 )-1 : count($ndtl5ba_yeast2 ));
                    $stdevl5ba_yeast2     = number_format(sqrt($fvariantl5ba_yeast2   ),2);
                    $totall5ba_yeast2     = count($ndtl5ba_yeast2 );
                    $inspectl5ba_yeast2   = $dt1;
                    $outspectl5ba_yeast2  = $dt2;
                    $prsoutl5ba_yeast2    = number_format((($dt2 /$totall5ba_yeast2   )* (100)),2);

                } else {

                    $Minl5ba_yeast2      = '';
                    $Maxl5ba_yeast2      = '';
                    $Avgl5ba_yeast2      = '';
                    $stdevl5ba_yeast2    = '';
                    $totall5ba_yeast2    = '';
                    $inspectl5ba_yeast2  = '';
                    $outspectl5ba_yeast2 = '';
                    $prsoutl5ba_yeast2   = '';
                }


                   if(is_array($ndtl5ba_mould2 ) && count ($ndtl5ba_mould2 ) > 0)
                {
                    $Minl5ba_mould2   = min($ndtl5ba_mould2 );
                    $Maxl5ba_mould2   = max($ndtl5ba_mould2 );
                    $Avgl5ba_mould2   = number_format((array_sum($ndtl5ba_mould2 )) /(count($ndtl5ba_mould2 )),2);
                    $Countl5ba_mould2 = count($ndtl5ba_mould2 );
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5ba_mould2    = array_sum($ndtl5ba_mould2 ) / count($ndtl5ba_mould2 );
                    $fvariantl5ba_mould2 = 0.00;
                    $xsamplel5ba_mould2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtl5ba_mould2  as $i){
                    $fvariantl5ba_mould2 += pow($i - $fmeanl5ba_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5ba_mould2 /= ($xsamplel5ba_mould2    ? count($ndtl5ba_mould2 )-1 : count($ndtl5ba_mould2 ));
                    $stdevl5ba_mould2     = number_format(sqrt($fvariantl5ba_mould2   ),2);
                    $totall5ba_mould2     = count($ndtl5ba_mould2 );
                    $inspectl5ba_mould2   = $dt1;
                    $outspectl5ba_mould2  = $dt2;
                    $prsoutl5ba_mould2    = number_format((($dt2 /$totall5ba_mould2   )* (100)),2);

                } else {

                    $Minl5ba_mould2      = '';
                    $Maxl5ba_mould2      = '';
                    $Avgl5ba_mould2      = '';
                    $stdevl5ba_mould2    = '';
                    $totall5ba_mould2    = '';
                    $inspectl5ba_mould2  = '';
                    $outspectl5ba_mould2 = '';
                    $prsoutl5ba_mould2   = '';
                }



                  if(is_array($ndtl5ba_yeast_mould2 ) && count ($ndtl5ba_yeast_mould2 ) > 0)
                {
                    $Minl5ba_yeast_mould2   = min($ndtl5ba_yeast_mould2 );
                    $Maxl5ba_yeast_mould2   = max($ndtl5ba_yeast_mould2 );
                    $Avgl5ba_yeast_mould2   = number_format((array_sum($ndtl5ba_yeast_mould2 )) /(count($ndtl5ba_yeast_mould2 )),2);
                    $Countl5ba_yeast_mould2 = count($ndtl5ba_yeast_mould2 );
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5ba_yeast_mould2    = array_sum($ndtl5ba_yeast_mould2 ) / count($ndtl5ba_yeast_mould2 );
                    $fvariantl5ba_yeast_mould2 = 0.00;
                    $xsamplel5ba_yeast_mould2  = false;
                    $dt1                       = 0;$dt2 = 0;
                    foreach ($ndtl5ba_yeast_mould2  as $i){
                    $fvariantl5ba_yeast_mould2 += pow($i - $fmeanl5ba_yeast_mould2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5ba_yeast_mould2 /= ($xsamplel5ba_yeast_mould2    ? count($ndtl5ba_yeast_mould2 )-1 : count($ndtl5ba_yeast_mould2 ));
                    $stdevl5ba_yeast_mould2     = number_format(sqrt($fvariantl5ba_yeast_mould2   ),2);
                    $totall5ba_yeast_mould2     = count($ndtl5ba_yeast_mould2 );
                    $inspectl5ba_yeast_mould2   = $dt1;
                    $outspectl5ba_yeast_mould2  = $dt2;
                    $prsoutl5ba_yeast_mould2    = number_format((($dt2 /$totall5ba_yeast_mould2   )* (100)),2);

                } else {

                    $Minl5ba_yeast_mould2      = '';
                    $Maxl5ba_yeast_mould2      = '';
                    $Avgl5ba_yeast_mould2      = '';
                    $stdevl5ba_yeast_mould2    = '';
                    $totall5ba_yeast_mould2    = '';
                    $inspectl5ba_yeast_mould2  = '';
                    $outspectl5ba_yeast_mould2 = '';
                    $prsoutl5ba_yeast_mould2   = '';
                }


                $rowfoot0  = $rowCount1+1;
                $rowfoot1  = $rowfoot0+1;
                $rowfoot2  = $rowfoot1+1;
                $rowfoot3  = $rowfoot2+1;
                $rowfoot4  = $rowfoot3+1;
                $rowfoot5  = $rowfoot4+1;
                $rowfoot6  = $rowfoot5+1;
                $rowfoot7  = $rowfoot6+1;
                $rowfoot8  = $rowfoot7+1;
                $rowfoot9  = $rowfoot8+1;
                $rowfoot10 = $rowfoot9+1;


                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;



                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 $objPHPExcel1->mergeCells('A'.$rowfoot0.':J'.$rowfoot0);
                 $objPHPExcel1->setSharedStyle($cellred, 'A'.$rowfoot0.':AP'.$rowfoot0);
              //   $objPHPExcel1->getStyle(''.$rowfoot0.':M'.$rowfoot0)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                // $objPHPExcel1->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot1.':AP'.$rowfoot1);
                 $objPHPExcel1->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Maximum ');

                 $objPHPExcel1->setCellValue('C'.$rowfoot1,'');                       
                 $objPHPExcel1->setCellValue('D'.$rowfoot1,'');
                 $objPHPExcel1->setCellValue('E'.$rowfoot1,'');           
               
                 $objPHPExcel1->setCellValue('F'.$rowfoot1,$Avgl1it_tpc2 );                       
                 $objPHPExcel1->setCellValue('G'.$rowfoot1,$Avgl1it_yeast2);
                 $objPHPExcel1->setCellValue('H'.$rowfoot1,$Avgl1it_mould2 );
                 $objPHPExcel1->setCellValue('I'.$rowfoot1,$Avgl1it_yeast_mould2);

                 $objPHPExcel1->setCellValue('J'.$rowfoot1,$Avgl1ba_tpc2 );                       
                 $objPHPExcel1->setCellValue('K'.$rowfoot1,$Avgl1ba_yeast2);
                 $objPHPExcel1->setCellValue('L'.$rowfoot1,$Avgl1ba_mould2 );
                 $objPHPExcel1->setCellValue('M'.$rowfoot1,$Avgl1ba_yeast_mould2);
                 $objPHPExcel1->setCellValue('N'.$rowfoot1,$Avgl4it_tpc2);               
                 $objPHPExcel1->setCellValue('O'.$rowfoot1,$Avgl4it_yeast2);               
                 $objPHPExcel1->setCellValue('P'.$rowfoot1,$Avgl4it_mould2);
                 $objPHPExcel1->setCellValue('Q'.$rowfoot1,$Avgl4it_yeast_mould2);
                 $objPHPExcel1->setCellValue('R'.$rowfoot1,$Avgl4ba_tpc2);               
                 $objPHPExcel1->setCellValue('S'.$rowfoot1,$Avgl4ba_yeast2);               
                 $objPHPExcel1->setCellValue('T'.$rowfoot1,$Avgl4ba_mould2);
                 $objPHPExcel1->setCellValue('U'.$rowfoot1,$Avgl4ba_yeast_mould2);               
                 $objPHPExcel1->setCellValue('V'.$rowfoot1,'');               
                 $objPHPExcel1->setCellValue('W'.$rowfoot1,'');               
                 $objPHPExcel1->setCellValue('X'.$rowfoot1,'');
                 $objPHPExcel1->setCellValue('Y'.$rowfoot1,'');

                 $objPHPExcel1->setCellValue('Z'.$rowfoot1,'');               
                 $objPHPExcel1->setCellValue('AA'.$rowfoot1,'');               
                 $objPHPExcel1->setCellValue('AB'.$rowfoot1,'');
                 $objPHPExcel1->setCellValue('AC'.$rowfoot1,'');
                 $objPHPExcel1->setCellValue('AD'.$rowfoot1,$Avgl5it_tpc2);               
                 $objPHPExcel1->setCellValue('AE'.$rowfoot1,$Avgl5it_yeast2);               
                 $objPHPExcel1->setCellValue('AF'.$rowfoot1,$Avgl5it_mould2);
                 $objPHPExcel1->setCellValue('AG'.$rowfoot1,$Avgl5it_yeast_mould2);

                 $objPHPExcel1->setCellValue('AH'.$rowfoot1,$Avgl5ba_tpc2);               
                 $objPHPExcel1->setCellValue('AI'.$rowfoot1,$Avgl5ba_yeast2);               
                 $objPHPExcel1->setCellValue('AJ'.$rowfoot1,$Avgl5ba_mould2);
                 $objPHPExcel1->setCellValue('AK'.$rowfoot1,$Avgl5ba_yeast_mould2);

                 $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot2.':AP'.$rowfoot2);
                
                 $objPHPExcel1->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Maximum ');
                
                 $objPHPExcel1->setCellValue('C'.$rowfoot2,'');                       
                 $objPHPExcel1->setCellValue('D'.$rowfoot2,'');
                 $objPHPExcel1->setCellValue('E'.$rowfoot2,'');           
               
                 $objPHPExcel1->setCellValue('F'.$rowfoot2,$Maxl1it_tpc2 );                       
                 $objPHPExcel1->setCellValue('G'.$rowfoot2,$Maxl1it_yeast2);
                 $objPHPExcel1->setCellValue('H'.$rowfoot2,$Maxl1it_mould2 );
                 $objPHPExcel1->setCellValue('I'.$rowfoot2,$Maxl1it_yeast_mould2);

                 $objPHPExcel1->setCellValue('J'.$rowfoot2,$Maxl1ba_tpc2 );                       
                 $objPHPExcel1->setCellValue('K'.$rowfoot2,$Maxl1ba_yeast2);
                 $objPHPExcel1->setCellValue('L'.$rowfoot2,$Maxl1ba_mould2 );
                 $objPHPExcel1->setCellValue('M'.$rowfoot2,$Maxl1ba_yeast_mould2);
                 $objPHPExcel1->setCellValue('N'.$rowfoot2,$Maxl4it_tpc2);               
                 $objPHPExcel1->setCellValue('O'.$rowfoot2,$Maxl4it_yeast2);               
                 $objPHPExcel1->setCellValue('P'.$rowfoot2,$Maxl4it_mould2);
                 $objPHPExcel1->setCellValue('Q'.$rowfoot2,$Maxl4it_yeast_mould2);
                 $objPHPExcel1->setCellValue('R'.$rowfoot2,$Maxl4ba_tpc2);               
                 $objPHPExcel1->setCellValue('S'.$rowfoot2,$Maxl4ba_yeast2);               
                 $objPHPExcel1->setCellValue('T'.$rowfoot2,$Maxl4ba_mould2);
                 $objPHPExcel1->setCellValue('U'.$rowfoot2,$Maxl4ba_yeast_mould2);               
                 $objPHPExcel1->setCellValue('V'.$rowfoot2,'');               
                 $objPHPExcel1->setCellValue('W'.$rowfoot2,'');               
                 $objPHPExcel1->setCellValue('X'.$rowfoot2,'');
                 $objPHPExcel1->setCellValue('Y'.$rowfoot2,'');

                 $objPHPExcel1->setCellValue('Z'.$rowfoot2,'');               
                 $objPHPExcel1->setCellValue('AA'.$rowfoot2,'');               
                 $objPHPExcel1->setCellValue('AB'.$rowfoot2,'');
                 $objPHPExcel1->setCellValue('AC'.$rowfoot2,'');
                 $objPHPExcel1->setCellValue('AD'.$rowfoot2,$Maxl5it_tpc2);               
                 $objPHPExcel1->setCellValue('AE'.$rowfoot2,$Maxl5it_yeast2);               
                 $objPHPExcel1->setCellValue('AF'.$rowfoot2,$Maxl5it_mould2);
                 $objPHPExcel1->setCellValue('AG'.$rowfoot2,$Maxl5it_yeast_mould2);

                 $objPHPExcel1->setCellValue('AH'.$rowfoot2,$Maxl5ba_tpc2);               
                 $objPHPExcel1->setCellValue('AI'.$rowfoot2,$Maxl5ba_yeast2);               
                 $objPHPExcel1->setCellValue('AJ'.$rowfoot2,$Maxl5ba_mould2);
                 $objPHPExcel1->setCellValue('AK'.$rowfoot2,$Maxl5ba_yeast_mould2);   



                 $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot3.':AP'.$rowfoot3);                
                 $objPHPExcel1->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Minimum ');

                 $objPHPExcel1->setCellValue('C'.$rowfoot3,'');                       
                 $objPHPExcel1->setCellValue('D'.$rowfoot3,'');
                 $objPHPExcel1->setCellValue('E'.$rowfoot3,'');           
               
                 $objPHPExcel1->setCellValue('F'.$rowfoot3,$Minl1it_tpc2 );                       
                 $objPHPExcel1->setCellValue('G'.$rowfoot3,$Minl1it_yeast2);
                 $objPHPExcel1->setCellValue('H'.$rowfoot3,$Minl1it_mould2 );
                 $objPHPExcel1->setCellValue('I'.$rowfoot3,$Minl1it_yeast_mould2);

                 $objPHPExcel1->setCellValue('J'.$rowfoot3,$Minl1ba_tpc2 );                       
                 $objPHPExcel1->setCellValue('K'.$rowfoot3,$Minl1ba_yeast2);
                 $objPHPExcel1->setCellValue('L'.$rowfoot3,$Minl1ba_mould2 );
                 $objPHPExcel1->setCellValue('M'.$rowfoot3,$Minl1ba_yeast_mould2);
                 $objPHPExcel1->setCellValue('N'.$rowfoot3,$Minl4it_tpc2);               
                 $objPHPExcel1->setCellValue('O'.$rowfoot3,$Minl4it_yeast2);               
                 $objPHPExcel1->setCellValue('P'.$rowfoot3,$Minl4it_mould2);
                 $objPHPExcel1->setCellValue('Q'.$rowfoot3,$Minl4it_yeast_mould2);
                 $objPHPExcel1->setCellValue('R'.$rowfoot3,$Minl4ba_tpc2);               
                 $objPHPExcel1->setCellValue('S'.$rowfoot3,$Minl4ba_yeast2);               
                 $objPHPExcel1->setCellValue('T'.$rowfoot3,$Minl4ba_mould2);
                 $objPHPExcel1->setCellValue('U'.$rowfoot3,$Minl4ba_yeast_mould2);               
                 $objPHPExcel1->setCellValue('V'.$rowfoot3,'');               
                 $objPHPExcel1->setCellValue('W'.$rowfoot3,'');               
                 $objPHPExcel1->setCellValue('X'.$rowfoot3,'');
                 $objPHPExcel1->setCellValue('Y'.$rowfoot3,'');

                 $objPHPExcel1->setCellValue('Z'.$rowfoot3,'');               
                 $objPHPExcel1->setCellValue('AA'.$rowfoot3,'');               
                 $objPHPExcel1->setCellValue('AB'.$rowfoot3,'');
                 $objPHPExcel1->setCellValue('AC'.$rowfoot3,'');
                 $objPHPExcel1->setCellValue('AD'.$rowfoot3,$Minl5it_tpc2);               
                 $objPHPExcel1->setCellValue('AE'.$rowfoot3,$Minl5it_yeast2);               
                 $objPHPExcel1->setCellValue('AF'.$rowfoot3,$Minl5it_mould2);
                 $objPHPExcel1->setCellValue('AG'.$rowfoot3,$Minl5it_yeast_mould2);

                 $objPHPExcel1->setCellValue('AH'.$rowfoot3,$Minl5ba_tpc2);               
                 $objPHPExcel1->setCellValue('AI'.$rowfoot3,$Minl5ba_yeast2);               
                 $objPHPExcel1->setCellValue('AJ'.$rowfoot3,$Minl5ba_mould2);
                 $objPHPExcel1->setCellValue('AK'.$rowfoot3,$Minl5ba_yeast_mould2); 
                 

                 $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot4.':AP'.$rowfoot4);                
                 $objPHPExcel1->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Std Deviasi ');

                 $objPHPExcel1->setCellValue('C'.$rowfoot4,'');                       
                 $objPHPExcel1->setCellValue('D'.$rowfoot4,'');
                 $objPHPExcel1->setCellValue('E'.$rowfoot4,'');           
               
                 $objPHPExcel1->setCellValue('F'.$rowfoot4,$stdevl1it_tpc2 );                       
                 $objPHPExcel1->setCellValue('G'.$rowfoot4,$stdevl1it_yeast2);
                 $objPHPExcel1->setCellValue('H'.$rowfoot4,$stdevl1it_mould2 );
                 $objPHPExcel1->setCellValue('I'.$rowfoot4,$stdevl1it_yeast_mould2);

                 $objPHPExcel1->setCellValue('J'.$rowfoot4,$stdevl1ba_tpc2 );                       
                 $objPHPExcel1->setCellValue('K'.$rowfoot4,$stdevl1ba_yeast2);
                 $objPHPExcel1->setCellValue('L'.$rowfoot4,$stdevl1ba_mould2 );
                 $objPHPExcel1->setCellValue('M'.$rowfoot4,$stdevl1ba_yeast_mould2);
                 $objPHPExcel1->setCellValue('N'.$rowfoot4,$stdevl4it_tpc2);               
                 $objPHPExcel1->setCellValue('O'.$rowfoot4,$stdevl4it_yeast2);               
                 $objPHPExcel1->setCellValue('P'.$rowfoot4,$stdevl4it_mould2);
                 $objPHPExcel1->setCellValue('Q'.$rowfoot4,$stdevl4it_yeast_mould2);
                 $objPHPExcel1->setCellValue('R'.$rowfoot4,$stdevl4ba_tpc2);               
                 $objPHPExcel1->setCellValue('S'.$rowfoot4,$stdevl4ba_yeast2);               
                 $objPHPExcel1->setCellValue('T'.$rowfoot4,$stdevl4ba_mould2);
                 $objPHPExcel1->setCellValue('U'.$rowfoot4,$stdevl4ba_yeast_mould2);               
                 $objPHPExcel1->setCellValue('V'.$rowfoot4,'');               
                 $objPHPExcel1->setCellValue('W'.$rowfoot4,'');               
                 $objPHPExcel1->setCellValue('X'.$rowfoot4,'');
                 $objPHPExcel1->setCellValue('Y'.$rowfoot4,'');

                 $objPHPExcel1->setCellValue('Z'.$rowfoot4,'');               
                 $objPHPExcel1->setCellValue('AA'.$rowfoot4,'');               
                 $objPHPExcel1->setCellValue('AB'.$rowfoot4,'');
                 $objPHPExcel1->setCellValue('AC'.$rowfoot4,'');
                 $objPHPExcel1->setCellValue('AD'.$rowfoot4,$stdevl5it_tpc2);               
                 $objPHPExcel1->setCellValue('AE'.$rowfoot4,$stdevl5it_yeast2);               
                 $objPHPExcel1->setCellValue('AF'.$rowfoot4,$stdevl5it_mould2);
                 $objPHPExcel1->setCellValue('AG'.$rowfoot4,$stdevl5it_yeast_mould2);

                 $objPHPExcel1->setCellValue('AH'.$rowfoot4,$stdevl5ba_tpc2);               
                 $objPHPExcel1->setCellValue('AI'.$rowfoot4,$stdevl5ba_yeast2);               
                 $objPHPExcel1->setCellValue('AJ'.$rowfoot4,$stdevl5ba_mould2);
                 $objPHPExcel1->setCellValue('AK'.$rowfoot4,$stdevl5ba_yeast_mould2);        


                 $objPHPExcel1->mergeCells('A'.$rowfoot5.':S'.$rowfoot5); 
                 $objPHPExcel1->setSharedStyle($cellorange1, 'A'.$rowfoot6.':S'.$rowfoot6);
                
                 $objPHPExcel1->mergeCells('A'.$rowfoot6.':D'.$rowfoot6)->setCellValue('A'.$rowfoot6,'REPORTED BY: ');
                 $objPHPExcel1->mergeCells('E'.$rowfoot6.':J'.$rowfoot6)->setCellValue('E'.$rowfoot6,'CHECKED  BY : ');
                 $objPHPExcel1->mergeCells('K'.$rowfoot6.':P'.$rowfoot6)->setCellValue('K'.$rowfoot6,'CONFIRMED BY : ');
                 $objPHPExcel1->mergeCells('Q'.$rowfoot6.':S'.$rowfoot6)->setCellValue('Q'.$rowfoot6,'ACKNOWLEDGED BY : ');

                 $objPHPExcel1->setSharedStyle($bodyStyle, 'A'.$rowfoot7.':S'.$rowfoot12);
                 $objPHPExcel1->mergeCells('A'.$rowfoot7.':D'.$rowfoot9);
                 $objPHPExcel1->mergeCells('E'.$rowfoot7.':J'.$rowfoot9);
                 $objPHPExcel1->mergeCells('K'.$rowfoot7.':P'.$rowfoot9);
                 $objPHPExcel1->mergeCells('Q'.$rowfoot7.':S'.$rowfoot9);
                 $objPHPExcel1->setSharedStyle($cellorange1, 'A'.$rowfoot10.':S'.$rowfoot12); 
                 $objPHPExcel1->mergeCells('A'.$rowfoot10.':D'.$rowfoot10)->setCellValue('A'.$rowfoot10,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel1->mergeCells('E'.$rowfoot10.':J'.$rowfoot10)->setCellValue('E'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel1->mergeCells('K'.$rowfoot10.':P'.$rowfoot10)->setCellValue('K'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel1->mergeCells('Q'.$rowfoot10.':S'.$rowfoot10)->setCellValue('Q'.$rowfoot10,'NAME : RISTINA YULIANI ');

                 $objPHPExcel1->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'POSITION : KS ');
                 $objPHPExcel1->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'POSITION : AMGR QAD ');
                 $objPHPExcel1->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel1->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel1->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel1->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel1->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel1->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'DATE : '.$tgl);      

                 /*$objPHPExcel1->mergeCells('A'.$rowfoot11.':C'.$rowfoot16,':')->setCellValue('A'.$rowfoot11,'Definisi : ');
                 $objPHPExcel1->mergeCells('A'.$rowfoot12.':C'.$rowfoot12,':')->setCellValue('A'.$rowfoot12,'MC  : Moisture Content ');
                 $objPHPExcel1->mergeCells('A'.$rowfoot13.':C'.$rowfoot13,':')->setCellValue('A'.$rowfoot13,'FFA : Free Fatty acid ');
                 $objPHPExcel1->mergeCells('A'.$rowfoot14.':C'.$rowfoot14,':')->setCellValue('A'.$rowfoot14,'IV  :  Iodine Value ');*/
                
                 $objPHPExcel1->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel1->mergeCells('R'.$rowfoot13.':S'.$rowfoot13)->setCellValue('R'.$rowfoot13,''.$frmnm);
                 $objPHPExcel1->mergeCells('D'.$rowfoot13.':Q'.$rowfoot13);
             }


                 ####################################################
                 #    view_rekap_swabbing_personil_drp              #
                 #                                                  #
                 ####################################################

                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel2 = $obj->createSheet(2);
                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);

               
                foreach(range('A','AU') as $columnID){
                $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel2->mergeCells('A1:AU1');
                 $objPHPExcel2->mergeCells('B2:AT5')->setCellValue('B2',$frmcop);
                 $objPHPExcel2->setCellValue('AU2','Tahun: '.$thn);
                 $objPHPExcel2->setCellValue('AU3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel2->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel2->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel2->setCellValue('AU4','Hal: ');
                 $objPHPExcel2->setCellValue('A6','JUDUL');
                 $objPHPExcel2->mergeCells('B6:AU6')->setCellValue('B6',''.$frmjdl);  
                 $objPHPExcel2->mergeCells('A7:A9')->setCellValue('A7',' Tanggal/Shift');            
                 $objPHPExcel2->mergeCells('B7:F7')->setCellValue('B7',' Swabb Personil BFR Sortir Line 5');
                 $objPHPExcel2->mergeCells('G7:K7')->setCellValue('G7',' Swabb Personil BFR Packing Line 5 ');
                 $objPHPExcel2->mergeCells('L7:P7')->setCellValue('L7','Personil DPM Line 5');
                 $objPHPExcel2->mergeCells('Q7:U7')->setCellValue('Q7','Swabb PErsonil BFR Sorti Line 4');
                 $objPHPExcel2->mergeCells('V7:Z7')->setCellValue('V7','Swabb Personil BFR Packing Line 4');
                 $objPHPExcel2->mergeCells('AA7:AE7')->setCellValue('AA7','Personil DPM Line4','');

                 $objPHPExcel2->mergeCells('AF7:AJ7')->setCellValue('AF7','Swabb PErsonil BFR Sortir Line 5','');
                 $objPHPExcel2->mergeCells('AK7:AO7')->setCellValue('AK7','Swabb PErsonil BFR Packing Line 5');
                 $objPHPExcel2->mergeCells('AP7:AT7')->setCellValue('AP7','Personil DPM Line 5');

                $objPHPExcel2->setCellValue('AU7','Keterangan'); 
                $objPHPExcel2->setCellValue('A8','Specification');                             
                $objPHPExcel2->setCellValue('B8','Nama Personil');
                $objPHPExcel2->setCellValue('C8','TPC');
                $objPHPExcel2->setCellValue('D8','Enetero');
                $objPHPExcel2->setCellValue('E8','Ecoli');
                $objPHPExcel2->setCellValue('F8','Salmo');

                $objPHPExcel2->setCellValue('G8','Nama Personil');
                $objPHPExcel2->setCellValue('H8','TPC');
                $objPHPExcel2->setCellValue('I8','Enetero');
                $objPHPExcel2->setCellValue('J8','Ecoli');
                $objPHPExcel2->setCellValue('K8','Salmo');

                $objPHPExcel2->setCellValue('L8','Nama Personil');
                $objPHPExcel2->setCellValue('M8','TPC');
                $objPHPExcel2->setCellValue('N8','Enetero');
                $objPHPExcel2->setCellValue('O8','Ecoli');
                $objPHPExcel2->setCellValue('P8','Salmo');

                $objPHPExcel2->setCellValue('Q8','Nama Personil');
                $objPHPExcel2->setCellValue('R8','TPC');
                $objPHPExcel2->setCellValue('S8','Enetero');
                $objPHPExcel2->setCellValue('T8','Ecoli');
                $objPHPExcel2->setCellValue('U8','Salmo');

                $objPHPExcel2->setCellValue('V8','Nama Personil');
                $objPHPExcel2->setCellValue('W8','TPC');
                $objPHPExcel2->setCellValue('X8','Enetero');
                $objPHPExcel2->setCellValue('Y8','Ecoli');
                $objPHPExcel2->setCellValue('Z8','Salmo');


                $objPHPExcel2->setCellValue('AA8','Nama Personil');
                $objPHPExcel2->setCellValue('AB8','TPC');
                $objPHPExcel2->setCellValue('AC8','Enetero');
                $objPHPExcel2->setCellValue('AD8','Ecoli');
                $objPHPExcel2->setCellValue('AE8','Salmo');

                $objPHPExcel2->setCellValue('AF8','Nama Personil');
                $objPHPExcel2->setCellValue('AG8','TPC');
                $objPHPExcel2->setCellValue('AH8','Enetero');
                $objPHPExcel2->setCellValue('AI8','Ecoli');
                $objPHPExcel2->setCellValue('AJ8','Salmo');

                $objPHPExcel2->setCellValue('AK8','Nama Personil');
                $objPHPExcel2->setCellValue('AL8','TPC');
                $objPHPExcel2->setCellValue('AM8','Enetero');
                $objPHPExcel2->setCellValue('AN8','Ecoli');
                $objPHPExcel2->setCellValue('AO8','Salmo');


                $objPHPExcel2->setCellValue('AP8','Nama Personil');
                $objPHPExcel2->setCellValue('AQ8','TPC');
                $objPHPExcel2->setCellValue('AR8','Enetero');
                $objPHPExcel2->setCellValue('AS8','Ecoli');
                $objPHPExcel2->setCellValue('AT8','Salmo');   



                $objPHPExcel2->setCellValue('B9','');
                $objPHPExcel2->setCellValue('C9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('D9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('E9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('F9','ABS/400cm2');

                $objPHPExcel2->setCellValue('G9','');
                $objPHPExcel2->setCellValue('H9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('I9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('J9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('K9','ABS/400cm2');

                $objPHPExcel2->setCellValue('L9','');
                $objPHPExcel2->setCellValue('M9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('N9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('O9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('P9','ABS/400cm2');

                $objPHPExcel2->setCellValue('Q9','');
                $objPHPExcel2->setCellValue('R9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('S9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('T9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('U9','ABS/400cm2');

                $objPHPExcel2->setCellValue('V9','');
                $objPHPExcel2->setCellValue('W9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('X9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('Y9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('Z9','ABS/400cm2');


                $objPHPExcel2->setCellValue('AA9','');
                $objPHPExcel2->setCellValue('AB9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('AC9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('AD9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('AE9','ABS/400cm2');

                $objPHPExcel2->setCellValue('AF9','');
                $objPHPExcel2->setCellValue('AG9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('AH9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('AI9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('AJ9','ABS/400cm2');

                $objPHPExcel2->setCellValue('AK9','');
                $objPHPExcel2->setCellValue('AL9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('AM9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('AN9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('AO9','ABS/400cm2');

                $objPHPExcel2->setCellValue('AP9','');
                $objPHPExcel2->setCellValue('AQ9','Max 700cfu/400cm2');
                $objPHPExcel2->setCellValue('AR9','Max 55cfu/400cm2');
                $objPHPExcel2->setCellValue('AS9','ABS/ 400cm2');
                $objPHPExcel2->setCellValue('AT9','ABS/400cm2');
                $objPHPExcel2->setCellValue('AU9','');
                
                $objPHPExcel2->setSharedStyle($headerStyle, 'A2:AU10');
                
                  
                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail2)){
                 $rowCount2 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail2 as $row2){
                 $tgl_sampling = $row2->tgl_sampling;
                 $shift        = $row2->shift;
                 $sl1_name     = $row2->sl1_name;
                 $sl1_tpc      = $row2->sl1_tpc;
                 $sl1_entero   = $row2->sl1_entero;
                 $sl1_ecoli    = $row2->sl1_ecoli;
                 $sl1_salmo    = $row2->sl1_salmo;

                 $pl1_name   = $row2->pl1_name;
                 $pl1_tpc    = $row2->pl1_tpc;
                 $pl1_entero = $row2->pl1_entero;
                 $pl1_ecoli  = $row2->pl1_ecoli;
                 $pl1_salmo  = $row2->pl1_salmo;

                 $dpml1_name   = $row2->dpml1_name;
                 $dpml1_tpc    = $row2->dpml1_tpc;
                 $dpml1_entero = $row2->dpml1_entero;
                 $dpml1_ecoli  = $row2->dpml1_ecoli;
                 $dpml1_salmo  = $row2->dpml1_salmo;


                 $sl4_name   = $row2->sl4_name;
                 $sl4_tpc    = $row2->sl4_tpc;
                 $sl4_entero = $row2->sl4_entero;
                 $sl4_ecoli  = $row2->sl4_ecoli;
                 $sl4_salmo  = $row2->sl4_salmo;


                 $pl4_name   = $row2->pl4_name;
                 $pl4_tpc    = $row2->pl4_tpc;
                 $pl4_entero = $row2->pl4_entero;
                 $pl4_ecoli  = $row2->pl4_ecoli;
                 $pl4_salmo  = $row2->pl4_salmo;


                 $dpml4_name   = $row2->dpml4_name;
                 $dpml4_tpc    = $row2->dpml4_tpc;
                 $dpml4_entero = $row2->dpml4_entero;
                 $dpml4_ecoli  = $row2->dpml4_ecoli;
                 $dpml4_salmo  = $row2->dpml4_salmo;


                 $sl5_name   = $row2->sl5_name;
                 $sl5_tpc    = $row2->sl5_tpc;
                 $sl5_entero = $row2->sl5_entero;
                 $sl5_ecoli  = $row2->sl5_ecoli;
                 $sl5_salmo  = $row2->sl5_salmo;

                 $pl5_name   = $row2->pl5_name;
                 $pl5_tpc    = $row2->pl5_tpc;
                 $pl5_entero = $row2->pl5_entero;
                 $pl5_ecoli  = $row2->pl5_ecoli;
                 $pl5_salmo  = $row2->pl5_salmo;


                 $dpml5_name   = $row2->dpml5_name;
                 $dpml5_tpc    = $row2->dpml5_tpc;
                 $dpml5_entero = $row2->dpml5_entero;
                 $dpml5_ecoli  = $row2->dpml5_ecoli;
                 $dpml5_salmo  = $row2->dpml5_salmo;

                 $rowCount2++;

                 $objPHPExcel2->setSharedStyle($bodyStyle, 'A'.$rowCount2.':AU'.$rowCount2);
                 $objPHPExcel2->setCellValue('A'.$rowCount2,$tgl_sampling.'/'.$shift);
                 
                 $objPHPExcel2->setCellValue('B'.$rowCount2,$sl1_name);
                 $objPHPExcel2->setCellValue('C'.$rowCount2,$sl1_tpc);
                 $objPHPExcel2->setCellValue('D'.$rowCount2,$sl1_entero);
                 $objPHPExcel2->setCellValue('E'.$rowCount2,$sl1_ecoli);
                 $objPHPExcel2->setCellValue('F'.$rowCount2,$sl1_salmo);

                 $objPHPExcel2->setCellValue('G'.$rowCount2,$pl1_name);
                 $objPHPExcel2->setCellValue('H'.$rowCount2,$pl1_tpc);
                 $objPHPExcel2->setCellValue('I'.$rowCount2,$pl1_entero);
                 $objPHPExcel2->setCellValue('J'.$rowCount2,$pl1_ecoli);
                 $objPHPExcel2->setCellValue('K'.$rowCount2,$pl1_salmo);


                 $objPHPExcel2->setCellValue('L'.$rowCount2,$dpml1_name);
                 $objPHPExcel2->setCellValue('M'.$rowCount2,$dpml1_tpc);
                 $objPHPExcel2->setCellValue('N'.$rowCount2,$dpml1_entero);
                 $objPHPExcel2->setCellValue('O'.$rowCount2,$dpml1_ecoli);
                 $objPHPExcel2->setCellValue('P'.$rowCount2,$dpml1_salmo);

                 $objPHPExcel2->setCellValue('Q'.$rowCount2,$sl4_name);
                 $objPHPExcel2->setCellValue('R'.$rowCount2,$sl4_tpc);
                 $objPHPExcel2->setCellValue('S'.$rowCount2,$sl4_entero);
                 $objPHPExcel2->setCellValue('T'.$rowCount2,$sl4_ecoli);
                 $objPHPExcel2->setCellValue('U'.$rowCount2,$sl4_salmo);

                 $objPHPExcel2->setCellValue('V'.$rowCount2,$pl4_name);
                 $objPHPExcel2->setCellValue('W'.$rowCount2,$pl4_tpc);
                 $objPHPExcel2->setCellValue('X'.$rowCount2,$pl4_entero);
                 $objPHPExcel2->setCellValue('Y'.$rowCount2,$pl4_ecoli);
                 $objPHPExcel2->setCellValue('Z'.$rowCount2,$pl4_salmo);

                 $objPHPExcel2->setCellValue('AA'.$rowCount2,$dpml4_name);
                 $objPHPExcel2->setCellValue('AB'.$rowCount2,$dpml4_tpc);
                 $objPHPExcel2->setCellValue('AC'.$rowCount2,$dpml4_entero);
                 $objPHPExcel2->setCellValue('AD'.$rowCount2,$dpml4_ecoli);
                 $objPHPExcel2->setCellValue('AE'.$rowCount2,$dpml4_salmo);

                 $objPHPExcel2->setCellValue('AF'.$rowCount2,$sl5_name);
                 $objPHPExcel2->setCellValue('AG'.$rowCount2,$sl5_tpc);
                 $objPHPExcel2->setCellValue('AH'.$rowCount2,$sl5_entero);
                 $objPHPExcel2->setCellValue('AI'.$rowCount2,$sl5_ecoli);
                 $objPHPExcel2->setCellValue('AJ'.$rowCount2,$sl5_salmo);

                 $objPHPExcel2->setCellValue('AK'.$rowCount2,$pl5_name);
                 $objPHPExcel2->setCellValue('AL'.$rowCount2,$pl5_tpc);
                 $objPHPExcel2->setCellValue('AM'.$rowCount2,$pl5_entero);
                 $objPHPExcel2->setCellValue('AN'.$rowCount2,$pl5_ecoli);
                 $objPHPExcel2->setCellValue('AO'.$rowCount2,$pl5_salmo);  

                 $objPHPExcel2->setCellValue('AP'.$rowCount2,$dpml5_name);
                 $objPHPExcel2->setCellValue('AQ'.$rowCount2,$dpml5_tpc);
                 $objPHPExcel2->setCellValue('AR'.$rowCount2,$dpml5_entero);
                 $objPHPExcel2->setCellValue('AS'.$rowCount2,$dpml5_ecoli);
                 $objPHPExcel2->setCellValue('AT'.$rowCount2,$dpml5_salmo);
                 $objPHPExcel2->setCellValue('AU'.$rowCount2,'');                

                 $no++;
                    }
                }

                $dttglStart  = $this->uri->segment(8);
                $dttglFinish = $this->uri->segment(9);
                          
               if(isset($dtdetail2)){
    
                 foreach ($dtdetail2 as $row2){
                          
                 $dt_sl1_tpc2   []  = $row2->sl1_tpc;
                 $dt_sl1_entero2 [] = $row2->sl1_entero;
                 $dt_sl1_ecoli2  [] = $row2->sl1_ecoli;
                 $dt_sl1_salmo2 []  = $row2->sl1_salmo;
               
                 $dt_pl1_tpc2   [] = $row2->pl1_tpc;
                 $dt_pl1_entero2[] = $row2->pl1_entero;
                 $dt_pl1_ecoli2 [] = $row2->pl1_ecoli;
                 $dt_pl1_salmo2 [] = $row2->pl1_salmo;

                 $dt_dpml1_tpc2   [] = $row2->dpml1_tpc;
                 $dt_dpml1_entero2[] = $row2->dpml1_entero;
                 $dt_dpml1_ecoli2 [] = $row2->dpml1_ecoli;
                 $dt_dpml1_salmo2 [] = $row2->dpml1_salmo;

               
                 $dt_sl4_tpc2   [] = $row2->sl4_tpc;
                 $dt_sl4_entero2[] = $row2->sl4_entero;
                 $dt_sl4_ecoli2 [] = $row2->sl4_ecoli;
                 $dt_sl4_salmo2 [] = $row2->sl4_salmo;

                 $dt_pl4_tpc2   [] = $row2->pl4_tpc;
                 $dt_pl4_entero2[] = $row2->pl4_entero;
                 $dt_pl4_ecoli2 [] = $row2->pl4_ecoli;
                 $dt_pl4_salmo2 [] = $row2->pl4_salmo;

                 $dt_dpml4_tpc2   [] = $row2->dpml4_tpc;
                 $dt_dpml4_entero2[] = $row2->dpml4_entero;
                 $dt_dpml4_ecoli2 [] = $row2->dpml4_ecoli;
                 $dt_dpml4_salmo2 [] = $row2->dpml4_salmo;

                 $dt_sl5_tpc2   [] = $row2->sl5_tpc;
                 $dt_sl5_entero2[] = $row2->sl5_entero;
                 $dt_sl5_ecoli2 [] = $row2->sl5_ecoli;
                 $dt_sl5_salmo2 [] = $row2->sl5_salmo;

                 $dt_pl5_tpc2   [] = $row2->pl5_tpc;
                 $dt_pl5_entero2[] = $row2->pl5_entero;
                 $dt_pl5_ecoli2 [] = $row2->pl5_ecoli;
                 $dt_pl5_salmo2 [] = $row2->pl5_salmo;

                 $dt_dpml5_name2  [] = $row2->dpml5_name;
                 $dt_dpml5_tpc2   [] = $row2->dpml5_tpc;
                 $dt_dpml5_entero2[] = $row2->dpml5_entero;
                 $dt_dpml5_ecoli2 [] = $row2->dpml5_ecoli;
                 $dt_dpml5_salmo2 [] = $row2->dpml5_salmo;


                $ndtsl1_tpc2    = array_diff($dt_sl1_tpc2, array('',0));
                $ndtsl1_entero2 = array_diff($dt_sl1_entero2, array('',0));
                $ndtsl1_ecoli2  = array_diff($dt_sl1_ecoli2, array('',0));
                $ndtsl1_salmo2  = array_diff($dt_sl1_salmo2, array('',0));

                $ndtpl1_tpc2    = array_diff($dt_pl1_tpc2 , array('',0));
                $ndtpl1_entero2 = array_diff($dt_pl1_entero2 , array('',0));
                $ndtpl1_ecoli2  = array_diff($dt_pl1_ecoli2 , array('',0));
                $ndtpl1_salmo2  = array_diff($dt_pl1_salmo2 , array('',0));


                $ndtdpml1_tpc2    = array_diff($dt_dpml1_tpc2 , array('',0));
                $ndtdpml1_entero2 = array_diff($dt_dpml1_entero2 , array('',0));
                $ndtdpml1_ecoli2  = array_diff($dt_dpml1_ecoli2 , array('',0));
                $ndtdpml1_salmo2  = array_diff($dt_dpml1_salmo2 , array('',0));


          
                $ndtsl4_tpc2    = array_diff($dt_sl4_tpc2 , array('',0));
                $ndtsl4_entero2 = array_diff($dt_sl4_entero2 , array('',0));
                $ndtsl4_ecoli2  = array_diff($dt_sl4_ecoli2 , array('',0));
                $ndtsl4_salmo2  = array_diff($dt_sl4_salmo2 , array('',0));

                $ndtpl4_tpc2    = array_diff($dt_pl4_tpc2 , array('',0));
                $ndtpl4_entero2 = array_diff($dt_pl4_entero2 , array('',0));
                $ndtpl4_ecoli2  = array_diff($dt_pl4_ecoli2 , array('',0));
                $ndtpl4_salmo2  = array_diff($dt_pl4_salmo2 , array('',0));

                $ndtdpml4_tpc2    = array_diff($dt_dpml4_tpc2 , array('',0));
                $ndtdpml4_entero2 = array_diff($dt_dpml4_entero2 , array('',0));
                $ndtdpml4_ecoli2  = array_diff($dt_dpml4_ecoli2 , array('',0));
                $ndtdpml4_salmo2  = array_diff($dt_dpml4_salmo2 , array('',0));

                $ndtsl5_tpc2    = array_diff($dt_sl5_tpc2 , array('',0));
                $ndtsl5_entero2 = array_diff($dt_sl5_entero2 , array('',0));
                $ndtsl5_ecoli2  = array_diff($dt_sl5_ecoli2 , array('',0));
                $ndtsl5_salmo2  = array_diff($dt_sl5_salmo2 , array('',0));

                $ndtpl5_tpc2    = array_diff($dt_pl5_tpc2 , array('',0));
                $ndtpl5_entero2 = array_diff($dt_pl5_entero2 , array('',0));
                $ndtpl5_ecoli2  = array_diff($dt_pl5_ecoli2 , array('',0));
                $ndtpl5_salmo2  = array_diff($dt_pl5_salmo2 , array('',0));

                $ndtdpml5_tpc2    = array_diff($dt_dpml5_tpc2 , array('',0));
                $ndtdpml5_entero2 = array_diff($dt_dpml5_entero2 , array('',0));
                $ndtdpml5_ecoli2  = array_diff($dt_dpml5_ecoli2 , array('',0));
                $ndtdpml5_salmo2  = array_diff($dt_dpml5_salmo2 , array('',0));


                }
                 if(is_array($ndtsl1_tpc2) && count ($ndtsl1_tpc2) > 0)
                {
                    $Minsl1_tpc2   = min($ndtsl1_tpc2);
                    $Maxsl1_tpc2   = max($ndtsl1_tpc2);
                    $Avgsl1_tpc2   = number_format((array_sum($ndtsl1_tpc2)) /(count($ndtsl1_tpc2)),2);
                    $Countsl1_tpc2 = count($ndtsl1_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl1_tpc2    = array_sum($ndtsl1_tpc2) / count($ndtsl1_tpc2);
                    $fvariantsl1_tpc2 = 0.00;
                    $xsamplesl1_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtsl1_tpc2 as $i){
                    $fvariantsl1_tpc2 += pow($i - $fmeansl1_tpc2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl1_tpc2 /= ($xsamplesl1_tpc2 ? count($ndtsl1_tpc2)-1 : count($ndtsl1_tpc2));
                    $stdevsl1_tpc2     = number_format(sqrt($fvariantsl1_tpc2),2);
                    $totalsl1_tpc2     = count($ndtsl1_tpc2);
                    $inspectsl1_tpc2   = $dt1;
                    $outspectsl1_tpc2  = $dt2;
                    $prsoutsl1_tpc2    = number_format((($dt2 /$totalsl1_tpc2)* (100)),2);

                } else {

                    $Minsl1_tpc2      = '';
                    $Maxsl1_tpc2      = '';
                    $Avgsl1_tpc2      = '';
                    $stdevsl1_tpc2    = '';
                    $totalsl1_tpc2    = '';
                    $inspectsl1_tpc2  = '';
                    $outspectsl1_tpc2 = '';
                    $prsoutsl1_tpc2   = '';
                }
                 if(is_array($ndtsl1_entero2) && count ($ndtsl1_entero2) > 0)
                {
                    $Minsl1_entero2   = min($ndtsl1_entero2);
                    $Maxsl1_entero2   = max($ndtsl1_entero2);
                    $Avgsl1_entero2   = number_format((array_sum($ndtsl1_entero2)) /(count($ndtsl1_entero2)),2);
                    $Countsl1_entero2 = count($ndtsl1_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl1_entero2    = array_sum($ndtsl1_entero2) / count($ndtsl1_entero2);
                    $fvariantsl1_entero2 = 0.00;
                    $xsamplesl1_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtsl1_entero2 as $i){
                    $fvariantsl1_entero2 += pow($i - $fmeansl1_entero2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl1_entero2 /= ($xsamplesl1_entero2 ? count($ndtsl1_entero2)-1 : count($ndtsl1_entero2));
                    $stdevsl1_entero2     = number_format(sqrt($fvariantsl1_entero2),2);
                    $totalsl1_entero2     = count($ndtsl1_entero2);
                    $inspectsl1_entero2   = $dt1;
                    $outspectsl1_entero2  = $dt2;
                    $prsoutsl1_entero2    = number_format((($dt2 /$totalsl1_entero2)* (100)),2);

                } else {

                    $Minsl1_entero2      = '';
                    $Maxsl1_entero2      = '';
                    $Avgsl1_entero2      = '';
                    $stdevsl1_entero2    = '';
                    $totalsl1_entero2    = '';
                    $inspectsl1_entero2  = '';
                    $outspectsl1_entero2 = '';
                    $prsoutsl1_entero2   = '';
                }

                    if(is_array($ndtsl1_ecoli2) && count ($ndtsl1_ecoli2) > 0)
                {
                    $Minsl1_ecoli2   = min($ndtsl1_ecoli2);
                    $Maxsl1_ecoli2   = max($ndtsl1_ecoli2);
                    $Avgsl1_ecoli2   = number_format((array_sum($ndtsl1_ecoli2)) /(count($ndtsl1_ecoli2)),2);
                    $Countsl1_ecoli2 = count($ndtsl1_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl1_ecoli2    = array_sum($ndtsl1_ecoli2) / count($ndtsl1_ecoli2);
                    $fvariantsl1_ecoli2 = 0.00;
                    $xsamplesl1_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl1_ecoli2 as $i){
                    $fvariantsl1_ecoli2 += pow($i - $fmeansl1_ecoli2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl1_ecoli2 /= ($xsamplesl1_ecoli2 ? count($ndtsl1_ecoli2)-1 : count($ndtsl1_ecoli2));
                    $stdevsl1_ecoli2     = number_format(sqrt($fvariantsl1_ecoli2),2);
                    $totalsl1_ecoli2     = count($ndtsl1_ecoli2);
                    $inspectsl1_ecoli2   = $dt1;
                    $outspectsl1_ecoli2  = $dt2;
                    $prsoutsl1_ecoli2    = number_format((($dt2 /$totalsl1_ecoli2)* (100)),2);

                } else {

                    $Minsl1_ecoli2      = '';
                    $Maxsl1_ecoli2      = '';
                    $Avgsl1_ecoli2      = '';
                    $stdevsl1_ecoli2    = '';
                    $totalsl1_ecoli2    = '';
                    $inspectsl1_ecoli2  = '';
                    $outspectsl1_ecoli2 = '';
                    $prsoutsl1_ecoli2   = '';
                }

                    if(is_array($ndtsl1_salmo2) && count ($ndtsl1_salmo2) > 0)
                {
                    $Minsl1_salmo2   = min($ndtsl1_salmo2);
                    $Maxsl1_salmo2   = max($ndtsl1_salmo2);
                    $Avgsl1_salmo2   = number_format((array_sum($ndtsl1_salmo2)) /(count($ndtsl1_salmo2)),2);
                    $Countsl1_salmo2 = count($ndtsl1_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl1_salmo2    = array_sum($ndtsl1_salmo2) / count($ndtsl1_salmo2);
                    $fvariantsl1_salmo2 = 0.00;
                    $xsamplesl1_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl1_salmo2 as $i){
                    $fvariantsl1_salmo2 += pow($i - $fmeansl1_salmo2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl1_salmo2 /= ($xsamplesl1_salmo2 ? count($ndtsl1_salmo2)-1 : count($ndtsl1_salmo2));
                    $stdevsl1_salmo2     = number_format(sqrt($fvariantsl1_salmo2),2);
                    $totalsl1_salmo2     = count($ndtsl1_salmo2);
                    $inspectsl1_salmo2   = $dt1;
                    $outspectsl1_salmo2  = $dt2;
                    $prsoutsl1_salmo2    = number_format((($dt2 /$totalsl1_salmo2)* (100)),2);

                } else {

                    $Minsl1_salmo2      = '';
                    $Maxsl1_salmo2      = '';
                    $Avgsl1_salmo2      = '';
                    $stdevsl1_salmo2    = '';
                    $totalsl1_salmo2    = '';
                    $inspectsl1_salmo2  = '';
                    $outspectsl1_salmo2 = '';
                    $prsoutsl1_salmo2   = '';
                }


                    if(is_array($ndtpl1_tpc2) && count ($ndtpl1_tpc2) > 0)
                {
                    $Minpl1_tpc2   = min($ndtpl1_tpc2);
                    $Maxpl1_tpc2   = max($ndtpl1_tpc2);
                    $Avgpl1_tpc2   = number_format((array_sum($ndtpl1_tpc2)) /(count($ndtpl1_tpc2)),2);
                    $Countpl1_tpc2 = count($ndtpl1_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl1_tpc2    = array_sum($ndtpl1_tpc2) / count($ndtpl1_tpc2);
                    $fvariantpl1_tpc2 = 0.00;
                    $xsamplepl1_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtpl1_tpc2 as $i){
                    $fvariantpl1_tpc2 += pow($i - $fmeanpl1_tpc2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl1_tpc2 /= ($xsamplepl1_tpc2 ? count($ndtpl1_tpc2)-1 : count($ndtpl1_tpc2));
                    $stdevpl1_tpc2     = number_format(sqrt($fvariantpl1_tpc2),2);
                    $totalpl1_tpc2     = count($ndtpl1_tpc2);
                    $inspectpl1_tpc2   = $dt1;
                    $outspectpl1_tpc2  = $dt2;
                    $prsoutpl1_tpc2    = number_format((($dt2 /$totalpl1_tpc2)* (100)),2);

                } else {

                    $Minpl1_tpc2      = '';
                    $Maxpl1_tpc2      = '';
                    $Avgpl1_tpc2      = '';
                    $stdevpl1_tpc2    = '';
                    $totalpl1_tpc2    = '';
                    $inspectpl1_tpc2  = '';
                    $outspectpl1_tpc2 = '';
                    $prsoutpl1_tpc2   = '';
                }


                       if(is_array($ndtpl1_entero2) && count ($ndtpl1_entero2) > 0)
                {
                    $Minpl1_entero2   = min($ndtpl1_entero2);
                    $Maxpl1_entero2   = max($ndtpl1_entero2);
                    $Avgpl1_entero2   = number_format((array_sum($ndtpl1_entero2)) /(count($ndtpl1_entero2)),2);
                    $Countpl1_entero2 = count($ndtpl1_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl1_entero2    = array_sum($ndtpl1_entero2) / count($ndtpl1_entero2);
                    $fvariantpl1_entero2 = 0.00;
                    $xsamplepl1_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtpl1_entero2 as $i){
                    $fvariantpl1_entero2 += pow($i - $fmeanpl1_entero2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl1_entero2 /= ($xsamplepl1_entero2 ? count($ndtpl1_entero2)-1 : count($ndtpl1_entero2));
                    $stdevpl1_entero2     = number_format(sqrt($fvariantpl1_entero2),2);
                    $totalpl1_entero2     = count($ndtpl1_entero2);
                    $inspectpl1_entero2   = $dt1;
                    $outspectpl1_entero2  = $dt2;
                    $prsoutpl1_entero2    = number_format((($dt2 /$totalpl1_entero2)* (100)),2);

                } else {

                    $Minpl1_entero2      = '';
                    $Maxpl1_entero2      = '';
                    $Avgpl1_entero2      = '';
                    $stdevpl1_entero2    = '';
                    $totalpl1_entero2    = '';
                    $inspectpl1_entero2  = '';
                    $outspectpl1_entero2 = '';
                    $prsoutpl1_entero2   = '';
                }

                    if(is_array($ndtpl1_ecoli2) && count ($ndtpl1_ecoli2) > 0)
                {
                    $Minpl1_ecoli2   = min($ndtpl1_ecoli2);
                    $Maxpl1_ecoli2   = max($ndtpl1_ecoli2);
                    $Avgpl1_ecoli2   = number_format((array_sum($ndtpl1_ecoli2)) /(count($ndtpl1_ecoli2)),2);
                    $Countpl1_ecoli2 = count($ndtpl1_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl1_ecoli2    = array_sum($ndtpl1_ecoli2) / count($ndtpl1_ecoli2);
                    $fvariantpl1_ecoli2 = 0.00;
                    $xsamplepl1_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl1_ecoli2 as $i){
                    $fvariantpl1_ecoli2 += pow($i - $fmeanpl1_ecoli2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl1_ecoli2 /= ($xsamplepl1_ecoli2 ? count($ndtpl1_ecoli2)-1 : count($ndtpl1_ecoli2));
                    $stdevpl1_ecoli2     = number_format(sqrt($fvariantpl1_ecoli2),2);
                    $totalpl1_ecoli2     = count($ndtpl1_ecoli2);
                    $inspectpl1_ecoli2   = $dt1;
                    $outspectpl1_ecoli2  = $dt2;
                    $prsoutpl1_ecoli2    = number_format((($dt2 /$totalpl1_ecoli2)* (100)),2);

                } else {

                    $Minpl1_ecoli2      = '';
                    $Maxpl1_ecoli2      = '';
                    $Avgpl1_ecoli2      = '';
                    $stdevpl1_ecoli2    = '';
                    $totalpl1_ecoli2    = '';
                    $inspectpl1_ecoli2  = '';
                    $outspectpl1_ecoli2 = '';
                    $prsoutpl1_ecoli2   = '';
                }


                    if(is_array($ndtpl1_salmo2) && count ($ndtpl1_salmo2) > 0)
                {
                    $Minpl1_salmo2   = min($ndtpl1_salmo2);
                    $Maxpl1_salmo2   = max($ndtpl1_salmo2);
                    $Avgpl1_salmo2   = number_format((array_sum($ndtpl1_salmo2)) /(count($ndtpl1_salmo2)),2);
                    $Countpl1_salmo2 = count($ndtpl1_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl1_salmo2    = array_sum($ndtpl1_salmo2) / count($ndtpl1_salmo2);
                    $fvariantpl1_salmo2 = 0.00;
                    $xsamplepl1_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl1_salmo2 as $i){
                    $fvariantpl1_salmo2 += pow($i - $fmeanpl1_salmo2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl1_salmo2 /= ($xsamplepl1_salmo2 ? count($ndtpl1_salmo2)-1 : count($ndtpl1_salmo2));
                    $stdevpl1_salmo2     = number_format(sqrt($fvariantpl1_salmo2),2);
                    $totalpl1_salmo2     = count($ndtpl1_salmo2);
                    $inspectpl1_salmo2   = $dt1;
                    $outspectpl1_salmo2  = $dt2;
                    $prsoutpl1_salmo2    = number_format((($dt2 /$totalpl1_salmo2)* (100)),2);

                } else {

                    $Minpl1_salmo2      = '';
                    $Maxpl1_salmo2      = '';
                    $Avgpl1_salmo2      = '';
                    $stdevpl1_salmo2    = '';
                    $totalpl1_salmo2    = '';
                    $inspectpl1_salmo2  = '';
                    $outspectpl1_salmo2 = '';
                    $prsoutpl1_salmo2   = '';
                }

                  if(is_array($ndtdpml1_tpc2) && count ($ndtdpml1_tpc2) > 0)
                {
                    $Mindpml1_tpc2   = min($ndtdpml1_tpc2);
                    $Maxdpml1_tpc2   = max($ndtdpml1_tpc2);
                    $Avgdpml1_tpc2   = number_format((array_sum($ndtdpml1_tpc2)) /(count($ndtdpml1_tpc2)),2);
                    $Countdpml1_tpc2 = count($ndtdpml1_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml1_tpc2    = array_sum($ndtdpml1_tpc2) / count($ndtdpml1_tpc2);
                    $fvariantdpml1_tpc2 = 0.00;
                    $xsampledpml1_tpc2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtdpml1_tpc2 as $i){
                    $fvariantdpml1_tpc2 += pow($i - $fmeandpml1_tpc2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml1_tpc2 /= ($xsampledpml1_tpc2 ? count($ndtdpml1_tpc2)-1 : count($ndtdpml1_tpc2));
                    $stdevdpml1_tpc2     = number_format(sqrt($fvariantdpml1_tpc2),2);
                    $totaldpml1_tpc2     = count($ndtdpml1_tpc2);
                    $inspectdpml1_tpc2   = $dt1;
                    $outspectdpml1_tpc2  = $dt2;
                    $prsoutdpml1_tpc2    = number_format((($dt2 /$totaldpml1_tpc2)* (100)),2);

                } else {

                    $Mindpml1_tpc2      = '';
                    $Maxdpml1_tpc2      = '';
                    $Avgdpml1_tpc2      = '';
                    $stdevdpml1_tpc2    = '';
                    $totaldpml1_tpc2    = '';
                    $inspectdpml1_tpc2  = '';
                    $outspectdpml1_tpc2 = '';
                    $prsoutdpml1_tpc2   = '';
                }

                  if(is_array($ndtdpml1_entero2) && count ($ndtdpml1_entero2) > 0)
                {
                    $Mindpml1_entero2   = min($ndtdpml1_entero2);
                    $Maxdpml1_entero2   = max($ndtdpml1_entero2);
                    $Avgdpml1_entero2   = number_format((array_sum($ndtdpml1_entero2)) /(count($ndtdpml1_entero2)),2);
                    $Countdpml1_entero2 = count($ndtdpml1_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml1_entero2    = array_sum($ndtdpml1_entero2) / count($ndtdpml1_entero2);
                    $fvariantdpml1_entero2 = 0.00;
                    $xsampledpml1_entero2  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtdpml1_entero2 as $i){
                    $fvariantdpml1_entero2 += pow($i - $fmeandpml1_entero2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml1_entero2 /= ($xsampledpml1_entero2 ? count($ndtdpml1_entero2)-1 : count($ndtdpml1_entero2));
                    $stdevdpml1_entero2     = number_format(sqrt($fvariantdpml1_entero2),2);
                    $totaldpml1_entero2     = count($ndtdpml1_entero2);
                    $inspectdpml1_entero2   = $dt1;
                    $outspectdpml1_entero2  = $dt2;
                    $prsoutdpml1_entero2    = number_format((($dt2 /$totaldpml1_entero2)* (100)),2);

                } else {

                    $Mindpml1_entero2      = '';
                    $Maxdpml1_entero2      = '';
                    $Avgdpml1_entero2      = '';
                    $stdevdpml1_entero2    = '';
                    $totaldpml1_entero2    = '';
                    $inspectdpml1_entero2  = '';
                    $outspectdpml1_entero2 = '';
                    $prsoutdpml1_entero2   = '';
                }

                 if(is_array($ndtdpml1_salmo2) && count ($ndtdpml1_salmo2) > 0)
                {
                    $Mindpml1_salmo2   = min($ndtdpml1_salmo2);
                    $Maxdpml1_salmo2   = max($ndtdpml1_salmo2);
                    $Avgdpml1_salmo2   = number_format((array_sum($ndtdpml1_salmo2)) /(count($ndtdpml1_salmo2)),2);
                    $Countdpml1_salmo2 = count($ndtdpml1_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml1_salmo2    = array_sum($ndtdpml1_salmo2) / count($ndtdpml1_salmo2);
                    $fvariantdpml1_salmo2 = 0.00;
                    $xsampledpml1_salmo2  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtdpml1_salmo2 as $i){
                    $fvariantdpml1_salmo2 += pow($i - $fmeandpml1_salmo2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml1_salmo2 /= ($xsampledpml1_salmo2 ? count($ndtdpml1_salmo2)-1 : count($ndtdpml1_salmo2));
                    $stdevdpml1_salmo2     = number_format(sqrt($fvariantdpml1_salmo2),2);
                    $totaldpml1_salmo2     = count($ndtdpml1_salmo2);
                    $inspectdpml1_salmo2   = $dt1;
                    $outspectdpml1_salmo2  = $dt2;
                    $prsoutdpml1_salmo2    = number_format((($dt2 /$totaldpml1_salmo2)* (100)),2);

                } else {

                    $Mindpml1_salmo2      = '';
                    $Maxdpml1_salmo2      = '';
                    $Avgdpml1_salmo2      = '';
                    $stdevdpml1_salmo2    = '';
                    $totaldpml1_salmo2    = '';
                    $inspectdpml1_salmo2  = '';
                    $outspectdpml1_salmo2 = '';
                    $prsoutdpml1_salmo2   = '';
                }


                    if(is_array($ndtsl4_tpc2) && count ($ndtsl4_tpc2) > 0)
                {
                    $Minsl4_tpc2   = min($ndtsl4_tpc2);
                    $Maxsl4_tpc2   = max($ndtsl4_tpc2);
                    $Avgsl4_tpc2   = number_format((array_sum($ndtsl4_tpc2)) /(count($ndtsl4_tpc2)),2);
                    $Countsl4_tpc2 = count($ndtsl4_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl4_tpc2    = array_sum($ndtsl4_tpc2) / count($ndtsl4_tpc2);
                    $fvariantsl4_tpc2 = 0.00;
                    $xsamplesl4_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtsl4_tpc2 as $i){
                    $fvariantsl4_tpc2 += pow($i - $fmeansl4_tpc2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl4_tpc2 /= ($xsamplesl4_tpc2 ? count($ndtsl4_tpc2)-1 : count($ndtsl4_tpc2));
                    $stdevsl4_tpc2     = number_format(sqrt($fvariantsl4_tpc2),2);
                    $totalsl4_tpc2     = count($ndtsl4_tpc2);
                    $inspectsl4_tpc2   = $dt1;
                    $outspectsl4_tpc2  = $dt2;
                    $prsoutsl4_tpc2    = number_format((($dt2 /$totalsl4_tpc2)* (100)),2);

                } else {

                    $Minsl4_tpc2      = '';
                    $Maxsl4_tpc2      = '';
                    $Avgsl4_tpc2      = '';
                    $stdevsl4_tpc2    = '';
                    $totalsl4_tpc2    = '';
                    $inspectsl4_tpc2  = '';
                    $outspectsl4_tpc2 = '';
                    $prsoutsl4_tpc2   = '';
                }

                  if(is_array($ndtsl4_entero2) && count ($ndtsl4_entero2) > 0)
                {
                    $Minsl4_entero2   = min($ndtsl4_entero2);
                    $Maxsl4_entero2   = max($ndtsl4_entero2);
                    $Avgsl4_entero2   = number_format((array_sum($ndtsl4_entero2)) /(count($ndtsl4_entero2)),2);
                    $Countsl4_entero2 = count($ndtsl4_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl4_entero2    = array_sum($ndtsl4_entero2) / count($ndtsl4_entero2);
                    $fvariantsl4_entero2 = 0.00;
                    $xsamplesl4_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtsl4_entero2 as $i){
                    $fvariantsl4_entero2 += pow($i - $fmeansl4_entero2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl4_entero2 /= ($xsamplesl4_entero2  ? count($ndtsl4_entero2)-1 : count($ndtsl4_entero2));
                    $stdevsl4_entero2     = number_format(sqrt($fvariantsl4_entero2 ),2);
                    $totalsl4_entero2     = count($ndtsl4_entero2);
                    $inspectsl4_entero2   = $dt1;
                    $outspectsl4_entero2  = $dt2;
                    $prsoutsl4_entero2    = number_format((($dt2 /$totalsl4_entero2 )* (100)),2);

                } else {

                    $Minsl4_entero2      = '';
                    $Maxsl4_entero2      = '';
                    $Avgsl4_entero2      = '';
                    $stdevsl4_entero2    = '';
                    $totalsl4_entero2    = '';
                    $inspectsl4_entero2  = '';
                    $outspectsl4_entero2 = '';
                    $prsoutsl4_entero2   = '';
                }


                    if(is_array($ndtsl4_ecoli2) && count ($ndtsl4_ecoli2) > 0)
                {
                    $Minsl4_ecoli2   = min($ndtsl4_ecoli2);
                    $Maxsl4_ecoli2   = max($ndtsl4_ecoli2);
                    $Avgsl4_ecoli2   = number_format((array_sum($ndtsl4_ecoli2)) /(count($ndtsl4_ecoli2)),2);
                    $Countsl4_ecoli2 = count($ndtsl4_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl4_ecoli2    = array_sum($ndtsl4_ecoli2) / count($ndtsl4_ecoli2);
                    $fvariantsl4_ecoli2 = 0.00;
                    $xsamplesl4_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl4_ecoli2 as $i){
                    $fvariantsl4_ecoli2 += pow($i - $fmeansl4_ecoli2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl4_ecoli2 /= ($xsamplesl4_ecoli2  ? count($ndtsl4_ecoli2)-1 : count($ndtsl4_ecoli2));
                    $stdevsl4_ecoli2     = number_format(sqrt($fvariantsl4_ecoli2 ),2);
                    $totalsl4_ecoli2     = count($ndtsl4_ecoli2);
                    $inspectsl4_ecoli2   = $dt1;
                    $outspectsl4_ecoli2  = $dt2;
                    $prsoutsl4_ecoli2    = number_format((($dt2 /$totalsl4_ecoli2 )* (100)),2);

                } else {

                    $Minsl4_ecoli2      = '';
                    $Maxsl4_ecoli2      = '';
                    $Avgsl4_ecoli2      = '';
                    $stdevsl4_ecoli2    = '';
                    $totalsl4_ecoli2    = '';
                    $inspectsl4_ecoli2  = '';
                    $outspectsl4_ecoli2 = '';
                    $prsoutsl4_ecoli2   = '';
                }



                    if(is_array($ndtsl4_salmo2) && count ($ndtsl4_salmo2) > 0)
                {
                    $Minsl4_salmo2   = min($ndtsl4_salmo2);
                    $Maxsl4_salmo2   = max($ndtsl4_salmo2);
                    $Avgsl4_salmo2   = number_format((array_sum($ndtsl4_salmo2)) /(count($ndtsl4_salmo2)),2);
                    $Countsl4_salmo2 = count($ndtsl4_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl4_salmo2    = array_sum($ndtsl4_salmo2) / count($ndtsl4_salmo2);
                    $fvariantsl4_salmo2 = 0.00;
                    $xsamplesl4_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl4_salmo2 as $i){
                    $fvariantsl4_salmo2 += pow($i - $fmeansl4_salmo2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl4_salmo2 /= ($xsamplesl4_salmo2  ? count($ndtsl4_salmo2)-1 : count($ndtsl4_salmo2));
                    $stdevsl4_salmo2     = number_format(sqrt($fvariantsl4_salmo2 ),2);
                    $totalsl4_salmo2     = count($ndtsl4_salmo2);
                    $inspectsl4_salmo2   = $dt1;
                    $outspectsl4_salmo2  = $dt2;
                    $prsoutsl4_salmo2    = number_format((($dt2 /$totalsl4_salmo2 )* (100)),2);

                } else {

                    $Minsl4_salmo2      = '';
                    $Maxsl4_salmo2      = '';
                    $Avgsl4_salmo2      = '';
                    $stdevsl4_salmo2    = '';
                    $totalsl4_salmo2    = '';
                    $inspectsl4_salmo2  = '';
                    $outspectsl4_salmo2 = '';
                    $prsoutsl4_salmo2   = '';
                }

                    if(is_array($ndtpl4_tpc2) && count ($ndtpl4_tpc2) > 0)
                {
                    $Minpl4_tpc2   = min($ndtpl4_tpc2);
                    $Maxpl4_tpc2   = max($ndtpl4_tpc2);
                    $Avgpl4_tpc2   = number_format((array_sum($ndtpl4_tpc2)) /(count($ndtpl4_tpc2)),2);
                    $Countpl4_tpc2 = count($ndtpl4_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_tpc2    = array_sum($ndtpl4_tpc2) / count($ndtpl4_tpc2);
                    $fvariantpl4_tpc2 = 0.00;
                    $xsamplepl4_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtpl4_tpc2 as $i){
                    $fvariantpl4_tpc2 += pow($i - $fmeanpl4_tpc2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_tpc2 /= ($xsamplepl4_tpc2  ? count($ndtpl4_tpc2)-1 : count($ndtpl4_tpc2));
                    $stdevpl4_tpc2     = number_format(sqrt($fvariantpl4_tpc2 ),2);
                    $totalpl4_tpc2     = count($ndtpl4_tpc2);
                    $inspectpl4_tpc2   = $dt1;
                    $outspectpl4_tpc2  = $dt2;
                    $prsoutpl4_tpc2    = number_format((($dt2 /$totalpl4_tpc2 )* (100)),2);

                } else {

                    $Minpl4_tpc2      = '';
                    $Maxpl4_tpc2      = '';
                    $Avgpl4_tpc2      = '';
                    $stdevpl4_tpc2    = '';
                    $totalpl4_tpc2    = '';
                    $inspectpl4_tpc2  = '';
                    $outspectpl4_tpc2 = '';
                    $prsoutpl4_tpc2   = '';
                }

                   if(is_array($ndtpl4_entero2) && count ($ndtpl4_entero2) > 0)
                {
                    $Minpl4_entero2   = min($ndtpl4_entero2);
                    $Maxpl4_entero2   = max($ndtpl4_entero2);
                    $Avgpl4_entero2   = number_format((array_sum($ndtpl4_entero2)) /(count($ndtpl4_entero2)),2);
                    $Countpl4_entero2 = count($ndtpl4_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_entero2    = array_sum($ndtpl4_entero2) / count($ndtpl4_entero2);
                    $fvariantpl4_entero2 = 0.00;
                    $xsamplepl4_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtpl4_entero2 as $i){
                    $fvariantpl4_entero2 += pow($i - $fmeanpl4_entero2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_entero2 /= ($xsamplepl4_entero2  ? count($ndtpl4_entero2)-1 : count($ndtpl4_entero2));
                    $stdevpl4_entero2     = number_format(sqrt($fvariantpl4_entero2 ),2);
                    $totalpl4_entero2     = count($ndtpl4_entero2);
                    $inspectpl4_entero2   = $dt1;
                    $outspectpl4_entero2  = $dt2;
                    $prsoutpl4_entero2    = number_format((($dt2 /$totalpl4_entero2 )* (100)),2);

                } else {

                    $Minpl4_entero2      = '';
                    $Maxpl4_entero2      = '';
                    $Avgpl4_entero2      = '';
                    $stdevpl4_entero2    = '';
                    $totalpl4_entero2    = '';
                    $inspectpl4_entero2  = '';
                    $outspectpl4_entero2 = '';
                    $prsoutpl4_entero2   = '';
                }

                           if(is_array($ndtpl4_ecoli2) && count ($ndtpl4_ecoli2) > 0)
                {
                    $Minpl4_ecoli2   = min($ndtpl4_ecoli2);
                    $Maxpl4_ecoli2   = max($ndtpl4_ecoli2);
                    $Avgpl4_ecoli2   = number_format((array_sum($ndtpl4_ecoli2)) /(count($ndtpl4_ecoli2)),2);
                    $Countpl4_ecoli2 = count($ndtpl4_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_ecoli2    = array_sum($ndtpl4_ecoli2) / count($ndtpl4_ecoli2);
                    $fvariantpl4_ecoli2 = 0.00;
                    $xsamplepl4_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl4_ecoli2 as $i){
                    $fvariantpl4_ecoli2 += pow($i - $fmeanpl4_ecoli2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_ecoli2 /= ($xsamplepl4_ecoli2  ? count($ndtpl4_ecoli2)-1 : count($ndtpl4_ecoli2));
                    $stdevpl4_ecoli2     = number_format(sqrt($fvariantpl4_ecoli2 ),2);
                    $totalpl4_ecoli2     = count($ndtpl4_ecoli2);
                    $inspectpl4_ecoli2   = $dt1;
                    $outspectpl4_ecoli2  = $dt2;
                    $prsoutpl4_ecoli2    = number_format((($dt2 /$totalpl4_ecoli2 )* (100)),2);

                } else {

                    $Minpl4_ecoli2      = '';
                    $Maxpl4_ecoli2      = '';
                    $Avgpl4_ecoli2      = '';
                    $stdevpl4_ecoli2    = '';
                    $totalpl4_ecoli2    = '';
                    $inspectpl4_ecoli2  = '';
                    $outspectpl4_ecoli2 = '';
                    $prsoutpl4_ecoli2   = '';
                }

                          if(is_array($ndtpl4_salmo2) && count ($ndtpl4_salmo2) > 0)
                {
                    $Minpl4_salmo2   = min($ndtpl4_salmo2);
                    $Maxpl4_salmo2   = max($ndtpl4_salmo2);
                    $Avgpl4_salmo2   = number_format((array_sum($ndtpl4_salmo2)) /(count($ndtpl4_salmo2)),2);
                    $Countpl4_salmo2 = count($ndtpl4_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_salmo2    = array_sum($ndtpl4_salmo2) / count($ndtpl4_salmo2);
                    $fvariantpl4_salmo2 = 0.00;
                    $xsamplepl4_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl4_salmo2 as $i){
                    $fvariantpl4_salmo2 += pow($i - $fmeanpl4_salmo2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_salmo2 /= ($xsamplepl4_salmo2  ? count($ndtpl4_salmo2)-1 : count($ndtpl4_salmo2));
                    $stdevpl4_salmo2     = number_format(sqrt($fvariantpl4_salmo2 ),2);
                    $totalpl4_salmo2     = count($ndtpl4_salmo2);
                    $inspectpl4_salmo2   = $dt1;
                    $outspectpl4_salmo2  = $dt2;
                    $prsoutpl4_salmo2    = number_format((($dt2 /$totalpl4_salmo2 )* (100)),2);

                } else {

                    $Minpl4_salmo2      = '';
                    $Maxpl4_salmo2      = '';
                    $Avgpl4_salmo2      = '';
                    $stdevpl4_salmo2    = '';
                    $totalpl4_salmo2    = '';
                    $inspectpl4_salmo2  = '';
                    $outspectpl4_salmo2 = '';
                    $prsoutpl4_salmo2   = '';
                }

                               if(is_array($ndtpl4_tpc2) && count ($ndtpl4_tpc2) > 0)
                {
                    $Minpl4_tpc2   = min($ndtpl4_tpc2);
                    $Maxpl4_tpc2   = max($ndtpl4_tpc2);
                    $Avgpl4_tpc2   = number_format((array_sum($ndtpl4_tpc2)) /(count($ndtpl4_tpc2)),2);
                    $Countpl4_tpc2 = count($ndtpl4_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_tpc2    = array_sum($ndtpl4_tpc2) / count($ndtpl4_tpc2);
                    $fvariantpl4_tpc2 = 0.00;
                    $xsamplepl4_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtpl4_tpc2 as $i){
                    $fvariantpl4_tpc2 += pow($i - $fmeanpl4_tpc2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_tpc2 /= ($xsamplepl4_tpc2  ? count($ndtpl4_tpc2)-1 : count($ndtpl4_tpc2));
                    $stdevpl4_tpc2     = number_format(sqrt($fvariantpl4_tpc2 ),2);
                    $totalpl4_tpc2     = count($ndtpl4_tpc2);
                    $inspectpl4_tpc2   = $dt1;
                    $outspectpl4_tpc2  = $dt2;
                    $prsoutpl4_tpc2    = number_format((($dt2 /$totalpl4_tpc2 )* (100)),2);

                } else {

                    $Minpl4_tpc2      = '';
                    $Maxpl4_tpc2      = '';
                    $Avgpl4_tpc2      = '';
                    $stdevpl4_tpc2    = '';
                    $totalpl4_tpc2    = '';
                    $inspectpl4_tpc2  = '';
                    $outspectpl4_tpc2 = '';
                    $prsoutpl4_tpc2   = '';
                }

                              if(is_array($ndtpl4_entero2) && count ($ndtpl4_entero2) > 0)
                {
                    $Minpl4_entero2   = min($ndtpl4_entero2);
                    $Maxpl4_entero2   = max($ndtpl4_entero2);
                    $Avgpl4_entero2   = number_format((array_sum($ndtpl4_entero2)) /(count($ndtpl4_entero2)),2);
                    $Countpl4_entero2 = count($ndtpl4_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_entero2    = array_sum($ndtpl4_entero2) / count($ndtpl4_entero2);
                    $fvariantpl4_entero2 = 0.00;
                    $xsamplepl4_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtpl4_entero2 as $i){
                    $fvariantpl4_entero2 += pow($i - $fmeanpl4_entero2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_entero2 /= ($xsamplepl4_entero2  ? count($ndtpl4_entero2)-1 : count($ndtpl4_entero2));
                    $stdevpl4_entero2     = number_format(sqrt($fvariantpl4_entero2 ),2);
                    $totalpl4_entero2     = count($ndtpl4_entero2);
                    $inspectpl4_entero2   = $dt1;
                    $outspectpl4_entero2  = $dt2;
                    $prsoutpl4_entero2    = number_format((($dt2 /$totalpl4_entero2 )* (100)),2);

                } else {

                    $Minpl4_entero2      = '';
                    $Maxpl4_entero2      = '';
                    $Avgpl4_entero2      = '';
                    $stdevpl4_entero2    = '';
                    $totalpl4_entero2    = '';
                    $inspectpl4_entero2  = '';
                    $outspectpl4_entero2 = '';
                    $prsoutpl4_entero2   = '';
                }


                               if(is_array($ndtpl4_ecoli2) && count ($ndtpl4_ecoli2) > 0)
                {
                    $Minpl4_ecoli2   = min($ndtpl4_ecoli2);
                    $Maxpl4_ecoli2   = max($ndtpl4_ecoli2);
                    $Avgpl4_ecoli2   = number_format((array_sum($ndtpl4_ecoli2)) /(count($ndtpl4_ecoli2)),2);
                    $Countpl4_ecoli2 = count($ndtpl4_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_ecoli2    = array_sum($ndtpl4_ecoli2) / count($ndtpl4_ecoli2);
                    $fvariantpl4_ecoli2 = 0.00;
                    $xsamplepl4_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl4_ecoli2 as $i){
                    $fvariantpl4_ecoli2 += pow($i - $fmeanpl4_ecoli2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_ecoli2 /= ($xsamplepl4_ecoli2  ? count($ndtpl4_ecoli2)-1 : count($ndtpl4_ecoli2));
                    $stdevpl4_ecoli2     = number_format(sqrt($fvariantpl4_ecoli2 ),2);
                    $totalpl4_ecoli2     = count($ndtpl4_ecoli2);
                    $inspectpl4_ecoli2   = $dt1;
                    $outspectpl4_ecoli2  = $dt2;
                    $prsoutpl4_ecoli2    = number_format((($dt2 /$totalpl4_ecoli2 )* (100)),2);

                } else {

                    $Minpl4_ecoli2      = '';
                    $Maxpl4_ecoli2      = '';
                    $Avgpl4_ecoli2      = '';
                    $stdevpl4_ecoli2    = '';
                    $totalpl4_ecoli2    = '';
                    $inspectpl4_ecoli2  = '';
                    $outspectpl4_ecoli2 = '';
                    $prsoutpl4_ecoli2   = '';
                }

                       if(is_array($ndtpl4_salmo2) && count ($ndtpl4_salmo2) > 0)
                {
                    $Minpl4_salmo2   = min($ndtpl4_salmo2);
                    $Maxpl4_salmo2   = max($ndtpl4_salmo2);
                    $Avgpl4_salmo2   = number_format((array_sum($ndtpl4_salmo2)) /(count($ndtpl4_salmo2)),2);
                    $Countpl4_salmo2 = count($ndtpl4_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl4_salmo2    = array_sum($ndtpl4_salmo2) / count($ndtpl4_salmo2);
                    $fvariantpl4_salmo2 = 0.00;
                    $xsamplepl4_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl4_salmo2 as $i){
                    $fvariantpl4_salmo2 += pow($i - $fmeanpl4_salmo2  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl4_salmo2 /= ($xsamplepl4_salmo2  ? count($ndtpl4_salmo2)-1 : count($ndtpl4_salmo2));
                    $stdevpl4_salmo2     = number_format(sqrt($fvariantpl4_salmo2 ),2);
                    $totalpl4_salmo2     = count($ndtpl4_salmo2);
                    $inspectpl4_salmo2   = $dt1;
                    $outspectpl4_salmo2  = $dt2;
                    $prsoutpl4_salmo2    = number_format((($dt2 /$totalpl4_salmo2 )* (100)),2);

                } else {

                    $Minpl4_salmo2      = '';
                    $Maxpl4_salmo2      = '';
                    $Avgpl4_salmo2      = '';
                    $stdevpl4_salmo2    = '';
                    $totalpl4_salmo2    = '';
                    $inspectpl4_salmo2  = '';
                    $outspectpl4_salmo2 = '';
                    $prsoutpl4_salmo2   = '';
                }

                  if(is_array($ndtdpml4_tpc2) && count ($ndtdpml4_tpc2) > 0)
                {
                    $Mindpml4_tpc2   = min($ndtdpml4_tpc2);
                    $Maxdpml4_tpc2   = max($ndtdpml4_tpc2);
                    $Avgdpml4_tpc2   = number_format((array_sum($ndtdpml4_tpc2)) /(count($ndtdpml4_tpc2)),2);
                    $Countdpml4_tpc2 = count($ndtdpml4_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml4_tpc2    = array_sum($ndtdpml4_tpc2) / count($ndtdpml4_tpc2);
                    $fvariantdpml4_tpc2 = 0.00;
                    $xsampledpml4_tpc2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtdpml4_tpc2 as $i){
                    $fvariantdpml4_tpc2 += pow($i - $fmeandpml4_tpc2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml4_tpc2 /= ($xsampledpml4_tpc2   ? count($ndtdpml4_tpc2)-1 : count($ndtdpml4_tpc2));
                    $stdevdpml4_tpc2     = number_format(sqrt($fvariantdpml4_tpc2  ),2);
                    $totaldpml4_tpc2     = count($ndtdpml4_tpc2);
                    $inspectdpml4_tpc2   = $dt1;
                    $outspectdpml4_tpc2  = $dt2;
                    $prsoutdpml4_tpc2    = number_format((($dt2 /$totaldpml4_tpc2  )* (100)),2);

                } else {

                    $Mindpml4_tpc2      = '';
                    $Maxdpml4_tpc2      = '';
                    $Avgdpml4_tpc2      = '';
                    $stdevdpml4_tpc2    = '';
                    $totaldpml4_tpc2    = '';
                    $inspectdpml4_tpc2  = '';
                    $outspectdpml4_tpc2 = '';
                    $prsoutdpml4_tpc2   = '';
                }

                if(is_array($ndtdpml4_entero2) && count ($ndtdpml4_entero2) > 0)
                {
                    $Mindpml4_entero2   = min($ndtdpml4_entero2);
                    $Maxdpml4_entero2   = max($ndtdpml4_entero2);
                    $Avgdpml4_entero2   = number_format((array_sum($ndtdpml4_entero2)) /(count($ndtdpml4_entero2)),2);
                    $Countdpml4_entero2 = count($ndtdpml4_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml4_entero2    = array_sum($ndtdpml4_entero2) / count($ndtdpml4_entero2);
                    $fvariantdpml4_entero2 = 0.00;
                    $xsampledpml4_entero2  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtdpml4_entero2 as $i){
                    $fvariantdpml4_entero2 += pow($i - $fmeandpml4_entero2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml4_entero2 /= ($xsampledpml4_entero2   ? count($ndtdpml4_entero2)-1 : count($ndtdpml4_entero2));
                    $stdevdpml4_entero2     = number_format(sqrt($fvariantdpml4_entero2  ),2);
                    $totaldpml4_entero2     = count($ndtdpml4_entero2);
                    $inspectdpml4_entero2   = $dt1;
                    $outspectdpml4_entero2  = $dt2;
                    $prsoutdpml4_entero2    = number_format((($dt2 /$totaldpml4_entero2  )* (100)),2);

                } else {

                    $Mindpml4_entero2      = '';
                    $Maxdpml4_entero2      = '';
                    $Avgdpml4_entero2      = '';
                    $stdevdpml4_entero2    = '';
                    $totaldpml4_entero2    = '';
                    $inspectdpml4_entero2  = '';
                    $outspectdpml4_entero2 = '';
                    $prsoutdpml4_entero2   = '';
                }

                 if(is_array($ndtdpml4_ecoli2) && count ($ndtdpml4_ecoli2) > 0)
                {
                    $Mindpml4_ecoli2   = min($ndtdpml4_ecoli2);
                    $Maxdpml4_ecoli2   = max($ndtdpml4_ecoli2);
                    $Avgdpml4_ecoli2   = number_format((array_sum($ndtdpml4_ecoli2)) /(count($ndtdpml4_ecoli2)),2);
                    $Countdpml4_ecoli2 = count($ndtdpml4_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml4_ecoli2    = array_sum($ndtdpml4_ecoli2) / count($ndtdpml4_ecoli2);
                    $fvariantdpml4_ecoli2 = 0.00;
                    $xsampledpml4_ecoli2  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtdpml4_ecoli2 as $i){
                    $fvariantdpml4_ecoli2 += pow($i - $fmeandpml4_ecoli2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml4_ecoli2 /= ($xsampledpml4_ecoli2   ? count($ndtdpml4_ecoli2)-1 : count($ndtdpml4_ecoli2));
                    $stdevdpml4_ecoli2     = number_format(sqrt($fvariantdpml4_ecoli2  ),2);
                    $totaldpml4_ecoli2     = count($ndtdpml4_ecoli2);
                    $inspectdpml4_ecoli2   = $dt1;
                    $outspectdpml4_ecoli2  = $dt2;
                    $prsoutdpml4_ecoli2    = number_format((($dt2 /$totaldpml4_ecoli2  )* (100)),2);

                } else {

                    $Mindpml4_ecoli2      = '';
                    $Maxdpml4_ecoli2      = '';
                    $Avgdpml4_ecoli2      = '';
                    $stdevdpml4_ecoli2    = '';
                    $totaldpml4_ecoli2    = '';
                    $inspectdpml4_ecoli2  = '';
                    $outspectdpml4_ecoli2 = '';
                    $prsoutdpml4_ecoli2   = '';
                }

                    if(is_array($ndtdpml4_salmo2) && count ($ndtdpml4_salmo2) > 0)
                {
                    $Mindpml4_salmo2   = min($ndtdpml4_salmo2);
                    $Maxdpml4_salmo2   = max($ndtdpml4_salmo2);
                    $Avgdpml4_salmo2   = number_format((array_sum($ndtdpml4_salmo2)) /(count($ndtdpml4_salmo2)),2);
                    $Countdpml4_salmo2 = count($ndtdpml4_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml4_salmo2    = array_sum($ndtdpml4_salmo2) / count($ndtdpml4_salmo2);
                    $fvariantdpml4_salmo2 = 0.00;
                    $xsampledpml4_salmo2  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtdpml4_salmo2 as $i){
                    $fvariantdpml4_salmo2 += pow($i - $fmeandpml4_salmo2   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml4_salmo2 /= ($xsampledpml4_salmo2   ? count($ndtdpml4_salmo2)-1 : count($ndtdpml4_salmo2));
                    $stdevdpml4_salmo2     = number_format(sqrt($fvariantdpml4_salmo2  ),2);
                    $totaldpml4_salmo2     = count($ndtdpml4_salmo2);
                    $inspectdpml4_salmo2   = $dt1;
                    $outspectdpml4_salmo2  = $dt2;
                    $prsoutdpml4_salmo2    = number_format((($dt2 /$totaldpml4_salmo2  )* (100)),2);

                } else {

                    $Mindpml4_salmo2      = '';
                    $Maxdpml4_salmo2      = '';
                    $Avgdpml4_salmo2      = '';
                    $stdevdpml4_salmo2    = '';
                    $totaldpml4_salmo2    = '';
                    $inspectdpml4_salmo2  = '';
                    $outspectdpml4_salmo2 = '';
                    $prsoutdpml4_salmo2   = '';
                }


                     if(is_array($ndtsl5_tpc2) && count ($ndtsl5_tpc2) > 0)
                {
                    $Minsl5_tpc2   = min($ndtsl5_tpc2);
                    $Maxsl5_tpc2   = max($ndtsl5_tpc2);
                    $Avgsl5_tpc2   = number_format((array_sum($ndtsl5_tpc2)) /(count($ndtsl5_tpc2)),2);
                    $Countsl5_tpc2 = count($ndtsl5_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl5_tpc2    = array_sum($ndtsl5_tpc2) / count($ndtsl5_tpc2);
                    $fvariantsl5_tpc2 = 0.00;
                    $xsamplesl5_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtsl5_tpc2 as $i){
                    $fvariantsl5_tpc2 += pow($i - $fmeansl5_tpc2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl5_tpc2 /= ($xsamplesl5_tpc2    ? count($ndtsl5_tpc2)-1 : count($ndtsl5_tpc2));
                    $stdevsl5_tpc2     = number_format(sqrt($fvariantsl5_tpc2   ),2);
                    $totalsl5_tpc2     = count($ndtsl5_tpc2);
                    $inspectsl5_tpc2   = $dt1;
                    $outspectsl5_tpc2  = $dt2;
                    $prsoutsl5_tpc2    = number_format((($dt2 /$totalsl5_tpc2   )* (100)),2);

                } else {

                    $Minsl5_tpc2      = '';
                    $Maxsl5_tpc2      = '';
                    $Avgsl5_tpc2      = '';
                    $stdevsl5_tpc2    = '';
                    $totalsl5_tpc2    = '';
                    $inspectsl5_tpc2  = '';
                    $outspectsl5_tpc2 = '';
                    $prsoutsl5_tpc2   = '';
                }

                 if(is_array($ndtsl5_entero2) && count ($ndtsl5_entero2) > 0)
                {
                    $Minsl5_entero2   = min($ndtsl5_entero2);
                    $Maxsl5_entero2   = max($ndtsl5_entero2);
                    $Avgsl5_entero2   = number_format((array_sum($ndtsl5_entero2)) /(count($ndtsl5_entero2)),2);
                    $Countsl5_entero2 = count($ndtsl5_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl5_entero2    = array_sum($ndtsl5_entero2) / count($ndtsl5_entero2);
                    $fvariantsl5_entero2 = 0.00;
                    $xsamplesl5_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtsl5_entero2 as $i){
                    $fvariantsl5_entero2 += pow($i - $fmeansl5_entero2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl5_entero2 /= ($xsamplesl5_entero2    ? count($ndtsl5_entero2)-1 : count($ndtsl5_entero2));
                    $stdevsl5_entero2     = number_format(sqrt($fvariantsl5_entero2   ),2);
                    $totalsl5_entero2     = count($ndtsl5_entero2);
                    $inspectsl5_entero2   = $dt1;
                    $outspectsl5_entero2  = $dt2;
                    $prsoutsl5_entero2    = number_format((($dt2 /$totalsl5_entero2   )* (100)),2);

                } else {

                    $Minsl5_entero2      = '';
                    $Maxsl5_entero2      = '';
                    $Avgsl5_entero2      = '';
                    $stdevsl5_entero2    = '';
                    $totalsl5_entero2    = '';
                    $inspectsl5_entero2  = '';
                    $outspectsl5_entero2 = '';
                    $prsoutsl5_entero2   = '';
                }


                 if(is_array($ndtsl5_ecoli2) && count ($ndtsl5_ecoli2) > 0)
                {
                    $Minsl5_ecoli2   = min($ndtsl5_ecoli2);
                    $Maxsl5_ecoli2   = max($ndtsl5_ecoli2);
                    $Avgsl5_ecoli2   = number_format((array_sum($ndtsl5_ecoli2)) /(count($ndtsl5_ecoli2)),2);
                    $Countsl5_ecoli2 = count($ndtsl5_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl5_ecoli2    = array_sum($ndtsl5_ecoli2) / count($ndtsl5_ecoli2);
                    $fvariantsl5_ecoli2 = 0.00;
                    $xsamplesl5_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl5_ecoli2 as $i){
                    $fvariantsl5_ecoli2 += pow($i - $fmeansl5_ecoli2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl5_ecoli2 /= ($xsamplesl5_ecoli2    ? count($ndtsl5_ecoli2)-1 : count($ndtsl5_ecoli2));
                    $stdevsl5_ecoli2     = number_format(sqrt($fvariantsl5_ecoli2   ),2);
                    $totalsl5_ecoli2     = count($ndtsl5_ecoli2);
                    $inspectsl5_ecoli2   = $dt1;
                    $outspectsl5_ecoli2  = $dt2;
                    $prsoutsl5_ecoli2    = number_format((($dt2 /$totalsl5_ecoli2   )* (100)),2);

                } else {

                    $Minsl5_ecoli2      = '';
                    $Maxsl5_ecoli2      = '';
                    $Avgsl5_ecoli2      = '';
                    $stdevsl5_ecoli2    = '';
                    $totalsl5_ecoli2    = '';
                    $inspectsl5_ecoli2  = '';
                    $outspectsl5_ecoli2 = '';
                    $prsoutsl5_ecoli2   = '';
                }



                 if(is_array($ndtsl5_salmo2) && count ($ndtsl5_salmo2) > 0)
                {
                    $Minsl5_salmo2   = min($ndtsl5_salmo2);
                    $Maxsl5_salmo2   = max($ndtsl5_salmo2);
                    $Avgsl5_salmo2   = number_format((array_sum($ndtsl5_salmo2)) /(count($ndtsl5_salmo2)),2);
                    $Countsl5_salmo2 = count($ndtsl5_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansl5_salmo2    = array_sum($ndtsl5_salmo2) / count($ndtsl5_salmo2);
                    $fvariantsl5_salmo2 = 0.00;
                    $xsamplesl5_salmo2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtsl5_salmo2 as $i){
                    $fvariantsl5_salmo2 += pow($i - $fmeansl5_salmo2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsl5_salmo2 /= ($xsamplesl5_salmo2    ? count($ndtsl5_salmo2)-1 : count($ndtsl5_salmo2));
                    $stdevsl5_salmo2     = number_format(sqrt($fvariantsl5_salmo2   ),2);
                    $totalsl5_salmo2     = count($ndtsl5_salmo2);
                    $inspectsl5_salmo2   = $dt1;
                    $outspectsl5_salmo2  = $dt2;
                    $prsoutsl5_salmo2    = number_format((($dt2 /$totalsl5_salmo2   )* (100)),2);

                } else {

                    $Minsl5_salmo2      = '';
                    $Maxsl5_salmo2      = '';
                    $Avgsl5_salmo2      = '';
                    $stdevsl5_salmo2    = '';
                    $totalsl5_salmo2    = '';
                    $inspectsl5_salmo2  = '';
                    $outspectsl5_salmo2 = '';
                    $prsoutsl5_salmo2   = '';
                }

                 if(is_array($ndtpl5_tpc2) && count ($ndtpl5_tpc2) > 0)
                {
                    $Minpl5_tpc2   = min($ndtpl5_tpc2);
                    $Maxpl5_tpc2   = max($ndtpl5_tpc2);
                    $Avgpl5_tpc2   = number_format((array_sum($ndtpl5_tpc2)) /(count($ndtpl5_tpc2)),2);
                    $Countpl5_tpc2 = count($ndtpl5_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl5_tpc2    = array_sum($ndtpl5_tpc2) / count($ndtpl5_tpc2);
                    $fvariantpl5_tpc2 = 0.00;
                    $xsamplepl5_tpc2  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtpl5_tpc2 as $i){
                    $fvariantpl5_tpc2 += pow($i - $fmeanpl5_tpc2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl5_tpc2 /= ($xsamplepl5_tpc2    ? count($ndtpl5_tpc2)-1 : count($ndtpl5_tpc2));
                    $stdevpl5_tpc2     = number_format(sqrt($fvariantpl5_tpc2   ),2);
                    $totalpl5_tpc2     = count($ndtpl5_tpc2);
                    $inspectpl5_tpc2   = $dt1;
                    $outspectpl5_tpc2  = $dt2;
                    $prsoutpl5_tpc2    = number_format((($dt2 /$totalpl5_tpc2   )* (100)),2);

                } else {

                    $Minpl5_tpc2      = '';
                    $Maxpl5_tpc2      = '';
                    $Avgpl5_tpc2      = '';
                    $stdevpl5_tpc2    = '';
                    $totalpl5_tpc2    = '';
                    $inspectpl5_tpc2  = '';
                    $outspectpl5_tpc2 = '';
                    $prsoutpl5_tpc2   = '';
                }

                     if(is_array($ndtpl5_entero2) && count ($ndtpl5_entero2) > 0)
                {
                    $Minpl5_entero2   = min($ndtpl5_entero2);
                    $Maxpl5_entero2   = max($ndtpl5_entero2);
                    $Avgpl5_entero2   = number_format((array_sum($ndtpl5_entero2)) /(count($ndtpl5_entero2)),2);
                    $Countpl5_entero2 = count($ndtpl5_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl5_entero2    = array_sum($ndtpl5_entero2) / count($ndtpl5_entero2);
                    $fvariantpl5_entero2 = 0.00;
                    $xsamplepl5_entero2  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtpl5_entero2 as $i){
                    $fvariantpl5_entero2 += pow($i - $fmeanpl5_entero2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl5_entero2 /= ($xsamplepl5_entero2    ? count($ndtpl5_entero2)-1 : count($ndtpl5_entero2));
                    $stdevpl5_entero2     = number_format(sqrt($fvariantpl5_entero2   ),2);
                    $totalpl5_entero2     = count($ndtpl5_entero2);
                    $inspectpl5_entero2   = $dt1;
                    $outspectpl5_entero2  = $dt2;
                    $prsoutpl5_entero2    = number_format((($dt2 /$totalpl5_entero2   )* (100)),2);

                } else {

                    $Minpl5_entero2      = '';
                    $Maxpl5_entero2      = '';
                    $Avgpl5_entero2      = '';
                    $stdevpl5_entero2    = '';
                    $totalpl5_entero2    = '';
                    $inspectpl5_entero2  = '';
                    $outspectpl5_entero2 = '';
                    $prsoutpl5_entero2   = '';
                }

                    if(is_array($ndtpl5_ecoli2) && count ($ndtpl5_ecoli2) > 0)
                {
                    $Minpl5_ecoli2   = min($ndtpl5_ecoli2);
                    $Maxpl5_ecoli2   = max($ndtpl5_ecoli2);
                    $Avgpl5_ecoli2   = number_format((array_sum($ndtpl5_ecoli2)) /(count($ndtpl5_ecoli2)),2);
                    $Countpl5_ecoli2 = count($ndtpl5_ecoli2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanpl5_ecoli2    = array_sum($ndtpl5_ecoli2) / count($ndtpl5_ecoli2);
                    $fvariantpl5_ecoli2 = 0.00;
                    $xsamplepl5_ecoli2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtpl5_ecoli2 as $i){
                    $fvariantpl5_ecoli2 += pow($i - $fmeanpl5_ecoli2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantpl5_ecoli2 /= ($xsamplepl5_ecoli2    ? count($ndtpl5_ecoli2)-1 : count($ndtpl5_ecoli2));
                    $stdevpl5_ecoli2     = number_format(sqrt($fvariantpl5_ecoli2   ),2);
                    $totalpl5_ecoli2     = count($ndtpl5_ecoli2);
                    $inspectpl5_ecoli2   = $dt1;
                    $outspectpl5_ecoli2  = $dt2;
                    $prsoutpl5_ecoli2    = number_format((($dt2 /$totalpl5_ecoli2   )* (100)),2);

                } else {

                    $Minpl5_ecoli2      = '';
                    $Maxpl5_ecoli2      = '';
                    $Avgpl5_ecoli2      = '';
                    $stdevpl5_ecoli2    = '';
                    $totalpl5_ecoli2    = '';
                    $inspectpl5_ecoli2  = '';
                    $outspectpl5_ecoli2 = '';
                    $prsoutpl5_ecoli2   = '';
                }

                   if(is_array($ndtdpml5_salmo2) && count ($ndtdpml5_salmo2) > 0)
                {
                    $Mindpml5_salmo2   = min($ndtdpml5_salmo2);
                    $Maxdpml5_salmo2   = max($ndtdpml5_salmo2);
                    $Avgdpml5_salmo2   = number_format((array_sum($ndtdpml5_salmo2)) /(count($ndtdpml5_salmo2)),2);
                    $Countdpml5_salmo2 = count($ndtdpml5_salmo2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml5_salmo2    = array_sum($ndtdpml5_salmo2) / count($ndtdpml5_salmo2);
                    $fvariantdpml5_salmo2 = 0.00;
                    $xsampledpml5_salmo2  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtdpml5_salmo2 as $i){
                    $fvariantdpml5_salmo2 += pow($i - $fmeandpml5_salmo2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml5_salmo2 /= ($xsampledpml5_salmo2    ? count($ndtdpml5_salmo2)-1 : count($ndtdpml5_salmo2));
                    $stdevdpml5_salmo2     = number_format(sqrt($fvariantdpml5_salmo2   ),2);
                    $totaldpml5_salmo2     = count($ndtdpml5_salmo2);
                    $inspectdpml5_salmo2   = $dt1;
                    $outspectdpml5_salmo2  = $dt2;
                    $prsoutdpml5_salmo2    = number_format((($dt2 /$totaldpml5_salmo2   )* (100)),2);

                } else {

                    $Mindpml5_salmo2      = '';
                    $Maxdpml5_salmo2      = '';
                    $Avgdpml5_salmo2      = '';
                    $stdevdpml5_salmo2    = '';
                    $totaldpml5_salmo2    = '';
                    $inspectdpml5_salmo2  = '';
                    $outspectdpml5_salmo2 = '';
                    $prsoutdpml5_salmo2   = '';
                }
                  if(is_array($ndtdpml5_tpc2) && count ($ndtdpml5_tpc2) > 0)
                {
                    $Mindpml5_tpc2   = min($ndtdpml5_tpc2);
                    $Maxdpml5_tpc2   = max($ndtdpml5_tpc2);
                    $Avgdpml5_tpc2   = number_format((array_sum($ndtdpml5_tpc2)) /(count($ndtdpml5_tpc2)),2);
                    $Countdpml5_tpc2 = count($ndtdpml5_tpc2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml5_tpc2    = array_sum($ndtdpml5_tpc2) / count($ndtdpml5_tpc2);
                    $fvariantdpml5_tpc2 = 0.00;
                    $xsampledpml5_tpc2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtdpml5_tpc2 as $i){
                    $fvariantdpml5_tpc2 += pow($i - $fmeandpml5_tpc2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml5_tpc2 /= ($xsampledpml5_tpc2    ? count($ndtdpml5_tpc2)-1 : count($ndtdpml5_tpc2));
                    $stdevdpml5_tpc2     = number_format(sqrt($fvariantdpml5_tpc2   ),2);
                    $totaldpml5_tpc2     = count($ndtdpml5_tpc2);
                    $inspectdpml5_tpc2   = $dt1;
                    $outspectdpml5_tpc2  = $dt2;
                    $prsoutdpml5_tpc2    = number_format((($dt2 /$totaldpml5_tpc2   )* (100)),2);

                } else {

                    $Mindpml5_tpc2      = '';
                    $Maxdpml5_tpc2      = '';
                    $Avgdpml5_tpc2      = '';
                    $stdevdpml5_tpc2    = '';
                    $totaldpml5_tpc2    = '';
                    $inspectdpml5_tpc2  = '';
                    $outspectdpml5_tpc2 = '';
                    $prsoutdpml5_tpc2   = '';
                }

                 if(is_array($ndtdpml5_entero2) && count ($ndtdpml5_entero2) > 0)
                {
                    $Mindpml5_entero2   = min($ndtdpml5_entero2);
                    $Maxdpml5_entero2   = max($ndtdpml5_entero2);
                    $Avgdpml5_entero2   = number_format((array_sum($ndtdpml5_entero2)) /(count($ndtdpml5_entero2)),2);
                    $Countdpml5_entero2 = count($ndtdpml5_entero2);
                    //nilai standard devisiasi (sttdev)
                    $fmeandpml5_entero2    = array_sum($ndtdpml5_entero2) / count($ndtdpml5_entero2);
                    $fvariantdpml5_entero2 = 0.00;
                    $xsampledpml5_entero2  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtdpml5_entero2 as $i){
                    $fvariantdpml5_entero2 += pow($i - $fmeandpml5_entero2    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantdpml5_entero2 /= ($xsampledpml5_entero2    ? count($ndtdpml5_entero2)-1 : count($ndtdpml5_entero2));
                    $stdevdpml5_entero2     = number_format(sqrt($fvariantdpml5_entero2   ),2);
                    $totaldpml5_entero2     = count($ndtdpml5_entero2);
                    $inspectdpml5_entero2   = $dt1;
                    $outspectdpml5_entero2  = $dt2;
                    $prsoutdpml5_entero2    = number_format((($dt2 /$totaldpml5_entero2   )* (100)),2);

                } else {

                    $Mindpml5_tpc2      = '';
                    $Maxdpml5_tpc2      = '';
                    $Avgdpml5_tpc2      = '';
                    $stdevdpml5_tpc2    = '';
                    $totaldpml5_tpc2    = '';
                    $inspectdpml5_tpc2  = '';
                    $outspectdpml5_tpc2 = '';
                    $prsoutdpml5_tpc2   = '';
                }


                 $rowfoot0  = $rowCount2+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;


                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 $objPHPExcel2->mergeCells('A'.$rowfoot0.':AU'.$rowfoot0);
                 $objPHPExcel2->setSharedStyle($cellred, 'A'.$rowfoot0.':AU'.$rowfoot0);
                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot1.':AU'.$rowfoot1);
                 $objPHPExcel2->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Average ');

                 $objPHPExcel2->setCellValue('C'.$rowfoot1,$Avgsl1_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot1,$Avgsl1_entero2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('F'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('G'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('H'.$rowfoot1,$Avgpl1_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot1,$Avgpl1_entero2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('K'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('L'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('M'.$rowfoot1,$Avgdpml1_tpc2 );                
                 $objPHPExcel2->setCellValue('N'.$rowfoot1,$Avgdpml1_entero2);
                 $objPHPExcel2->setCellValue('O'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('P'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('Q'.$rowfoot1,'');              
                 $objPHPExcel2->setCellValue('R'.$rowfoot1,$Avgsl4_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot1,$Avgsl4_entero2 );
                 $objPHPExcel2->setCellValue('T'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('U'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('V'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('W'.$rowfoot1,$Avgpl4_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot1,$Avgpl4_entero2);
                 $objPHPExcel2->setCellValue('Y'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('Z'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AA'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AB'.$rowfoot1,$Avgdpml4_tpc2);               
                 $objPHPExcel2->setCellValue('AC'.$rowfoot1,$Avgdpml4_entero2);
                 $objPHPExcel2->setCellValue('AD'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AE'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AF'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AG'.$rowfoot1,$Avgsl5_tpc2);               
                 $objPHPExcel2->setCellValue('AH'.$rowfoot1,$Avgsl5_entero2);
                 $objPHPExcel2->setCellValue('AI'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AJ'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AK'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AL'.$rowfoot1,$Avgpl5_tpc2);               
                 $objPHPExcel2->setCellValue('AM'.$rowfoot1,$Avgpl5_entero2);
                 $objPHPExcel2->setCellValue('AN'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AO'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AP'.$rowfoot1,''); 
                 $objPHPExcel2->setCellValue('AQ'.$rowfoot1,$Avgdpml5_tpc2);
                 $objPHPExcel2->setCellValue('AR'.$rowfoot1,$Avgdpml5_entero2);
                 $objPHPExcel2->setCellValue('AS'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AT'.$rowfoot1,'');
                 $objPHPExcel2->setCellValue('AU'.$rowfoot1,'');

                 $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot2.':AU'.$rowfoot2);
                 $objPHPExcel2->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Maximum ');

                 $objPHPExcel2->setCellValue('C'.$rowfoot2,$Maxsl1_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot2,$Maxsl1_entero2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('F'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('G'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('H'.$rowfoot2,$Maxpl1_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot2,$Maxpl1_entero2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('K'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('L'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('M'.$rowfoot2,$Maxdpml1_tpc2 );                
                 $objPHPExcel2->setCellValue('N'.$rowfoot2,$Maxdpml1_entero2);
                 $objPHPExcel2->setCellValue('O'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('P'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('Q'.$rowfoot2,'');              
                 $objPHPExcel2->setCellValue('R'.$rowfoot2,$Maxsl4_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot2,$Maxsl4_entero2 );
                 $objPHPExcel2->setCellValue('T'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('U'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('V'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('W'.$rowfoot2,$Maxpl4_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot2,$Maxpl4_entero2);
                 $objPHPExcel2->setCellValue('Y'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('Z'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AA'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AB'.$rowfoot2,$Maxdpml4_tpc2);               
                 $objPHPExcel2->setCellValue('AC'.$rowfoot2,$Maxdpml4_entero2);
                 $objPHPExcel2->setCellValue('AD'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AE'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AF'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AG'.$rowfoot2,$Maxsl5_tpc2);               
                 $objPHPExcel2->setCellValue('AH'.$rowfoot2,$Maxsl5_entero2);
                 $objPHPExcel2->setCellValue('AI'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AJ'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AK'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AL'.$rowfoot2,$Maxpl5_tpc2);               
                 $objPHPExcel2->setCellValue('AM'.$rowfoot2,$Maxpl5_entero2);
                 $objPHPExcel2->setCellValue('AN'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AO'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AP'.$rowfoot2,''); 
                 $objPHPExcel2->setCellValue('AQ'.$rowfoot2,$Maxdpml5_tpc2);
                 $objPHPExcel2->setCellValue('AR'.$rowfoot2,$Maxdpml5_entero2);
                 $objPHPExcel2->setCellValue('AS'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AT'.$rowfoot2,'');
                 $objPHPExcel2->setCellValue('AU'.$rowfoot2,'');

                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot3.':AU'.$rowfoot3);
                 $objPHPExcel2->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Manimum ');

                 $objPHPExcel2->setCellValue('C'.$rowfoot3,$Minsl1_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot3,$Minsl1_entero2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('F'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('G'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('H'.$rowfoot3,$Minpl1_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot3,$Minpl1_entero2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('K'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('L'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('M'.$rowfoot3,$Mindpml1_tpc2 );                
                 $objPHPExcel2->setCellValue('N'.$rowfoot3,$Mindpml1_entero2);
                 $objPHPExcel2->setCellValue('O'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('P'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('Q'.$rowfoot3,'');              
                 $objPHPExcel2->setCellValue('R'.$rowfoot3,$Minsl4_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot3,$Minsl4_entero2 );
                 $objPHPExcel2->setCellValue('T'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('U'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('V'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('W'.$rowfoot3,$Minpl4_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot3,$Minpl4_entero2);
                 $objPHPExcel2->setCellValue('Y'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('Z'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AA'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AB'.$rowfoot3,$Mindpml4_tpc2);               
                 $objPHPExcel2->setCellValue('AC'.$rowfoot3,$Mindpml4_entero2);
                 $objPHPExcel2->setCellValue('AD'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AE'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AF'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AG'.$rowfoot3,$Minsl5_tpc2);               
                 $objPHPExcel2->setCellValue('AH'.$rowfoot3,$Minsl5_entero2);
                 $objPHPExcel2->setCellValue('AI'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AJ'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AK'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AL'.$rowfoot3,$Minpl5_tpc2);               
                 $objPHPExcel2->setCellValue('AM'.$rowfoot3,$Minpl5_entero2);
                 $objPHPExcel2->setCellValue('AN'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AO'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AP'.$rowfoot3,''); 
                 $objPHPExcel2->setCellValue('AQ'.$rowfoot3,$Mindpml5_tpc2);
                 $objPHPExcel2->setCellValue('AR'.$rowfoot3,$Mindpml5_entero2);
                 $objPHPExcel2->setCellValue('AS'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AT'.$rowfoot3,'');
                 $objPHPExcel2->setCellValue('AU'.$rowfoot3,'');

                 $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot4.':AU'.$rowfoot4);
                 $objPHPExcel2->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Total Data ');

                 $objPHPExcel2->setCellValue('C'.$rowfoot4,$Countsl1_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot4,$Countsl1_entero2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('F'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('G'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('H'.$rowfoot4,$Countpl1_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot4,$Countpl1_entero2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('K'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('L'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('M'.$rowfoot4,$Countdpml1_tpc2 );                
                 $objPHPExcel2->setCellValue('N'.$rowfoot4,$Countdpml1_entero2);
                 $objPHPExcel2->setCellValue('O'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('P'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('Q'.$rowfoot4,'');              
                 $objPHPExcel2->setCellValue('R'.$rowfoot4,$Countsl4_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot4,$Countsl4_entero2 );
                 $objPHPExcel2->setCellValue('T'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('U'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('V'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('W'.$rowfoot4,$Countpl4_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot4,$Countpl4_entero2);
                 $objPHPExcel2->setCellValue('Y'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('Z'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AA'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AB'.$rowfoot4,$Countdpml4_tpc2);               
                 $objPHPExcel2->setCellValue('AC'.$rowfoot4,$Countdpml4_entero2);
                 $objPHPExcel2->setCellValue('AD'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AE'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AF'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AG'.$rowfoot4,$Countsl5_tpc2);               
                 $objPHPExcel2->setCellValue('AH'.$rowfoot4,$Countsl5_entero2);
                 $objPHPExcel2->setCellValue('AI'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AJ'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AK'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AL'.$rowfoot4,$Countpl5_tpc2);               
                 $objPHPExcel2->setCellValue('AM'.$rowfoot4,$Countpl5_entero2);
                 $objPHPExcel2->setCellValue('AN'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AO'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AP'.$rowfoot4,''); 
                 $objPHPExcel2->setCellValue('AQ'.$rowfoot4,$Countdpml5_tpc2);
                 $objPHPExcel2->setCellValue('AR'.$rowfoot4,$Countdpml5_entero2);
                 $objPHPExcel2->setCellValue('AS'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AT'.$rowfoot4,'');
                 $objPHPExcel2->setCellValue('AU'.$rowfoot4,'');
                

                 $objPHPExcel2->mergeCells('A'.$rowfoot5.':S'.$rowfoot5); 
                 $objPHPExcel2->setSharedStyle($cellorange1, 'A'.$rowfoot6.':S'.$rowfoot6);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot6.':D'.$rowfoot6)->setCellValue('A'.$rowfoot6,'REPORTED BY: ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot6.':J'.$rowfoot6)->setCellValue('E'.$rowfoot6,'CHECKED  BY : ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot6.':P'.$rowfoot6)->setCellValue('K'.$rowfoot6,'CONFIRMED BY : ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot6.':S'.$rowfoot6)->setCellValue('Q'.$rowfoot6,'ACKNOWLEDGED BY : ');

                 $objPHPExcel2->setSharedStyle($bodyStyle, 'A'.$rowfoot7.':S'.$rowfoot12);
                 $objPHPExcel2->mergeCells('A'.$rowfoot7.':D'.$rowfoot9);
                 $objPHPExcel2->mergeCells('E'.$rowfoot7.':J'.$rowfoot9);
                 $objPHPExcel2->mergeCells('K'.$rowfoot7.':P'.$rowfoot9);
                 $objPHPExcel2->mergeCells('Q'.$rowfoot7.':S'.$rowfoot9);
                  $objPHPExcel2->setSharedStyle($cellorange1, 'A'.$rowfoot10.':S'.$rowfoot12); 
                 $objPHPExcel2->mergeCells('A'.$rowfoot10.':D'.$rowfoot10)->setCellValue('A'.$rowfoot10,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot10.':J'.$rowfoot10)->setCellValue('E'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot10.':P'.$rowfoot10)->setCellValue('K'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot10.':S'.$rowfoot10)->setCellValue('Q'.$rowfoot10,'NAME : RISTINA YULIANI ');

                 $objPHPExcel2->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'POSITION : KS ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'POSITION : AMGR QAD ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel2->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'DATE : '.$tgl);            
}

                 $objPHPExcel2->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel2->mergeCells('R'.$rowfoot13.':S'.$rowfoot13)->setCellValue('R'.$rowfoot13,''.$frmnm);
                 $objPHPExcel2->mergeCells('D'.$rowfoot13.':Q'.$rowfoot13);

                 ####################################################
                 #   view_rekap_swabbing_wf_drp                     #
                 #                                                  #
                 ####################################################

                $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel3 = $obj->createSheet(3);
                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);
                foreach(range('A','AU') as $columnID){
                $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel3->mergeCells('A1:Z1');
                 $objPHPExcel3->mergeCells('B2:Y5')->setCellValue('B2',$frmcop);
                 $objPHPExcel3->setCellValue('Z2','Tahun: '.$thn);
                 $objPHPExcel3->setCellValue('Z3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel2->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel2->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel3->setCellValue('Z4','Hal: ');
                 $objPHPExcel3->setCellValue('A6','JUDUL');
                 $objPHPExcel3->mergeCells('B6:Y6')->setCellValue('B6',''.$frmjdl);  
                 $objPHPExcel3->mergeCells('A7:A9')->setCellValue('A7',' Tanggal/Shift');  
                 $objPHPExcel3->setCellValue('A10',' Specification');

                 $objPHPExcel3->mergeCells('B7:I7')->setCellValue('B7',' LINE 1');
                 $objPHPExcel3->mergeCells('B8:E8')->setCellValue('B8',' Floor ');
                 $objPHPExcel3->mergeCells('F8:I8')->setCellValue('F8',' Wall ');

                 $objPHPExcel3->mergeCells('J7:Q7')->setCellValue('J7',' LINE 4 ');
                 $objPHPExcel3->mergeCells('J8:M8')->setCellValue('J8',' Floor ');
                 $objPHPExcel3->mergeCells('N8:Q8')->setCellValue('N8',' Wall ');

                 $objPHPExcel3->mergeCells('R7:Y7')->setCellValue('R7',' LINE 5 ');
                 $objPHPExcel3->mergeCells('R8:U8')->setCellValue('R8',' Floor ');
                 $objPHPExcel3->mergeCells('V8:Y8')->setCellValue('V8',' Wall ');
                 $objPHPExcel3->mergeCells('Z8:Z10')->setCellValue('Z7',' Keterangan');
                 
                $objPHPExcel3->setCellValue('B9','TPC'); 
                $objPHPExcel3->setCellValue('C9','Entero');                             
                $objPHPExcel3->setCellValue('D9','E.Coli');
                $objPHPExcel3->setCellValue('E9','Salmo');


                $objPHPExcel3->setCellValue('F9','TPC');
                $objPHPExcel3->setCellValue('G9','Entero');
                $objPHPExcel3->setCellValue('H9','E.Coli');
                $objPHPExcel3->setCellValue('I9','Salmo');

                $objPHPExcel3->setCellValue('J9','TPC');
                $objPHPExcel3->setCellValue('K9','Entero');
                $objPHPExcel3->setCellValue('L9','EColi');
                $objPHPExcel3->setCellValue('M9','Salmo');
                
                $objPHPExcel3->setCellValue('N9','TPC');
                $objPHPExcel3->setCellValue('O9','Entero');
                $objPHPExcel3->setCellValue('P9','Ecoli');
                $objPHPExcel3->setCellValue('Q9','Salmo');

                $objPHPExcel3->setCellValue('R9','TPC');
                $objPHPExcel3->setCellValue('S9','Enetero');
                $objPHPExcel3->setCellValue('T9','Ecoli');
                $objPHPExcel3->setCellValue('U9','Salmo');

                $objPHPExcel3->setCellValue('V9','TPC');
                $objPHPExcel3->setCellValue('W9','Enetero');
                $objPHPExcel3->setCellValue('X9','Ecoli');
                $objPHPExcel3->setCellValue('Y9','Salmo');

                //
                $objPHPExcel3->setCellValue('B10','Max 3200cfu/400cm2'); 
                $objPHPExcel3->setCellValue('C10','Max 200cfu/400cm2');                             
                $objPHPExcel3->setCellValue('D10','ABS/400cm2');
                $objPHPExcel3->setCellValue('E10','ABS/400cm2');


                $objPHPExcel3->setCellValue('F10','Max 2500cfu/400cm2');
                $objPHPExcel3->setCellValue('G10','Max 150cfu/400cm2');
                $objPHPExcel3->setCellValue('H10','ABS/400cm2');
                $objPHPExcel3->setCellValue('I10','ABS/400cm2');

               $objPHPExcel3->setCellValue('J10','Max 3200cfu/400cm2'); 
                $objPHPExcel3->setCellValue('K10','Max 200cfu/400cm2');                             
                $objPHPExcel3->setCellValue('L10','ABS/400cm2');
                $objPHPExcel3->setCellValue('M10','ABS/400cm2');


                $objPHPExcel3->setCellValue('N10','Max 2500cfu/400cm2');
                $objPHPExcel3->setCellValue('O10','Max 150cfu/400cm2');
                $objPHPExcel3->setCellValue('P10','ABS/400cm2');
                $objPHPExcel3->setCellValue('Q10','ABS/400cm2');

                $objPHPExcel3->setCellValue('R10','Max 3200cfu/400cm2'); 
                $objPHPExcel3->setCellValue('S10','Max 200cfu/400cm2');                             
                $objPHPExcel3->setCellValue('T10','ABS/400cm2');
                $objPHPExcel3->setCellValue('U10','ABS/400cm2');


                $objPHPExcel3->setCellValue('V10','Max 2500cfu/400cm2');
                $objPHPExcel3->setCellValue('W10','Max 150cfu/400cm2');
                $objPHPExcel3->setCellValue('X10','ABS/400cm2');
                $objPHPExcel3->setCellValue('Y10','ABS/400cm2');

                $objPHPExcel3->setSharedStyle($headerStyle, 'A2:Z10');

                  $dttglStart  = $this->uri->segment(8);
                  $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail3)){
                 $rowCount3 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail3 as $row3){
                 $tgl_sampling    = $row3->tgl_sampling;
                 $shift           = $row3->shift;
                 $l1_tpc_floor    = $row3->l1_tpc_floor;
                 $l1_entero_floor = $row3->l1_entero_floor;
                 $l1_ecoli_floor  = $row3->l1_ecoli_floor;
                 $l1_salmo_floor  = $row3->l1_salmo_floor;

                 $l1_tpc_wall    = $row3->l1_tpc_wall;
                 $l1_entero_wall = $row3->l1_entero_wall;
                 $l1_ecoli_wall  = $row3->l1_ecoli_wall;
                 $l1_salmo_wall  = $row3->l1_salmo_wall;

                 $l4_tpc_floor    = $row3->l4_tpc_floor;
                 $l4_entero_floor = $row3->l4_entero_floor;
                 $l4_ecoli_floor  = $row3->l4_ecoli_floor;
                 $l4_salmo_floor  = $row3->l4_salmo_floor;

                 $l4_tpc_wall    = $row3->l4_tpc_wall;
                 $l4_entero_wall = $row3->l4_entero_wall;
                 $l4_ecoli_wall  = $row3->l4_ecoli_wall;
                 $l4_salmo_wall  = $row3->l4_salmo_wall;

                 $l5_tpc_floor    = $row3->l5_tpc_floor;
                 $l5_entero_floor = $row3->l5_entero_floor;
                 $l5_ecoli_floor  = $row3->l5_ecoli_floor;
                 $l5_ecoli_floor  = $row3->l5_ecoli_floor;
                 $l5_salmo_floor  = $row3->l5_salmo_floor;

                 $l5_tpc_wall    = $row3->l5_tpc_wall;
                 $l5_entero_wall = $row3->l5_entero_wall;
                 $l5_ecoli_wall  = $row3->l5_ecoli_wall;
                 $l5_salmo_wall  = $row3->l5_salmo_wall;
                 $remarks        = $row3->remarks;

                 $rowCount3++;

                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowCount3.':Z'.$rowCount3);
                 $objPHPExcel3->setCellValue('A'.$rowCount3,$tgl_sampling.'/'.$shift);
                 
                 $objPHPExcel3->setCellValue('B'.$rowCount3,$l1_tpc_floor);
                 $objPHPExcel3->setCellValue('C'.$rowCount3,$l1_entero_floor);
                 $objPHPExcel3->setCellValue('D'.$rowCount3,$l1_ecoli_floor);
                 $objPHPExcel3->setCellValue('E'.$rowCount3,$l1_salmo_floor);
                 $objPHPExcel3->setCellValue('F'.$rowCount3,$l1_tpc_wall);
                 $objPHPExcel3->setCellValue('G'.$rowCount3,$l1_entero_wall);
                 $objPHPExcel3->setCellValue('H'.$rowCount3,$l1_ecoli_wall);
                 $objPHPExcel3->setCellValue('I'.$rowCount3,$l1_salmo_wall);
                 $objPHPExcel3->setCellValue('J'.$rowCount3,$l4_tpc_floor);
                 $objPHPExcel3->setCellValue('K'.$rowCount3,$l4_entero_wall);
                 $objPHPExcel3->setCellValue('L'.$rowCount3,$l4_ecoli_wall);
                 $objPHPExcel3->setCellValue('M'.$rowCount3,$l4_salmo_wall);
                 $objPHPExcel3->setCellValue('N'.$rowCount3,$l4_tpc_wall);
                 $objPHPExcel3->setCellValue('O'.$rowCount3,$l4_entero_wall);
                 $objPHPExcel3->setCellValue('P'.$rowCount3,$l4_ecoli_wall);
                 $objPHPExcel3->setCellValue('Q'.$rowCount3,$l4_salmo_wall);
                 $objPHPExcel3->setCellValue('R'.$rowCount3,$l5_tpc_floor);
                 $objPHPExcel3->setCellValue('S'.$rowCount3,$l5_entero_floor);
                 $objPHPExcel3->setCellValue('T'.$rowCount3,$l5_ecoli_floor);
                 $objPHPExcel3->setCellValue('U'.$rowCount3,$l5_salmo_floor);
                 $objPHPExcel3->setCellValue('V'.$rowCount3,$l5_tpc_wall);
                 $objPHPExcel3->setCellValue('W'.$rowCount3,$l5_entero_wall);
                 $objPHPExcel3->setCellValue('X'.$rowCount3,$l5_ecoli_wall);
                 $objPHPExcel3->setCellValue('Y'.$rowCount3,$l5_salmo_wall);
                 $objPHPExcel3->setCellValue('Z'.$rowCount3,$remarks);
                 $no++;
                    }
                }

            

               $dttglStart  = $this->uri->segment(8);
               $dttglFinish = $this->uri->segment(9);
                          
               if(isset($dtdetail3)){
    
                 foreach ($dtdetail3 as $row3){
                 $dt_l1_tpc_floor3   []  = $row3->l1_tpc_floor;
                 $dt_l1_entero_floor3[]  = $row3->l1_entero_floor;
                 $dt_l1_ecoli_floor3  [] = $row3->l1_ecoli_floor;
                 $dt_l1_salmo_floor3  [] = $row3->l1_salmo_floor;

                 $dt_l1_tpc_wall3   [] = $row3->l1_tpc_wall;
                 $dt_l1_entero_wall3[] = $row3->l1_entero_wall;
                 $dt_l1_ecoli_wall3 [] = $row3->l1_ecoli_wall;
                 $dt_l1_salmo_wall3 [] = $row3->l1_salmo_wall;

                 $dt_l4_tpc_floor3   [] = $row3->l4_tpc_floor;
                 $dt_l4_entero_floor3[] = $row3->l4_entero_floor;
                 $dt_l4_ecoli_floor3 [] = $row3->l4_ecoli_floor;
                 $dt_l4_salmo_floor3 [] = $row3->l4_salmo_floor;
                
                 $dt_l4_tpc_wall3    [] = $row3->l4_tpc_wall;
                 $dt_l4_entero_wall3 [] = $row3->l4_entero_wall;
                 $dt_l4_ecoli_wall3  [] = $row3->l4_ecoli_wall;
                 $dt_l4_salmo_wall3  [] = $row3->l4_salmo_wall;
                 $dt_l5_tpc_floor3   [] = $row3->l5_tpc_floor;
                 $dt_l5_entero_floor3[] = $row3->l5_entero_floor;
                 $dt_l5_ecoli_floor3 [] = $row3->l5_ecoli_floor;
                 $dt_l5_salmo_floor3 [] = $row3->l5_salmo_floor;

                 $dt_l5_tpc_wall3   [] = $row3->l5_tpc_wall;
                 $dt_l5_entero_wall3[] = $row3->l5_entero_wall;
                 $dt_l5_ecoli_wall3 [] = $row3->l5_ecoli_wall;
                 $dt_l5_salmo_wall3 [] = $row3->l5_salmo_wall;
                                    

                $ndtl1_tpc_floor3    = array_diff($dt_l1_tpc_floor3, array('',0));
                $ndtl1_entero_floor3 = array_diff($dt_l1_entero_floor3, array('',0));
                $ndtl1_ecoli_floor3  = array_diff($dt_l1_ecoli_floor3, array('',0));
                $ndtl1_salmo_floor3  = array_diff($dt_l1_salmo_floor3, array('',0));
                $ndtl1_tpc_wall3     = array_diff($dt_l1_tpc_wall3 , array('',0));
                $ndtl1_entero_wall3  = array_diff($dt_l1_entero_wall3 , array('',0));
                $ndtl1_ecoli_wall3   = array_diff($dt_l1_ecoli_wall3 , array('',0));
                $ndtl1_salmo_wall3   = array_diff($dt_l1_salmo_wall3 , array('',0));
                $ndtl4_tpc_floor3    = array_diff($dt_l4_tpc_floor3 , array('',0));
                $ndtl4_entero_floor3 = array_diff($dt_l4_entero_floor3 , array('',0));
                $ndtl4_ecoli_floor3  = array_diff($dt_l4_ecoli_floor3 , array('',0));
                $ndtl4_salmo_floor3  = array_diff($dt_l4_salmo_floor3 , array('',0));
                $ndtl4_tpc_wall3     = array_diff($dt_l4_tpc_wall3 , array('',0));
                $ndtl4_entero_wall3  = array_diff($dt_l4_entero_wall3 , array('',0));
                $ndtl4_ecoli_wall3   = array_diff($dt_l4_ecoli_wall3 , array('',0));
                $ndtl4_salmo_wall3   = array_diff($dt_l4_salmo_wall3 , array('',0));
                $ndtl5_tpc_floor3    = array_diff($dt_l5_tpc_floor3 , array('',0));
                $ndtl5_entero_floor3 = array_diff($dt_l5_entero_floor3 , array('',0));
                $ndtl5_ecoli_floor3  = array_diff($dt_l5_ecoli_floor3 , array('',0));
                $ndtl5_salmo_floor3  = array_diff($dt_l5_salmo_floor3 , array('',0));
                $ndtl5_tpc_wall3     = array_diff($dt_l5_tpc_wall3 , array('',0));
                $ndtl5_entero_wall3  = array_diff($dt_l5_entero_wall3 , array('',0));
                $ndtl5_ecoli_wall3   = array_diff($dt_l5_ecoli_wall3 , array('',0));
                $ndtl5_salmo_wall3   = array_diff($dt_l5_salmo_wall3 , array('',0));

               
                }
                 if(is_array($ndtl1_tpc_floor3) && count ($ndtl1_tpc_floor3) > 0)
                {
                    $Minl1_tpc_floor3   = min($ndtl1_tpc_floor3);
                    $Maxl1_tpc_floor3   = max($ndtl1_tpc_floor3);
                    $Avgl1_tpc_floor3   = number_format((array_sum($ndtl1_tpc_floor3)) /(count($ndtl1_tpc_floor3)),2);
                    $Countl1_tpc_floor3 = count($ndtl1_tpc_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_tpc_floor3    = array_sum($ndtl1_tpc_floor3) / count($ndtl1_tpc_floor3);
                    $fvariantl1_tpc_floor3 = 0.00;
                    $xsamplel1_tpc_floor3  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtl1_tpc_floor3 as $i){
                    $fvariantl1_tpc_floor3 += pow($i - $fmeanl1_tpc_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_tpc_floor3 /= ($xsamplel1_tpc_floor3 ? count($ndtl1_tpc_floor3)-1 : count($ndtl1_tpc_floor3));
                    $stdevl1_tpc_floor3     = number_format(sqrt($fvariantl1_tpc_floor3),2);
                    $totall1_tpc_floor3     = count($ndtl1_tpc_floor3);
                    $inspectl1_tpc_floor3   = $dt1;
                    $outspectl1_tpc_floor3  = $dt2;
                    $prsoutl1_tpc_floor3    = number_format((($dt2 /$totall1_tpc_floor3)* (100)),2);

                } else {

                    $Minl1_tpc_floor3      = '';
                    $Maxl1_tpc_floor3      = '';
                    $Avgl1_tpc_floor3      = '';
                    $stdevl1_tpc_floor3    = '';
                    $totall1_tpc_floor3    = '';
                    $inspectl1_tpc_floor3  = '';
                    $outspectl1_tpc_floor3 = '';
                    $prsoutl1_tpc_floor3   = '';
                }

                if(is_array($ndtl1_entero_floor3) && count ($ndtl1_entero_floor3) > 0)
                {
                    $Minl1_entero_floor3   = min($ndtl1_entero_floor3);
                    $Maxl1_entero_floor3   = max($ndtl1_entero_floor3);
                    $Avgl1_entero_floor3   = number_format((array_sum($ndtl1_entero_floor3)) /(count($ndtl1_entero_floor3)),2);
                    $Countl1_entero_floor3 = count($ndtl1_entero_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_entero_floor3    = array_sum($ndtl1_entero_floor3) / count($ndtl1_entero_floor3);
                    $fvariantl1_entero_floor3 = 0.00;
                    $xsamplel1_entero_floor3  = false;
                    $dt1                      = 0;$dt2 = 0;
                    foreach ($ndtl1_entero_floor3 as $i){
                    $fvariantl1_entero_floor3 += pow($i - $fmeanl1_entero_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_entero_floor3 /= ($xsamplel1_entero_floor3 ? count($ndtl1_entero_floor3)-1 : count($ndtl1_entero_floor3));
                    $stdevl1_entero_floor3     = number_format(sqrt($fvariantl1_entero_floor3),2);
                    $totall1_entero_floor3     = count($ndtl1_entero_floor3);
                    $inspectl1_entero_floor3   = $dt1;
                    $outspectl1_entero_floor3  = $dt2;
                    $prsoutl1_entero_floor3    = number_format((($dt2 /$totall1_entero_floor3)* (100)),2);

                } else {

                    $Minl1_entero_floor3      = '';
                    $Maxl1_entero_floor3      = '';
                    $Avgl1_entero_floor3      = '';
                    $stdevl1_entero_floor3    = '';
                    $totall1_entero_floor3    = '';
                    $inspectl1_entero_floor3  = '';
                    $outspectl1_entero_floor3 = '';
                    $prsoutl1_entero_floor3   = '';
                }

                  if(is_array($ndtl1_ecoli_floor3) && count ($ndtl1_ecoli_floor3) > 0)
                {
                    $Minl1_ecoli_floor3   = min($ndtl1_ecoli_floor3);
                    $Maxl1_ecoli_floor3   = max($ndtl1_ecoli_floor3);
                    $Avgl1_ecoli_floor3   = number_format((array_sum($ndtl1_ecoli_floor3)) /(count($ndtl1_ecoli_floor3)),2);
                    $Countl1_ecoli_floor3 = count($ndtl1_ecoli_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_ecoli_floor3    = array_sum($ndtl1_ecoli_floor3) / count($ndtl1_ecoli_floor3);
                    $fvariantl1_ecoli_floor3 = 0.00;
                    $xsamplel1_ecoli_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl1_ecoli_floor3 as $i){
                    $fvariantl1_ecoli_floor3 += pow($i - $fmeanl1_ecoli_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_ecoli_floor3 /= ($xsamplel1_ecoli_floor3 ? count($ndtl1_ecoli_floor3)-1 : count($ndtl1_ecoli_floor3));
                    $stdevl1_ecoli_floor3     = number_format(sqrt($fvariantl1_ecoli_floor3),2);
                    $totall1_ecoli_floor3     = count($ndtl1_ecoli_floor3);
                    $inspectl1_ecoli_floor3   = $dt1;
                    $outspectl1_ecoli_floor3  = $dt2;
                    $prsoutl1_ecoli_floor3    = number_format((($dt2 /$totall1_ecoli_floor3)* (100)),2);

                } else {

                    $Minl1_ecoli_floor3      = '';
                    $Maxl1_ecoli_floor3      = '';
                    $Avgl1_ecoli_floor3      = '';
                    $stdevl1_ecoli_floor3    = '';
                    $totall1_ecoli_floor3    = '';
                    $inspectl1_ecoli_floor3  = '';
                    $outspectl1_ecoli_floor3 = '';
                    $prsoutl1_ecoli_floor3   = '';
                }


                  if(is_array($ndtl1_salmo_floor3) && count ($ndtl1_salmo_floor3) > 0)
                {
                    $Minl1_salmo_floor3   = min($ndtl1_salmo_floor3);
                    $Maxl1_salmo_floor3   = max($ndtl1_salmo_floor3);
                    $Avgl1_salmo_floor3   = number_format((array_sum($ndtl1_salmo_floor3)) /(count($ndtl1_salmo_floor3)),2);
                    $Countl1_salmo_floor3 = count($ndtl1_salmo_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_salmo_floor3    = array_sum($ndtl1_salmo_floor3) / count($ndtl1_salmo_floor3);
                    $fvariantl1_salmo_floor3 = 0.00;
                    $xsamplel1_salmo_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl1_salmo_floor3 as $i){
                    $fvariantl1_salmo_floor3 += pow($i - $fmeanl1_salmo_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_salmo_floor3 /= ($xsamplel1_salmo_floor3 ? count($ndtl1_salmo_floor3)-1 : count($ndtl1_salmo_floor3));
                    $stdevl1_salmo_floor3     = number_format(sqrt($fvariantl1_salmo_floor3),2);
                    $totall1_salmo_floor3     = count($ndtl1_salmo_floor3);
                    $inspectl1_salmo_floor3   = $dt1;
                    $outspectl1_salmo_floor3  = $dt2;
                    $prsoutl1_salmo_floor3    = number_format((($dt2 /$totall1_salmo_floor3)* (100)),2);

                } else {

                    $Minl1_salmo_floor3      = '';
                    $Maxl1_salmo_floor3      = '';
                    $Avgl1_salmo_floor3      = '';
                    $stdevl1_salmo_floor3    = '';
                    $totall1_salmo_floor3    = '';
                    $inspectl1_salmo_floor3  = '';
                    $outspectl1_salmo_floor3 = '';
                    $prsoutl1_salmo_floor3   = '';
                }

                  if(is_array($ndtl1_tpc_wall3) && count ($ndtl1_tpc_wall3) > 0)
                {
                    $Minl1_tpc_wall3   = min($ndtl1_tpc_wall3);
                    $Maxl1_tpc_wall3   = max($ndtl1_tpc_wall3);
                    $Avgl1_tpc_wall3   = number_format((array_sum($ndtl1_tpc_wall3)) /(count($ndtl1_tpc_wall3)),2);
                    $Countl1_tpc_wall3 = count($ndtl1_tpc_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_tpc_wall3    = array_sum($ndtl1_tpc_wall3) / count($ndtl1_tpc_wall3);
                    $fvariantl1_tpc_wall3 = 0.00;
                    $xsamplel1_tpc_wall3  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtl1_tpc_wall3 as $i){
                    $fvariantl1_tpc_wall3 += pow($i - $fmeanl1_tpc_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_tpc_wall3 /= ($xsamplel1_tpc_wall3 ? count($ndtl1_tpc_wall3)-1 : count($ndtl1_tpc_wall3));
                    $stdevl1_tpc_wall3     = number_format(sqrt($fvariantl1_tpc_wall3),2);
                    $totall1_tpc_wall3     = count($ndtl1_tpc_wall3);
                    $inspectl1_tpc_wall3   = $dt1;
                    $outspectl1_tpc_wall3  = $dt2;
                    $prsoutl1_tpc_wall3    = number_format((($dt2 /$totall1_tpc_wall3)* (100)),2);

                } else {

                    $Minl1_tpc_wall3      = '';
                    $Maxl1_tpc_wall3      = '';
                    $Avgl1_tpc_wall3      = '';
                    $stdevl1_tpc_wall3    = '';
                    $totall1_tpc_wall3    = '';
                    $inspectl1_tpc_wall3  = '';
                    $outspectl1_tpc_wall3 = '';
                    $prsoutl1_tpc_wall3   = '';
                }

                  if(is_array($ndtl1_entero_wall3) && count ($ndtl1_entero_wall3) > 0)
                {
                    $Minl1_entero_wall3   = min($ndtl1_entero_wall3);
                    $Maxl1_entero_wall3   = max($ndtl1_entero_wall3);
                    $Avgl1_entero_wall3   = number_format((array_sum($ndtl1_entero_wall3)) /(count($ndtl1_entero_wall3)),2);
                    $Countl1_entero_wall3 = count($ndtl1_entero_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_entero_wall3    = array_sum($ndtl1_entero_wall3) / count($ndtl1_entero_wall3);
                    $fvariantl1_entero_wall3 = 0.00;
                    $xsamplel1_entero_wall3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl1_entero_wall3 as $i){
                    $fvariantl1_entero_wall3 += pow($i - $fmeanl1_entero_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_entero_wall3 /= ($xsamplel1_entero_wall3 ? count($ndtl1_entero_wall3)-1 : count($ndtl1_entero_wall3));
                    $stdevl1_entero_wall3     = number_format(sqrt($fvariantl1_entero_wall3),2);
                    $totall1_entero_wall3     = count($ndtl1_entero_wall3);
                    $inspectl1_entero_wall3   = $dt1;
                    $outspectl1_entero_wall3  = $dt2;
                    $prsoutl1_entero_wall3    = number_format((($dt2 /$totall1_entero_wall3)* (100)),2);

                } else {

                    $Minl1_entero_wall3      = '';
                    $Maxl1_entero_wall3      = '';
                    $Avgl1_entero_wall3      = '';
                    $stdevl1_entero_wall3    = '';
                    $totall1_entero_wall3    = '';
                    $inspectl1_entero_wall3  = '';
                    $outspectl1_entero_wall3 = '';
                    $prsoutl1_entero_wall3   = '';
                }

                       if(is_array($ndtl1_ecoli_wall3) && count ($ndtl1_ecoli_wall3) > 0)
                {
                    $Minl1_ecoli_wall3   = min($ndtl1_ecoli_wall3);
                    $Maxl1_ecoli_wall3   = max($ndtl1_ecoli_wall3);
                    $Avgl1_ecoli_wall3   = number_format((array_sum($ndtl1_ecoli_wall3)) /(count($ndtl1_ecoli_wall3)),2);
                    $Countl1_ecoli_wall3 = count($ndtl1_ecoli_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_ecoli_wall3    = array_sum($ndtl1_ecoli_wall3) / count($ndtl1_ecoli_wall3);
                    $fvariantl1_ecoli_wall3 = 0.00;
                    $xsamplel1_ecoli_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl1_ecoli_wall3 as $i){
                    $fvariantl1_ecoli_wall3 += pow($i - $fmeanl1_ecoli_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_ecoli_wall3 /= ($xsamplel1_ecoli_wall3 ? count($ndtl1_ecoli_wall3)-1 : count($ndtl1_ecoli_wall3));
                    $stdevl1_ecoli_wall3     = number_format(sqrt($fvariantl1_ecoli_wall3),2);
                    $totall1_ecoli_wall3     = count($ndtl1_ecoli_wall3);
                    $inspectl1_ecoli_wall3   = $dt1;
                    $outspectl1_ecoli_wall3  = $dt2;
                    $prsoutl1_ecoli_wall3    = number_format((($dt2 /$totall1_ecoli_wall3)* (100)),2);

                } else {

                    $Minl1_ecoli_wall3      = '';
                    $Maxl1_ecoli_wall3      = '';
                    $Avgl1_ecoli_wall3      = '';
                    $stdevl1_ecoli_wall3    = '';
                    $totall1_ecoli_wall3    = '';
                    $inspectl1_ecoli_wall3  = '';
                    $outspectl1_ecoli_wall3 = '';
                    $prsoutl1_ecoli_wall3   = '';
                }

                    if(is_array($ndtl1_salmo_wall3) && count ($ndtl1_salmo_wall3) > 0)
                {
                    $Minl1_salmo_wall3   = min($ndtl1_salmo_wall3);
                    $Maxl1_salmo_wall3   = max($ndtl1_salmo_wall3);
                    $Avgl1_salmo_wall3   = number_format((array_sum($ndtl1_salmo_wall3)) /(count($ndtl1_salmo_wall3)),2);
                    $Countl1_salmo_wall3 = count($ndtl1_salmo_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl1_salmo_wall3    = array_sum($ndtl1_salmo_wall3) / count($ndtl1_salmo_wall3);
                    $fvariantl1_salmo_wall3 = 0.00;
                    $xsamplel1_salmo_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl1_salmo_wall3 as $i){
                    $fvariantl1_salmo_wall3 += pow($i - $fmeanl1_salmo_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl1_salmo_wall3 /= ($xsamplel1_salmo_wall3 ? count($ndtl1_salmo_wall3)-1 : count($ndtl1_salmo_wall3));
                    $stdevl1_salmo_wall3     = number_format(sqrt($fvariantl1_salmo_wall3),2);
                    $totall1_salmo_wall3     = count($ndtl1_salmo_wall3);
                    $inspectl1_salmo_wall3   = $dt1;
                    $outspectl1_salmo_wall3  = $dt2;
                    $prsoutl1_salmo_wall3    = number_format((($dt2 /$totall1_salmo_wall3)* (100)),2);

                } else {

                    $Minl1_salmo_wall3      = '';
                    $Maxl1_salmo_wall3      = '';
                    $Avgl1_salmo_wall3      = '';
                    $stdevl1_salmo_wall3    = '';
                    $totall1_salmo_wall3    = '';
                    $inspectl1_salmo_wall3  = '';
                    $outspectl1_salmo_wall3 = '';
                    $prsoutl1_salmo_wall3   = '';
                }

                      if(is_array($ndtl4_tpc_floor3) && count ($ndtl4_tpc_floor3) > 0)
                {
                    $Minl4_tpc_floor3   = min($ndtl4_tpc_floor3);
                    $Maxl4_tpc_floor3   = max($ndtl4_tpc_floor3);
                    $Avgl4_tpc_floor3   = number_format((array_sum($ndtl4_tpc_floor3)) /(count($ndtl4_tpc_floor3)),2);
                    $Countl4_tpc_floor3 = count($ndtl4_tpc_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_tpc_floor3    = array_sum($ndtl4_tpc_floor3) / count($ndtl4_tpc_floor3);
                    $fvariantl4_tpc_floor3 = 0.00;
                    $xsamplel4_tpc_floor3  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtl4_tpc_floor3 as $i){
                    $fvariantl4_tpc_floor3 += pow($i - $fmeanl4_tpc_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_tpc_floor3 /= ($xsamplel4_tpc_floor3 ? count($ndtl4_tpc_floor3)-1 : count($ndtl4_tpc_floor3));
                    $stdevl4_tpc_floor3     = number_format(sqrt($fvariantl4_tpc_floor3),2);
                    $totall4_tpc_floor3     = count($ndtl4_tpc_floor3);
                    $inspectl4_tpc_floor3   = $dt1;
                    $outspectl4_tpc_floor3  = $dt2;
                    $prsoutl4_tpc_floor3    = number_format((($dt2 /$totall4_tpc_floor3)* (100)),2);

                } else {

                    $Minl4_tpc_floor3      = '';
                    $Maxl4_tpc_floor3      = '';
                    $Avgl4_tpc_floor3      = '';
                    $stdevl4_tpc_floor3    = '';
                    $totall4_tpc_floor3    = '';
                    $inspectl4_tpc_floor3  = '';
                    $outspectl4_tpc_floor3 = '';
                    $prsoutl4_tpc_floor3   = '';
                }

                          if(is_array($ndtl4_entero_floor3) && count ($ndtl4_entero_floor3) > 0)
                {
                    $Minl4_entero_floor3   = min($ndtl4_entero_floor3);
                    $Maxl4_entero_floor3   = max($ndtl4_entero_floor3);
                    $Avgl4_entero_floor3   = number_format((array_sum($ndtl4_entero_floor3)) /(count($ndtl4_entero_floor3)),2);
                    $Countl4_entero_floor3 = count($ndtl4_entero_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_entero_floor3    = array_sum($ndtl4_entero_floor3) / count($ndtl4_entero_floor3);
                    $fvariantl4_entero_floor3 = 0.00;
                    $xsamplel4_entero_floor3  = false;
                    $dt1                      = 0;$dt2 = 0;
                    foreach ($ndtl4_entero_floor3 as $i){
                    $fvariantl4_entero_floor3 += pow($i - $fmeanl4_entero_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_entero_floor3 /= ($xsamplel4_entero_floor3 ? count($ndtl4_entero_floor3)-1 : count($ndtl4_entero_floor3));
                    $stdevl4_entero_floor3     = number_format(sqrt($fvariantl4_entero_floor3),2);
                    $totall4_entero_floor3     = count($ndtl4_entero_floor3);
                    $inspectl4_entero_floor3   = $dt1;
                    $outspectl4_entero_floor3  = $dt2;
                    $prsoutl4_entero_floor3    = number_format((($dt2 /$totall4_entero_floor3)* (100)),2);

                } else {

                    $Minl4_entero_floor3      = '';
                    $Maxl4_entero_floor3      = '';
                    $Avgl4_entero_floor3      = '';
                    $stdevl4_entero_floor3    = '';
                    $totall4_entero_floor3    = '';
                    $inspectl4_entero_floor3  = '';
                    $outspectl4_entero_floor3 = '';
                    $prsoutl4_entero_floor3   = '';
                }

                  if(is_array($ndtl4_ecoli_floor3) && count ($ndtl4_ecoli_floor3) > 0)
                {
                    $Minl4_ecoli_floor3   = min($ndtl4_ecoli_floor3);
                    $Maxl4_ecoli_floor3   = max($ndtl4_ecoli_floor3);
                    $Avgl4_ecoli_floor3   = number_format((array_sum($ndtl4_ecoli_floor3)) /(count($ndtl4_ecoli_floor3)),2);
                    $Countl4_ecoli_floor3 = count($ndtl4_ecoli_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_ecoli_floor3    = array_sum($ndtl4_ecoli_floor3) / count($ndtl4_ecoli_floor3);
                    $fvariantl4_ecoli_floor3 = 0.00;
                    $xsamplel4_ecoli_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl4_ecoli_floor3 as $i){
                    $fvariantl4_ecoli_floor3 += pow($i - $fmeanl4_ecoli_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_ecoli_floor3 /= ($xsamplel4_ecoli_floor3 ? count($ndtl4_ecoli_floor3)-1 : count($ndtl4_ecoli_floor3));
                    $stdevl4_ecoli_floor3     = number_format(sqrt($fvariantl4_ecoli_floor3),2);
                    $totall4_ecoli_floor3     = count($ndtl4_ecoli_floor3);
                    $inspectl4_ecoli_floor3   = $dt1;
                    $outspectl4_ecoli_floor3  = $dt2;
                    $prsoutl4_ecoli_floor3    = number_format((($dt2 /$totall4_ecoli_floor3)* (100)),2);

                } else {

                    $Minl4_ecoli_floor3      = '';
                    $Maxl4_ecoli_floor3      = '';
                    $Avgl4_ecoli_floor3      = '';
                    $stdevl4_ecoli_floor3    = '';
                    $totall4_ecoli_floor3    = '';
                    $inspectl4_ecoli_floor3  = '';
                    $outspectl4_ecoli_floor3 = '';
                    $prsoutl4_ecoli_floor3   = '';
                }

                    if(is_array($ndtl4_salmo_floor3) && count ($ndtl4_salmo_floor3) > 0)
                {
                    $Minl4_salmo_floor3   = min($ndtl4_salmo_floor3);
                    $Maxl4_salmo_floor3   = max($ndtl4_salmo_floor3);
                    $Avgl4_salmo_floor3   = number_format((array_sum($ndtl4_salmo_floor3)) /(count($ndtl4_salmo_floor3)),2);
                    $Countl4_salmo_floor3 = count($ndtl4_salmo_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_salmo_floor3    = array_sum($ndtl4_salmo_floor3) / count($ndtl4_salmo_floor3);
                    $fvariantl4_salmo_floor3 = 0.00;
                    $xsamplel4_salmo_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl4_salmo_floor3 as $i){
                    $fvariantl4_salmo_floor3 += pow($i - $fmeanl4_salmo_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_salmo_floor3 /= ($xsamplel4_salmo_floor3 ? count($ndtl4_salmo_floor3)-1 : count($ndtl4_salmo_floor3));
                    $stdevl4_salmo_floor3     = number_format(sqrt($fvariantl4_salmo_floor3),2);
                    $totall4_salmo_floor3     = count($ndtl4_salmo_floor3);
                    $inspectl4_salmo_floor3   = $dt1;
                    $outspectl4_salmo_floor3  = $dt2;
                    $prsoutl4_salmo_floor3    = number_format((($dt2 /$totall4_salmo_floor3)* (100)),2);

                } else {

                    $Minl4_salmo_floor3      = '';
                    $Maxl4_salmo_floor3      = '';
                    $Avgl4_salmo_floor3      = '';
                    $stdevl4_salmo_floor3    = '';
                    $totall4_salmo_floor3    = '';
                    $inspectl4_salmo_floor3  = '';
                    $outspectl4_salmo_floor3 = '';
                    $prsoutl4_salmo_floor3   = '';
                }


                        if(is_array($ndtl4_tpc_wall3) && count ($ndtl4_tpc_wall3) > 0)
                {
                    $Minl4_tpc_wall3   = min($ndtl4_tpc_wall3);
                    $Maxl4_tpc_wall3   = max($ndtl4_tpc_wall3);
                    $Avgl4_tpc_wall3   = number_format((array_sum($ndtl4_tpc_wall3)) /(count($ndtl4_tpc_wall3)),2);
                    $Countl4_tpc_wall3 = count($ndtl4_tpc_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_tpc_wall3    = array_sum($ndtl4_tpc_wall3) / count($ndtl4_tpc_wall3);
                    $fvariantl4_tpc_wall3 = 0.00;
                    $xsamplel4_tpc_wall3  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtl4_tpc_wall3 as $i){
                    $fvariantl4_tpc_wall3 += pow($i - $fmeanl4_tpc_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_tpc_wall3 /= ($xsamplel4_tpc_wall3 ? count($ndtl4_tpc_wall3)-1 : count($ndtl4_tpc_wall3));
                    $stdevl4_tpc_wall3     = number_format(sqrt($fvariantl4_tpc_wall3),2);
                    $totall4_tpc_wall3     = count($ndtl4_tpc_wall3);
                    $inspectl4_tpc_wall3   = $dt1;
                    $outspectl4_tpc_wall3  = $dt2;
                    $prsoutl4_tpc_wall3    = number_format((($dt2 /$totall4_tpc_wall3)* (100)),2);

                } else {

                    $Minl4_tpc_wall3      = '';
                    $Maxl4_tpc_wall3      = '';
                    $Avgl4_tpc_wall3      = '';
                    $stdevl4_tpc_wall3    = '';
                    $totall4_tpc_wall3    = '';
                    $inspectl4_tpc_wall3  = '';
                    $outspectl4_tpc_wall3 = '';
                    $prsoutl4_tpc_wall3   = '';
                }

                          if(is_array($ndtl4_entero_wall3) && count ($ndtl4_entero_wall3) > 0)
                {
                    $Minl4_entero_wall3   = min($ndtl4_entero_wall3);
                    $Maxl4_entero_wall3   = max($ndtl4_entero_wall3);
                    $Avgl4_entero_wall3   = number_format((array_sum($ndtl4_entero_wall3)) /(count($ndtl4_entero_wall3)),2);
                    $Countl4_entero_wall3 = count($ndtl4_entero_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_entero_wall3    = array_sum($ndtl4_entero_wall3) / count($ndtl4_entero_wall3);
                    $fvariantl4_entero_wall3 = 0.00;
                    $xsamplel4_entero_wall3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl4_entero_wall3 as $i){
                    $fvariantl4_entero_wall3 += pow($i - $fmeanl4_entero_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_entero_wall3 /= ($xsamplel4_entero_wall3 ? count($ndtl4_entero_wall3)-1 : count($ndtl4_entero_wall3));
                    $stdevl4_entero_wall3     = number_format(sqrt($fvariantl4_entero_wall3),2);
                    $totall4_entero_wall3     = count($ndtl4_entero_wall3);
                    $inspectl4_entero_wall3   = $dt1;
                    $outspectl4_entero_wall3  = $dt2;
                    $prsoutl4_entero_wall3    = number_format((($dt2 /$totall4_entero_wall3)* (100)),2);

                } else {

                    $Minl4_entero_wall3      = '';
                    $Maxl4_entero_wall3      = '';
                    $Avgl4_entero_wall3      = '';
                    $stdevl4_entero_wall3    = '';
                    $totall4_entero_wall3    = '';
                    $inspectl4_entero_wall3  = '';
                    $outspectl4_entero_wall3 = '';
                    $prsoutl4_entero_wall3   = '';
                }

                  if(is_array($ndtl4_ecoli_wall3) && count ($ndtl4_ecoli_wall3) > 0)
                {
                    $Minl4_ecoli_wall3   = min($ndtl4_ecoli_wall3);
                    $Maxl4_ecoli_wall3   = max($ndtl4_ecoli_wall3);
                    $Avgl4_ecoli_wall3   = number_format((array_sum($ndtl4_ecoli_wall3)) /(count($ndtl4_ecoli_wall3)),2);
                    $Countl4_ecoli_wall3 = count($ndtl4_ecoli_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_ecoli_wall3    = array_sum($ndtl4_ecoli_wall3) / count($ndtl4_ecoli_wall3);
                    $fvariantl4_ecoli_wall3 = 0.00;
                    $xsamplel4_ecoli_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl4_ecoli_wall3 as $i){
                    $fvariantl4_ecoli_wall3 += pow($i - $fmeanl4_ecoli_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_ecoli_wall3 /= ($xsamplel4_ecoli_wall3 ? count($ndtl4_ecoli_wall3)-1 : count($ndtl4_ecoli_wall3));
                    $stdevl4_ecoli_wall3     = number_format(sqrt($fvariantl4_ecoli_wall3),2);
                    $totall4_ecoli_wall3     = count($ndtl4_ecoli_wall3);
                    $inspectl4_ecoli_wall3   = $dt1;
                    $outspectl4_ecoli_wall3  = $dt2;
                    $prsoutl4_ecoli_wall3    = number_format((($dt2 /$totall4_ecoli_wall3)* (100)),2);

                } else {

                    $Minl4_ecoli_wall3      = '';
                    $Maxl4_ecoli_wall3      = '';
                    $Avgl4_ecoli_wall3      = '';
                    $stdevl4_ecoli_wall3    = '';
                    $totall4_ecoli_wall3    = '';
                    $inspectl4_ecoli_wall3  = '';
                    $outspectl4_ecoli_wall3 = '';
                    $prsoutl4_ecoli_wall3   = '';
                }

                    if(is_array($ndtl4_salmo_wall3) && count ($ndtl4_salmo_wall3) > 0)
                {
                    $Minl4_salmo_wall3   = min($ndtl4_salmo_wall3);
                    $Maxl4_salmo_wall3   = max($ndtl4_salmo_wall3);
                    $Avgl4_salmo_wall3   = number_format((array_sum($ndtl4_salmo_wall3)) /(count($ndtl4_salmo_wall3)),2);
                    $Countl4_salmo_wall3 = count($ndtl4_salmo_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl4_salmo_wall3    = array_sum($ndtl4_salmo_wall3) / count($ndtl4_salmo_wall3);
                    $fvariantl4_salmo_wall3 = 0.00;
                    $xsamplel4_salmo_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl4_salmo_wall3 as $i){
                    $fvariantl4_salmo_wall3 += pow($i - $fmeanl4_salmo_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl4_salmo_wall3 /= ($xsamplel4_salmo_wall3 ? count($ndtl4_salmo_wall3)-1 : count($ndtl4_salmo_wall3));
                    $stdevl4_salmo_wall3     = number_format(sqrt($fvariantl4_salmo_wall3),2);
                    $totall4_salmo_wall3     = count($ndtl4_salmo_wall3);
                    $inspectl4_salmo_wall3   = $dt1;
                    $outspectl4_salmo_wall3  = $dt2;
                    $prsoutl4_salmo_wall3    = number_format((($dt2 /$totall4_salmo_wall3)* (100)),2);

                } else {

                    $Minl4_salmo_wall3      = '';
                    $Maxl4_salmo_wall3      = '';
                    $Avgl4_salmo_wall3      = '';
                    $stdevl4_salmo_wall3    = '';
                    $totall4_salmo_wall3    = '';
                    $inspectl4_salmo_wall3  = '';
                    $outspectl4_salmo_wall3 = '';
                    $prsoutl4_salmo_wall3   = '';
                }

                //

                       if(is_array($ndtl5_tpc_floor3) && count ($ndtl5_tpc_floor3) > 0)
                {
                    $Minl5_tpc_floor3   = min($ndtl5_tpc_floor3);
                    $Maxl5_tpc_floor3   = max($ndtl5_tpc_floor3);
                    $Avgl5_tpc_floor3   = number_format((array_sum($ndtl5_tpc_floor3)) /(count($ndtl5_tpc_floor3)),2);
                    $Countl5_tpc_floor3 = count($ndtl5_tpc_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_tpc_floor3    = array_sum($ndtl5_tpc_floor3) / count($ndtl5_tpc_floor3);
                    $fvariantl5_tpc_floor3 = 0.00;
                    $xsamplel5_tpc_floor3  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtl5_tpc_floor3 as $i){
                    $fvariantl5_tpc_floor3 += pow($i - $fmeanl5_tpc_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_tpc_floor3 /= ($xsamplel5_tpc_floor3 ? count($ndtl5_tpc_floor3)-1 : count($ndtl5_tpc_floor3));
                    $stdevl5_tpc_floor3     = number_format(sqrt($fvariantl5_tpc_floor3),2);
                    $totall5_tpc_floor3     = count($ndtl5_tpc_floor3);
                    $inspectl5_tpc_floor3   = $dt1;
                    $outspectl5_tpc_floor3  = $dt2;
                    $prsoutl5_tpc_floor3    = number_format((($dt2 /$totall5_tpc_floor3)* (100)),2);

                } else {

                    $Minl5_tpc_floor3      = '';
                    $Maxl5_tpc_floor3      = '';
                    $Avgl5_tpc_floor3      = '';
                    $stdevl5_tpc_floor3    = '';
                    $totall5_tpc_floor3    = '';
                    $inspectl5_tpc_floor3  = '';
                    $outspectl5_tpc_floor3 = '';
                    $prsoutl5_tpc_floor3   = '';
                }

                          if(is_array($ndtl5_entero_floor3) && count ($ndtl5_entero_floor3) > 0)
                {
                    $Minl5_entero_floor3   = min($ndtl5_entero_floor3);
                    $Maxl5_entero_floor3   = max($ndtl5_entero_floor3);
                    $Avgl5_entero_floor3   = number_format((array_sum($ndtl5_entero_floor3)) /(count($ndtl5_entero_floor3)),2);
                    $Countl5_entero_floor3 = count($ndtl5_entero_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_entero_floor3    = array_sum($ndtl5_entero_floor3) / count($ndtl5_entero_floor3);
                    $fvariantl5_entero_floor3 = 0.00;
                    $xsamplel5_entero_floor3  = false;
                    $dt1                      = 0;$dt2 = 0;
                    foreach ($ndtl5_entero_floor3 as $i){
                    $fvariantl5_entero_floor3 += pow($i - $fmeanl5_entero_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_entero_floor3 /= ($xsamplel5_entero_floor3 ? count($ndtl5_entero_floor3)-1 : count($ndtl5_entero_floor3));
                    $stdevl5_entero_floor3     = number_format(sqrt($fvariantl5_entero_floor3),2);
                    $totall5_entero_floor3     = count($ndtl5_entero_floor3);
                    $inspectl5_entero_floor3   = $dt1;
                    $outspectl5_entero_floor3  = $dt2;
                    $prsoutl5_entero_floor3    = number_format((($dt2 /$totall5_entero_floor3)* (100)),2);

                } else {

                    $Minl5_entero_floor3      = '';
                    $Maxl5_entero_floor3      = '';
                    $Avgl5_entero_floor3      = '';
                    $stdevl5_entero_floor3    = '';
                    $totall5_entero_floor3    = '';
                    $inspectl5_entero_floor3  = '';
                    $outspectl5_entero_floor3 = '';
                    $prsoutl5_entero_floor3   = '';
                }

                  if(is_array($ndtl5_ecoli_floor3) && count ($ndtl5_ecoli_floor3) > 0)
                {
                    $Minl5_ecoli_floor3   = min($ndtl5_ecoli_floor3);
                    $Maxl5_ecoli_floor3   = max($ndtl5_ecoli_floor3);
                    $Avgl5_ecoli_floor3   = number_format((array_sum($ndtl5_ecoli_floor3)) /(count($ndtl5_ecoli_floor3)),2);
                    $Countl5_ecoli_floor3 = count($ndtl5_ecoli_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_ecoli_floor3    = array_sum($ndtl5_ecoli_floor3) / count($ndtl5_ecoli_floor3);
                    $fvariantl5_ecoli_floor3 = 0.00;
                    $xsamplel5_ecoli_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl5_ecoli_floor3 as $i){
                    $fvariantl5_ecoli_floor3 += pow($i - $fmeanl5_ecoli_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_ecoli_floor3 /= ($xsamplel5_ecoli_floor3 ? count($ndtl5_ecoli_floor3)-1 : count($ndtl5_ecoli_floor3));
                    $stdevl5_ecoli_floor3     = number_format(sqrt($fvariantl5_ecoli_floor3),2);
                    $totall5_ecoli_floor3     = count($ndtl5_ecoli_floor3);
                    $inspectl5_ecoli_floor3   = $dt1;
                    $outspectl5_ecoli_floor3  = $dt2;
                    $prsoutl5_ecoli_floor3    = number_format((($dt2 /$totall5_ecoli_floor3)* (100)),2);

                } else {

                    $Minl5_ecoli_floor3      = '';
                    $Maxl5_ecoli_floor3      = '';
                    $Avgl5_ecoli_floor3      = '';
                    $stdevl5_ecoli_floor3    = '';
                    $totall5_ecoli_floor3    = '';
                    $inspectl5_ecoli_floor3  = '';
                    $outspectl5_ecoli_floor3 = '';
                    $prsoutl5_ecoli_floor3   = '';
                }

                    if(is_array($ndtl5_salmo_floor3) && count ($ndtl5_salmo_floor3) > 0)
                {
                    $Minl5_salmo_floor3   = min($ndtl5_salmo_floor3);
                    $Maxl5_salmo_floor3   = max($ndtl5_salmo_floor3);
                    $Avgl5_salmo_floor3   = number_format((array_sum($ndtl5_salmo_floor3)) /(count($ndtl5_salmo_floor3)),2);
                    $Countl5_salmo_floor3 = count($ndtl5_salmo_floor3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_salmo_floor3    = array_sum($ndtl5_salmo_floor3) / count($ndtl5_salmo_floor3);
                    $fvariantl5_salmo_floor3 = 0.00;
                    $xsamplel5_salmo_floor3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl5_salmo_floor3 as $i){
                    $fvariantl5_salmo_floor3 += pow($i - $fmeanl5_salmo_floor3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_salmo_floor3 /= ($xsamplel5_salmo_floor3 ? count($ndtl5_salmo_floor3)-1 : count($ndtl5_salmo_floor3));
                    $stdevl5_salmo_floor3     = number_format(sqrt($fvariantl5_salmo_floor3),2);
                    $totall5_salmo_floor3     = count($ndtl5_salmo_floor3);
                    $inspectl5_salmo_floor3   = $dt1;
                    $outspectl5_salmo_floor3  = $dt2;
                    $prsoutl5_salmo_floor3    = number_format((($dt2 /$totall5_salmo_floor3)* (100)),2);

                } else {

                    $Minl5_salmo_floor3      = '';
                    $Maxl5_salmo_floor3      = '';
                    $Avgl5_salmo_floor3      = '';
                    $stdevl5_salmo_floor3    = '';
                    $totall5_salmo_floor3    = '';
                    $inspectl5_salmo_floor3  = '';
                    $outspectl5_salmo_floor3 = '';
                    $prsoutl5_salmo_floor3   = '';
                }


                //
                       if(is_array($ndtl5_tpc_wall3) && count ($ndtl5_tpc_wall3) > 0)
                {
                    $Minl5_tpc_wall3   = min($ndtl5_tpc_wall3);
                    $Maxl5_tpc_wall3   = max($ndtl5_tpc_wall3);
                    $Avgl5_tpc_wall3   = number_format((array_sum($ndtl5_tpc_wall3)) /(count($ndtl5_tpc_wall3)),2);
                    $Countl5_tpc_wall3 = count($ndtl5_tpc_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_tpc_wall3    = array_sum($ndtl5_tpc_wall3) / count($ndtl5_tpc_wall3);
                    $fvariantl5_tpc_wall3 = 0.00;
                    $xsamplel5_tpc_wall3  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtl5_tpc_wall3 as $i){
                    $fvariantl5_tpc_wall3 += pow($i - $fmeanl5_tpc_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_tpc_wall3 /= ($xsamplel5_tpc_wall3 ? count($ndtl5_tpc_wall3)-1 : count($ndtl5_tpc_wall3));
                    $stdevl5_tpc_wall3     = number_format(sqrt($fvariantl5_tpc_wall3),2);
                    $totall5_tpc_wall3     = count($ndtl5_tpc_wall3);
                    $inspectl5_tpc_wall3   = $dt1;
                    $outspectl5_tpc_wall3  = $dt2;
                    $prsoutl5_tpc_wall3    = number_format((($dt2 /$totall5_tpc_wall3)* (100)),2);

                } else {

                    $Minl5_tpc_wall3      = '';
                    $Maxl5_tpc_wall3      = '';
                    $Avgl5_tpc_wall3      = '';
                    $stdevl5_tpc_wall3    = '';
                    $totall5_tpc_wall3    = '';
                    $inspectl5_tpc_wall3  = '';
                    $outspectl5_tpc_wall3 = '';
                    $prsoutl5_tpc_wall3   = '';
                }

                          if(is_array($ndtl5_entero_wall3) && count ($ndtl5_entero_wall3) > 0)
                {
                    $Minl5_entero_wall3   = min($ndtl5_entero_wall3);
                    $Maxl5_entero_wall3   = max($ndtl5_entero_wall3);
                    $Avgl5_entero_wall3   = number_format((array_sum($ndtl5_entero_wall3)) /(count($ndtl5_entero_wall3)),2);
                    $Countl5_entero_wall3 = count($ndtl5_entero_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_entero_wall3    = array_sum($ndtl5_entero_wall3) / count($ndtl5_entero_wall3);
                    $fvariantl5_entero_wall3 = 0.00;
                    $xsamplel5_entero_wall3  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtl5_entero_wall3 as $i){
                    $fvariantl5_entero_wall3 += pow($i - $fmeanl5_entero_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_entero_wall3 /= ($xsamplel5_entero_wall3 ? count($ndtl5_entero_wall3)-1 : count($ndtl5_entero_wall3));
                    $stdevl5_entero_wall3     = number_format(sqrt($fvariantl5_entero_wall3),2);
                    $totall5_entero_wall3     = count($ndtl5_entero_wall3);
                    $inspectl5_entero_wall3   = $dt1;
                    $outspectl5_entero_wall3  = $dt2;
                    $prsoutl5_entero_wall3    = number_format((($dt2 /$totall5_entero_wall3)* (100)),2);

                } else {

                    $Minl5_entero_wall3      = '';
                    $Maxl5_entero_wall3      = '';
                    $Avgl5_entero_wall3      = '';
                    $stdevl5_entero_wall3    = '';
                    $totall5_entero_wall3    = '';
                    $inspectl5_entero_wall3  = '';
                    $outspectl5_entero_wall3 = '';
                    $prsoutl5_entero_wall3   = '';
                }

                  if(is_array($ndtl5_ecoli_wall3) && count ($ndtl5_ecoli_wall3) > 0)
                {
                    $Minl5_ecoli_wall3   = min($ndtl5_ecoli_wall3);
                    $Maxl5_ecoli_wall3   = max($ndtl5_ecoli_wall3);
                    $Avgl5_ecoli_wall3   = number_format((array_sum($ndtl5_ecoli_wall3)) /(count($ndtl5_ecoli_wall3)),2);
                    $Countl5_ecoli_wall3 = count($ndtl5_ecoli_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_ecoli_wall3    = array_sum($ndtl5_ecoli_wall3) / count($ndtl5_ecoli_wall3);
                    $fvariantl5_ecoli_wall3 = 0.00;
                    $xsamplel5_ecoli_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl5_ecoli_wall3 as $i){
                    $fvariantl5_ecoli_wall3 += pow($i - $fmeanl5_ecoli_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_ecoli_wall3 /= ($xsamplel5_ecoli_wall3 ? count($ndtl5_ecoli_wall3)-1 : count($ndtl5_ecoli_wall3));
                    $stdevl5_ecoli_wall3     = number_format(sqrt($fvariantl5_ecoli_wall3),2);
                    $totall5_ecoli_wall3     = count($ndtl5_ecoli_wall3);
                    $inspectl5_ecoli_wall3   = $dt1;
                    $outspectl5_ecoli_wall3  = $dt2;
                    $prsoutl5_ecoli_wall3    = number_format((($dt2 /$totall5_ecoli_wall3)* (100)),2);

                } else {

                    $Minl5_ecoli_wall3      = '';
                    $Maxl5_ecoli_wall3      = '';
                    $Avgl5_ecoli_wall3      = '';
                    $stdevl5_ecoli_wall3    = '';
                    $totall5_ecoli_wall3    = '';
                    $inspectl5_ecoli_wall3  = '';
                    $outspectl5_ecoli_wall3 = '';
                    $prsoutl5_ecoli_wall3   = '';
                }

                    if(is_array($ndtl5_salmo_wall3) && count ($ndtl5_salmo_wall3) > 0)
                {
                    $Minl5_salmo_wall3   = min($ndtl5_salmo_wall3);
                    $Maxl5_salmo_wall3   = max($ndtl5_salmo_wall3);
                    $Avgl5_salmo_wall3   = number_format((array_sum($ndtl5_salmo_wall3)) /(count($ndtl5_salmo_wall3)),2);
                    $Countl5_salmo_wall3 = count($ndtl5_salmo_wall3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanl5_salmo_wall3    = array_sum($ndtl5_salmo_wall3) / count($ndtl5_salmo_wall3);
                    $fvariantl5_salmo_wall3 = 0.00;
                    $xsamplel5_salmo_wall3  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtl5_salmo_wall3 as $i){
                    $fvariantl5_salmo_wall3 += pow($i - $fmeanl5_salmo_wall3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantl5_salmo_wall3 /= ($xsamplel5_salmo_wall3 ? count($ndtl5_salmo_wall3)-1 : count($ndtl5_salmo_wall3));
                    $stdevl5_salmo_wall3     = number_format(sqrt($fvariantl5_salmo_wall3),2);
                    $totall5_salmo_wall3     = count($ndtl5_salmo_wall3);
                    $inspectl5_salmo_wall3   = $dt1;
                    $outspectl5_salmo_wall3  = $dt2;
                    $prsoutl5_salmo_wall3    = number_format((($dt2 /$totall5_salmo_wall3)* (100)),2);

                } else {

                    $Minl5_salmo_wall3      = '';
                    $Maxl5_salmo_wall3      = '';
                    $Avgl5_salmo_wall3      = '';
                    $stdevl5_salmo_wall3    = '';
                    $totall5_salmo_wall3    = '';
                    $inspectl5_salmo_wall3  = '';
                    $outspectl5_salmo_wall3 = '';
                    $prsoutl5_salmo_wall3   = '';
                }

                 $rowfoot0  = $rowCount3+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;


                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 $objPHPExcel3->mergeCells('A'.$rowfoot0.':Z'.$rowfoot0);
                 $objPHPExcel3->setSharedStyle($cellred, 'A'.$rowfoot0.':Z'.$rowfoot0);
                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot1.':Z'.$rowfoot1);
                 $objPHPExcel3->setCellValue('A'.$rowfoot1,'Average ');

                 $objPHPExcel3->setCellValue('B'.$rowfoot1,$Avgl1_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot1,$Avgl1_entero_floor3);
                 $objPHPExcel3->setCellValue('D'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('E'.$rowfoot1,'');               
                 $objPHPExcel3->setCellValue('F'.$rowfoot1,$Avgl1_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot1,$Avgl1_entero_wall3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('I'.$rowfoot1,'');                
                 $objPHPExcel3->setCellValue('J'.$rowfoot1,$Avgl4_tpc_floor3 );                
                 $objPHPExcel3->setCellValue('K'.$rowfoot1,$Avgl4_entero_floor3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('M'.$rowfoot1,'');                            
                 $objPHPExcel3->setCellValue('N'.$rowfoot1,$Avgl4_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot1,$Avgl4_entero_wall3  );
                 $objPHPExcel3->setCellValue('P'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('Q'.$rowfoot1,'');              
                 $objPHPExcel3->setCellValue('R'.$rowfoot1,$Avgl5_tpc_floor3);               
                 $objPHPExcel3->setCellValue('S'.$rowfoot1,$Avgl5_entero_floor3);
                 $objPHPExcel3->setCellValue('T'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('U'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('V'.$rowfoot1,$Avgl5_tpc_wall3);               
                 $objPHPExcel3->setCellValue('W'.$rowfoot1,$Avgl5_entero_wall3);
                 $objPHPExcel3->setCellValue('X'.$rowfoot1,'');
                 $objPHPExcel3->setCellValue('Y'.$rowfoot1,'');
                  $objPHPExcel3->setCellValue('Z'.$rowfoot1,'');
             
                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot2.':Z'.$rowfoot2);
                 $objPHPExcel3->setCellValue('A'.$rowfoot2,'Maximum ');

                 $objPHPExcel3->setCellValue('B'.$rowfoot2,$Maxl1_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot2,$Maxl1_entero_floor3);
                 $objPHPExcel3->setCellValue('D'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('E'.$rowfoot2,'');               
                 $objPHPExcel3->setCellValue('F'.$rowfoot2,$Maxl1_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot2,$Maxl1_entero_wall3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('I'.$rowfoot2,'');                
                 $objPHPExcel3->setCellValue('J'.$rowfoot2,$Maxl4_tpc_floor3 );                
                 $objPHPExcel3->setCellValue('K'.$rowfoot2,$Maxl4_entero_floor3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('M'.$rowfoot2,'');                            
                 $objPHPExcel3->setCellValue('N'.$rowfoot2,$Maxl4_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot2,$Maxl4_entero_wall3  );
                 $objPHPExcel3->setCellValue('P'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('Q'.$rowfoot2,'');              
                 $objPHPExcel3->setCellValue('R'.$rowfoot2,$Maxl5_tpc_floor3);               
                 $objPHPExcel3->setCellValue('S'.$rowfoot2,$Maxl5_entero_floor3);
                 $objPHPExcel3->setCellValue('T'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('U'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('V'.$rowfoot2,$Maxl5_tpc_wall3);               
                 $objPHPExcel3->setCellValue('W'.$rowfoot2,$Maxl5_entero_wall3);
                 $objPHPExcel3->setCellValue('X'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('Y'.$rowfoot2,'');
                 $objPHPExcel3->setCellValue('Z'.$rowfoot2,'');

                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot3.':Z'.$rowfoot3);
                 $objPHPExcel3->setCellValue('A'.$rowfoot3,'Minimum ');

                 $objPHPExcel3->setCellValue('B'.$rowfoot3,$Minl1_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot3,$Minl1_entero_floor3);
                 $objPHPExcel3->setCellValue('D'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('E'.$rowfoot3,'');               
                 $objPHPExcel3->setCellValue('F'.$rowfoot3,$Minl1_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot3,$Minl1_entero_wall3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('I'.$rowfoot3,'');                
                 $objPHPExcel3->setCellValue('J'.$rowfoot3,$Minl4_tpc_floor3 );                
                 $objPHPExcel3->setCellValue('K'.$rowfoot3,$Minl4_entero_floor3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('M'.$rowfoot3,'');                            
                 $objPHPExcel3->setCellValue('N'.$rowfoot3,$Minl4_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot3,$Minl4_entero_wall3  );
                 $objPHPExcel3->setCellValue('P'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('Q'.$rowfoot3,'');              
                 $objPHPExcel3->setCellValue('R'.$rowfoot3,$Minl5_tpc_floor3);               
                 $objPHPExcel3->setCellValue('S'.$rowfoot3,$Minl5_entero_floor3);
                 $objPHPExcel3->setCellValue('T'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('U'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('V'.$rowfoot3,$Minl5_tpc_wall3);               
                 $objPHPExcel3->setCellValue('W'.$rowfoot3,$Minl5_entero_wall3);
                 $objPHPExcel3->setCellValue('X'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('Y'.$rowfoot3,'');
                 $objPHPExcel3->setCellValue('Z'.$rowfoot3,'');

                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot4.':Z'.$rowfoot4);
                 $objPHPExcel3->setCellValue('A'.$rowfoot4,'Totdal Data ');

                 $objPHPExcel3->setCellValue('B'.$rowfoot4,$Countl1_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot4,$Countl1_entero_floor3);
                 $objPHPExcel3->setCellValue('D'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('E'.$rowfoot4,'');               
                 $objPHPExcel3->setCellValue('F'.$rowfoot4,$Countl1_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot4,$Countl1_entero_wall3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('I'.$rowfoot4,'');                
                 $objPHPExcel3->setCellValue('J'.$rowfoot4,$Countl4_tpc_floor3 );                
                 $objPHPExcel3->setCellValue('K'.$rowfoot4,$Countl4_entero_floor3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('M'.$rowfoot4,'');                            
                 $objPHPExcel3->setCellValue('N'.$rowfoot4,$Countl4_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot4,$Countl4_entero_wall3  );
                 $objPHPExcel3->setCellValue('P'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('Q'.$rowfoot4,'');              
                 $objPHPExcel3->setCellValue('R'.$rowfoot4,$Countl5_tpc_floor3);               
                 $objPHPExcel3->setCellValue('S'.$rowfoot4,$Countl5_entero_floor3);
                 $objPHPExcel3->setCellValue('T'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('U'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('V'.$rowfoot4,$Countl5_tpc_wall3);               
                 $objPHPExcel3->setCellValue('W'.$rowfoot4,$Countl5_entero_wall3);
                 $objPHPExcel3->setCellValue('X'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('Y'.$rowfoot4,'');
                 $objPHPExcel3->setCellValue('Z'.$rowfoot4,'');


                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot5.':Z'.$rowfoot5);
                 $objPHPExcel3->setCellValue('A'.$rowfoot5,'Stdev ');

                 $objPHPExcel3->setCellValue('B'.$rowfoot5,$Stdevl1_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot5,$stdevl1_entero_floor3);
                 $objPHPExcel3->setCellValue('D'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('E'.$rowfoot5,'');               
                 $objPHPExcel3->setCellValue('F'.$rowfoot5,$stdevl1_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot5,$stdevl1_entero_wall3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('I'.$rowfoot5,'');                
                 $objPHPExcel3->setCellValue('J'.$rowfoot5,$stdevl4_tpc_floor3 );                
                 $objPHPExcel3->setCellValue('K'.$rowfoot5,$stdevl4_entero_floor3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('M'.$rowfoot5,'');                            
                 $objPHPExcel3->setCellValue('N'.$rowfoot5,$stdevl4_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot5,$stdevl4_entero_wall3  );
                 $objPHPExcel3->setCellValue('P'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('Q'.$rowfoot5,'');              
                 $objPHPExcel3->setCellValue('R'.$rowfoot5,$stdevl5_tpc_floor3);               
                 $objPHPExcel3->setCellValue('S'.$rowfoot5,$stdevl5_entero_floor3);
                 $objPHPExcel3->setCellValue('T'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('U'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('V'.$rowfoot5,$stdevl5_tpc_wall3);               
                 $objPHPExcel3->setCellValue('W'.$rowfoot5,$stdevl5_entero_wall3);
                 $objPHPExcel3->setCellValue('X'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('Y'.$rowfoot5,'');
                 $objPHPExcel3->setCellValue('Z'.$rowfoot5,'');


                 $objPHPExcel3->mergeCells('A'.$rowfoot6.':S'.$rowfoot6); 
                 $objPHPExcel3->setSharedStyle($cellorange1, 'A'.$rowfoot7.':S'.$rowfoot7);
                
                 $objPHPExcel3->mergeCells('A'.$rowfoot7.':D'.$rowfoot7)->setCellValue('A'.$rowfoot7,'REPORTED BY: ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot7.':J'.$rowfoot7)->setCellValue('E'.$rowfoot7,'CHECKED  BY : ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot7.':P'.$rowfoot7)->setCellValue('K'.$rowfoot7,'CONFIRMED BY : ');
                 $objPHPExcel3->mergeCells('Q'.$rowfoot7.':S'.$rowfoot7)->setCellValue('Q'.$rowfoot7,'ACKNOWLEDGED BY : ');

                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowfoot8.':S'.$rowfoot13);
                 $objPHPExcel3->mergeCells('A'.$rowfoot8.':D'.$rowfoot10);
                 $objPHPExcel3->mergeCells('E'.$rowfoot8.':J'.$rowfoot10);
                 $objPHPExcel3->mergeCells('K'.$rowfoot8.':P'.$rowfoot10);
                 $objPHPExcel3->mergeCells('Q'.$rowfoot8.':S'.$rowfoot10);
                  $objPHPExcel3->setSharedStyle($cellorange1, 'A'.$rowfoot11.':S'.$rowfoot13); 
                 $objPHPExcel3->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'NAME : RISTINA YULIANI ');

                 $objPHPExcel3->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'POSITION : KS ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'POSITION : AMGR QAD ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel3->mergeCells('A'.$rowfoot13.':D'.$rowfoot13)->setCellValue('A'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('E'.$rowfoot13.':J'.$rowfoot13)->setCellValue('E'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('K'.$rowfoot13.':P'.$rowfoot13)->setCellValue('K'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('Q'.$rowfoot13.':S'.$rowfoot13)->setCellValue('Q'.$rowfoot13,'DATE : '.$tgl);
             }
                 $objPHPExcel3->mergeCells('A'.$rowfoot14.':C'.$rowfoot14)->setCellValue('A'.$rowfoot14,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel3->mergeCells('R'.$rowfoot14.':S'.$rowfoot14)->setCellValue('R'.$rowfoot14,''.$frmnm);
                 $objPHPExcel3->mergeCells('D'.$rowfoot14.':Q'.$rowfoot14);


                #####################################################
                #                                                   #
                #####################################################


                $objDrawing4 = new PHPExcel_Worksheet_Drawing();
                $objDrawing4->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel4 = $obj->createSheet(4);
                $objDrawing4->setCoordinates('A2');
                $objDrawing4->setWorksheet($objPHPExcel4);
                foreach(range('A','AU') as $columnID){
                $objPHPExcel4->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel4->mergeCells('A1:G1');
                 $objPHPExcel4->mergeCells('B2:F5')->setCellValue('B2',$frmcop);
                 $objPHPExcel4->setCellValue('G2','Tahun: '.$thn);
                 $objPHPExcel4->setCellValue('G3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel2->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel2->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel4->setCellValue('G4','Hal: ');
                 $objPHPExcel4->setCellValue('A6','JUDUL');
                 $objPHPExcel4->mergeCells('B6:G6')->setCellValue('B6',''.$frmjdl);  
                 $objPHPExcel4->mergeCells('A7:A9')->setCellValue('A7',' Tanggal/Shift');  
                 $objPHPExcel4->setCellValue('A10',' Specification');

                 $objPHPExcel4->mergeCells('B7:F7')->setCellValue('B7',' AREA/LINE :DRP/SATU');
                 $objPHPExcel4->mergeCells('B8:F8')->setCellValue('B8','Sendok Sortir');
                 $objPHPExcel4->setCellValue('B9','Sampling Point');
                 $objPHPExcel4->setCellValue('C9','TPC');
                 $objPHPExcel4->setCellValue('D9','Entero');
                 $objPHPExcel4->setCellValue('E9','E.coli');
                 $objPHPExcel4->setCellValue('F9','Salmonella');
                 $objPHPExcel4->setCellValue('G9','');
                 $objPHPExcel4->setSharedStyle($headerStyle, 'A2:G10');


                break;

    //             case $frmkode == 'frmnon017' && $frmvrs == '00':
               
    // $DOK = 'CIP/WTP/'.substr($dtstart,0,4).'/'.substr($dtstart,5,2);
    //     if($dtstart != $dtfinish){
    //         $Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4).' s/d '.substr($dtfinish,8,2).'-'.substr($dtfinish,5,2).'-'.substr($dtfinish,0,4);
    //     }else{
    //         $Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4);
    //     }

    // $dttglStart=$this->uri->segment(8);
    // $dttglFinish=$this->uri->segment(9);
    // $dtdept=$this->uri->segment(10);

    // $dtheader = $this->$model->get_header_byid($dttglStart,$dttglFinish,$dtdept);
    // $data7 = array('dtheader' => $dtheader);
    // foreach($dtheader as $dt_headerrow){
    //     $dttglStart = $dt_headerrow->tanggal;  
    //     $dtdept = $dt_headerrow->departemen;                   
    // }

    // $objDrawing1 = new PHPExcel_Worksheet_Drawing();
    // $objDrawing1->setPath('assets/images/tlogopsg.png');  

    // $objPHPExcel1 = $obj->createSheet(1);
    // $objDrawing1->setCoordinates('A2');
    // $objDrawing1->setWorksheet($objPHPExcel1);
    // foreach(range('A','M') as $columnID){
    //     $objPHPExcel1->getColumnDimension($columnID)->setAutoSize(true);
    // }


    //  $objPHPExcel1->mergeCells('A1:M1');
    //  $objPHPExcel1->mergeCells('A2:A3');
    //  $objPHPExcel1->mergeCells('B2:K4')->setCellValue('B2',$frmcop);
    //  $objPHPExcel1->mergeCells('L2:M2')->setCellValue('L2','DOK: '.$DOK);
    //  $objPHPExcel1->mergeCells('L3:M3')->setCellValue('L3','TANGGAL: '.$dttglStart);
    //  $objPHPExcel1->mergeCells('L4:M4')->setCellValue('L4','HAL: ');

    //  $objPHPExcel1->setCellValue('A5','JUDUL');
    //  $objPHPExcel1->mergeCells('B5:K5')->setCellValue('B5',''.$frmjdl);  
    //  $objPHPExcel1->mergeCells('L5:M5');
    //  $objPHPExcel1->mergeCells('A6:A9')->setCellValue('A6','No');            
    //  $objPHPExcel1->mergeCells('B6:B9')->setCellValue('B6','Tanggal');
    //  $objPHPExcel1->mergeCells('C6:C9')->setCellValue('C6','Jam');
    //  $objPHPExcel1->mergeCells('D6:D9')->setCellValue('D6','Kode Sampel');
    //  $objPHPExcel1->mergeCells('E6:E9')->setCellValue('E6','pH Acf');
    //  $objPHPExcel1->mergeCells('F6:K7')->setCellValue('F6','Chemical Analysis');
    //  $objPHPExcel1->mergeCells('L6:M9')->setCellValue('L6','Keterangan');
    
    //  $objPHPExcel1->mergecells('F8:G9')->setCellValue('F8','Caustic ( 2 - 3 % )');
    //  $objPHPExcel1->mergeCells('H8:I9')->setCellValue('H8','Acid (1 - 1,5 % )');
    //  $objPHPExcel1->mergeCells('J8:K9')->setCellValue('J8','pH Rinsing ( 6,5 - 8,5 )');
  
    //  $objPHPExcel1->setSharedStyle($headerStyle, 'A2:M9');
        
          
    //  $dttglStart=$this->uri->segment(8);
    //  $dttglFinish=$this->uri->segment(9);
        
    //      if(isset($dtdetail1)){
    //          $rowCount1 = 9;  // starting row record table detail
    //          $no=1;
        
    //          foreach ($dtdetail1 as $row1){
    //              $tanggal = $row1->tanggal; 
    //              $jam     = $row1->jam;  
    //              $sampel  = $row1->sampel; 
    //              $hasil_2 = $row1->hasil_2;
    //              $hasil   = $row1->hasil;
    //              $ph      = $row1->ph;
    //              $keterangan      = $row1->keterangan;
               
    //              $rowCount1++;

    //              $objPHPExcel1->setSharedStyle($bodyStyle, 'A'.$rowCount1.':M'.$rowCount1);
    //              $objPHPExcel1->setCellValue('A'.$rowCount1,$no);
    //              $objPHPExcel1->setCellValue('B'.$rowCount1,$tanggal);               
    //              $objPHPExcel1->setCellValue('C'.$rowCount1,$jam);                 
    //              $objPHPExcel1->setCellValue('D'.$rowCount1,$sampel);          
    //              $objPHPExcel1->setCellValue('E'.$rowCount1,'');
    //              $objPHPExcel1->mergeCells('F'.$rowCount1.':G'.$rowCount1)->setCellValue('F'.$rowCount1,$hasil_2);                 
    //              $objPHPExcel1->mergeCells('H'.$rowCount1.':I'.$rowCount1)->setCellValue('H'.$rowCount1,$hasil);
    //              $objPHPExcel1->mergeCells('J'.$rowCount1.':K'.$rowCount1)->setCellValue('J'.$rowCount1,$ph);
    //              $objPHPExcel1->mergeCells('L'.$rowCount1.':M'.$rowCount1)->setCellValue('L'.$rowCount1,$keterangan);
                 
    //              $no++;
    //         }
    //     }

    //      $dttglStart=$this->uri->segment(8);
    //      $dttglFinish=$this->uri->segment(9);
          
    //     if(isset($dtdetail1)){

    //      foreach ($dtdetail1 as $row1){
        
    //          $dt_hasil_22[] = $row1->hasil_2;
    //          $dt_hasil2[]= $row1->hasil;
    //          $dt_ph2[]= $row1->ph;

    //         $ndthasil_22     = array_diff($dt_hasil_22 , array('',0));
    //         $ndthasil2   = array_diff($dt_hasil2 , array('',0));
    //         $ndtph2   = array_diff($dt_ph2 , array('',0));
    //     }
       

    //        if(is_array($ndthasil_22) && count ($ndthasil_22) > 0)
    //     {
    //         $Minhasil_22  =min($ndthasil_22);
    //         $Maxhasil_22  =max($ndthasil_22);
    //         $Avghasil_22  =number_format((array_sum($ndthasil_22)) /(count($ndthasil_22)),2);
    //         $Counthasil_22   = count($ndthasil_22);
    //         //nilai standard devisiasi (sttdev)
    //         $fmeanhasil_22  =array_sum($ndthasil_22) / count($ndthasil_22);
    //         $fvarianthasil_22  =0.00;
    //         $xsamplehasil_22  =false;
    //         $dt1=0;$dt2=0;
    //         foreach ($ndthasil_22 as $i){
    //         $fvarianthasil_22  +=pow($i - $fmeanhasil_22   ,2);
    //         if(($i>=10.5) && ($i<=11.5)){$dt1++;}
    //         if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
    //         }
    //         $fvarianthasil_22   /=($xsamplehasil_22   ? count($ndthasil_22)-1 : count($ndthasil_22));
    //         $stdevhasil_22  =number_format(sqrt($fvarianthasil_22  ),2);
    //         $totalhasil_22   = count($ndthasil_22);
    //         $inspecthasil_22   = $dt1;
    //         $outspecthasil_22   = $dt2;
    //         $prsouthasil_22   = number_format((($dt2 /$totalhasil_22  )* (100)),2);

    //     } else {

    //         $Minhasil_22  ='';
    //         $Maxhasil_22  ='';
    //         $Avghasil_22  ='';
    //         $stdevhasil_22  ='';
    //         $totalhasil_22  ='';
    //         $inspecthasil_22  ='';
    //         $outspecthasil_22  ='';
    //         $prsouthasil_22  ='';
    //     }
      
    //            if(is_array($ndthasil2) && count ($ndthasil2) > 0)
    //     {
    //         $Minhasil2  =min($ndthasil2);
    //         $Maxhasil2  =max($ndthasil2);
    //         $Avghasil2  =number_format((array_sum($ndthasil2)) /(count($ndthasil2)),2);
    //         $Counthasil2   = count($ndthasil2);
    //         //nilai standard devisiasi (sttdev)
    //         $fmeanhasil2  =array_sum($ndthasil2) / count($ndthasil2);
    //         $fvarianthasil2  =0.00;
    //         $xsamplehasil2  =false;
    //         $dt1=0;$dt2=0;
    //         foreach ($ndthasil2 as $i){
    //         $fvarianthasil2  +=pow($i - $fmeanhasil2   ,2);
    //         if(($i>=10.5) && ($i<=11.5)){$dt1++;}
    //         if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
    //         }
    //         $fvarianthasil2   /=($xsamplehasil2   ? count($ndthasil2)-1 : count($ndthasil2));
    //         $stdevhasil2  =number_format(sqrt($fvarianthasil2  ),2);
    //         $totalhasil2   = count($ndthasil2);
    //         $inspecthasil2   = $dt1;
    //         $outspecthasil2   = $dt2;
    //         $prsouthasil2   = number_format((($dt2 /$totalhasil2  )* (100)),2);

    //     } else {

    //         $Minhasil2  ='';
    //         $Maxhasil2  ='';
    //         $Avghasil2  ='';
    //         $stdevhasil2  ='';
    //         $totalhasil2  ='';
    //         $inspecthasil2  ='';
    //         $outspecthasil2  ='';
    //         $prsouthasil2  ='';
    //     }

    //            if(is_array($ndtph2) && count ($ndtph2) > 0)
    //     {
    //         $Minph2  =min($ndtph2);
    //         $Maxph2  =max($ndtph2);
    //         $Avgph2  =number_format((array_sum($ndtph2)) /(count($ndtph2)),2);
    //         $Countph2   = count($ndtph2);
    //         //nilai standard devisiasi (sttdev)
    //         $fmeanph2  =array_sum($ndtph2) / count($ndtph2);
    //         $fvariantph2  =0.00;
    //         $xsampleph2  =false;
    //         $dt1=0;$dt2=0;
    //         foreach ($ndtph2 as $i){
    //         $fvariantph2  +=pow($i - $fmeanph2   ,2);
    //         if(($i>=10.5) && ($i<=11.5)){$dt1++;}
    //         if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
    //         }
    //         $fvariantph2   /=($xsampleph2   ? count($ndtph2)-1 : count($ndtph2));
    //         $stdevph2  =number_format(sqrt($fvariantph2  ),2);
    //         $totalph2   = count($ndtph2);
    //         $inspectph2   = $dt1;
    //         $outspectph2   = $dt2;
    //         $prsoutph2   = number_format((($dt2 /$totalph2  )* (100)),2);

    //     } else {

    //         $Minph2  ='';
    //         $Maxph2  ='';
    //         $Avgph2  ='';
    //         $stdevph2  ='';
    //         $totalph2  ='';
    //         $inspectph2  ='';
    //         $outspectph2  ='';
    //         $prsoutph2  ='';
    //     }
        


    //     $rowfoot0=$rowCount1+1;
    //      $rowfoot1 = $rowfoot0+1;
    //      $rowfoot2 = $rowfoot1+1;
    //      $rowfoot3 = $rowfoot2+1;
    //      $rowfoot4 = $rowfoot3+1;


    //      $objPHPExcel1->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
    //      $objPHPExcel1->setSharedStyle($cellred, 'A'.$rowfoot0.':M'.$rowfoot0);
    //      $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot1.':M'.$rowfoot1);
    //      $objPHPExcel1->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'MIN ');       
    //      $objPHPExcel1->mergeCells('F'.$rowfoot1.':G'.$rowfoot1,':')->setCellValue('F'.$rowfoot1,$Minhasil_22 );                       
    //      $objPHPExcel1->mergeCells('H'.$rowfoot1.':I'.$rowfoot1,':')->setCellValue('H'.$rowfoot1,$Minhasil2);
    //      $objPHPExcel1->mergeCells('J'.$rowfoot1.':K'.$rowfoot1,':')->setCellValue('J'.$rowfoot1,$Minph2 );
    //      $objPHPExcel1->mergeCells('L'.$rowfoot1.':M'.$rowfoot1,':')->setCellValue('L'.$rowfoot1,'');  

    //      $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot2.':M'.$rowfoot2);        
    //      $objPHPExcel1->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'MAX');    
    //      $objPHPExcel1->mergeCells('F'.$rowfoot2.':G'.$rowfoot2,':')->setCellValue('F'.$rowfoot2,$Maxhasil_22 );                       
    //      $objPHPExcel1->mergeCells('H'.$rowfoot2.':I'.$rowfoot2,':')->setCellValue('H'.$rowfoot2,$Avghasil2);
    //      $objPHPExcel1->mergeCells('J'.$rowfoot2.':K'.$rowfoot2,':')->setCellValue('J'.$rowfoot2,$Avgph2 );
    //      $objPHPExcel1->mergeCells('L'.$rowfoot2.':M'.$rowfoot2,':')->setCellValue('L'.$rowfoot2,'');  

    //      $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot3.':M'.$rowfoot3);  
    //      $objPHPExcel1->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'AVERAGE ');  
    //      $objPHPExcel1->mergeCells('F'.$rowfoot3.':G'.$rowfoot3,':')->setCellValue('F'.$rowfoot3,$Maxhasil_22 );                       
    //      $objPHPExcel1->mergeCells('H'.$rowfoot3.':I'.$rowfoot3,':')->setCellValue('H'.$rowfoot3,$Avghasil2);
    //      $objPHPExcel1->mergeCells('J'.$rowfoot3.':K'.$rowfoot3,':')->setCellValue('J'.$rowfoot3,$Avgph2 );
    //      $objPHPExcel1->mergeCells('L'.$rowfoot3.':M'.$rowfoot3,':')->setCellValue('L'.$rowfoot3,'');  

    //      $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot4.':M'.$rowfoot4); 
    //      $objPHPExcel1->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'STDEV ');
    //      $objPHPExcel1->mergeCells('F'.$rowfoot4.':G'.$rowfoot4,':')->setCellValue('F'.$rowfoot4,$stdevhasil_22 );                       
    //      $objPHPExcel1->mergeCells('H'.$rowfoot4.':I'.$rowfoot4,':')->setCellValue('H'.$rowfoot4,$stdevhasil2);
    //      $objPHPExcel1->mergeCells('J'.$rowfoot4.':K'.$rowfoot4,':')->setCellValue('J'.$rowfoot4,$stdevph2 );
    //      $objPHPExcel1->mergeCells('L'.$rowfoot4.':M'.$rowfoot4,':')->setCellValue('L'.$rowfoot4,'');  

    //     }
    // break;
     



                

            case $frmkode == 'frmnon014' && $frmvrs == '00': 
               
            $Doc = 'AT/MIC/'.substr($dtstart,0,4).'/'.substr($dtstart,5,2);
                if($dtstart != $dtfinish){$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4).' s/d '.substr($dtfinish,8,2).'-'.substr($dtfinish,5,2).'-'.substr($dtfinish,0,4);}
                else{$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4);
            }

            $dttglStart  = $this->uri->segment(8);
            $dttglFinish = $this->uri->segment(9);
            $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
            $data7       = array('dtheader' => $dtheader);

           foreach($dtheader as $dt_headerrow){
            $dttglStart = $dt_headerrow->tgl_data;
                    
            }
          
                $objPHPExcel = $obj->createSheet(1);
                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);
                foreach(range('A','AF') as $columnID){
                $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                
                }

                 $thn = substr($dttglStart,0,4 );
                 $bln = substr($dttglStart,8,2);
                

                 $objPHPExcel->mergeCells('A1:AF1');
                 $objPHPExcel->mergeCells('A2:A5');
                 $objPHPExcel->mergeCells('B2:AB5')->setCellValue('B2',$frmcop);
                 $objPHPExcel->setCellValue('AC2','Tahun: '.$thn);
                 $objPHPExcel->setCellValue('AC3','Bulan: '.$bln);
                 //$a=$objPHPExcel->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel->setCellValue('AC4','Hal: ');
                 $objPHPExcel->mergeCells('B6:AC6')->setCellValue('B6',''.$frmjdl);
                 $objPHPExcel->setCellValue('A6','JUDUL');
                             
                 $objPHPExcel->mergeCells('A7:A8')->setCellValue('A7','Tanggal Air Test');
                 $objPHPExcel->mergeCells('B7:B8')->setCellValue('B7','Shift');
                 $objPHPExcel->mergeCells('C7:G7')->setCellValue('C7','FIlling Room');

                 $objPHPExcel->mergeCells('H7:K7')->setCellValue('H7','Colling /Packing Room');
                
                 $objPHPExcel->mergeCells('L7:O7')->setCellValue('L7','Cooler /Lantai 2');
                 $objPHPExcel->mergeCells('P7:S7')->setCellValue('P7','Ducting Sterile Air Area');
                 $objPHPExcel->mergeCells('T7:W7')->setCellValue('T7','Fluidizer Room');
                 $objPHPExcel->mergeCells('X7:AB7')->setCellValue('X7','HPM Room');
                 $objPHPExcel->mergeCells('AC7:AC10')->setCellValue('AC7','Keterangan');

                 $objPHPExcel->setSharedStyle($headerStyle, 'A2:AC8');
                 $objPHPExcel->setCellValue('C8','TPC');$objPHPExcel->setCellValue('D8','Entero');$objPHPExcel->setCellValue('E8','Yeast');
                 $objPHPExcel->setCellValue('F8','Mould');$objPHPExcel->setCellValue('G8','Y & M');

                 $objPHPExcel->setCellValue('H8','TPC');$objPHPExcel->setCellValue('I8','Yeast');
                 $objPHPExcel->setCellValue('J8','Mould');$objPHPExcel->setCellValue('K8','Y & M');
            

                 $objPHPExcel->setCellValue('L8','TPC');$objPHPExcel->setCellValue('M8','Yeast');
                 $objPHPExcel->setCellValue('N8','Mould');$objPHPExcel->setCellValue('O8','Y & M');


                 $objPHPExcel->setCellValue('P8','TPC');$objPHPExcel->setCellValue('Q8','Yeast');
                 $objPHPExcel->setCellValue('R8','Mould');$objPHPExcel->setCellValue('S8','Y & M');

                 $objPHPExcel->setCellValue('T8','TPC');$objPHPExcel->setCellValue('U8','Yeast');
                 $objPHPExcel->setCellValue('V8','Mould');$objPHPExcel->setCellValue('W8','Y & M');

                 $objPHPExcel->setCellValue('X8','TPC'); $objPHPExcel->setCellValue('Y8','Entero');$objPHPExcel->setCellValue('Z8','Yeast');
                 $objPHPExcel->setCellValue('AA8','Mould');  $objPHPExcel->setCellValue('AB8','Y & M');

                 
                 $objPHPExcel->setSharedStyle($cellorange, 'A9:AC10');
                 $objPHPExcel->setSharedStyle($cellyellow1, 'L7:O7');
                 $objPHPExcel->setSharedStyle($cellyellow1, 'P7:S7');
                  /*specification */
                 $objPHPExcel->mergecells('A9:A10')->setCellValue('A9','Specification');
                 /*shift */
                 $objPHPExcel->mergecells('B9:B10')->setCellValue('B9','');
                 /*filling Room TPC*/
                 $objPHPExcel->mergecells('C9:C10')->setCellValue('C9','Max 30cfu/15min');
                   /*filling Room Entero*/
                 $objPHPExcel->mergecells('D9:D10')->setCellValue('D9','Max <icfu/15min');
                 
                 /*filling Room Yeast*/
                 $objPHPExcel->mergecells('E9:E10')->setCellValue('E9','');
                 /*filling Room Mould*/
                 $objPHPExcel->mergecells('F9:F10')->setCellValue('F9','');
                 /*filling Room Y&M*/
                 $objPHPExcel->mergecells('G9:G10')->setCellValue('G9','Max 15cfu/15min');

                 /*coolling packing Room*/
                 $objPHPExcel->mergecells('H9:H10')->setCellValue('H9','Max 30cfu/15min');                 
                 $objPHPExcel->mergecells('I9:I10')->setCellValue('I9','');
                 $objPHPExcel->mergecells('J9:J10')->setCellValue('J9','');
                 $objPHPExcel->mergecells('K9:K10')->setCellValue('K9','Max 15cfu/15min');

                 /*cooler Lantai 2*/
                 $objPHPExcel->mergecells('L9:L10')->setCellValue('L9','Max 45cfu/15min');
                 $objPHPExcel->mergecells('M9:M10')->setCellValue('M9','');
                 $objPHPExcel->mergecells('N9:N10')->setCellValue('N9','');
                 $objPHPExcel->mergecells('O9:O10')->setCellValue('O9','Max 15cfu/15min');


                    /*Ducting Sterile Air Area */
                 $objPHPExcel->mergecells('P9:P10')->setCellValue('P9','Max 15cfu/15min');
                 $objPHPExcel->mergecells('Q9:Q10')->setCellValue('Q9','');
                 $objPHPExcel->mergecells('R9:R10')->setCellValue('R9','');
                 $objPHPExcel->mergecells('S9:S10')->setCellValue('S9','Max 10cfu/15min');

                     /*Fluidizer Room */
                 $objPHPExcel->mergecells('T9:T10')->setCellValue('T9','Max 30cfu/15min');
                 $objPHPExcel->mergecells('U9:U10')->setCellValue('U9','');
                 $objPHPExcel->mergecells('V9:V10')->setCellValue('V9','');
                 $objPHPExcel->mergecells('W9:W10')->setCellValue('W9','Max 15cfu/15min');

                      /*HPM Room */
                 $objPHPExcel->mergecells('X9:X10')->setCellValue('X9','Max 15cfu/15min');
                 $objPHPExcel->mergecells('Y9:Y10')->setCellValue('Y9','Max <1cfu/15min');
                 $objPHPExcel->mergecells('Z9:Z10')->setCellValue('Z9','');
                 $objPHPExcel->mergecells('AA9:AA10')->setCellValue('AA9','');
                 $objPHPExcel->mergecells('AB9:AB10')->setCellValue('AB9','Max 15cfu/15min');


                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                 $dtdetail1   = $this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                 if(isset($dtdetail1)){

                 $rowCount = 10;
                 $no       = 1;
                
                 foreach ($dtdetail1 as $row){
                 $tgl_data  = $row->tgl_data;
                 $shift     = $row->shift;
                 $fr_tpc    = $row->fr_tpc;
                 $fr_entero = $row->fr_entero;
                
                 $fr_yeast       = $row->fr_yeast;
                 $fr_mould       = $row->fr_mould;
                 $fr_yeast_mould = $row->fr_yeast+$row->fr_mould;

                 $cooling_pack_tpc         = $row->cooling_pack_tpc;
                 $cooling_pack_yeast       = $row->cooling_pack_yeast;
                 $cooling_pack_mould       = $row->cooling_pack_mould;
                 $cooling_pack_mould_yeast = $row->cooling_pack_yeast+$row->cooling_pack_mould;


                 $cooler_tpc         = $row->cooler_tpc;
                 $cooler_yeast       = $row->cooler_yeast;
                 $cooler_mould       = $row->cooler_mould;
                 $cooler_mould_yeast = $row->cooler_yeast+$row->cooler_mould;

                 $ducting_tpc         = $row->ducting_tpc;
                 $ducting_yeast       = $row->ducting_yeast;
                 $ducting_mould       = $row->ducting_mould;
                 $ducting_mould_yeast = $row->ducting_yeast+$row->ducting_mould;

                 $fluidizer_tpc         = $row->fluidizer_tpc;
                 $fluidizer_yeast       = $row->fluidizer_yeast;
                 $fluidizer_mould       = $row->fluidizer_mould;
                 $fluidizer_mould_yeast = $row->fluidizer_yeast+$row->fluidizer_mould;

                 $hpm_tpc         = $row->hpm_tpc;
                 $hpm_entero      = $row->hpm_entero;
                 $hpm_yeast       = $row->hpm_yeast;
                 $hpm_mould       = $row->hpm_mould;
                 $hpm_mould_yeast = $row->hpm_yeast+$row->hpm_mould;
                 $keterangan      = $row->keterangan;
                 $rowCount++;

                 $objPHPExcel->setSharedStyle($bodyStyle, 'A'.$rowCount.':AC'.$rowCount);
                 $objPHPExcel->setCellValue('A'.$rowCount, $tgl_data);
                 $objPHPExcel->setCellValue('B'.$rowCount,$shift);
                 $objPHPExcel->setCellValue('C'.$rowCount,$fr_tpc);
                 if($fr_entero=='1'){$operator='< ';}elseif ($fr_entero=='0'){ $operator=''; }else{$operator='';}                
                 $objPHPExcel->setCellValue('D'.$rowCount,$operator.''.$fr_entero);
                 $objPHPExcel->setCellValue('E'.$rowCount,$fr_yeast);
                 if($fr_mould=='1'){$operator='< ';}elseif ($fr_mould=='0'){ $operator=''; }else{$operator='';} 
                 $objPHPExcel->setCellValue('F'.$rowCount,$operator.''.$fr_mould);

                 if ($fr_yeast_mould=='0'){
                    $fr_yeast_mould=='';
                 }else{
                    $fr_yeast_mould;  
                 }
                 $objPHPExcel->setCellValue('G'.$rowCount,$fr_yeast_mould);

                 $objPHPExcel->setCellValue('H'.$rowCount,$cooling_pack_tpc);
                 if($cooling_pack_yeast=='1'){$operator='< ';}elseif ($fr_mould=='0'){ $operator=''; }else{$operator='';} 
                 $objPHPExcel->setCellValue('I'.$rowCount,$operator.''.$cooling_pack_yeast);
                 if($cooling_pack_mould=='1'){$operator='< ';}elseif ($fr_mould=='0'){ $operator=''; }else{$operator='';} 
                 $objPHPExcel->setCellValue('J'.$rowCount,$operator.''.$cooling_pack_mould);
                
                    if(isset($cooling_pack_mould_yeast)=='0'){
                        $cooling_pack_mould_yeast=='';
                    }else{
                       $cooling_pack_mould_yeast; 
                    }
                 $objPHPExcel->setCellValue('K'.$rowCount,$cooling_pack_mould_yeast);
                 if ($cooler_tpc=='0'){
                    $cooler_tpc=='';
                 }else{
                    $cooler_tpc;
                 }
                 $objPHPExcel->setCellValue('L'.$rowCount,$cooler_tpc);

                 $objPHPExcel->setCellValue('M'.$rowCount,$cooler_tpc);
                    if (isset($cooler_yeast)=='0'){
                    $cooler_yeast=='';
                 }else{
                    $cooler_yeast;
                 }

                 $objPHPExcel->setCellValue('N'.$rowCount,$cooler_yeast);
                 $objPHPExcel->setCellValue('O'.$rowCount,$cooler_mould);
                 $objPHPExcel->setCellValue('P'.$rowCount,$cooler_mould_yeast);

                  if ($ducting_tpc=='0'){
                    $ducting_tpc=='';
                 }else{
                    $ducting_tpc;
                 }
                 $objPHPExcel->setCellValue('Q'.$rowCount,$ducting_tpc);
                 $objPHPExcel->setCellValue('R'.$rowCount,$ducting_yeast);
                 $objPHPExcel->setCellValue('S'.$rowCount,$ducting_mould);
                 $objPHPExcel->setCellValue('T'.$rowCount,$ducting_mould_yeast);

                  if ($fluidizer_tpc=='0'){
                    $fluidizer_tpc=='';
                 }else{
                    $fluidizer_tpc;
                 }
                 $objPHPExcel->setCellValue('U'.$rowCount,$fluidizer_tpc);
                 $objPHPExcel->setCellValue('V'.$rowCount,$fluidizer_yeast);
                 $objPHPExcel->setCellValue('W'.$rowCount,$fluidizer_mould);
                 $objPHPExcel->setCellValue('X'.$rowCount,$fluidizer_mould_yeast);
                 if ($hpm_tpc=='0'){
                    $hpm_tpc=='';
                 }else{
                    $hpm_tpc;
                 }
                 $objPHPExcel->setCellValue('Y'.$rowCount,$hpm_tpc);
                 $objPHPExcel->setCellValue('Z'.$rowCount,$hpm_entero);
                 $objPHPExcel->setCellValue('AA'.$rowCount,$hpm_yeast);
                 $objPHPExcel->setCellValue('AB'.$rowCount,$hpm_mould);
                 $objPHPExcel->setCellValue('AC'.$rowCount,$hpm_mould_yeast);
                 $objPHPExcel->setCellValue('AD'.$rowCount,$keterangan);

                 $no++;
               }
             }

               $dttglStart     = $this->uri->segment(8);
               $dttglFinish    = $this->uri->segment(9);
               $data_dtdetail1 = $this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                  
               if(isset($dtdetail1)){
    
                 foreach ($dtdetail1 as $row2){
                 $dt_fr_tpc        []  = $row2->fr_tpc;
                 $dt_fr_entero     []  = $row2->fr_entero;
                 $dt_fr_yeast      []  = $row2->fr_yeast;
                 $dt_fr_mould       [] = $row2->fr_mould;
                 $dt_fr_yeast_mould[]  = $row2->fr_yeast+$row2->fr_mould;
                 
                 $dt_cooling_pack_tpc        [] = $row2->cooling_pack_tpc;
                 $dt_cooling_pack_yeast      [] = $row2->cooling_pack_yeast;
                 $dt_cooling_pack_mould      [] = $row2->cooling_pack_mould;
                 $dt_cooling_pack_tpc        [] = $row2->cooling_pack_tpc;
                 $dt_cooling_pack_mould_yeast[] = $row2->cooling_pack_yeast+$row->cooling_pack_mould;

                 $dt_cooler_tpc        [] = $row2->cooler_tpc;
                 $dt_cooler_yeast      [] = $row2->cooler_yeast;
                 $dt_cooler_mould      [] = $row2->cooler_mould;
                 $dt_cooler_mould_yeast[] = $row2->cooler_yeast+$row->cooler_mould;
                 

                 $dt_ducting_tpc        [] = $row2->ducting_tpc;
                 $dt_ducting_yeast      [] = $row2->ducting_yeast;
                 $dt_ducting_mould      [] = $row2->ducting_mould;
                 $dt_ducting_mould_yeast[] = $row2->ducting_yeast+$row->ducting_mould;

                 $dt_fluidizer_tpc        [] = $row2->fluidizer_tpc;
                 $dt_fluidizer_yeast      [] = $row2->fluidizer_yeast;
                 $dt_fluidizer_mould      [] = $row2->fluidizer_mould;
                 $dt_fluidizer_mould_yeast[] = $row2->fluidizer_yeast+$row->fluidizer_mould;

                 $dt_hpm_tpc        [] = $row2->hpm_tpc;
                 $dt_hpm_entero     [] = $row2->hpm_entero;
                 $dt_hpm_yeast      [] = $row->hpm_yeast;
                 $dt_hpm_mould      [] = $row2->hpm_mould;
                 $dt_hpm_mould_yeast[] = $row2->hpm_yeast+$row->hpm_mould;

  
                $ndtfr_tpc         = array_diff($dt_fr_tpc, array('',0));
                $ndtfr_entero      = array_diff($dt_fr_entero, array('',0));
                $ndtfr_yeast       = array_diff($dt_fr_yeast, array('',0));
                $ndtfr_mould       = array_diff($dt_fr_mould, array('',0));
                $ndtfr_yeast_mould = array_diff($dt_fr_yeast_mould, array('',0));

                $ndtcooling_pack_tpc         = array_diff($dt_cooling_pack_tpc, array('',0));
                $ndtcooling_pack_yeast       = array_diff($dt_cooling_pack_yeast, array('',0));
                $ndtcooling_pack_mould       = array_diff($dt_cooling_pack_mould, array('',0));
                $ndtcooling_pack_mould_yeast = array_diff($dt_cooling_pack_mould_yeast, array('',0));
               
                $ndtcooler_tpc         = array_diff($dt_cooler_tpc, array('',0));
                $ndtcooler_yeast       = array_diff($dt_cooler_yeast, array('',0));
                $ndtcooler_mould       = array_diff($dt_cooler_mould, array('',0));
                $ndtcooler_mould_yeast = array_diff($dt_cooler_mould_yeast, array('',0));
                
                $ndtducting_tpc         = array_diff($dt_ducting_tpc, array('',0));
                $ndtducting_yeast       = array_diff($dt_ducting_yeast, array('',0));
                $ndtducting_mould       = array_diff($dt_ducting_mould, array('',0));
                $ndtducting_mould_yeast = array_diff($dt_ducting_mould_yeast, array('',0));

                $ndtfluidizer_tpc         = array_diff($dt_fluidizer_tpc, array('',0));
                $ndtfluidizer_yeast       = array_diff($dt_fluidizer_yeast, array('',0));
                $ndtfluidizer_mould       = array_diff($dt_fluidizer_mould, array('',0));
                $ndtfluidizer_mould_yeast = array_diff($dt_fluidizer_mould_yeast, array('',0));

                $ndthpm_tpc         = array_diff($dt_hpm_tpc, array('',0));
                $ndthpm_entero      = array_diff($dt_hpm_entero, array('',0));
                $ndthpm_yeast       = array_diff($dt_hpm_yeast, array('',0));
                $ndthpm_mould       = array_diff($dt_hpm_mould, array('',0));
                $ndthpm_mould_yeast = array_diff($dt_hpm_mould_yeast, array('',0));

                }
                 if(is_array($ndtfr_tpc) && count ($ndtfr_tpc) > 0)
                {
                    $Minfr_tpc   = min($ndtfr_tpc);
                    $Maxfr_tpc   = max($ndtfr_tpc);
                    $Avgfr_tpc   = number_format((array_sum($ndtfr_tpc)) /(count($ndtfr_tpc)),2);
                    $Countfr_tpc = count($ndtfr_tpc);
                    //nilai standard devisiasi (sttdev)
                    $fmeanfr_tpc    = array_sum($ndtfr_tpc) / count($ndtfr_tpc);
                    $fvariantfr_tpc = 0.00;
                    $xsamplefr_tpc  = false;
                    $dt1            = 0;$dt2 = 0;
                    foreach ($ndtfr_tpc as $i){
                    $fvariantfr_tpc += pow($i - $fmeanfr_tpc ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfr_tpc /= ($xsamplefr_tpc ? count($ndtfr_tpc)-1 : count($ndtfr_tpc));
                    $stdevfr_tpc     = number_format(sqrt($fvariantfr_tpc),2);
                    $totalfr_tpc     = count($ndtfr_tpc);
                    $inspectfr_tpc   = $dt1;
                    $outspectfr_tpc  = $dt2;
                    $prsoutfr_tpc    = number_format((($dt2 /$totalfr_tpc)* (100)),2);

                } else {

                    $Minfr_tpc      = '';
                    $Maxfr_tpc      = '';
                    $Avgfr_tpc      = '';
                    $Countfr_tpc    = '';
                    $totalfr_tpc    = '';
                    $inspectfr_tpc  = '';
                    $outspectfr_tpc = '';
                    $stdevfr_tpc    = '';
                    $prsoutfr_tpc   = '';

                }

                       if(is_array($ndtfr_entero) && count ($ndtfr_entero) > 0)
                {
                    $Minfr_entero   = min($ndtfr_entero);
                    $Maxfr_entero   = max($ndtfr_entero);
                    $Avgfr_entero   = number_format((array_sum($ndtfr_entero)) /(count($ndtfr_entero)),2);
                    $Countfr_entero = count($ndtfr_entero);
                    //nilai standard devisiasi (sttdev)
                    $fmeanfr_entero    = array_sum($ndtfr_entero) / count($ndtfr_entero);
                    $fvariantfr_entero = 0.00;
                    $xsamplefr_entero  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtfr_entero as $i){
                    $fvariantfr_entero += pow($i - $fmeanfr_entero  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfr_entero /= ($xsamplefr_entero  ? count($ndtfr_entero)-1 : count($ndtfr_entero));
                    $stdevfr_entero     = number_format(sqrt($fvariantfr_entero ),2);
                    $totalfr_entero     = count($ndtfr_entero);
                    $inspectfr_entero   = $dt1;
                    $outspectfr_entero  = $dt2;
                    $prsoutfr_entero    = number_format((($dt2 /$totalfr_entero )* (100)),2);

                } else {


                    $Minfr_entero      = '';
                    $Maxfr_entero      = '';
                    $Avgfr_entero      = '';
                    $Countfr_entero    = '';
                    $totalfr_entero    = '';
                    $inspectfr_entero  = '';
                    $outspectfr_entero = '';
                    $stdevfr_entero    = '';
                    $prsoutfr_entero   = '';
                }


                   if(is_array($ndtfr_yeast) && count ($ndtfr_yeast) > 0)
                {
                    $Minfr_yeast   = min($ndtfr_yeast);
                    $Maxfr_yeast   = max($ndtfr_yeast);
                    $Avgfr_yeast   = number_format((array_sum($ndtfr_yeast)) /(count($ndtfr_yeast)),2);
                    $Countfr_yeast = count($ndtfr_yeast);
                    //nilai standard devisiasi (sttdev)
                    $fmeanfr_yeast    = array_sum($ndtfr_yeast) / count($ndtfr_yeast);
                    $fvariantfr_yeast = 0.00;
                    $xsamplefr_yeast  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtfr_yeast as $i){
                    $fvariantfr_yeast += pow($i - $fmeanfr_yeast  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfr_yeast /= ($xsamplefr_yeast  ? count($ndtfr_yeast)-1 : count($ndtfr_yeast));
                    $stdevfr_yeast     = number_format(sqrt($fvariantfr_yeast ),2);
                    $totalfr_yeast     = count($ndtfr_yeast);
                    $inspectfr_yeast   = $dt1;
                    $outspectfr_yeast  = $dt2;
                    $prsoutfr_yeast    = number_format((($dt2 /$totalfr_yeast )* (100)),2);

                } else {


                    $Minfr_yeast   = '';
                    $Maxfr_yeast   = '';
                    $Avgfr_yeast   = '';
                    $Countfr_yeast = '';
                    $totalfr_yeast = '';
                    $stdevfr_yeast = '';

                    $inspectfr_yeast  = '';
                    $outspectfr_yeast = '';
                    $prsoutfr_yeast   = '';
                }


                    
                   if(is_array($ndtfr_mould) && count ($ndtfr_mould) > 0)
                {
                    $Minfr_mould   = min($ndtfr_mould);
                    $Maxfr_mould   = max($ndtfr_mould);
                    $Avgfr_mould   = number_format((array_sum($ndtfr_mould)) /(count($ndtfr_mould)),2);
                    $Countfr_mould = count($ndtfr_mould);
                    //nilai standard devisiasi (sttdev)
                    $fmeanfr_mould    = array_sum($ndtfr_mould) / count($ndtfr_mould);
                    $fvariantfr_mould = 0.00;
                    $xsamplefr_mould  = false;
                    $dt1              = 0;$dt2 = 0;
                    foreach ($ndtfr_mould as $i){
                    $fvariantfr_mould += pow($i - $fmeanfr_mould  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfr_mould /= ($xsamplefr_mould  ? count($ndtfr_mould)-1 : count($ndtfr_mould));
                    $stdevfr_mould     = number_format(sqrt($fvariantfr_mould ),2);
                    $totalfr_mould     = count($ndtfr_mould);
                    $inspectfr_mould   = $dt1;
                    $outspectfr_mould  = $dt2;
                    $prsoutfr_mould    = number_format((($dt2 /$totalfr_mould )* (100)),2);

                } else {

                    $Minfr_mould      = '';
                    $Maxfr_mould      = '';
                    $Avgfr_mould      = '';
                    $Countfr_mould    = '';
                    $stdevfr_mould    = '';
                    $totalfr_mould    = '';
                    $inspectfr_mould  = '';
                    $outspectfr_mould = '';
                    $prsoutfr_mould   = '';
                }


                                if(is_array($ndtfr_yeast_mould) && count ($ndtfr_yeast_mould) > 0)
                {
                    $Minfr_yeast_mould   = min($ndtfr_yeast_mould);
                    $Maxfr_yeast_mould   = max($ndtfr_yeast_mould);
                    $Avgfr_yeast_mould   = number_format((array_sum($ndtfr_yeast_mould)) /(count($ndtfr_yeast_mould)),2);
                    $Countfr_yeast_mould = count($ndtfr_yeast_mould);
                    //nilai standard devisiasi (sttdev)
                    $fmeanfr_yeast_mould    = array_sum($ndtfr_yeast_mould) / count($ndtfr_yeast_mould);
                    $fvariantfr_yeast_mould = 0.00;
                    $xsamplefr_yeast_mould  = false;
                    $dt1                    = 0;$dt2 = 0;
                    foreach ($ndtfr_yeast_mould as $i){
                    $fvariantfr_yeast_mould += pow($i - $fmeanfr_yeast_mould   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfr_yeast_mould /= ($xsamplefr_yeast_mould   ? count($ndtfr_yeast_mould)-1 : count($ndtfr_yeast_mould));
                    $stdevfr_yeast_mould     = number_format(sqrt($fvariantfr_yeast_mould  ),2);
                    $totalfr_yeast_mould     = count($ndtfr_yeast_mould);
                    $inspectfr_yeast_mould   = $dt1;
                    $outspectfr_yeast_mould  = $dt2;
                    $prsoutfr_yeast_mould    = number_format((($dt2 /$totalfr_yeast_mould  )* (100)),2);

                } else {


                    $Minfr_yeast_mould      = '';
                    $Maxfr_yeast_mould      = '';
                    $Avgfr_yeast_mould      = '';
                    $Countfr_yeast_mould    = '';
                    $stdevfr_yeast_mould    = '';
                    $totalfr_yeast_mould    = '';
                    $inspectfr_yeast_mould  = '';
                    $outspectfr_yeast_mould = '';
                    $prsoutfr_yeast_mould   = '';
                }



                   if(is_array($ndtcooling_pack_tpc) && count ($ndtcooling_pack_tpc) > 0)
                {
                    $Mincooling_pack_tpc   = min($ndtcooling_pack_tpc);
                    $Maxcooling_pack_tpc   = max($ndtcooling_pack_tpc);
                    $Avgcooling_pack_tpc   = number_format((array_sum($ndtcooling_pack_tpc)) /(count($ndtcooling_pack_tpc)),2);
                    $Countcooling_pack_tpc = count($ndtcooling_pack_tpc);
                    //nilai standard devisiasi (sttdev)
                    $fmeancooling_pack_tpc    = array_sum($ndtcooling_pack_tpc) / count($ndtcooling_pack_tpc);
                    $fvariantcooling_pack_tpc = 0.00;
                    $xsamplecooling_pack_tpc  = false;
                    $dt1                      = 0;$dt2 = 0;
                    foreach ($ndtcooling_pack_tpc as $i){
                    $fvariantcooling_pack_tpc += pow($i - $fmeancooling_pack_tpc   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooling_pack_tpc /= ($xsamplecooling_pack_tpc   ? count($ndtcooling_pack_tpc)-1 : count($ndtcooling_pack_tpc));
                    $stdevcooling_pack_tpc     = number_format(sqrt($fvariantcooling_pack_tpc  ),2);
                    $totalcooling_pack_tpc     = count($ndtcooling_pack_tpc);
                    $inspectcooling_pack_tpc   = $dt1;
                    $outspectcooling_pack_tpc  = $dt2;
                    $prsoutcooling_pack_tpc    = number_format((($dt2 /$totalcooling_pack_tpc  )* (100)),2);

                } else {

                    $Mincooling_pack_tpc      = '';
                    $Maxcooling_pack_tpc      = '';
                    $Avgcooling_pack_tpc      = '';
                    $Countcooling_pack_tpc    = '';
                    $totalcooling_pack_tpc    = '';
                    $inspectcooling_pack_tpc  = '';
                    $outspectcooling_pack_tpc = '';
                    $prsoutcooling_pack_tpc   = '';
                    $stdevcooling_pack_tpc    = '';
                }

                        if(is_array($ndtcooling_pack_yeast) && count ($ndtcooling_pack_yeast) > 0)
                {
                    $Mincooling_pack_yeast   = min($ndtcooling_pack_yeast);
                    $Maxcooling_pack_yeast   = max($ndtcooling_pack_yeast);
                    $Avgcooling_pack_yeast   = number_format((array_sum($ndtcooling_pack_yeast)) /(count($ndtcooling_pack_yeast)),2);
                    $Countcooling_pack_yeast = count($ndtcooling_pack_yeast);
                    //nilai standard devisiasi (sttdev)
                    $fmeancooling_pack_yeast    = array_sum($ndtcooling_pack_yeast) / count($ndtcooling_pack_yeast);
                    $fvariantcooling_pack_yeast = 0.00;
                    $xsamplecooling_pack_yeast  = false;
                    $dt1                        = 0;$dt2 = 0;
                    foreach ($ndtcooling_pack_yeast as $i){
                    $fvariantcooling_pack_yeast += pow($i - $fmeancooling_pack_yeast   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooling_pack_yeast /= ($xsamplecooling_pack_yeast   ? count($ndtcooling_pack_yeast)-1 : count($ndtcooling_pack_yeast));
                    $stdevcooling_pack_yeast     = number_format(sqrt($fvariantcooling_pack_yeast  ),2);
                    $totalcooling_pack_yeast     = count($ndtcooling_pack_yeast);
                    $inspectcooling_pack_yeast   = $dt1;
                    $outspectcooling_pack_yeast  = $dt2;
                    $prsoutcooling_pack_yeast    = number_format((($dt2 /$totalcooling_pack_yeast  )* (100)),2);

                } else {

                    $Mincooling_pack_yeast      = '';
                    $Maxcooling_pack_yeast      = '';
                    $Avgcooling_pack_yeast      = '';
                    $Countcooling_pack_yeast    = '';
                    $totalcooling_pack_yeast    = '';
                    $inspectcooling_pack_yeast  = '';
                    $outspectcooling_pack_yeast = '';
                    $prsoutcooling_pack_yeast   = '';
                    $stdevcooling_pack_yeast    = '';
                }

                       if(is_array($ndtcooling_pack_mould) && count ($ndtcooling_pack_mould) > 0)
                {
                    $Mincooling_pack_mould   = min($ndtcooling_pack_mould);
                    $Maxcooling_pack_mould   = max($ndtcooling_pack_mould);
                    $Avgcooling_pack_mould   = number_format((array_sum($ndtcooling_pack_mould)) /(count($ndtcooling_pack_mould)),2);
                    $Countcooling_pack_mould = count($ndtcooling_pack_mould);
                    //nilai standard devisiasi (sttdev)
                    $fmeancooling_pack_mould    = array_sum($ndtcooling_pack_mould) / count($ndtcooling_pack_mould);
                    $fvariantcooling_pack_mould = 0.00;
                    $xsamplecooling_pack_mould  = false;
                    $dt1                        = 0;$dt2 = 0;
                    foreach ($ndtcooling_pack_mould as $i){
                    $fvariantcooling_pack_mould += pow($i - $fmeancooling_pack_mould   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooling_pack_mould /= ($xsamplecooling_pack_mould   ? count($ndtcooling_pack_mould)-1 : count($ndtcooling_pack_mould));
                    $stdevcooling_pack_mould     = number_format(sqrt($fvariantcooling_pack_mould  ),2);
                    $totalcooling_pack_mould     = count($ndtcooling_pack_mould);
                    $inspectcooling_pack_mould   = $dt1;
                    $outspectcooling_pack_mould  = $dt2;
                    $prsoutcooling_pack_mould    = number_format((($dt2 /$totalcooling_pack_mould  )* (100)),2);

                } else {

                    $Mincooling_pack_mould      = '';
                    $Maxcooling_pack_mould      = '';
                    $Avgcooling_pack_mould      = '';
                    $Countcooling_pack_mould    = '';
                    $totalcooling_pack_mould    = '';
                    $inspectcooling_pack_mould  = '';
                    $outspectcooling_pack_mould = '';
                    $prsoutcooling_pack_mould   = '';
                    $stdevcooling_pack_mould    = '';
                }



                 if(is_array($ndtcooling_pack_mould_yeast) && count ($ndtcooling_pack_mould_yeast) > 0)
                {
                    $Mincooling_pack_mould_yeast   = min($ndtcooling_pack_mould_yeast);
                    $Maxcooling_pack_mould_yeast   = max($ndtcooling_pack_mould_yeast);
                    $Avgcooling_pack_mould_yeast   = number_format((array_sum($ndtcooling_pack_mould_yeast)) /(count($ndtcooling_pack_mould_yeast)),2);
                    $Countcooling_pack_mould_yeast = count($ndtcooling_pack_mould_yeast);
                    //nilai standard devisiasi (sttdev)
                    $fmeancooling_pack_mould_yeast    = array_sum($ndtcooling_pack_mould_yeast) / count($ndtcooling_pack_mould_yeast);
                    $fvariantcooling_pack_mould_yeast = 0.00;
                    $xsamplecooling_pack_mould_yeast  = false;
                    $dt1                              = 0;$dt2 = 0;
                    foreach ($ndtcooling_pack_mould_yeast as $i){
                    $fvariantcooling_pack_mould_yeast += pow($i - $fmeancooling_pack_mould_yeast   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooling_pack_mould_yeast /= ($xsamplecooling_pack_mould_yeast   ? count($ndtcooling_pack_mould_yeast)-1 : count($ndtcooling_pack_mould_yeast));
                    $stdevcooling_pack_mould_yeast     = number_format(sqrt($fvariantcooling_pack_mould_yeast  ),2);
                    $totalcooling_pack_mould_yeast     = count($ndtcooling_pack_mould_yeast);
                    $inspectcooling_pack_mould_yeast   = $dt1;
                    $outspectcooling_pack_mould_yeast  = $dt2;
                    $prsoutcooling_pack_mould_yeast    = number_format((($dt2 /$totalcooling_pack_mould_yeast  )* (100)),2);

                } else {
                    $Mincooling_pack_mould_yeast      = '';
                    $Maxcooling_pack_mould_yeast      = '';
                    $Avgcooling_pack_mould_yeast      = '';
                    $Countcooling_pack_mould_yeast    = '';
                    $totalcooling_pack_mould_yeast    = '';
                    $inspectcooling_pack_mould_yeast  = '';
                    $outspectcooling_pack_mould_yeast = '';
                    $prsoutcooling_pack_mould_yeast   = '';
                    $stdevcooling_pack_mould_yeast    = '';
                }


                     if(is_array($ndtcooler_tpc) && count ($ndtcooler_tpc) > 0)
                {
                    $Mincooler_tpc   = min($ndtcooler_tpc);
                    $Maxcooler_tpc   = max($ndtcooler_tpc);
                    $Avgcooler_tpc   = number_format((array_sum($ndtcooler_tpc)) /(count($ndtcooler_tpc)),2);
                    $Countcooler_tpc = count($ndtcooler_tpc);
                    //nilai standard devisiasi (sttdev)
                    $fmeancooler_tpc    = array_sum($ndtcooler_tpc) / count($ndtcooler_tpc);
                    $fvariantcooler_tpc = 0.00;
                    $xsamplecooler_tpc  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtcooler_tpc as $i){
                    $fvariantcooler_tpc += pow($i - $fmeancooler_tpc   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooler_tpc /= ($xsamplecooler_tpc   ? count($ndtcooler_tpc)-1 : count($ndtcooler_tpc));
                    $stdevcooler_tpc     = number_format(sqrt($fvariantcooler_tpc  ),2);
                    $totalcooler_tpc     = count($ndtcooler_tpc);
                    $inspectcooler_tpc   = $dt1;
                    $outspectcooler_tpc  = $dt2;
                    $prsoutcooler_tpc    = number_format((($dt2 /$totalcooler_tpc  )* (100)),2);

                } else {

                    $Mincooler_tpc      = '';
                    $Maxcooler_tpc      = '';
                    $Avgcooler_tpc      = '';
                    $Countcooler_tpc    = '';
                    $totalcooler_tpc    = '';
                    $inspectcooler_tpc  = '';
                    $outspectcooler_tpc = '';
                    $prsoutcooler_tpc   = '';
                    $stdevcooler_tpc    = '';
                }


                     if(is_array($ndtcooler_yeast ) && count ($ndtcooler_yeast ) > 0)
                {
                    $Mincooler_yeast   = min($ndtcooler_yeast );
                    $Maxcooler_yeast   = max($ndtcooler_yeast );
                    $Avgcooler_yeast   = number_format((array_sum($ndtcooler_yeast )) /(count($ndtcooler_yeast )),2);
                    $Countcooler_yeast = count($ndtcooler_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeancooler_yeast    = array_sum($ndtcooler_yeast ) / count($ndtcooler_yeast );
                    $fvariantcooler_yeast = 0.00;
                    $xsamplecooler_yeast  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtcooler_yeast  as $i){
                    $fvariantcooler_yeast += pow($i - $fmeancooler_yeast   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooler_yeast /= ($xsamplecooler_yeast   ? count($ndtcooler_yeast )-1 : count($ndtcooler_yeast ));
                    $stdevcooler_yeast     = number_format(sqrt($fvariantcooler_yeast  ),2);
                    $totalcooler_yeast     = count($ndtcooler_yeast );
                    $inspectcooler_yeast   = $dt1;
                    $outspectcooler_yeast  = $dt2;
                    $prsoutcooler_yeast    = number_format((($dt2 /$totalcooler_yeast  )* (100)),2);

                } else {
                    $Mincooler_yeast      = '';
                    $Maxcooler_yeast      = '';
                    $Avgcooler_yeast      = '';
                    $Countcooler_yeast    = '';
                    $totalcooler_yeast    = '';
                    $inspectcooler_yeast  = '';
                    $outspectcooler_yeast = '';
                    $prsoutcooler_yeast   = '';
                    $stdevcooler_yeast    = '';
                }


                     if(is_array($ndtcooler_mould ) && count ($ndtcooler_mould ) > 0)
                {
                    $Mincooler_mould   = min($ndtcooler_mould );
                    $Maxcooler_mould   = max($ndtcooler_mould );
                    $Avgcooler_mould   = number_format((array_sum($ndtcooler_mould )) /(count($ndtcooler_mould )),2);
                    $Countcooler_mould = count($ndtcooler_mould );
                    //nilai standard devisiasi (sttdev)
                    $fmeancooler_mould    = array_sum($ndtcooler_mould ) / count($ndtcooler_mould );
                    $fvariantcooler_mould = 0.00;
                    $xsamplecooler_mould  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtcooler_mould  as $i){
                    $fvariantcooler_mould += pow($i - $fmeancooler_mould   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooler_mould /= ($xsamplecooler_mould   ? count($ndtcooler_mould )-1 : count($ndtcooler_mould ));
                    $stdevcooler_mould     = number_format(sqrt($fvariantcooler_mould  ),2);
                    $totalcooler_mould     = count($ndtcooler_mould );
                    $inspectcooler_mould   = $dt1;
                    $outspectcooler_mould  = $dt2;
                    $prsoutcooler_mould    = number_format((($dt2 /$totalcooler_mould  )* (100)),2);

                } else {
                    $Mincooler_mould      = '';
                    $Maxcooler_mould      = '';
                    $Avgcooler_mould      = '';
                    $Countcooler_mould    = '';
                    $totalcooler_mould    = '';
                    $inspectcooler_mould  = '';
                    $outspectcooler_mould = '';
                    $prsoutcooler_mould   = '';
                    $stdevcooler_mould    = '';
                }

                       if(is_array($ndtcooler_mould_yeast ) && count ($ndtcooler_mould_yeast ) > 0)
                {
                    $Mincooler_mould_yeast   = min($ndtcooler_mould_yeast );
                    $Maxcooler_mould_yeast   = max($ndtcooler_mould_yeast );
                    $Avgcooler_mould_yeast   = number_format((array_sum($ndtcooler_mould_yeast )) /(count($ndtcooler_mould_yeast )),2);
                    $Countcooler_mould_yeast = count($ndtcooler_mould_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeancooler_mould_yeast    = array_sum($ndtcooler_mould_yeast ) / count($ndtcooler_mould_yeast );
                    $fvariantcooler_mould_yeast = 0.00;
                    $xsamplecooler_mould_yeast  = false;
                    $dt1                        = 0;$dt2 = 0;
                    foreach ($ndtcooler_mould_yeast  as $i){
                    $fvariantcooler_mould_yeast += pow($i - $fmeancooler_mould_yeast  ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantcooler_mould_yeast /= ($xsamplecooler_mould_yeast  ? count($ndtcooler_mould_yeast )-1 : count($ndtcooler_mould_yeast ));
                    $stdevcooler_mould_yeast     = number_format(sqrt($fvariantcooler_mould_yeast ),2);
                    $totalcooler_mould_yeast     = count($ndtcooler_mould_yeast );
                    $inspectcooler_mould_yeast   = $dt1;
                    $outspectcooler_mould_yeast  = $dt2;
                    $prsoutcooler_mould_yeast    = number_format((($dt2 /$totalcooler_mould_yeast )* (100)),2);

                } else {
                    $Mincooler_mould_yeast      = '';
                    $Maxcooler_mould_yeast      = '';
                    $Avgcooler_mould_yeast      = '';
                    $Countcooler_mould_yeast    = '';
                    $totalcooler_mould_yeast    = '';
                    $inspectcooler_mould_yeast  = '';
                    $outspectcooler_mould_yeast = '';
                    $prsoutcooler_mould_yeast   = '';
                    $stdevcooler_mould_yeast    = '';
                }

                           if(is_array($ndtducting_tpc ) && count ($ndtducting_tpc ) > 0)
                {
                    $Minducting_tpc   = min($ndtducting_tpc );
                    $Maxducting_tpc   = max($ndtducting_tpc );
                    $Avgducting_tpc   = number_format((array_sum($ndtducting_tpc )) /(count($ndtducting_tpc )),2);
                    $Countducting_tpc = count($ndtducting_tpc );
                    //nilai standard devisiasi (sttdev)
                    $fmeanducting_tpc    = array_sum($ndtducting_tpc ) / count($ndtducting_tpc );
                    $fvariantducting_tpc = 0.00;
                    $xsampleducting_tpc  = false;
                    $dt1                 = 0;$dt2 = 0;
                    foreach ($ndtducting_tpc  as $i){
                    $fvariantducting_tpc += pow($i - $fmeanducting_tpc   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantducting_tpc /= ($xsampleducting_tpc   ? count($ndtducting_tpc )-1 : count($ndtducting_tpc ));
                    $stdevducting_tpc     = number_format(sqrt($fvariantducting_tpc  ),2);
                    $totalducting_tpc     = count($ndtducting_tpc );
                    $inspectducting_tpc   = $dt1;
                    $outspectducting_tpc  = $dt2;
                    $prsoutducting_tpc    = number_format((($dt2 /$totalducting_tpc  )* (100)),2);

                } else {
                    $Minducting_tpc      = '';
                    $Maxducting_tpc      = '';
                    $Avgducting_tpc      = '';
                    $Countducting_tpc    = '';
                    $totalducting_tpc    = '';
                    $inspectducting_tpc  = '';
                    $outspectducting_tpc = '';
                    $prsoutducting_tpc   = '';
                    $stdevducting_tpc    = '';
                }
    


                               if(is_array($ndtducting_yeast ) && count ($ndtducting_yeast ) > 0)
                {
                    $Minducting_yeast   = min($ndtducting_yeast );
                    $Maxducting_yeast   = max($ndtducting_yeast );
                    $Avgducting_yeast   = number_format((array_sum($ndtducting_yeast )) /(count($ndtducting_yeast )),2);
                    $Countducting_yeast = count($ndtducting_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanducting_yeast    = array_sum($ndtducting_yeast ) / count($ndtducting_yeast );
                    $fvariantducting_yeast = 0.00;
                    $xsampleducting_yeast  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtducting_yeast  as $i){
                    $fvariantducting_yeast += pow($i - $fmeanducting_yeast   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantducting_yeast /= ($xsampleducting_yeast   ? count($ndtducting_yeast )-1 : count($ndtducting_yeast ));
                    $stdevducting_yeast     = number_format(sqrt($fvariantducting_yeast  ),2);
                    $totalducting_yeast     = count($ndtducting_yeast );
                    $inspectducting_yeast   = $dt1;
                    $outspectducting_yeast  = $dt2;
                    $prsoutducting_yeast    = number_format((($dt2 /$totalducting_yeast  )* (100)),2);

                } else {
                    $Minducting_yeast      = '';
                    $Maxducting_yeast      = '';
                    $Avgducting_yeast      = '';
                    $Countducting_yeast    = '';
                    $totalducting_yeast    = '';
                    $inspectducting_yeast  = '';
                    $outspectducting_yeast = '';
                    $prsoutducting_yeast   = '';
                    $stdevducting_yeast    = '';
                }


                               if(is_array($ndtducting_mould ) && count ($ndtducting_mould ) > 0)
                {
                    $Minducting_mould   = min($ndtducting_mould );
                    $Maxducting_mould   = max($ndtducting_mould );
                    $Avgducting_mould   = number_format((array_sum($ndtducting_mould )) /(count($ndtducting_mould )),2);
                    $Countducting_mould = count($ndtducting_mould );
                    //nilai standard devisiasi (sttdev)
                    $fmeanducting_mould    = array_sum($ndtducting_mould ) / count($ndtducting_mould );
                    $fvariantducting_mould = 0.00;
                    $xsampleducting_mould  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtducting_mould  as $i){
                    $fvariantducting_mould += pow($i - $fmeanducting_mould   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantducting_mould /= ($xsampleducting_mould   ? count($ndtducting_mould )-1 : count($ndtducting_mould ));
                    $stdevducting_mould     = number_format(sqrt($fvariantducting_mould  ),2);
                    $totalducting_mould     = count($ndtducting_mould );
                    $inspectducting_mould   = $dt1;
                    $outspectducting_mould  = $dt2;
                    $prsoutducting_mould    = number_format((($dt2 /$totalducting_mould  )* (100)),2);

                } else {
                    $Minducting_mould      = '';
                    $Maxducting_mould      = '';
                    $Avgducting_mould      = '';
                    $Countducting_mould    = '';
                    $totalducting_mould    = '';
                    $inspectducting_mould  = '';
                    $outspectducting_mould = '';
                    $prsoutducting_mould   = '';
                    $stdevducting_mould    = '';
                }

                    if(is_array($ndtducting_mould_yeast ) && count ($ndtducting_mould_yeast ) > 0)
                {
                    $Minducting_mould_yeast   = min($ndtducting_mould_yeast );
                    $Maxducting_mould_yeast   = max($ndtducting_mould_yeast );
                    $Avgducting_mould_yeast   = number_format((array_sum($ndtducting_mould_yeast )) /(count($ndtducting_mould_yeast )),2);
                    $Countducting_mould_yeast = count($ndtducting_mould_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanducting_mould_yeast    = array_sum($ndtducting_mould_yeast ) / count($ndtducting_mould_yeast );
                    $fvariantducting_mould_yeast = 0.00;
                    $xsampleducting_mould_yeast  = false;
                    $dt1                         = 0;$dt2 = 0;
                    foreach ($ndtducting_mould_yeast  as $i){
                    $fvariantducting_mould_yeast += pow($i - $fmeanducting_mould_yeast   ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantducting_mould_yeast /= ($xsampleducting_mould   ? count($ndtducting_mould_yeast )-1 : count($ndtducting_mould_yeast ));
                    $stdevducting_mould_yeast     = number_format(sqrt($fvariantducting_mould  ),2);
                    $totalducting_mould_yeast     = count($ndtducting_mould_yeast );
                    $inspectducting_mould_yeast   = $dt1;
                    $outspectducting_mould_yeast  = $dt2;
                    $prsoutducting_mould_yeast    = number_format((($dt2 /$totalducting_mould_yeast  )* (100)),2);

                } else {
                    $Minducting_mould_yeast      = '';
                    $Maxducting_mould_yeast      = '';
                    $Avgducting_mould_yeast      = '';
                    $Countducting_mould_yeast    = '';
                    $totalducting_mould_yeast    = '';
                    $inspectducting_mould_yeast  = '';
                    $outspectducting_mould_yeast = '';
                    $prsoutducting_mould_yeast   = '';
                    $stdevducting_mould_yeast    = '';
                }


                    if(is_array($ndtfluidizer_tpc ) && count ($ndtfluidizer_tpc ) > 0)
                {
                    $Minfluidizer_tpc   = min($ndtfluidizer_tpc );
                    $Maxfluidizer_tpc   = max($ndtfluidizer_tpc );
                    $Avgfluidizer_tpc   = number_format((array_sum($ndtfluidizer_tpc )) /(count($ndtfluidizer_tpc )),2);
                    $Countfluidizer_tpc = count($ndtfluidizer_tpc );
                    //nilai standard devisiasi (sttdev)
                    $fmeanfluidizer_tpc    = array_sum($ndtfluidizer_tpc ) / count($ndtfluidizer_tpc );
                    $fvariantfluidizer_tpc = 0.00;
                    $xsamplefluidizer_tpc  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtfluidizer_tpc  as $i){
                    $fvariantfluidizer_tpc += pow($i - $fmeanfluidizer_tpc    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfluidizer_tpc /= ($xsampleducting_mould   ? count($ndtfluidizer_tpc )-1 : count($ndtfluidizer_tpc ));
                    $stdevfluidizer_tpc     = number_format(sqrt($fvariantducting_mould  ),2);
                    $totalfluidizer_tpc     = count($ndtfluidizer_tpc );
                    $inspectfluidizer_tpc   = $dt1;
                    $outspectfluidizer_tpc  = $dt2;
                    $prsoutfluidizer_tpc    = number_format((($dt2 /$totalfluidizer_tpc   )* (100)),2);

                } else {
                    $Minfluidizer_tpc      = '';
                    $Maxfluidizer_tpc      = '';
                    $Avgfluidizer_tpc      = '';
                    $Countfluidizer_tpc    = '';
                    $totalfluidizer_tpc    = '';
                    $inspectfluidizer_tpc  = '';
                    $outspectfluidizer_tpc = '';
                    $prsoutfluidizer_tpc   = '';
                    $stdevfluidizer_tpc    = '';
                }

                         if(is_array($ndtfluidizer_yeast ) && count ($ndtfluidizer_yeast ) > 0)
                {
                    $Minfluidizer_yeast   = min($ndtfluidizer_yeast );
                    $Maxfluidizer_yeast   = max($ndtfluidizer_yeast );
                    $Avgfluidizer_yeast   = number_format((array_sum($ndtfluidizer_yeast )) /(count($ndtfluidizer_yeast )),2);
                    $Countfluidizer_yeast = count($ndtfluidizer_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanfluidizer_yeast    = array_sum($ndtfluidizer_yeast ) / count($ndtfluidizer_yeast );
                    $fvariantfluidizer_yeast = 0.00;
                    $xsamplefluidizer_yeast  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtfluidizer_yeast  as $i){
                    $fvariantfluidizer_yeast += pow($i - $fmeanfluidizer_yeast    ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfluidizer_yeast /= ($xsampleducting_mould   ? count($ndtfluidizer_yeast )-1 : count($ndtfluidizer_yeast ));
                    $stdevfluidizer_yeast     = number_format(sqrt($fvariantducting_mould  ),2);
                    $totalfluidizer_yeast     = count($ndtfluidizer_yeast );
                    $inspectfluidizer_yeast   = $dt1;
                    $outspectfluidizer_yeast  = $dt2;
                    $prsoutfluidizer_yeast    = number_format((($dt2 /$totalfluidizer_yeast   )* (100)),2);

                } else {
                    $Minfluidizer_yeast      = '';
                    $Maxfluidizer_yeast      = '';
                    $Avgfluidizer_yeast      = '';
                    $Countfluidizer_yeast    = '';
                    $totalfluidizer_yeast    = '';
                    $inspectfluidizer_yeast  = '';
                    $outspectfluidizer_yeast = '';
                    $prsoutfluidizer_yeast   = '';
                    $stdevfluidizer_yeast    = '';
                }

                        if(is_array($ndtfluidizer_mould ) && count ($ndtfluidizer_mould ) > 0)
                {
                    $Minfluidizer_mould   = min($ndtfluidizer_mould );
                    $Maxfluidizer_mould   = max($ndtfluidizer_mould );
                    $Avgfluidizer_mould   = number_format((array_sum($ndtfluidizer_mould )) /(count($ndtfluidizer_mould )),2);
                    $Countfluidizer_mould = count($ndtfluidizer_mould );
                    //nilai standard devisiasi (sttdev)
                    $fmeanfluidizer_mould    = array_sum($ndtfluidizer_mould ) / count($ndtfluidizer_mould );
                    $fvariantfluidizer_mould = 0.00;
                    $xsamplefluidizer_mould  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndtfluidizer_mould  as $i){
                    $fvariantfluidizer_mould += pow($i - $fmeanfluidizer_mould       ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfluidizer_mould /= ($xsampleducting_mould   ? count($ndtfluidizer_mould )-1 : count($ndtfluidizer_mould ));
                    $stdevfluidizer_mould     = number_format(sqrt($fvariantducting_mould  ),2);
                    $totalfluidizer_mould     = count($ndtfluidizer_mould );
                    $inspectfluidizer_mould   = $dt1;
                    $outspectfluidizer_mould  = $dt2;
                    $prsoutfluidizer_mould    = number_format((($dt2 /$totalfluidizer_mould      )* (100)),2);

                } else {
                    $Minfluidizer_mould      = '';
                    $Maxfluidizer_mould      = '';
                    $Avgfluidizer_mould      = '';
                    $Countfluidizer_mould    = '';
                    $totalfluidizer_mould    = '';
                    $inspectfluidizer_mould  = '';
                    $outspectfluidizer_mould = '';
                    $prsoutfluidizer_mould   = '';
                    $stdevfluidizer_mould    = '';

                }
                        if(is_array($ndtfluidizer_mould_yeast ) && count ($ndtfluidizer_mould_yeast ) > 0)
                {
                    $Minfluidizer_mould_yeast   = min($ndtfluidizer_mould_yeast );
                    $Maxfluidizer_mould_yeast   = max($ndtfluidizer_mould_yeast );
                    $Avgfluidizer_mould_yeast   = number_format((array_sum($ndtfluidizer_mould_yeast )) /(count($ndtfluidizer_mould_yeast )),2);
                    $Countfluidizer_mould_yeast = count($ndtfluidizer_mould_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanfluidizer_mould_yeast    = array_sum($ndtfluidizer_mould_yeast ) / count($ndtfluidizer_mould_yeast );
                    $fvariantfluidizer_mould_yeast = 0.00;
                    $xsamplefluidizer_mould_yeast  = false;
                    $dt1                           = 0;$dt2 = 0;
                    foreach ($ndtfluidizer_mould_yeast  as $i){
                    $fvariantfluidizer_mould_yeast += pow($i - $fmeanfluidizer_mould_yeast       ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantfluidizer_mould_yeast /= ($xsamplefluidizer_mould_yeast  ? count($ndtfluidizer_mould_yeast )-1 : count($ndtfluidizer_mould_yeast ));
                    $stdevfluidizer_mould_yeast     = number_format(sqrt($fvariantfluidizer_mould_yeast  ),2);
                    $totalfluidizer_mould_yeast     = count($ndtfluidizer_mould_yeast );
                    $inspectfluidizer_mould_yeast   = $dt1;
                    $outspectfluidizer_mould_yeast  = $dt2;
                    $prsoutfluidizer_mould_yeast    = number_format((($dt2 /$totalfluidizer_mould_yeast      )* (100)),2);

                } else {
                    $Minfluidizer_mould_yeast      = '';
                    $Maxfluidizer_mould_yeast      = '';
                    $Avgfluidizer_mould_yeast      = '';
                    $Countfluidizer_mould_yeast    = '';
                    $totalfluidizer_mould_yeast    = '';
                    $inspectfluidizer_mould_yeast  = '';
                    $outspectfluidizer_mould_yeast = '';
                    $prsoutfluidizer_mould_yeast   = '';
                    $stdevfluidizer_mould_yeast    = '';
                }


                     if(is_array($ndthpm_tpc ) && count ($ndthpm_tpc ) > 0)
                {
                    $Minhpm_tpc   = min($ndthpm_tpc );
                    $Maxhpm_tpc   = max($ndthpm_tpc );
                    $Avghpm_tpc   = number_format((array_sum($ndthpm_tpc )) /(count($ndthpm_tpc )),2);
                    $Counthpm_tpc = count($ndthpm_tpc );
                    //nilai standard devisiasi (sttdev)
                    $fmeanhpm_tpc    = array_sum($ndthpm_tpc ) / count($ndthpm_tpc );
                    $fvarianthpm_tpc = 0.00;
                    $xsamplehpm_tpc  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndthpm_tpc  as $i){
                    $fvarianthpm_tpc += pow($i - $fmeanhpm_tpc         ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvarianthpm_tpc /= ($xsamplehpm_tpc    ? count($ndthpm_tpc )-1 : count($ndthpm_tpc ));
                    $stdevhpm_tpc     = number_format(sqrt($fvarianthpm_tpc),2);
                    $totalhpm_tpc     = count($ndthpm_tpc );
                    $inspecthpm_tpc   = $dt1;
                    $outspecthpm_tpc  = $dt2;
                    $prsouthpm_tpc    = number_format((($dt2 /$totalhpm_tpc )* (100)),2);

                } else {
                    $Minhpm_tpc      = '';
                    $Maxhpm_tpc      = '';
                    $Avghpm_tpc      = '';
                    $stdevhpm_tpc    = '';
                    $Counthpm_tpc    = '';
                    $totalhpm_tpc    = '';
                    $inspecthpm_tpc  = '';
                    $outspecthpm_tpc = '';
                    $prsouthpm_tpc   = '';
                }

                     if(is_array($ndthpm_entero ) && count ($ndthpm_entero ) > 0)
                {
                    $Minhpm_entero   = min($ndthpm_entero );
                    $Maxhpm_entero   = max($ndthpm_entero );
                    $Avghpm_entero   = number_format((array_sum($ndthpm_entero )) /(count($ndthpm_entero )),2);
                    $Counthpm_entero = count($ndthpm_entero );
                    //nilai standard devisiasi (sttdev)
                    $fmeanhpm_entero    = array_sum($ndthpm_entero ) / count($ndthpm_entero );
                    $fvarianthpm_entero = 0.00;
                    $xsamplehpm_entero  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndthpm_entero  as $i){
                    $fvarianthpm_entero += pow($i - $fmeanhpm_entero         ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvarianthpm_entero /= ($xsamplehpm_entero    ? count($ndthpm_entero )-1 : count($ndthpm_entero ));
                    $stdevhpm_entero     = number_format(sqrt($fvarianthpm_entero    ),2);
                    $totalhpm_entero     = count($ndthpm_entero );
                    $inspecthpm_entero   = $dt1;
                    $outspecthpm_entero  = $dt2;
                    $prsouthpm_entero    = number_format((($dt2 /$totalhpm_entero        )* (100)),2);

                } else {
                    $Minhpm_entero      = '';
                    $Maxhpm_entero      = '';
                    $Avghpm_entero      = '';
                    $Counthpm_entero    = '';
                    $stdevhpm_entero    = '';
                    $totalhpm_entero    = '';
                    $inspecthpm_entero  = '';
                    $outspecthpm_entero = '';
                    $prsouthpm_entero   = '';
                }


                     if(is_array($ndthpm_yeast ) && count ($ndthpm_yeast ) > 0)
                {
                    $Minhpm_yeast   = min($ndthpm_yeast );
                    $Maxhpm_yeast   = max($ndthpm_yeast );
                    $Avghpm_yeast   = number_format((array_sum($ndthpm_yeast )) /(count($ndthpm_yeast )),2);
                    $Counthpm_yeast = count($ndthpm_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanhpm_yeast    = array_sum($ndthpm_yeast ) / count($ndthpm_yeast );
                    $fvarianthpm_yeast = 0.00;
                    $xsamplehpm_yeast  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndthpm_yeast  as $i){
                    $fvarianthpm_yeast += pow($i - $fmeanhpm_yeast         ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvarianthpm_yeast /= ($xsamplehpm_yeast    ? count($ndthpm_yeast )-1 : count($ndthpm_yeast ));
                    $stdevhpm_yeast     = number_format(sqrt($fvarianthpm_yeast    ),2);
                    $totalhpm_yeast     = count($ndthpm_yeast );
                    $inspecthpm_yeast   = $dt1;
                    $outspecthpm_yeast  = $dt2;
                    $prsouthpm_yeast    = number_format((($dt2 /$totalhpm_yeast        )* (100)),2);

                } else {
                    $Minhpm_yeast      = '';
                    $Maxhpm_yeast      = '';
                    $Avghpm_yeast      = '';
                    $Counthpm_yeast    = '';
                    $totalhpm_yeast    = '';
                    $stdevhpm_yeast    = '';
                    $outspecthpm_yeast = '';
                    $prsouthpm_yeast   = '';
                    $prsouthpm_entero  = '';
                }

                       if(is_array($ndthpm_mould ) && count ($ndthpm_mould ) > 0)
                {
                    $Minhpm_mould   = min($ndthpm_mould );
                    $Maxhpm_mould   = max($ndthpm_mould );
                    $Avghpm_mould   = number_format((array_sum($ndthpm_mould )) /(count($ndthpm_mould )),2);
                    $Counthpm_mould = count($ndthpm_mould );
                    //nilai standard devisiasi (sttdev)
                    $fmeanhpm_mould    = array_sum($ndthpm_mould ) / count($ndthpm_mould );
                    $fvarianthpm_mould = 0.00;
                    $xsamplehpm_mould  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndthpm_mould  as $i){
                    $fvarianthpm_mould += pow($i - $fmeanhpm_mould          ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvarianthpm_mould /= ($xsamplehpm_mould     ? count($ndthpm_mould )-1 : count($ndthpm_mould ));
                    $stdevhpm_mould     = number_format(sqrt($fvarianthpm_mould     ),2);
                    $totalhpm_mould     = count($ndthpm_mould );
                    $inspecthpm_mould   = $dt1;
                    $outspecthpm_mould  = $dt2;
                    $prsouthpm_mould    = number_format((($dt2 /$totalhpm_mould         )* (100)),2);

                } else {
                    $Minhpm_mould      = '';
                    $Maxhpm_mould      = '';
                    $Avghpm_mould      = '';
                    $Counthpm_mould    = '';
                    $totalhpm_mould    = '';
                    $stdevhpm_mould    = '';
                    $inspecthpm_mould  = '';
                    $outspecthpm_mould = '';
                    $prsouthpm_mould   = '';
                }


                      if(is_array($ndthpm_mould_yeast ) && count ($ndthpm_mould_yeast ) > 0)
                {
                    $Minhpm_mould_yeast   = min($ndthpm_mould_yeast );
                    $Maxhpm_mould_yeast   = max($ndthpm_mould_yeast );
                    $Avghpm_mould_yeast   = number_format((array_sum($ndthpm_mould_yeast )) /(count($ndthpm_mould_yeast )),2);
                    $Counthpm_mould_yeast = count($ndthpm_mould_yeast );
                    //nilai standard devisiasi (sttdev)
                    $fmeanhpm_mould_yeast    = array_sum($ndthpm_mould_yeast ) / count($ndthpm_mould_yeast );
                    $fvarianthpm_mould_yeast = 0.00;
                    $xsamplehpm_mould_yeast  = false;
                    $dt1                     = 0;$dt2 = 0;
                    foreach ($ndthpm_mould_yeast  as $i){
                    $fvarianthpm_mould_yeast += pow($i - $fmeanhpm_mould_yeast           ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvarianthpm_mould_yeast /= ($xsamplehpm_mould_yeast       ? count($ndthpm_mould_yeast )-1 : count($ndthpm_mould_yeast ));
                    $stdevhpm_mould_yeast     = number_format(sqrt($fvarianthpm_mould_yeast       ),2);
                    $totalhpm_mould_yeast     = count($ndthpm_mould_yeast );
                    $inspecthpm_mould_yeast   = $dt1;
                    $outspecthpm_mould_yeast  = $dt2;
                    $prsouthpm_mould_yeast    = number_format((($dt2 /$totalhpm_mould_yeast          )* (100)),2);

                } else {
                    $Minhpm_mould_yeast      = '';
                    $Maxhpm_mould_yeast      = '';
                    $Avghpm_mould_yeast      = '';
                    $Counthpm_mould_yeast    = '';
                    $stdevhpm_mould_yeast    = '';
                    $totalhpm_mould_yeast    = '';
                    $inspecthpm_mould_yeast  = '';
                    $outspecthpm_mould_yeast = '';
                    $prsouthpm_mould_yeast   = '';
                }


                 $rowfoot0  = $rowCount+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 $objPHPExcel->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot0.':AC'.$rowfoot0);
              //   $objPHPExcel->getStyle(''.$rowfoot0.':M'.$rowfoot0)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                // $objPHPExcel->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);


                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot1.':AC'.$rowfoot1);
                 $objPHPExcel->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Count ');
                 $objPHPExcel->setCellValue('C'.$rowfoot1,$Countfr_tpc);
                 $objPHPExcel->setCellValue('D'.$rowfoot1,$Countfr_entero);
                 $objPHPExcel->setCellValue('E'.$rowfoot1,$Countfr_yeast);
                 $objPHPExcel->setCellValue('F'.$rowfoot1,$Countfr_mould);


                 $objPHPExcel->setCellValue('G'.$rowfoot1,$Countfr_yeast_mould);

               
                if(isset($Countcooling_pack_tpc)>0){$a=count($Countcooling_pack_tpc);}            
                 
                 $objPHPExcel->setCellValue('H'.$rowfoot1,$a);

                 $objPHPExcel->setCellValue('I'.$rowfoot1,$Countcooling_pack_yeast);
                 $objPHPExcel->setCellValue('J'.$rowfoot1,$Countcooling_pack_mould);
                 $objPHPExcel->setCellValue('K'.$rowfoot1,$Countcooling_pack_mould_yeast);

                 $objPHPExcel->setCellValue('L'.$rowfoot1,$Countcooler_tpc);
               
                 $objPHPExcel->setCellValue('M'.$rowfoot1,$Countcooler_yeast);
                 $objPHPExcel->setCellValue('N'.$rowfoot1,$Countcooler_mould);
                 $objPHPExcel->setCellValue('O'.$rowfoot1,$Countcooler_mould_yeast);

                 $objPHPExcel->setCellValue('P'.$rowfoot1,$Countducting_tpc);
                 $objPHPExcel->setCellValue('Q'.$rowfoot1,$Countducting_yeast);
                 $objPHPExcel->setCellValue('R'.$rowfoot1,$Countducting_mould);
                 $objPHPExcel->setCellValue('S'.$rowfoot1,$Countducting_mould_yeast);

                 $objPHPExcel->setCellValue('T'.$rowfoot1,$Countfluidizer_tpc);
                 $objPHPExcel->setCellValue('U'.$rowfoot1,$Countfluidizer_yeast);
                 $objPHPExcel->setCellValue('V'.$rowfoot1,$Countfluidizer_mould);
                 $objPHPExcel->setCellValue('W'.$rowfoot1,$Countfluidizer_mould_yeast);

                 $objPHPExcel->setCellValue('X'.$rowfoot1,$Counthpm_tpc);
                 $objPHPExcel->setCellValue('Y'.$rowfoot1,$Counthpm_entero);
                 $objPHPExcel->setCellValue('Z'.$rowfoot1,$Counthpm_yeast);
                 $objPHPExcel->setCellValue('AA'.$rowfoot1,$Counthpm_mould);
                 $objPHPExcel->setCellValue('AB'.$rowfoot1,$Counthpm_mould_yeast);
                 $objPHPExcel->setCellValue('AC'.$rowfoot1,'');


                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot2.':AC'.$rowfoot2);
                 $objPHPExcel->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Average ');
                 $objPHPExcel->setCellValue('C'.$rowfoot2,$Avgfr_tpc);
                 $objPHPExcel->setCellValue('D'.$rowfoot2,$Avgfr_entero);
                 $objPHPExcel->setCellValue('E'.$rowfoot2,$Avgfr_yeast);
                 $objPHPExcel->setCellValue('F'.$rowfoot2,$Avgfr_mould);
                 $objPHPExcel->setCellValue('G'.$rowfoot2,$Avgfr_yeast_mould);

                 $objPHPExcel->setCellValue('H'.$rowfoot2,$Avgcooling_pack_tpc);
                 
                 $objPHPExcel->setCellValue('I'.$rowfoot2,$Avgcooling_pack_yeast);
                 $objPHPExcel->setCellValue('J'.$rowfoot2,$Avgcooling_pack_mould);
                 $objPHPExcel->setCellValue('K'.$rowfoot2,$Avgcooling_pack_mould_yeast);

                 $objPHPExcel->setCellValue('L'.$rowfoot2,$Avgcooler_tpc);
                 $objPHPExcel->setCellValue('M'.$rowfoot2,$Avgcooler_yeast);
                 $objPHPExcel->setCellValue('N'.$rowfoot2,$Avgcooler_mould);
                 $objPHPExcel->setCellValue('O'.$rowfoot2,$Avgcooler_mould_yeast);

                 $objPHPExcel->setCellValue('P'.$rowfoot2,$Avgducting_tpc);
                 $objPHPExcel->setCellValue('Q'.$rowfoot2,$Avgducting_yeast);
                 $objPHPExcel->setCellValue('R'.$rowfoot2,$Avgducting_mould);
                 $objPHPExcel->setCellValue('S'.$rowfoot2,$Avgducting_mould_yeast);

                 $objPHPExcel->setCellValue('T'.$rowfoot2,$Avgfluidizer_tpc);
                 $objPHPExcel->setCellValue('U'.$rowfoot2,$Avgfluidizer_yeast);
                 $objPHPExcel->setCellValue('V'.$rowfoot2,$Avgfluidizer_mould);
                 $objPHPExcel->setCellValue('W'.$rowfoot2,$Avgfluidizer_mould_yeast);

                 $objPHPExcel->setCellValue('X'.$rowfoot2,$Avghpm_tpc);
                 $objPHPExcel->setCellValue('Y'.$rowfoot2,$Avghpm_entero);
                 $objPHPExcel->setCellValue('Z'.$rowfoot2,$Avghpm_yeast);
                 $objPHPExcel->setCellValue('AA'.$rowfoot2,$Avghpm_mould);
                 $objPHPExcel->setCellValue('AB'.$rowfoot2,$Avghpm_mould_yeast);
                 $objPHPExcel->setCellValue('AC'.$rowfoot2,'');


                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot3.':AC'.$rowfoot3);
                 $objPHPExcel->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Minimum ');
                 $objPHPExcel->setCellValue('C'.$rowfoot3,$Minfr_tpc);
                 $objPHPExcel->setCellValue('D'.$rowfoot3,$Minfr_entero);
                 $objPHPExcel->setCellValue('E'.$rowfoot3,$Minfr_yeast);
                 $objPHPExcel->setCellValue('F'.$rowfoot3,$Minfr_mould);
                 $objPHPExcel->setCellValue('G'.$rowfoot3,$Minfr_yeast_mould);

                 $objPHPExcel->setCellValue('H'.$rowfoot3,$Mincooling_pack_tpc);
                 
                 $objPHPExcel->setCellValue('I'.$rowfoot3,$Mincooling_pack_yeast);
                 $objPHPExcel->setCellValue('J'.$rowfoot3,$Mincooling_pack_mould);
                 $objPHPExcel->setCellValue('K'.$rowfoot3,$Mincooling_pack_mould_yeast);

                 $objPHPExcel->setCellValue('L'.$rowfoot3,$Mincooler_tpc);
                 $objPHPExcel->setCellValue('M'.$rowfoot3,$Mincooler_yeast);
                 $objPHPExcel->setCellValue('N'.$rowfoot3,$Mincooler_mould);
                 $objPHPExcel->setCellValue('O'.$rowfoot3,$Mincooler_mould_yeast);

                 $objPHPExcel->setCellValue('P'.$rowfoot3,$Minducting_tpc);
                 $objPHPExcel->setCellValue('Q'.$rowfoot3,$Minducting_yeast);
                 $objPHPExcel->setCellValue('R'.$rowfoot3,$Minducting_mould);
                 $objPHPExcel->setCellValue('S'.$rowfoot3,$Minducting_mould_yeast);

                 $objPHPExcel->setCellValue('T'.$rowfoot3,$Minfluidizer_tpc);
                 $objPHPExcel->setCellValue('U'.$rowfoot3,$Minfluidizer_yeast);
                 $objPHPExcel->setCellValue('V'.$rowfoot3,$Minfluidizer_mould);
                 $objPHPExcel->setCellValue('W'.$rowfoot3,$Minfluidizer_mould_yeast);

                 $objPHPExcel->setCellValue('X'.$rowfoot3,$Minhpm_tpc);
                 $objPHPExcel->setCellValue('Y'.$rowfoot3,$Minhpm_entero);
                 $objPHPExcel->setCellValue('Z'.$rowfoot3,$Minhpm_yeast);
                 $objPHPExcel->setCellValue('AA'.$rowfoot3,$Minhpm_mould);
                 $objPHPExcel->setCellValue('AB'.$rowfoot3,$Minhpm_mould_yeast);
                 $objPHPExcel->setCellValue('AC'.$rowfoot3,'');


                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot4.':AC'.$rowfoot4);
                 $objPHPExcel->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Maximum ');
                 $objPHPExcel->setCellValue('C'.$rowfoot4,$Maxfr_tpc);
                 $objPHPExcel->setCellValue('D'.$rowfoot4,$Maxfr_entero);
                 $objPHPExcel->setCellValue('E'.$rowfoot4,$Maxfr_yeast);
                 $objPHPExcel->setCellValue('F'.$rowfoot4,$Maxfr_mould);
                 $objPHPExcel->setCellValue('G'.$rowfoot4,$Maxfr_yeast_mould);

                 $objPHPExcel->setCellValue('H'.$rowfoot4,$Maxcooling_pack_tpc);
                 
                 $objPHPExcel->setCellValue('I'.$rowfoot4,$Maxcooling_pack_yeast);
                 $objPHPExcel->setCellValue('J'.$rowfoot4,$Maxcooling_pack_mould);
                 $objPHPExcel->setCellValue('K'.$rowfoot4,$Maxcooling_pack_mould_yeast);

                 $objPHPExcel->setCellValue('L'.$rowfoot4,$Maxcooler_tpc);
                 $objPHPExcel->setCellValue('M'.$rowfoot4,$Maxcooler_yeast);
                 $objPHPExcel->setCellValue('N'.$rowfoot4,$Maxcooler_mould);
                 $objPHPExcel->setCellValue('O'.$rowfoot4,$Maxcooler_mould_yeast);

                 $objPHPExcel->setCellValue('P'.$rowfoot4,$Maxducting_tpc);
                 $objPHPExcel->setCellValue('Q'.$rowfoot4,$Maxducting_yeast);
                 $objPHPExcel->setCellValue('R'.$rowfoot4,$Maxducting_mould);
                 $objPHPExcel->setCellValue('S'.$rowfoot4,$Maxducting_mould_yeast);

                 $objPHPExcel->setCellValue('T'.$rowfoot4,$Maxfluidizer_tpc);
                 $objPHPExcel->setCellValue('U'.$rowfoot4,$Maxfluidizer_yeast);
                 $objPHPExcel->setCellValue('V'.$rowfoot4,$Maxfluidizer_mould);
                 $objPHPExcel->setCellValue('W'.$rowfoot4,$Maxfluidizer_mould_yeast);

                 $objPHPExcel->setCellValue('X'.$rowfoot4,$Maxhpm_tpc);
                 $objPHPExcel->setCellValue('Y'.$rowfoot4,$Maxhpm_entero);
                 $objPHPExcel->setCellValue('Z'.$rowfoot4,$Maxhpm_yeast);
                 $objPHPExcel->setCellValue('AA'.$rowfoot4,$Maxhpm_mould);
                 $objPHPExcel->setCellValue('AB'.$rowfoot4,$Maxhpm_mould_yeast);
                 $objPHPExcel->setCellValue('AC'.$rowfoot4,'');


                 $objPHPExcel->setSharedStyle($cellorange, 'A'.$rowfoot5.':AC'.$rowfoot5);
                 $objPHPExcel->mergeCells('A'.$rowfoot5.':B'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'Std Deviasi ');
                 $objPHPExcel->setCellValue('C'.$rowfoot5,$stdevfr_tpc);
                 $objPHPExcel->setCellValue('D'.$rowfoot5,$stdevfr_entero);
                 $objPHPExcel->setCellValue('E'.$rowfoot5,$stdevfr_yeast);
                 $objPHPExcel->setCellValue('F'.$rowfoot5,$stdevfr_mould);
                 $objPHPExcel->setCellValue('G'.$rowfoot5,$stdevfr_yeast_mould);

                 $objPHPExcel->setCellValue('H'.$rowfoot5,$stdevcooling_pack_tpc);
                 
                 $objPHPExcel->setCellValue('I'.$rowfoot5,$stdevcooling_pack_yeast);
                 $objPHPExcel->setCellValue('J'.$rowfoot5,$stdevcooling_pack_mould);
                 $objPHPExcel->setCellValue('K'.$rowfoot5,$stdevcooling_pack_mould_yeast);

                 $objPHPExcel->setCellValue('L'.$rowfoot5,$stdevcooler_tpc);
                 $objPHPExcel->setCellValue('M'.$rowfoot5,$stdevcooler_yeast);
                 $objPHPExcel->setCellValue('N'.$rowfoot5,$stdevcooler_mould);
                 $objPHPExcel->setCellValue('O'.$rowfoot5,$stdevcooler_mould_yeast);

                 $objPHPExcel->setCellValue('P'.$rowfoot5,$stdevducting_tpc);
                 $objPHPExcel->setCellValue('Q'.$rowfoot5,$stdevducting_yeast);
                 $objPHPExcel->setCellValue('R'.$rowfoot5,$stdevducting_mould);
                 $objPHPExcel->setCellValue('S'.$rowfoot5,$stdevducting_mould_yeast);

                 $objPHPExcel->setCellValue('T'.$rowfoot5,$stdevfluidizer_tpc);
                 $objPHPExcel->setCellValue('U'.$rowfoot5,$stdevfluidizer_yeast);
                 $objPHPExcel->setCellValue('V'.$rowfoot5,$stdevfluidizer_mould);
                 $objPHPExcel->setCellValue('W'.$rowfoot5,$stdevfluidizer_mould_yeast);

                 $objPHPExcel->setCellValue('X'.$rowfoot5,$stdevhpm_tpc);
                 $objPHPExcel->setCellValue('Y'.$rowfoot5,$stdevhpm_entero);
                 $objPHPExcel->setCellValue('Z'.$rowfoot5,$stdevhpm_yeast);
                 $objPHPExcel->setCellValue('AA'.$rowfoot5,$stdevhpm_mould);
                 $objPHPExcel->setCellValue('AB'.$rowfoot5,$stdevhpm_mould_yeast);
                 $objPHPExcel->setCellValue('AC'.$rowfoot5,'');

                 $objPHPExcel->setSharedStyle($cellorange1, 'A'.$rowfoot7.':S'.$rowfoot7); 
                
                 $objPHPExcel->mergeCells('A'.$rowfoot7.':D'.$rowfoot7)->setCellValue('A'.$rowfoot7,'REPORTED BY: ');
                 $objPHPExcel->mergeCells('E'.$rowfoot7.':J'.$rowfoot7)->setCellValue('E'.$rowfoot7,'CHECKED  BY : ');
                 $objPHPExcel->mergeCells('K'.$rowfoot7.':P'.$rowfoot7)->setCellValue('K'.$rowfoot7,'CONFIRMED BY : ');
                 $objPHPExcel->mergeCells('Q'.$rowfoot7.':S'.$rowfoot7)->setCellValue('Q'.$rowfoot7,'ACKNOWLEDGED BY : ');

                 $objPHPExcel->setSharedStyle($bodyStyle, 'A'.$rowfoot7.':S'.$rowfoot13);
                 $objPHPExcel->mergeCells('A'.$rowfoot8.':D'.$rowfoot10);
                 $objPHPExcel->mergeCells('E'.$rowfoot8.':J'.$rowfoot10);
                 $objPHPExcel->mergeCells('K'.$rowfoot8.':P'.$rowfoot10);
                 $objPHPExcel->mergeCells('Q'.$rowfoot8.':S'.$rowfoot10);
                  $objPHPExcel->setSharedStyle($cellorange1, 'A'.$rowfoot11.':Q'.$rowfoot13); 
                 $objPHPExcel->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'NAME : RISTINA YULIANI ');

                 $objPHPExcel->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'POSITION : KS ');
                 $objPHPExcel->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'POSITION : AMGR QAD ');
                 $objPHPExcel->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel->mergeCells('A'.$rowfoot13.':D'.$rowfoot13)->setCellValue('A'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel->mergeCells('E'.$rowfoot13.':J'.$rowfoot13)->setCellValue('E'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel->mergeCells('K'.$rowfoot13.':P'.$rowfoot13)->setCellValue('K'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel->mergeCells('Q'.$rowfoot13.':S'.$rowfoot13)->setCellValue('Q'.$rowfoot13,'DATE : '.$tgl);
               }
                 //############## swabbing personil ####################//

                
                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');            
                
                $objPHPExcel2 = $obj->createSheet(2);
                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);
                foreach(range('A','AE') as $columnID){
                $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                 $thn     = substr($dtstart,0,4);
                 $blnfrom = substr($dtstart,5,2);
                 $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel2->mergeCells('A1:AE1');
                 $objPHPExcel2->mergeCells('A2:A5');
                 $objPHPExcel2->mergeCells('B2:AD5')->setCellValue('B2',$frmcop);
                 $objPHPExcel2->setCellValue('AE2','Tahun: '.$thn);
                 $objPHPExcel2->setCellValue('AE3','Bulan: '.$bln);
                 //$a=$objPHPExcel2->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel2->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel2->setCellValue('AE4','Hal: ');
                 $objPHPExcel2->mergeCells('B6:AE6')->setCellValue('B6',''.$frmjdl);
                 $objPHPExcel2->setCellValue('A6','JUDUL');
                             
                 $objPHPExcel2->mergeCells('A7:A7')->setCellValue('A7','Tanggal/ Shift');
                 $objPHPExcel2->mergeCells('B7:F7')->setCellValue('B7','Person Of Filling Room');                
                 $objPHPExcel2->mergeCells('G7:K7')->setCellValue('G7','Person Of Cooling/ packing Room');
                 $objPHPExcel2->mergeCells('L7:P7')->setCellValue('L7','Person of HPM');
                 $objPHPExcel2->mergeCells('Q7:U7')->setCellValue('Q7','Person of Fluidizer');
                 $objPHPExcel2->mergeCells('V7:Z7')->setCellValue('V7','Person of WPM');
                 $objPHPExcel2->mergeCells('AA7:AD7')->setCellValue('AA7','Control Swab');
                 $objPHPExcel2->setCellValue('AE7','Keterangan');  

                 $objPHPExcel2->setSharedStyle($cellorange,'A9:AE9');
                 $objPHPExcel2->setCellValue('A9','Spesification');
                 $objPHPExcel2->setCellValue('B8','Nama');
                 $objPHPExcel2->setCellValue('C8','TPC');
                 $objPHPExcel2->setCellValue('D8','Entero');
                 $objPHPExcel2->setCellValue('E8','E.Coli');
                 $objPHPExcel2->setCellValue('F8','Salmo');

                 $objPHPExcel2->setCellValue('G8','Nama');
                 $objPHPExcel2->setCellValue('H8','TPC');
                 $objPHPExcel2->setCellValue('I8','Entero');
                 $objPHPExcel2->setCellValue('J8','E.Coli');
                 $objPHPExcel2->setCellValue('K8','Salmo');

                 $objPHPExcel2->setCellValue('L8','Nama');
                 $objPHPExcel2->setCellValue('M8','TPC');
                 $objPHPExcel2->setCellValue('N8','Entero');
                 $objPHPExcel2->setCellValue('O8','E.Coli');
                 $objPHPExcel2->setCellValue('P8','Salmo');

                 $objPHPExcel2->setCellValue('Q8','Nama');
                 $objPHPExcel2->setCellValue('R8','TPC');
                 $objPHPExcel2->setCellValue('S8','Entero');
                 $objPHPExcel2->setCellValue('T8','E.Coli');
                 $objPHPExcel2->setCellValue('U8','Salmo');

                 $objPHPExcel2->setCellValue('V8','Nama');
                 $objPHPExcel2->setCellValue('W8','TPC');
                 $objPHPExcel2->setCellValue('X8','Entero');
                 $objPHPExcel2->setCellValue('Y8','E.Coli');
                 $objPHPExcel2->setCellValue('Z8','Salmo');
                
                 $objPHPExcel2->setCellValue('AA8','TPC');
                 $objPHPExcel2->setCellValue('AB8','Entero');
                 $objPHPExcel2->setCellValue('AC8','E.Coli');
                 $objPHPExcel2->setCellValue('AD8','Salmo');
                 $objPHPExcel2->setCellValue('AE8','');

                 $objPHPExcel2->setCellValue('C9','Max 700cfu/400cm');
                 $objPHPExcel2->setCellValue('D9','Max 55cfu/400cm');
                 $objPHPExcel2->setCellValue('E9','ABS/400cm');
                 $objPHPExcel2->setCellValue('F9','ABS/400cm');

                 $objPHPExcel2->setCellValue('G9','');

                 $objPHPExcel2->setCellValue('H9','Max 700cfu/400cm');
                 $objPHPExcel2->setCellValue('I9','Max 55cfu/400cm');
                 $objPHPExcel2->setCellValue('J9','ABS/400cm');
                 $objPHPExcel2->setCellValue('K9','ABS/400cm');
                 $objPHPExcel2->setCellValue('L9','');

                 $objPHPExcel2->setCellValue('M9','Max 700cfu/400cm');
                 $objPHPExcel2->setCellValue('N9','Max 55cfu/400cm2');
                 $objPHPExcel2->setCellValue('O9','ABS/400cm');
                 $objPHPExcel2->setCellValue('P9','ABS/400cm');
                 $objPHPExcel2->setCellValue('Q9','');

                 $objPHPExcel2->setCellValue('R9','Max 700cfu/400cm');
                 $objPHPExcel2->setCellValue('S9','Max 55cfu/400cm');
                 $objPHPExcel2->setCellValue('T9','ABS/400cm');
                 $objPHPExcel2->setCellValue('U9','ABS/400cm');

                 $objPHPExcel2->setCellValue('V9','< 50');
                 $objPHPExcel2->setCellValue('W9','< 50');
                 $objPHPExcel2->setCellValue('X9','ABS');

                 $objPHPExcel2->setCellValue('Y9','ABS');
                 $objPHPExcel2->setCellValue('Z9','');


                 $objPHPExcel2->setSharedStyle($headerStyle, 'A2:AE10');

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                 $dtdetail2   = $this->$model->get_detail_bydate2($dttglStart,$dttglFinish);
                 if(isset($dtdetail2)){
                 $rowCount5 = 10;
                 $no        = 1;
               
                
                 foreach ($dtdetail2 as $row5){
                 $shift        = $row5->shift;
                 $tgl_sampling = $row5->tgl_sampling;
                 $fr_name      = $row5->fr_name;
                 $fr_tpc       = $row5->fr_entero;
                 $fr_entero    = $row5->fr_entero;
                 $fr_ecoli     = $row5->fr_ecoli;
                 $fr_salmo     = $row5->fr_salmo;

                 $cooling_name   = $row5->cooling_name;
                 $cooling_tpc    = $row5->cooling_tpc;
                 $cooling_entero = $row5->cooling_entero;
                 $cooling_ecoli  = $row5->cooling_ecoli;
                 $cooling_salmo  = $row5->cooling_salmo;

                 $hpm_name   = $row5->hpm_name;
                 $hpm_tpc    = $row5->hpm_tpc;
                 $hpm_entero = $row5->hpm_entero;
                 $hpm_ecoli  = $row5->hpm_ecoli;
                 $hpm_salmo  = $row5->hpm_salmo;

                 $fluid_name   = $row5->fluid_name;
                 $fluid_tpc    = $row5->fluid_tpc;
                 $fluid_entero = $row5->fluid_entero;
                 $fluid_ecoli  = $row5->fluid_ecoli;
                 $fluid_salmo  = $row5->fluid_salmo;

                 $wpm_name   = $row5->wpm_name;
                 $wpm_tpc    = $row5->wpm_tpc;
                 $wpm_entero = $row5->wpm_entero;
                 $wpm_ecoli  = $row5->wpm_ecoli;
                 $wpm_salmo  = $row5->wpm_salmo;

                 $control_tpc    = $row5->control_tpc;
                 $control_entero = $row5->control_entero;
                 $control_ecoli  = $row5->control_ecoli;
                 $control_salmo  = $row5->control_salmo;
                 $remarks        = $row5->remarks;
            
                 $rowCount5++;
                 $objPHPExcel2->setCellValue('A'.$rowCount5,$tgl_sampling.'/'.$shift);
                 $objPHPExcel2->setCellValue('B'.$rowCount5,$fr_name);
                 $objPHPExcel2->setCellValue('C'.$rowCount5,$fr_tpc);
                 $objPHPExcel2->setCellValue('D'.$rowCount5,$fr_entero);
                 $objPHPExcel2->setCellValue('E'.$rowCount5,$fr_ecoli);
                 $objPHPExcel2->setCellValue('F'.$rowCount5,$fr_salmo);

                 $objPHPExcel2->setCellValue('G'.$rowCount5,$cooling_name);
                 $objPHPExcel2->setCellValue('H'.$rowCount5,$cooling_tpc);
                 $objPHPExcel2->setCellValue('I'.$rowCount5,$cooling_entero);
                 $objPHPExcel2->setCellValue('J'.$rowCount5,$cooling_ecoli);                 
                 $objPHPExcel2->setCellValue('K'.$rowCount5,$cooling_salmo);

                 $objPHPExcel2->setCellValue('L'.$rowCount5,$hpm_name);
                 $objPHPExcel2->setCellValue('M'.$rowCount5,$hpm_tpc);
                 $objPHPExcel2->setCellValue('N'.$rowCount5,$hpm_entero);
                 $objPHPExcel2->setCellValue('O'.$rowCount5,$hpm_ecoli);
                 $objPHPExcel2->setCellValue('P'.$rowCount5,$hpm_salmo);

                 $objPHPExcel2->setCellValue('Q'.$rowCount5,$fluid_name);
                 $objPHPExcel2->setCellValue('R'.$rowCount5,$fluid_tpc);
                 $objPHPExcel2->setCellValue('S'.$rowCount5,$fluid_entero);
                 $objPHPExcel2->setCellValue('T'.$rowCount5,$fluid_ecoli);
                 $objPHPExcel2->setCellValue('U'.$rowCount5,$fluid_salmo);

                 $objPHPExcel2->setCellValue('V'.$rowCount5,$wpm_name);
                 $objPHPExcel2->setCellValue('W'.$rowCount5,$wpm_tpc);
                 $objPHPExcel2->setCellValue('X'.$rowCount5,$wpm_entero);
                 $objPHPExcel2->setCellValue('Y'.$rowCount5,$wpm_ecoli);
                 $objPHPExcel2->setCellValue('Z'.$rowCount5,$wpm_salmo);


                 $objPHPExcel2->setCellValue('AA'.$rowCount5,$control_tpc);
                 $objPHPExcel2->setCellValue('AB'.$rowCount5,$control_entero);
                 $objPHPExcel2->setCellValue('AC'.$rowCount5,$control_ecoli);
                 $objPHPExcel2->setCellValue('AD'.$rowCount5,$control_salmo);
                 $objPHPExcel2->setCellValue('AE'.$rowCount5,$remarks);
                 $no++;                
                 $objPHPExcel2->setSharedStyle($bodyStyle, 'A'.$rowCount5.':AE'.$rowCount5);
                  }
               } 
           
               $dttglStart     = $this->uri->segment(8);
               $dttglFinish    = $this->uri->segment(9);
               $data_dtdetail2 = $this->$model->get_detail_bydate2($dttglStart,$dttglFinish);
                  
               if(isset($dtdetail2)){
                        foreach($dtdetail2 as $row6){                
                        $nd_fr_tpc2   [] = $row6->fr_tpc;
                        $nd_fr_entero2[] = $row6->fr_entero;
                        $nd_fr_ecoli2 [] = $row6->fr_ecoli;
                        $nd_fr_salmo2 [] = $row6->fr_salmo;

                        $nd_cooling_tpc2   [] = $row6->cooling_tpc;
                        $nd_cooling_entero2[] = $row6->cooling_entero;
                        $nd_cooling_ecoli2 [] = $row6->cooling_ecoli;
                        $nd_cooling_salmo2 [] = $row6->cooling_salmo;

                        $nd_hpm_tpc2   [] = $row6->hpm_tpc;
                        $nd_hpm_entero2[] = $row6->hpm_entero;
                        $nd_hpm_ecoli2 [] = $row6->hpm_ecoli;
                        $nd_hpm_salmo2 [] = $row6->hpm_salmo;


                        $nd_fluid_tpc2   [] = $row6->fluid_tpc;
                        $nd_fluid_entero2[] = $row6->fluid_entero;
                        $nd_fluid_ecoli2 [] = $row6->fluid_ecoli;
                        $nd_fluid_salmo2 [] = $row6->fluid_salmo;

                        $nd_wpm_tpc2   [] = $row6->wpm_tpc;
                        $nd_wpm_entero2[] = $row6->wpm_entero;
                        $nd_wpm_ecoli2 [] = $row6->wpm_ecoli;
                        $nd_wpm_salmo2 [] = $row6->wpm_salmo;
                       
                        $nd_control_tpc2   [] = $row6->control_tpc;
                        $nd_control_entero2[] = $row6->control_entero;
                        $nd_control_ecoli2 [] = $row6->control_ecoli;
                        $nd_control_salmo2 [] = $row6->control_salmo;
                       
                        $ndtfr_tpc2    = array_diff($nd_fr_tpc2, array('',0));
                        $ndtfr_entero2 = array_diff($nd_fr_entero2, array('',0));
                        $ndtfr_ecoli2  = array_diff($nd_fr_ecoli2, array('',0));
                        $ndtfr_salmo2  = array_diff($nd_fr_salmo2, array('',0));

                        $ndtcooling_tpc2    = array_diff($nd_cooling_tpc2, array('',0));
                        $ndtcooling_entero2 = array_diff($nd_cooling_entero2, array('',0));
                        $ndtcooling_ecoli2  = array_diff($nd_cooling_ecoli2, array('',0));
                        $ndtcooling_salmo2  = array_diff($nd_cooling_salmo2, array('',0));

                        $ndthpm_tpc2    = array_diff($nd_hpm_tpc2, array('',0));
                        $ndthpm_entero2 = array_diff($nd_hpm_entero2, array('',0));
                        $ndthpm_ecoli2  = array_diff($nd_hpm_ecoli2, array('',0));
                        $ndthpm_salmo2  = array_diff($nd_hpm_salmo2, array('',0));

                        $ndtfluid_tpc2    = array_diff($nd_fluid_tpc2, array('',0));
                        $ndtfluid_entero2 = array_diff($nd_fluid_entero2, array('',0));
                        $ndtfluid_ecoli2  = array_diff($nd_fluid_ecoli2, array('',0));
                        $ndtfluid_salmo2  = array_diff($nd_fluid_salmo2, array('',0));
                       

                        $ndtwpm_tpc2    = array_diff($nd_wpm_tpc2, array('',0));
                        $ndtwpm_entero2 = array_diff($nd_wpm_entero2, array('',0));
                        $ndtwpm_ecoli2  = array_diff($nd_wpm_ecoli2, array('',0));
                        $ndtwpm_salmo2  = array_diff($nd_wpm_salmo2, array('',0));
                      

                        $ndtcontrol_tpc2    = array_diff($nd_control_tpc2, array('',0));
                        $ndtcontrol_entero2 = array_diff($nd_control_entero2, array('',0));
                        $ndtcontrol_ecoli2  = array_diff($nd_control_ecoli2, array('',0));
                        $ndtcontrol_salmo2  = array_diff($nd_control_salmo2, array('',0));
                      }
                        if(is_array($ndtfr_tpc2) && count($ndtfr_tpc2)> 0)
                          {
                            $Countfr_tpc2 = count($ndtfr_tpc2);
                            $Avgfr_tpc2   = number_format((array_sum($ndtfr_tpc2)) /(count($ndtfr_tpc2)),2);
                            $Minfr_tpc2   = min($ndtfr_tpc2);
                            $Maxfr_tpc2   = max($ndtfr_tpc2);
                          
                            $fmeanfr_tpc2    = array_sum($ndtfr_tpc2) / count($ndtfr_tpc2);
                            $fvariantfr_tpc2 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndtfr_tpc2 as $i){
                            $fvariantfr_tpc2 += pow($i - $fmeanfr_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_tpc2 /= ($xsample1_1 ? count($ndtfr_tpc2)-1 : count($ndtfr_tpc2));
                            $stdevfr_tpc2     = number_format(sqrt($fvariantfr_tpc2),2);

                          }else{

                            $Minfr_tpc2      = '';
                            $Maxfr_tpc2      = '';
                            $Avgfr_tpc2      = '';
                            $Countfr_tpc2    = '';
                            $totalfr_tpc2    = '';
                            $stdevfr_tpc2    = '';
                            $inspectfr_tpc2  = '';
                            $outspectfr_tpc2 = '';
                            $prsoutfr_tpc2   = '';
                          }
                          
                         if(is_array($ndtfr_entero2) && count($ndtfr_entero2)> 0)
                          {
                            $Countfr_entero2 = count($ndtfr_entero2);
                            $Avgfr_entero2   = number_format((array_sum($ndtfr_entero2)) /(count($ndtfr_entero2)),2);
                            $Minfr_entero2   = min($ndtfr_entero2);
                            $Maxfr_entero2   = max($ndtfr_entero2);
                          
                            $fmeanfr_entero2    = array_sum($ndtfr_entero2) / count($ndtfr_entero2);
                            $fvariantfr_entero2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtfr_entero2 as $i){
                            $fvariantfr_entero2 += pow($i - $fmeanfr_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_entero2 /= ($xsample1_1 ? count($ndtfr_entero2)-1 : count($ndtfr_entero2));
                            $stdevfr_entero2     = number_format(sqrt($fvariantfr_entero2),2);

                          }else{
                            $Minfr_entero2      = '';
                            $Maxfr_entero2      = '';
                            $Avgfr_entero2      = '';
                            $Countfr_entero2    = '';
                            $totalfr_entero2    = '';
                            $stdevfr_entero2    = '';
                            $inspectfr_entero2  = '';
                            $outspectfr_entero2 = '';
                            $prsoutfr_entero2   = '';
                          }

                          
                          if(is_array($ndtfr_ecoli2) && count($ndtfr_ecoli2)> 0)
                          {
                            $Countfr_ecoli2 = count($ndtfr_ecoli2);
                            $Avgfr_ecoli2   = number_format((array_sum($ndtfr_ecoli2)) /(count($ndtfr_ecoli2)),2);
                            $Minfr_ecoli2   = min($ndtfr_ecoli2);
                            $Maxfr_ecoli2   = max($ndtfr_ecoli2);
                          
                            $fmeanfr_ecoli2    = array_sum($ndtfr_ecoli2) / count($ndtfr_ecoli2);
                            $fvariantfr_ecoli2 = 0.00;
                            $xsample1_1        = false;
                            $dt1               = 0;$dt2 = 0;
                            foreach ($ndtfr_ecoli2 as $i){
                            $fvariantfr_ecoli2 += pow($i - $fmeanfr_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_ecoli2 /= ($xsample1_1 ? count($ndtfr_ecoli2)-1 : count($ndtfr_ecoli2));
                            $stdevfr_ecoli2     = number_format(sqrt($fvariantfr_ecoli2),2);

                          }else{
                            $Minfr_ecoli2      = '';
                            $Maxfr_ecoli2      = '';
                            $Avgfr_ecoli2      = '';
                            $Countfr_ecoli2    = '';
                            $totalfr_ecoli2    = '';
                            $stdevfr_ecoli2    = '';
                            $inspectfr_ecoli2  = '';
                            $outspectfr_ecoli2 = '';
                            $prsoutfr_ecoli2   = '';
                          }

                            if(is_array($ndtfr_salmo2) && count($ndtfr_salmo2)> 0)
                          {
                            $Countfr_salmo2 = count($ndtfr_salmo2);
                            $Avgfr_salmo2   = number_format((array_sum($ndtfr_salmo2)) /(count($ndtfr_salmo2)),2);
                            $Minfr_salmo2   = min($ndtfr_salmo2);
                            $Maxfr_salmo2   = max($ndtfr_salmo2);
                          
                            $fmeanfr_salmo2    = array_sum($ndtfr_salmo2) / count($ndtfr_salmo2);
                            $fvariantfr_salmo2 = 0.00;
                            $xsample1_1        = false;
                            $dt1               = 0;$dt2 = 0;
                            foreach ($ndtfr_salmo2 as $i){
                            $fvariantfr_salmo2 += pow($i - $fmeanfr_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_salmo2 /= ($xsample1_1 ? count($ndtfr_salmo2)-1 : count($ndtfr_salmo2));
                            $stdevfr_salmo2     = number_format(sqrt($fvariantfr_salmo2),2);

                          }else{
                            $Minfr_salmo2      = '';
                            $Maxfr_salmo2      = '';
                            $Avgfr_salmo2      = '';
                            $Countfr_salmo2    = '';
                            $totalfr_salmo2    = '';
                            $stdevfr_salmo2    = '';
                            $inspectfr_salmo2  = '';
                            $outspectfr_salmo2 = '';
                            $prsoutfr_salmo2   = '';
                          }

                              if(is_array($ndtcooling_tpc2) && count($ndtcooling_tpc2)> 0)
                          {
                            $Countcooling_tpc2 = count($ndtcooling_tpc2);
                            $Avgcooling_tpc2   = number_format((array_sum($ndtcooling_tpc2)) /(count($ndtcooling_tpc2)),2);
                            $Mincooling_tpc2   = min($ndtcooling_tpc2);
                            $Maxcooling_tpc2   = max($ndtcooling_tpc2);
                          
                            $fmeancooling_tpc2    = array_sum($ndtcooling_tpc2) / count($ndtcooling_tpc2);
                            $fvariantcooling_tpc2 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtcooling_tpc2 as $i){
                            $fvariantcooling_tpc2 += pow($i - $fmeancooling_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_tpc2 /= ($xsample1_1 ? count($ndtcooling_tpc2)-1 : count($ndtcooling_tpc2));
                            $stdevcooling_tpc2     = number_format(sqrt($fvariantcooling_tpc2),2);

                          }else{
                            $Mincooling_tpc2      = '';
                            $Maxcooling_tpc2      = '';
                            $Avgcooling_tpc2      = '';
                            $Countcooling_tpc2    = '';
                            $totalcooling_tpc2    = '';
                            $stdevcooling_tpc2    = '';
                            $inspectcooling_tpc2  = '';
                            $outspectcooling_tpc2 = '';
                            $prsoutcooling_tpc2   = '';
                          }


                               if(is_array($ndtcooling_entero2) && count($ndtcooling_entero2)> 0)
                          {
                            $Countcooling_entero2 = count($ndtcooling_entero2);
                            $Avgcooling_entero2   = number_format((array_sum($ndtcooling_entero2)) /(count($ndtcooling_entero2)),2);
                            $Mincooling_entero2   = min($ndtcooling_entero2);
                            $Maxcooling_entero2   = max($ndtcooling_entero2);
                          
                            $fmeancooling_entero2    = array_sum($ndtcooling_entero2) / count($ndtcooling_entero2);
                            $fvariantcooling_entero2 = 0.00;
                            $xsample1_1              = false;
                            $dt1                     = 0;$dt2 = 0;
                            foreach ($ndtcooling_entero2 as $i){
                            $fvariantcooling_entero2 += pow($i - $fmeancooling_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_entero2 /= ($xsample1_1 ? count($ndtcooling_entero2)-1 : count($ndtcooling_entero2));
                            $stdevcooling_entero2     = number_format(sqrt($fvariantcooling_entero2),2);

                          }else{
                            $Mincooling_entero2      = '';
                            $Maxcooling_entero2      = '';
                            $Avgcooling_entero2      = '';
                            $Countcooling_entero2    = '';
                            $totalcooling_entero2    = '';
                            $stdevcooling_entero2    = '';
                            $inspectcooling_entero2  = '';
                            $outspectcooling_entero2 = '';
                            $prsoutcooling_entero2   = '';
                          }

                               if(is_array($ndtcooling_ecoli2) && count($ndtcooling_ecoli2)> 0)
                          {
                            $Countcooling_ecoli2 = count($ndtcooling_ecoli2);
                            $Avgcooling_ecoli2   = number_format((array_sum($ndtcooling_ecoli2)) /(count($ndtcooling_ecoli2)),2);
                            $Mincooling_ecoli2   = min($ndtcooling_ecoli2);
                            $Maxcooling_ecoli2   = max($ndtcooling_ecoli2);
                          
                            $fmeancooling_ecoli2    = array_sum($ndtcooling_ecoli2) / count($ndtcooling_ecoli2);
                            $fvariantcooling_ecoli2 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtcooling_ecoli2 as $i){
                            $fvariantcooling_ecoli2 += pow($i - $fmeancooling_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_ecoli2 /= ($xsample1_1 ? count($ndtcooling_ecoli2)-1 : count($ndtcooling_ecoli2));
                            $stdevcooling_ecoli2     = number_format(sqrt($fvariantcooling_ecoli2),2);

                          }else{
                            $Mincooling_ecoli2      = '';
                            $Maxcooling_ecoli2      = '';
                            $Avgcooling_ecoli2      = '';
                            $Countcooling_ecoli2    = '';
                            $totalcooling_ecoli2    = '';
                            $stdevcooling_ecoli2    = '';
                            $inspectcooling_ecoli2  = '';
                            $outspectcooling_ecoli2 = '';
                            $prsoutcooling_ecoli2   = '';
                          }


                            if(is_array($ndtcooling_salmo2) && count($ndtcooling_salmo2)> 0)
                          {
                            $Countcooling_salmo2 = count($ndtcooling_salmo2);
                            $Avgcooling_salmo2   = number_format((array_sum($ndtcooling_salmo2)) /(count($ndtcooling_salmo2)),2);
                            $Mincooling_salmo2   = min($ndtcooling_salmo2);
                            $Maxcooling_salmo2   = max($ndtcooling_salmo2);
                          
                            $fmeancooling_salmo2    = array_sum($ndtcooling_salmo2) / count($ndtcooling_salmo2);
                            $fvariantcooling_salmo2 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtcooling_salmo2 as $i){
                            $fvariantcooling_salmo2 += pow($i - $fmeancooling_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_salmo2 /= ($xsample1_1 ? count($ndtcooling_salmo2)-1 : count($ndtcooling_salmo2));
                            $stdevcooling_salmo2     = number_format(sqrt($fvariantcooling_salmo2),2);

                          }else{

                            $Mincooling_salmo2      = '';
                            $Maxcooling_salmo2      = '';
                            $Avgcooling_salmo2      = '';
                            $Countcooling_salmo2    = '';
                            $totalcooling_salmo2    = '';
                            $stdevcooling_salmo2    = '';
                            $inspectcooling_salmo2  = '';
                            $outspectcooling_salmo2 = '';
                            $prsoutcooling_salmo2   = '';
                          
                          }
                           if(is_array($ndthpm_tpc2) && count($ndthpm_tpc2)> 0)
                          {
                            $Counthpm_tpc2 = count($ndthpm_tpc2);
                            $Avghpm_tpc2   = number_format((array_sum($ndthpm_tpc2)) /(count($ndthpm_tpc2)),2);
                            $Minhpm_tpc2   = min($ndthpm_tpc2);
                            $Maxhpm_tpc2   = max($ndthpm_tpc2);
                          
                            $fmeanhpm_tpc2    = array_sum($ndthpm_tpc2) / count($ndthpm_tpc2);
                            $fvarianthpm_tpc2 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndthpm_tpc2 as $i){
                            $fvarianthpm_tpc2 += pow($i - $fmeanhpm_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthpm_tpc2 /= ($xsample1_1 ? count($ndthpm_tpc2)-1 : count($ndthpm_tpc2));
                            $stdevhpm_tpc2     = number_format(sqrt($fvarianthpm_tpc2),2);

                          }else{
                            $Minhpm_tpc2      = '';
                            $Maxhpm_tpc2      = '';
                            $Avghpm_tpc2      = '';
                            $Counthpm_tpc2    = '';
                            $totalhpm_tpc2    = '';
                            $stdevhpm_tpc2    = '';
                            $inspecthpm_tpc2  = '';
                            $outspecthpm_tpc2 = '';
                            $prsouthpm_tpc2   = '';
                          }

                           if(is_array($ndthpm_entero2) && count($ndthpm_entero2)> 0)
                          {
                            $Counthpm_entero2 = count($ndthpm_entero2);
                            $Avghpm_entero2   = number_format((array_sum($ndthpm_entero2)) /(count($ndthpm_entero2)),2);
                            $Minhpm_entero2   = min($ndthpm_entero2);
                            $Maxhpm_entero2   = max($ndthpm_entero2);
                          
                            $fmeanhpm_entero2    = array_sum($ndthpm_entero2) / count($ndthpm_entero2);
                            $fvarianthpm_entero2 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndthpm_entero2 as $i){
                            $fvarianthpm_entero2 += pow($i - $fmeanhpm_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthpm_entero2 /= ($xsample1_1 ? count($ndthpm_entero2)-1 : count($ndthpm_entero2));
                            $stdevhpm_entero2     = number_format(sqrt($fvarianthpm_entero2),2);

                          }else{
                            $Minhpm_entero2      = '';
                            $Maxhpm_entero2      = '';
                            $Avghpm_entero2      = '';
                            $Counthpm_entero2    = '';
                            $totalhpm_entero2    = '';
                            $stdevhpm_entero2    = '';
                            $inspecthpm_entero2  = '';
                            $outspecthpm_entero2 = '';
                            $prsouthpm_entero2   = '';
                          }


                            if(is_array($ndthpm_ecoli2) && count($ndthpm_ecoli2)> 0)
                          {
                            $Counthpm_ecoli2 = count($ndthpm_ecoli2);
                            $Avghpm_ecoli2   = number_format((array_sum($ndthpm_ecoli2)) /(count($ndthpm_ecoli2)),2);
                            $Minhpm_ecoli2   = min($ndthpm_ecoli2);
                            $Maxhpm_ecoli2   = max($ndthpm_ecoli2);
                          
                            $fmeanhpm_ecoli2    = array_sum($ndthpm_ecoli2) / count($ndthpm_ecoli2);
                            $fvarianthpm_ecoli2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndthpm_ecoli2 as $i){
                            $fvarianthpm_ecoli2 += pow($i - $fmeanhpm_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthpm_ecoli2 /= ($xsample1_1 ? count($ndthpm_ecoli2)-1 : count($ndthpm_ecoli2));
                            $stdevhpm_ecoli2     = number_format(sqrt($fvarianthpm_ecoli2),2);

                          }else{
                            $Minhpm_ecoli2      = '';
                            $Maxhpm_ecoli2      = '';
                            $Avghpm_ecoli2      = '';
                            $Counthpm_ecoli2    = '';
                            $totalhpm_ecoli2    = '';
                            $stdevhpm_ecoli2    = '';
                            $inspecthpm_ecoli2  = '';
                            $outspecthpm_ecoli2 = '';
                            $prsouthpm_ecoli2   = '';
                          }



                                if(is_array($ndthpm_salmo2) && count($ndthpm_salmo2)> 0)
                          {
                            $Counthpm_salmo2 = count($ndthpm_salmo2);
                            $Avghpm_salmo2   = number_format((array_sum($ndthpm_salmo2)) /(count($ndthpm_salmo2)),2);
                            $Minhpm_salmo2   = min($ndthpm_salmo2);
                            $Maxhpm_salmo2   = max($ndthpm_salmo2);
                          
                            $fmeanhpm_salmo2    = array_sum($ndthpm_salmo2) / count($ndthpm_salmo2);
                            $fvarianthpm_salmo2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndthpm_salmo2 as $i){
                            $fvarianthpm_salmo2 += pow($i - $fmeanhpm_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthpm_salmo2 /= ($xsample1_1 ? count($ndthpm_salmo2)-1 : count($ndthpm_salmo2));
                            $stdevhpm_salmo2     = number_format(sqrt($fvarianthpm_salmo2),2);

                          }else{
                            
                            $Minhpm_salmo2      = '';
                            $Maxhpm_salmo2      = '';
                            $Avghpm_salmo2      = '';
                            $Counthpm_salmo2    = '';
                            $totalhpm_salmo2    = '';
                            $stdevhpm_salmo2    = '';
                            $inspecthpm_salmo2  = '';
                            $outspecthpm_salmo2 = '';
                            $prsouthpm_salmo2   = '';
                          }

                          

                           if(is_array($ndtfluid_tpc2) && count($ndtfluid_tpc2)> 0)
                          {
                            $Countfluid_tpc2 = count($ndtfluid_tpc2);
                            $Avgfluid_tpc2   = number_format((array_sum($ndtfluid_tpc2)) /(count($ndtfluid_tpc2)),2);
                            $Minfluid_tpc2   = min($ndtfluid_tpc2);
                            $Maxfluid_tpc2   = max($ndtfluid_tpc2);
                          
                            $fmeanfluid_tpc2    = array_sum($ndtfluid_tpc2) / count($ndtfluid_tpc2);
                            $fvariantfluid_tpc2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtfluid_tpc2 as $i){
                            $fvariantfluid_tpc2 += pow($i - $fmeanfluid_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfluid_tpc2 /= ($xsample1_1 ? count($ndtfluid_tpc2)-1 : count($ndtfluid_tpc2));
                            $stdevfluid_tpc2     = number_format(sqrt($fvariantfluid_tpc2),2);

                          }else{
                            $Minfluid_tpc2      = '';
                            $Maxfluid_tpc2      = '';
                            $Avgfluid_tpc2      = '';
                            $Countfluid_tpc2    = '';
                            $totalfluid_tpc2    = '';
                            $stdevfluid_tpc2    = '';
                            $inspectfluid_tpc2  = '';
                            $outspectfluid_tpc2 = '';
                            $prsoutfluid_tpc2   = '';
                          }


                                if(is_array($ndtfluid_entero2) && count($ndtfluid_entero2)> 0)
                          {
                            $Countfluid_entero2 = count($ndtfluid_entero2);
                            $Avgfluid_entero2   = number_format((array_sum($ndtfluid_entero2)) /(count($ndtfluid_entero2)),2);
                            $Minfluid_entero2   = min($ndtfluid_entero2);
                            $Maxfluid_entero2   = max($ndtfluid_entero2);
                          
                            $fmeanfluid_entero2    = array_sum($ndtfluid_entero2) / count($ndtfluid_entero2);
                            $fvariantfluid_entero2 = 0.00;
                            $xsample1_1            = false;
                            $dt1                   = 0;$dt2 = 0;
                            foreach ($ndtfluid_entero2 as $i){
                            $fvariantfluid_entero2 += pow($i - $fmeanfluid_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfluid_entero2 /= ($xsample1_1 ? count($ndtfluid_entero2)-1 : count($ndtfluid_entero2));
                            $stdevfluid_entero2     = number_format(sqrt($fvariantfluid_entero2),2);

                          }else{
                            $Minfluid_entero2      = '';
                            $Maxfluid_entero2      = '';
                            $Avgfluid_entero2      = '';
                            $Countfluid_entero2    = '';
                            $totalfluid_entero2    = '';
                            $stdevfluid_entero2    = '';
                            $inspectfluid_entero2  = '';
                            $outspectfluid_entero2 = '';
                            $prsoutfluid_entero2   = '';
                          }

                                if(is_array($ndtfluid_ecoli2) && count($ndtfluid_ecoli2)> 0)
                          {
                            $Countfluid_ecoli2 = count($ndtfluid_ecoli2);
                            $Avgfluid_ecoli2   = number_format((array_sum($ndtfluid_ecoli2)) /(count($ndtfluid_ecoli2)),2);
                            $Minfluid_ecoli2   = min($ndtfluid_ecoli2);
                            $Maxfluid_ecoli2   = max($ndtfluid_ecoli2);
                          
                            $fmeanfluid_ecoli2    = array_sum($ndtfluid_ecoli2) / count($ndtfluid_ecoli2);
                            $fvariantfluid_ecoli2 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtfluid_ecoli2 as $i){
                            $fvariantfluid_ecoli2 += pow($i - $fmeanfluid_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfluid_ecoli2 /= ($xsample1_1 ? count($ndtfluid_ecoli2)-1 : count($ndtfluid_ecoli2));
                            $stdevfluid_ecoli2     = number_format(sqrt($fvariantfluid_ecoli2),2);

                          }else{
                            $Minfluid_ecoli2      = '';
                            $Maxfluid_ecoli2      = '';
                            $Avgfluid_ecoli2      = '';
                            $Countfluid_ecoli2    = '';
                            $totalfluid_ecoli2    = '';
                            $stdevfluid_ecoli2    = '';
                            $inspectfluid_ecoli2  = '';
                            $outspectfluid_ecoli2 = '';
                            $prsoutfluid_ecoli2   = '';
                          }

                             if(is_array($ndtfluid_salmo2) && count($ndtfluid_salmo2)> 0)
                          {
                            $Countfluid_salmo2 = count($ndtfluid_salmo2);
                            $Avgfluid_salmo2   = number_format((array_sum($ndtfluid_salmo2)) /(count($ndtfluid_salmo2)),2);
                            $Minfluid_salmo2   = min($ndtfluid_salmo2);
                            $Maxfluid_salmo2   = max($ndtfluid_salmo2);
                          
                            $fmeanfluid_salmo2    = array_sum($ndtfluid_salmo2) / count($ndtfluid_salmo2);
                            $fvariantfluid_salmo2 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtfluid_salmo2 as $i){
                            $fvariantfluid_salmo2 += pow($i - $fmeanfluid_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfluid_salmo2 /= ($xsample1_1 ? count($ndtfluid_salmo2)-1 : count($ndtfluid_salmo2));
                            $stdevfluid_salmo2     = number_format(sqrt($fvariantfluid_salmo2),2);

                          }else{
                            $Minfluid_salmo2      = '';
                            $Maxfluid_salmo2      = '';
                            $Avgfluid_salmo2      = '';
                            $Countfluid_salmo2    = '';
                            $totalfluid_salmo2    = '';
                            $stdevfluid_salmo2    = '';
                            $inspectfluid_salmo2  = '';
                            $outspectfluid_salmo2 = '';
                            $prsoutfluid_salmo2   = '';
                          }



                          
                           if(is_array($ndtwpm_tpc2) && count($ndtwpm_tpc2)> 0)
                          {
                            $Countwpm_tpc2 = count($ndtwpm_tpc2);
                            $Avgwpm_tpc2   = number_format((array_sum($ndtwpm_tpc2)) /(count($ndtwpm_tpc2)),2);
                            $Minwpm_tpc2   = min($ndtwpm_tpc2);
                            $Maxwpm_tpc2   = max($ndtwpm_tpc2);
                          
                            $fmeanwpm_tpc2    = array_sum($ndtwpm_tpc2) / count($ndtwpm_tpc2);
                            $fvariantwpm_tpc2 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtwpm_tpc2 as $i){
                            $fvariantwpm_tpc2 += pow($i - $fmeanwpm_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantwpm_tpc2 /= ($xsample1_1 ? count($ndtwpm_tpc2)-1 : count($ndtwpm_tpc2));
                            $stdevwpm_tpc2     = number_format(sqrt($fvariantwpm_tpc2),2);

                          }else{
                            $Minwpm_tpc2      = '';
                            $Maxwpm_tpc2      = '';
                            $Avgwpm_tpc2      = '';
                            $Countwpm_tpc2    = '';
                            $totalwpm_tpc2    = '';
                            $stdevwpm_tpc2    = '';
                            $inspectwpm_tpc2  = '';
                            $outspectwpm_tpc2 = '';
                            $prsoutwpm_tpc2   = '';
                          }
                            if(is_array($ndtwpm_entero2) && count($ndtwpm_entero2)> 0)
                          {
                            $Countwpm_entero2 = count($ndtwpm_entero2);
                            $Avgwpm_entero2   = number_format((array_sum($ndtwpm_entero2)) /(count($ndtwpm_entero2)),2);
                            $Minwpm_entero2   = min($ndtwpm_entero2);
                            $Maxwpm_entero2   = max($ndtwpm_entero2);
                          
                            $fmeanwpm_entero2    = array_sum($ndtwpm_entero2) / count($ndtwpm_entero2);
                            $fvariantwpm_entero2 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtwpm_entero2 as $i){
                            $fvariantwpm_entero2 += pow($i - $fmeanwpm_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantwpm_entero2 /= ($xsample1_1 ? count($ndtwpm_entero2)-1 : count($ndtwpm_entero2));
                            $stdevwpm_entero2     = number_format(sqrt($fvariantwpm_entero2),2);

                          }else{
                            $Minwpm_entero2      = '';
                            $Maxwpm_entero2      = '';
                            $Avgwpm_entero2      = '';
                            $Countwpm_entero2    = '';
                            $totalwpm_entero2    = '';
                            $stdevwpm_entero2    = '';
                            $inspectwpm_entero2  = '';
                            $outspectwpm_entero2 = '';
                            $prsoutwpm_entero2   = '';
                          
                          }

                             if(is_array($ndtwpm_ecoli2) && count($ndtwpm_ecoli2)> 0)
                          {
                            $Countwpm_ecoli2 = count($ndtwpm_ecoli2);
                            $Avgwpm_ecoli2   = number_format((array_sum($ndtwpm_ecoli2)) /(count($ndtwpm_ecoli2)),2);
                            $Minwpm_ecoli2   = min($ndtwpm_ecoli2);
                            $Maxwpm_ecoli2   = max($ndtwpm_ecoli2);
                          
                            $fmeanwpm_ecoli2    = array_sum($ndtwpm_ecoli2) / count($ndtwpm_ecoli2);
                            $fvariantwpm_ecoli2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtwpm_ecoli2 as $i){
                            $fvariantwpm_ecoli2 += pow($i - $fmeanwpm_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantwpm_ecoli2 /= ($xsample1_1 ? count($ndtwpm_ecoli2)-1 : count($ndtwpm_ecoli2));
                            $stdevwpm_ecoli2     = number_format(sqrt($fvariantwpm_ecoli2),2);

                          }else{
                            $Minwpm_ecoli2      = '';
                            $Maxwpm_ecoli2      = '';
                            $Avgwpm_ecoli2      = '';
                            $Countwpm_ecoli2    = '';
                            $totalwpm_ecoli2    = '';
                            $stdevwpm_ecoli2    = '';
                            $inspectwpm_ecoli2  = '';
                            $outspectwpm_ecoli2 = '';
                            $prsoutwpm_ecoli2   = '';
                          
                          }

                            if(is_array($ndtwpm_salmo2) && count($ndtwpm_salmo2)> 0)
                          {
                            $Countwpm_salmo2 = count($ndtwpm_salmo2);
                            $Avgwpm_salmo2   = number_format((array_sum($ndtwpm_salmo2)) /(count($ndtwpm_salmo2)),2);
                            $Minwpm_salmo2   = min($ndtwpm_salmo2);
                            $Maxwpm_salmo2   = max($ndtwpm_salmo2);
                          
                            $fmeanwpm_salmo2    = array_sum($ndtwpm_salmo2) / count($ndtwpm_salmo2);
                            $fvariantwpm_salmo2 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtwpm_salmo2 as $i){
                            $fvariantwpm_salmo2 += pow($i - $fmeanwpm_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantwpm_salmo2 /= ($xsample1_1 ? count($ndtwpm_salmo2)-1 : count($ndtwpm_salmo2));
                            $stdevwpm_salmo2     = number_format(sqrt($fvariantwpm_salmo2),2);

                          }else{
                            $Minwpm_salmo2      = '';
                            $Maxwpm_salmo2      = '';
                            $Avgwpm_salmo2      = '';
                            $Countwpm_salmo2    = '';
                            $totalwpm_salmo2    = '';
                            $stdevwpm_salmo2    = '';
                            $inspectwpm_salmo2  = '';
                            $outspectwpm_salmo2 = '';
                            $prsoutwpm_salmo2   = '';
                          
                          }

                            if(is_array($ndtcontrol_tpc2) && count($ndtcontrol_tpc2)> 0)
                          {
                            $Countcontrol_tpc2 = count($ndtcontrol_tpc2);
                            $Avgcontrol_tpc2   = number_format((array_sum($ndtcontrol_tpc2)) /(count($ndtcontrol_tpc2)),2);
                            $Mincontrol_tpc2   = min($ndtcontrol_tpc2);
                            $Maxcontrol_tpc2   = max($ndtcontrol_tpc2);
                          
                            $fmeancontrol_tpc2    = array_sum($ndtcontrol_tpc2) / count($ndtcontrol_tpc2);
                            $fvariantcontrol_tpc2 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtcontrol_tpc2 as $i){
                            $fvariantcontrol_tpc2 += pow($i - $fmeancontrol_tpc2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcontrol_tpc2 /= ($xsample1_1 ? count($ndtcontrol_tpc2)-1 : count($ndtcontrol_tpc2));
                            $stdevcontrol_tpc2     = number_format(sqrt($fvariantcontrol_tpc2),2);

                          }else{
                            $Mincontrol_tpc2      = '';
                            $Maxcontrol_tpc2      = '';
                            $Avgcontrol_tpc2      = '';
                            $Countcontrol_tpc2    = '';
                            $totalcontrol_tpc2    = '';
                            $stdevcontrol_tpc2    = '';
                            $inspectcontrol_tpc2  = '';
                            $outspectcontrol_tpc2 = '';
                            $prsoutcontrol_tpc2   = '';
                          
                          }

                           if(is_array($ndtcontrol_entero2) && count($ndtcontrol_entero2)> 0)
                          {
                            $Countcontrol_entero2 = count($ndtcontrol_entero2);
                            $Avgcontrol_entero2   = number_format((array_sum($ndtcontrol_entero2)) /(count($ndtcontrol_entero2)),2);
                            $Mincontrol_entero2   = min($ndtcontrol_entero2);
                            $Maxcontrol_entero2   = max($ndtcontrol_entero2);
                          
                            $fmeancontrol_entero2    = array_sum($ndtcontrol_entero2) / count($ndtcontrol_entero2);
                            $fvariantcontrol_entero2 = 0.00;
                            $xsample1_1              = false;
                            $dt1                     = 0;$dt2 = 0;
                            foreach ($ndtcontrol_entero2 as $i){
                            $fvariantcontrol_entero2 += pow($i - $fmeancontrol_entero2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcontrol_entero2 /= ($xsample1_1 ? count($ndtcontrol_entero2)-1 : count($ndtcontrol_entero2));
                            $stdevcontrol_entero2     = number_format(sqrt($fvariantcontrol_entero2),2);

                          }else{
                            $Mincontrol_entero2      = '';
                            $Maxcontrol_entero2      = '';
                            $Avgcontrol_entero2      = '';
                            $Countcontrol_entero2    = '';
                            $totalcontrol_entero2    = '';
                            $stdevcontrol_entero2    = '';
                            $inspectcontrol_entero2  = '';
                            $outspectcontrol_entero2 = '';
                            $prsoutcontrol_entero2   = '';
                          
                          }    

                           if(is_array($ndtcontrol_ecoli2) && count($ndtcontrol_ecoli2)> 0)
                          {
                            $Countcontrol_ecoli2 = count($ndtcontrol_ecoli2);
                            $Avgcontrol_ecoli2   = number_format((array_sum($ndtcontrol_ecoli2)) /(count($ndtcontrol_ecoli2)),2);
                            $Mincontrol_ecoli2   = min($ndtcontrol_ecoli2);
                            $Maxcontrol_ecoli2   = max($ndtcontrol_ecoli2);
                          
                            $fmeancontrol_ecoli2    = array_sum($ndtcontrol_ecoli2) / count($ndtcontrol_ecoli2);
                            $fvariantcontrol_ecoli2 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtcontrol_ecoli2 as $i){
                            $fvariantcontrol_ecoli2 += pow($i - $fmeancontrol_ecoli2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcontrol_ecoli2 /= ($xsample1_1 ? count($ndtcontrol_ecoli2)-1 : count($ndtcontrol_ecoli2));
                            $stdevcontrol_ecoli2     = number_format(sqrt($fvariantcontrol_ecoli2),2);

                          }else{
                            $Mincontrol_ecoli2      = '';
                            $Maxcontrol_ecoli2      = '';
                            $Avgcontrol_ecoli2      = '';
                            $Countcontrol_ecoli2    = '';
                            $totalcontrol_ecoli2    = '';
                            $stdevcontrol_ecoli2    = '';
                            $inspectcontrol_ecoli2  = '';
                            $outspectcontrol_ecoli2 = '';
                            $prsoutcontrol_ecoli2   = '';
                          
                          }    

                          
                           if(is_array($ndtcontrol_salmo2) && count($ndtcontrol_salmo2)> 0)
                          {
                            $Countcontrol_salmo2 = count($ndtcontrol_salmo2);
                            $Avgcontrol_salmo2   = number_format((array_sum($ndtcontrol_salmo2)) /(count($ndtcontrol_salmo2)),2);
                            $Mincontrol_salmo2   = min($ndtcontrol_salmo2);
                            $Maxcontrol_salmo2   = max($ndtcontrol_salmo2);
                          
                            $fmeancontrol_salmo2    = array_sum($ndtcontrol_salmo2) / count($ndtcontrol_salmo2);
                            $fvariantcontrol_salmo2 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtcontrol_salmo2 as $i){
                            $fvariantcontrol_salmo2 += pow($i - $fmeancontrol_salmo2 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcontrol_salmo2 /= ($xsample1_1 ? count($ndtcontrol_salmo2)-1 : count($ndtcontrol_salmo2));
                            $stdevcontrol_salmo2     = number_format(sqrt($fvariantcontrol_salmo2),2);

                          }else{
                            $Mincontrol_salmo2      = '';
                            $Maxcontrol_salmo2      = '';
                            $Avgcontrol_salmo2      = '';
                            $Countcontrol_salmo2    = '';
                            $totalcontrol_salmo2    = '';
                            $stdevcontrol_salmo2    = '';
                            $inspectcontrol_salmo2  = '';
                            $outspectcontrol_salmo2 = '';
                            $prsoutcontrol_salmo2   = '';
                          }    

                 $rowfoot0  = $rowCount5+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 //$objPHPExcel2->mergeCells('A'.$rowfoot0.':AE'.$rowfoot0);
                 $objPHPExcel2->setSharedStyle($cellorange, 'A'.$rowfoot1.':AE'.$rowfoot5);
                 $objPHPExcel2->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Count ');                 
                 $objPHPExcel2->setCellValue('C'.$rowfoot1,$Countfr_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot1,$Countfr_entero2);                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot1,$Countcooling_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot1,$Countcooling_entero2);
                 $objPHPExcel2->setCellValue('M'.$rowfoot1,$Counthpm_tpc2);
                 $objPHPExcel2->setCellValue('N'.$rowfoot1,$Counthpm_entero2);
                 $objPHPExcel2->setCellValue('R'.$rowfoot1,$Countfluid_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot1,$Countfluid_entero2);              
                 $objPHPExcel2->setCellValue('W'.$rowfoot1,$Countwpm_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot1,$Countwpm_entero2);
                 $objPHPExcel2->setCellValue('AA'.$rowfoot1,$Countcontrol_tpc2);
                 $objPHPExcel2->setCellValue('AB'.$rowfoot1,$Countcontrol_entero2);   

                 $objPHPExcel2->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Average ');                 
                 $objPHPExcel2->setCellValue('C'.$rowfoot2,$Avgfr_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot2,$Avgfr_entero2);                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot2,$Avgcooling_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot2,$Avgcooling_entero2);
                 $objPHPExcel2->setCellValue('M'.$rowfoot2,$Avghpm_tpc2);
                 $objPHPExcel2->setCellValue('N'.$rowfoot2,$Avghpm_entero2);
                 $objPHPExcel2->setCellValue('R'.$rowfoot2,$Avgfluid_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot2,$Avgfluid_entero2);              
                 $objPHPExcel2->setCellValue('W'.$rowfoot2,$Avgwpm_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot2,$Avgwpm_entero2);
                 $objPHPExcel2->setCellValue('AA'.$rowfoot2,$Avgcontrol_tpc2);
                 $objPHPExcel2->setCellValue('AB'.$rowfoot2,$Avgcontrol_entero2);  

                 $objPHPExcel2->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Minimum ');                 
                 $objPHPExcel2->setCellValue('C'.$rowfoot3,$Minfr_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot3,$Minfr_entero2);                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot3,$Mincooling_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot3,$Mincooling_entero2);
                 $objPHPExcel2->setCellValue('M'.$rowfoot3,$Minhpm_tpc2);
                 $objPHPExcel2->setCellValue('N'.$rowfoot3,$Minhpm_entero2);
                 $objPHPExcel2->setCellValue('R'.$rowfoot3,$Minfluid_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot3,$Minfluid_entero2);              
                 $objPHPExcel2->setCellValue('W'.$rowfoot3,$Minwpm_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot3,$Minwpm_entero2);
                 $objPHPExcel2->setCellValue('AA'.$rowfoot3,$Mincontrol_tpc2);
                 $objPHPExcel2->setCellValue('AB'.$rowfoot3,$Mincontrol_entero2);  


                 $objPHPExcel2->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Maximum ');                 
                 $objPHPExcel2->setCellValue('C'.$rowfoot4,$Maxfr_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot4,$Maxfr_entero2);                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot4,$Maxcooling_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot4,$Maxcooling_entero2);
                 $objPHPExcel2->setCellValue('M'.$rowfoot4,$Maxhpm_tpc2);
                 $objPHPExcel2->setCellValue('N'.$rowfoot4,$Maxhpm_entero2);
                 $objPHPExcel2->setCellValue('R'.$rowfoot4,$Maxfluid_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot4,$Maxfluid_entero2);              
                 $objPHPExcel2->setCellValue('W'.$rowfoot4,$Maxwpm_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot4,$Maxwpm_entero2);
                 $objPHPExcel2->setCellValue('AA'.$rowfoot4,$Maxcontrol_tpc2);
                 $objPHPExcel2->setCellValue('AB'.$rowfoot4,$Maxcontrol_entero2); 

                 $objPHPExcel2->mergeCells('A'.$rowfoot5.':B'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'St Devisiasi ');                 
                 $objPHPExcel2->setCellValue('C'.$rowfoot5,$stdevfr_tpc2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot5,$stdevfr_entero2);                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot5,$stdevcooling_tpc2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot5,$stdevcooling_entero2);
                 $objPHPExcel2->setCellValue('M'.$rowfoot5,$stdevhpm_tpc2);
                 $objPHPExcel2->setCellValue('N'.$rowfoot5,$stdevhpm_entero2);
                 $objPHPExcel2->setCellValue('R'.$rowfoot5,$stdevfluid_tpc2);
                 $objPHPExcel2->setCellValue('S'.$rowfoot5,$stdevfluid_entero2);              
                 $objPHPExcel2->setCellValue('W'.$rowfoot5,$stdevwpm_tpc2);               
                 $objPHPExcel2->setCellValue('X'.$rowfoot5,$stdevwpm_entero2);
                 $objPHPExcel2->setCellValue('AA'.$rowfoot5,$stdevcontrol_tpc2);
                 $objPHPExcel2->setCellValue('AB'.$rowfoot5,$stdevcontrol_entero2); 

                 $objPHPExcel2->setSharedStyle($cellorange1, 'A'.$rowfoot7.':S'.$rowfoot7);                 
                 $objPHPExcel2->mergeCells('A'.$rowfoot7.':D'.$rowfoot7)->setCellValue('A'.$rowfoot7,'REPORTED BY: ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot7.':J'.$rowfoot7)->setCellValue('E'.$rowfoot7,'CHECKED  BY : ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot7.':P'.$rowfoot7)->setCellValue('K'.$rowfoot7,'CONFIRMED BY : ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot7.':S'.$rowfoot7)->setCellValue('Q'.$rowfoot7,'ACKNOWLEDGED BY : ');

                 $objPHPExcel2->setSharedStyle($bodyStyle,'A'.$rowfoot7.':S'.$rowfoot13);
                 $objPHPExcel2->mergeCells('A'.$rowfoot8.':D'.$rowfoot10);
                 $objPHPExcel2->mergeCells('E'.$rowfoot8.':J'.$rowfoot10);
                 $objPHPExcel2->mergeCells('K'.$rowfoot8.':P'.$rowfoot10);
                 $objPHPExcel2->mergeCells('Q'.$rowfoot8.':S'.$rowfoot10);
                 $objPHPExcel2->setSharedStyle($cellorange1, 'A'.$rowfoot11.':Q'.$rowfoot13); 
                 $objPHPExcel2->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'NAME : RISTINA YULIANI ');

                 $objPHPExcel2->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'POSITION : KS ');
                 $objPHPExcel2->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'POSITION : AMGR QAD ');
                 $objPHPExcel2->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel2->mergeCells('A'.$rowfoot13.':D'.$rowfoot13)->setCellValue('A'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('E'.$rowfoot13.':J'.$rowfoot13)->setCellValue('E'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('K'.$rowfoot13.':P'.$rowfoot13)->setCellValue('K'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('Q'.$rowfoot13.':S'.$rowfoot13)->setCellValue('Q'.$rowfoot13,'DATE : '.$tgl);
              }
                 $objPHPExcel2->mergeCells('A'.$rowfoot14.':C'.$rowfoot14)->setCellValue('A'.$rowfoot14,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel2->mergeCells('R'.$rowfoot14.':S'.$rowfoot14)->setCellValue('R'.$rowfoot14,''.$frmnm);
                 $objPHPExcel2->mergeCells('D'.$rowfoot14.':Q'.$rowfoot14);
              


                 //##############swabbing_wf####################

                $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');            
                
                $objPHPExcel3 = $obj->createSheet(3);
                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);
                foreach(range('A','R') as $columnID){
                $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                 $thn     = substr($dtstart,0,4);
                 $blnfrom = substr($dtstart,5,2);
                 $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel3->mergeCells('A1:R1');
                 $objPHPExcel3->mergeCells('A2:A5');
                 $objPHPExcel3->mergeCells('B2:Q5')->setCellValue('B2',$frmcop);
                 $objPHPExcel3->setCellValue('R2','Tahun: '.$thn);
                 $objPHPExcel3->setCellValue('R3','Bulan: '.$bln);
                 //$a=$objPHPExcel3->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel3->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel3->setCellValue('R4','Hal: ');
                 $objPHPExcel3->mergeCells('B6:R6')->setCellValue('B6',''.$frmjdl);
                 $objPHPExcel3->setCellValue('A6','JUDUL');
                             
                 $objPHPExcel3->mergeCells('A7:A7')->setCellValue('A7','Tanggal/ Shift');
                 $objPHPExcel3->mergeCells('B7:I7')->setCellValue('B7','Bag Filling Room');                
                 $objPHPExcel3->mergeCells('J7:Q7')->setCellValue('J7','Cooling/ Packing Room');
                 $objPHPExcel3->setCellValue('R7','Keterangan');


                 $objPHPExcel3->mergeCells('B8:E8')->setCellValue('B8','FLOOR ');
                 $objPHPExcel3->mergeCells('F8:I8')->setCellValue('F8','WALL');
                 $objPHPExcel3->mergeCells('J8:L8')->setCellValue('J8','FLOOR');
                 $objPHPExcel3->mergeCells('M8:Q8')->setCellValue('M8','WALL');
                 $objPHPExcel3->setCellValue('R8','');

                 $objPHPExcel3->setCellValue('B9','TPC');
                 $objPHPExcel3->setCellValue('C9','Entero');
                 $objPHPExcel3->setCellValue('D9','E.Coli');
                 $objPHPExcel3->setCellValue('E9','Salmo');

                 $objPHPExcel3->setCellValue('F9','TPC');
                 $objPHPExcel3->setCellValue('G9','Enetero');
                 $objPHPExcel3->setCellValue('H9','E.Coli');
                 $objPHPExcel3->setCellValue('I9','Salmo');

                 $objPHPExcel3->setCellValue('J9','TPC');
                 $objPHPExcel3->setCellValue('K9','Enetero');
                 $objPHPExcel3->setCellValue('L9','E.coli');
                 $objPHPExcel3->setCellValue('M9','Salmo');

                 $objPHPExcel3->setCellValue('N9','TPC');
                 $objPHPExcel3->setCellValue('O9','Entero');
                 $objPHPExcel3->setCellValue('P9','E.coli');
                 $objPHPExcel3->setCellValue('Q9','Salmo');
                 $objPHPExcel3->setCellValue('R9','');

                 $objPHPExcel3->setCellValue('B10','Max 3200cfu/400cm');
                 $objPHPExcel3->setCellValue('C10','Max 200cfu/400cm');
                 $objPHPExcel3->setCellValue('D10','ABS /400cm');
                 $objPHPExcel3->setCellValue('E10','ABS /400cm');

                 $objPHPExcel3->setCellValue('F10','Max /2500cfu/400cm');
                 $objPHPExcel3->setCellValue('G10','Max /150cfu/400cm');
                 $objPHPExcel3->setCellValue('H10','ABS / 400cm');
                 $objPHPExcel3->setCellValue('I10','ABS / 400cm');

                 $objPHPExcel3->setCellValue('J10','Max / 3200cfu/400cm');
                 $objPHPExcel3->setCellValue('K10','Max / 200cfu/400cm');
                 $objPHPExcel3->setCellValue('L10','ABS /400cm');
                 $objPHPExcel3->setCellValue('M10','ABS /400cm');

                 $objPHPExcel3->setCellValue('N10','Max / 2500cfu/400cm');
                 $objPHPExcel3->setCellValue('O10','Max / 150cfu/400cm');
                 $objPHPExcel3->setCellValue('P10','ABS /400cm');
                 $objPHPExcel3->setCellValue('Q10','ABS /400cm');
                 $objPHPExcel3->setCellValue('R10','');

                 $objPHPExcel3->setSharedStyle($headerStyle, 'A2:R10');

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                // $dtdetail3 =$this->$model->get_detail_bydate2($dttglStart,$dttglFinish);
                 if(isset($dtdetail3)){
                 $rowCount6 = 10;
                 $no        = 1;
               
                
                 foreach ($dtdetail3 as $row6){
                 $shift        = $row6->shift;
                 $tgl_sampling = $row6->tgl_sampling;
    
                 $fr_tpc_floor    = $row6->fr_tpc_floor;
                 $fr_entero_floor = $row6->fr_entero_floor;
                 $fr_ecoli_floor  = $row6->fr_ecoli_floor;

                 $fr_salmo_floor = $row6->fr_salmo_floor;
                 $fr_tpc_wall    = $row6->fr_tpc_wall;
                 $fr_entero_wall = $row6->fr_entero_wall;
                 $fr_ecoli_wall  = $row6->fr_ecoli_wall;
                 $fr_salmo_wall  = $row6->fr_salmo_wall;

                 $cooling_tpc_floor    = $row6->cooling_tpc_floor;
                 $cooling_entero_floor = $row6->cooling_entero_floor;
                 $cooling_ecoli_floor  = $row6->cooling_ecoli_floor;
                 $cooling_salmo_floor  = $row6->cooling_salmo_floor;
                 $cooling_tpc_wall     = $row6->cooling_tpc_wall;

                 $cooling_entero_wall = $row6->cooling_entero_wall;
                 $cooling_ecoli_wall  = $row6->cooling_ecoli_wall;
                 $cooling_salmo_wall  = $row6->cooling_salmo_wall;
                 $remarks             = $row6->remarks;
                
            
                 $rowCount6++;
                 $objPHPExcel3->setCellValue('A'.$rowCount6,$tgl_sampling.'/'.$shift);
                 $objPHPExcel3->setCellValue('B'.$rowCount6,$fr_tpc_floor);
                 $objPHPExcel3->setCellValue('C'.$rowCount6,$fr_entero_floor);
                 $objPHPExcel3->setCellValue('D'.$rowCount6,$fr_ecoli_floor);
                 $objPHPExcel3->setCellValue('E'.$rowCount6,$fr_salmo_floor);
                 $objPHPExcel3->setCellValue('F'.$rowCount6,$fr_tpc_wall);

                 $objPHPExcel3->setCellValue('G'.$rowCount6,$fr_entero_wall);
                 $objPHPExcel3->setCellValue('H'.$rowCount6,$fr_ecoli_wall);
                 $objPHPExcel3->setCellValue('I'.$rowCount6,$fr_salmo_wall);
                 $objPHPExcel3->setCellValue('J'.$rowCount6,$cooling_tpc_floor);                 
                 $objPHPExcel3->setCellValue('K'.$rowCount6,$cooling_entero_floor);
                 $objPHPExcel3->setCellValue('L'.$rowCount6,$cooling_ecoli_floor);
                 $objPHPExcel3->setCellValue('M'.$rowCount6,$cooling_salmo_floor);
                 $objPHPExcel3->setCellValue('N'.$rowCount6,$cooling_tpc_wall);
                 $objPHPExcel3->setCellValue('O'.$rowCount6,$cooling_entero_wall);                 
                 $objPHPExcel3->setCellValue('P'.$rowCount6,$cooling_ecoli_wall);
                 $objPHPExcel3->setCellValue('Q'.$rowCount6,$cooling_salmo_wall);               
                 $objPHPExcel3->setCellValue('AD'.$rowCount6,$remarks);
                 $no++;                
                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowCount6.':R'.$rowCount6);
                  }
               } 
           
      
               $dttglStart     = $this->uri->segment(8);
               $dttglFinish    = $this->uri->segment(9);
               $data_dtdetail3 = $this->$model->get_detail_bydate2($dttglStart,$dttglFinish);
                  
                        if(isset($dtdetail3)){
                        foreach($dtdetail3 as $row6){                
                        $nd_fr_tpc_floor3   [] = $row6->fr_tpc_floor;
                        $nd_fr_entero_floor3[] = $row6->fr_entero_floor;
                        $nd_fr_ecoli_floor3 [] = $row6->fr_ecoli_floor;
                        $nd_fr_salmo_floor3 [] = $row6->fr_salmo_floor;

                        $nd_fr_tpc_wall3   [] = $row6->fr_tpc_wall;
                        $nd_fr_entero_wall3[] = $row6->fr_entero_wall;
                        $nd_fr_ecoli_wall3 [] = $row6->fr_ecoli_wall;
                        $nd_fr_salmo_wall3 [] = $row6->fr_salmo_wall;

                        $nd_cooling_tpc_floor3   [] = $row6->cooling_tpc_floor;
                        $nd_cooling_entero_floor3[] = $row6->cooling_entero_floor;
                        $nd_cooling_ecoli_floor3 [] = $row6->cooling_ecoli_floor;
                        $nd_cooling_salmo_floor3 [] = $row6->cooling_salmo_floor;

                        $nd_cooling_tpc_wall3   [] = $row6->cooling_tpc_wall;
                        $nd_cooling_entero_wall3[] = $row6->cooling_entero_wall;
                        $nd_cooling_ecoli_wall3 [] = $row6->cooling_ecoli_wall;
                        $nd_cooling_salmo_wall3 [] = $row6->cooling_salmo_wall;

                        
                       
                        $ndtfr_tpc_floor3    = array_diff($nd_fr_tpc_floor3, array('',0));
                        $ndtfr_entero3       = array_diff($nd_fr_entero_floor3, array('',0));
                        $ndtfr_entero_floor3 = array_diff($nd_fr_ecoli_floor3, array('',0));
                        $ndtfr_salmo_floor3  = array_diff($nd_fr_salmo_floor3, array('',0));

                        $ndtfr_tpc_wall3    = array_diff($nd_fr_tpc_wall3, array('',0));
                        $ndtfr_entero_wall3 = array_diff($nd_fr_entero_wall3, array('',0));
                        $ndtfr_ecoli_wall3  = array_diff($nd_fr_ecoli_wall3, array('',0));
                        $ndtfr_salmo_wall3  = array_diff($nd_fr_salmo_wall3, array('',0));

                        $ndtcooling_tpc_floor3    = array_diff($nd_cooling_tpc_floor3, array('',0));
                        $ndtcooling_entero_floor3 = array_diff($nd_cooling_entero_floor3, array('',0));
                        $ndtcooling_ecoli_floor3  = array_diff($nd_cooling_ecoli_floor3, array('',0));
                        $ndtcooling_salmo_floor3  = array_diff($nd_cooling_salmo_floor3, array('',0));

                        $ndtcooling_tpc_wall3    = array_diff($nd_cooling_tpc_wall3, array('',0));
                        $ndtcooling_entero_wall3 = array_diff($nd_cooling_entero_wall3, array('',0));
                        $ndtcooling_ecoli_wall3  = array_diff($nd_cooling_ecoli_wall3, array('',0));
                        $ndtcooling_salmo_wall3  = array_diff($nd_cooling_salmo_wall3, array('',0));

                      }   

                       if(is_array($ndtfr_tpc_floor3) && count($ndtfr_tpc_floor3)> 0)
                          {
                            $Countfr_tpc_floor3 = count($ndtfr_tpc_floor3);
                            $Avgfr_tpc_floor3   = number_format((array_sum($ndtfr_tpc_floor3)) /(count($ndtfr_tpc_floor3)),2);
                            $Minfr_tpc_floor3   = min($ndtfr_tpc_floor3);
                            $Maxfr_tpc_floor3   = max($ndtfr_tpc_floor3);
                          
                            $fmeanfr_tpc_floor3    = array_sum($ndtfr_tpc_floor3) / count($ndtfr_tpc_floor3);
                            $fvariantfr_tpc_floor3 = 0.00;
                            $xsample1_1            = false;
                            $dt1                   = 0;$dt2 = 0;
                            foreach ($ndtfr_tpc_floor3 as $i){
                            $fvariantfr_tpc_floor3 += pow($i - $fmeanfr_tpc_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_tpc_floor3 /= ($xsample1_1 ? count($ndtfr_tpc_floor3)-1 : count($ndtfr_tpc_floor3));
                            $stdevfr_tpc_floor3     = number_format(sqrt($fvariantfr_tpc_floor3),2);

                          }else{

                            $Minfr_tpc_floor3      = '';
                            $Maxfr_tpc_floor3      = '';
                            $Avgfr_tpc_floor3      = '';
                            $Countfr_tpc_floor3    = '';
                            $totalfr_tpc_floor3    = '';
                            $stdevfr_tpc_floor3    = '';
                            $inspectfr_tpc_floor3  = '';
                            $outspectfr_tpc_floor3 = '';
                            $prsoutfr_tpc_floor3   = '';
                          }

                          if(is_array($ndtfr_entero3) && count($ndtfr_entero3)> 0)
                          {
                            $Countfr_entero3 = count($ndtfr_entero3);
                            $Avgfr_entero3   = number_format((array_sum($ndtfr_entero3)) /(count($ndtfr_entero3)),2);
                            $Minfr_entero3   = min($ndtfr_entero3);
                            $Maxfr_entero3   = max($ndtfr_entero3);
                          
                            $fmeanfr_entero3    = array_sum($ndtfr_entero3) / count($ndtfr_entero3);
                            $fvariantfr_entero3 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtfr_entero3 as $i){
                            $fvariantfr_entero3 += pow($i - $fmeanfr_entero3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_entero3 /= ($xsample1_1 ? count($ndtfr_entero3)-1 : count($ndtfr_entero3));
                            $stdevfr_entero3     = number_format(sqrt($fvariantfr_entero3),2);

                          }else{

                            $Minfr_entero3      = '';
                            $Maxfr_entero3      = '';
                            $Avgfr_entero3      = '';
                            $Countfr_entero3    = '';
                            $totalfr_entero3    = '';
                            $stdevfr_entero3    = '';
                            $inspectfr_entero3  = '';
                            $outspectfr_entero3 = '';
                            $prsoutfr_entero3   = '';
                          }

                          if(is_array($ndtfr_entero_floor3) && count($ndtfr_entero_floor3)> 0)
                          {
                            $Countfr_entero_floor3 = count($ndtfr_entero_floor3);
                            $Avgfr_entero_floor3   = number_format((array_sum($ndtfr_entero_floor3)) /(count($ndtfr_entero_floor3)),2);
                            $Minfr_entero_floor3   = min($ndtfr_entero_floor3);
                            $Maxfr_entero_floor3   = max($ndtfr_entero_floor3);
                          
                            $fmeanfr_entero_floor3    = array_sum($ndtfr_entero_floor3) / count($ndtfr_entero_floor3);
                            $fvariantfr_entero_floor3 = 0.00;
                            $xsample1_1               = false;
                            $dt1                      = 0;$dt2 = 0;
                            foreach ($ndtfr_entero_floor3 as $i){
                            $fvariantfr_entero_floor3 += pow($i - $fmeanfr_entero_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_entero_floor3 /= ($xsample1_1 ? count($ndtfr_entero_floor3)-1 : count($ndtfr_entero_floor3));
                            $stdevfr_entero_floor3     = number_format(sqrt($fvariantfr_entero_floor3),2);

                          }else{

                            $Minfr_entero_floor3      = '';
                            $Maxfr_entero_floor3      = '';
                            $Avgfr_entero_floor3      = '';
                            $Countfr_entero_floor3    = '';
                            $totalfr_entero_floor3    = '';
                            $stdevfr_entero_floor3    = '';
                            $inspectfr_entero_floor3  = '';
                            $outspectfr_entero_floor3 = '';
                            $prsoutfr_entero_floor3   = '';
                          }

                          if(is_array($ndtfr_salmo_floor3) && count($ndtfr_salmo_floor3)> 0)
                          {
                            $Countfr_salmo_floor3 = count($ndtfr_salmo_floor3);
                            $Avgfr_salmo_floor3   = number_format((array_sum($ndtfr_salmo_floor3)) /(count($ndtfr_salmo_floor3)),2);
                            $Minfr_salmo_floor3   = min($ndtfr_salmo_floor3);
                            $Maxfr_salmo_floor3   = max($ndtfr_salmo_floor3);
                          
                            $fmeanfr_salmo_floor3    = array_sum($ndtfr_salmo_floor3) / count($ndtfr_salmo_floor3);
                            $fvariantfr_salmo_floor3 = 0.00;
                            $xsample1_1              = false;
                            $dt1                     = 0;$dt2 = 0;
                            foreach ($ndtfr_salmo_floor3 as $i){
                            $fvariantfr_salmo_floor3 += pow($i - $fmeanfr_salmo_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_salmo_floor3 /= ($xsample1_1 ? count($ndtfr_salmo_floor3)-1 : count($ndtfr_salmo_floor3));
                            $stdevfr_salmo_floor3     = number_format(sqrt($fvariantfr_salmo_floor3),2);

                          }else{

                            $Minfr_salmo_floor3      = '';
                            $Maxfr_salmo_floor3      = '';
                            $Avgfr_salmo_floor3      = '';
                            $Countfr_salmo_floor3    = '';
                            $totalfr_salmo_floor3    = '';
                            $stdevfr_salmo_floor3    = '';
                            $inspectfr_salmo_floor3  = '';
                            $outspectfr_salmo_floor3 = '';
                            $prsoutfr_salmo_floor3   = '';
                          }

                          if(is_array($ndtfr_tpc_wall3) && count($ndtfr_tpc_wall3)> 0)
                          {
                            $Countfr_tpc_wall3 = count($ndtfr_tpc_wall3);
                            $Avgfr_tpc_wall3   = number_format((array_sum($ndtfr_tpc_wall3)) /(count($ndtfr_tpc_wall3)),2);
                            $Minfr_tpc_wall3   = min($ndtfr_tpc_wall3);
                            $Maxfr_tpc_wall3   = max($ndtfr_tpc_wall3);
                          
                            $fmeanfr_tpc_wall3    = array_sum($ndtfr_tpc_wall3) / count($ndtfr_tpc_wall3);
                            $fvariantfr_tpc_wall3 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtfr_tpc_wall3 as $i){
                            $fvariantfr_tpc_wall3 += pow($i - $fmeanfr_tpc_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_tpc_wall3 /= ($xsample1_1 ? count($ndtfr_tpc_wall3)-1 : count($ndtfr_tpc_wall3));
                            $stdevfr_tpc_wall3     = number_format(sqrt($fvariantfr_tpc_wall3),2);

                          }else{

                            $Minfr_tpc_wall3      = '';
                            $Maxfr_tpc_wall3      = '';
                            $Avgfr_tpc_wall3      = '';
                            $Countfr_tpc_wall3    = '';
                            $totalfr_tpc_wall3    = '';
                            $stdevfr_tpc_wall3    = '';
                            $inspectfr_tpc_wall3  = '';
                            $outspectfr_tpc_wall3 = '';
                            $prsoutfr_tpc_wall3   = '';
                          }

                          if(is_array($ndtfr_entero_wall3) && count($ndtfr_entero_wall3)> 0)
                          {
                            $Countfr_entero_wall3 = count($ndtfr_entero_wall3);
                            $Avgfr_entero_wall3   = number_format((array_sum($ndtfr_entero_wall3)) /(count($ndtfr_entero_wall3)),2);
                            $Minfr_entero_wall3   = min($ndtfr_entero_wall3);
                            $Maxfr_entero_wall3   = max($ndtfr_entero_wall3);
                          
                            $fmeanfr_entero_wall3    = array_sum($ndtfr_entero_wall3) / count($ndtfr_entero_wall3);
                            $fvariantfr_entero_wall3 = 0.00;
                            $xsample1_1              = false;
                            $dt1                     = 0;$dt2 = 0;
                            foreach ($ndtfr_entero_wall3 as $i){
                            $fvariantfr_entero_wall3 += pow($i - $fmeanfr_entero_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_entero_wall3 /= ($xsample1_1 ? count($ndtfr_entero_wall3)-1 : count($ndtfr_entero_wall3));
                            $stdevfr_entero_wall3     = number_format(sqrt($fvariantfr_entero_wall3),2);

                          }else{

                            $Minfr_entero_wall3      = '';
                            $Maxfr_entero_wall3      = '';
                            $Avgfr_entero_wall3      = '';
                            $Countfr_entero_wall3    = '';
                            $totalfr_entero_wall3    = '';
                            $stdevfr_entero_wall3    = '';
                            $inspectfr_entero_wall3  = '';
                            $outspectfr_entero_wall3 = '';
                            $prsoutfr_entero_wall3   = '';
                          }


                          if(is_array($ndtfr_entero_wall3) && count($ndtfr_entero_wall3)> 0)
                          {
                            $Countfr_entero_wall3 = count($ndtfr_entero_wall3);
                            $Avgfr_entero_wall3   = number_format((array_sum($ndtfr_entero_wall3)) /(count($ndtfr_entero_wall3)),2);
                            $Minfr_entero_wall3   = min($ndtfr_entero_wall3);
                            $Maxfr_entero_wall3   = max($ndtfr_entero_wall3);
                          
                            $fmeanfr_entero_wall3    = array_sum($ndtfr_entero_wall3) / count($ndtfr_entero_wall3);
                            $fvariantfr_entero_wall3 = 0.00;
                            $xsample1_1              = false;
                            $dt1                     = 0;$dt2 = 0;
                            foreach ($ndtfr_entero_wall3 as $i){
                            $fvariantfr_entero_wall3 += pow($i - $fmeanfr_entero_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_entero_wall3 /= ($xsample1_1 ? count($ndtfr_entero_wall3)-1 : count($ndtfr_entero_wall3));
                            $stdevfr_entero_wall3     = number_format(sqrt($fvariantfr_entero_wall3),2);

                          }else{

                            $Minfr_entero_wall3      = '';
                            $Maxfr_entero_wall3      = '';
                            $Avgfr_entero_wall3      = '';
                            $Countfr_entero_wall3    = '';
                            $totalfr_entero_wall3    = '';
                            $stdevfr_entero_wall3    = '';
                            $inspectfr_entero_wall3  = '';
                            $outspectfr_entero_wall3 = '';
                            $prsoutfr_entero_wall3   = '';
                          }

                           if(is_array($ndtfr_ecoli_wall3) && count($ndtfr_ecoli_wall3)> 0)
                          {
                            $Countfr_ecoli_wall3 = count($ndtfr_ecoli_wall3);
                            $Avgfr_ecoli_wall3   = number_format((array_sum($ndtfr_ecoli_wall3)) /(count($ndtfr_ecoli_wall3)),2);
                            $Minfr_ecoli_wall3   = min($ndtfr_ecoli_wall3);
                            $Maxfr_ecoli_wall3   = max($ndtfr_ecoli_wall3);
                          
                            $fmeanfr_ecoli_wall3    = array_sum($ndtfr_ecoli_wall3) / count($ndtfr_ecoli_wall3);
                            $fvariantfr_ecoli_wall3 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtfr_ecoli_wall3 as $i){
                            $fvariantfr_ecoli_wall3 += pow($i - $fmeanfr_ecoli_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_ecoli_wall3 /= ($xsample1_1 ? count($ndtfr_ecoli_wall3)-1 : count($ndtfr_ecoli_wall3));
                            $stdevfr_ecoli_wall3     = number_format(sqrt($fvariantfr_ecoli_wall3),2);

                          }else{

                            $Minfr_ecoli_wall3      = '';
                            $Maxfr_ecoli_wall3      = '';
                            $Avgfr_ecoli_wall3      = '';
                            $Countfr_ecoli_wall3    = '';
                            $totalfr_ecoli_wall3    = '';
                            $stdevfr_ecoli_wall3    = '';
                            $inspectfr_ecoli_wall3  = '';
                            $outspectfr_ecoli_wall3 = '';
                            $prsoutfr_ecoli_wall3   = '';
                          }

                           if(is_array($ndtfr_salmo_wall3) && count($ndtfr_salmo_wall3)> 0)
                          {
                            $Countfr_salmo_wall3 = count($ndtfr_salmo_wall3);
                            $Avgfr_salmo_wall3   = number_format((array_sum($ndtfr_salmo_wall3)) /(count($ndtfr_salmo_wall3)),2);
                            $Minfr_salmo_wall3   = min($ndtfr_salmo_wall3);
                            $Maxfr_salmo_wall3   = max($ndtfr_salmo_wall3);
                          
                            $fmeanfr_salmo_wall3    = array_sum($ndtfr_salmo_wall3) / count($ndtfr_salmo_wall3);
                            $fvariantfr_salmo_wall3 = 0.00;
                            $xsample1_1             = false;
                            $dt1                    = 0;$dt2 = 0;
                            foreach ($ndtfr_salmo_wall3 as $i){
                            $fvariantfr_salmo_wall3 += pow($i - $fmeanfr_salmo_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantfr_salmo_wall3 /= ($xsample1_1 ? count($ndtfr_salmo_wall3)-1 : count($ndtfr_salmo_wall3));
                            $stdevfr_salmo_wall3     = number_format(sqrt($fvariantfr_salmo_wall3),2);

                          }else{

                            $Minfr_salmo_wall3      = '';
                            $Maxfr_salmo_wall3      = '';
                            $Avgfr_salmo_wall3      = '';
                            $Countfr_salmo_wall3    = '';
                            $totalfr_salmo_wall3    = '';
                            $stdevfr_salmo_wall3    = '';
                            $inspectfr_salmo_wall3  = '';
                            $outspectfr_salmo_wall3 = '';
                            $prsoutfr_salmo_wall3   = '';
                          }

                           if(is_array($ndtcooling_tpc_floor3) && count($ndtcooling_tpc_floor3)> 0)
                          {
                            $Countcooling_tpc_floor3 = count($ndtcooling_tpc_floor3);
                            $Avgcooling_tpc_floor3   = number_format((array_sum($ndtcooling_tpc_floor3)) /(count($ndtcooling_tpc_floor3)),2);
                            $Mincooling_tpc_floor3   = min($ndtcooling_tpc_floor3);
                            $Maxcooling_tpc_floor3   = max($ndtcooling_tpc_floor3);
                          
                            $fmeancooling_tpc_floor3    = array_sum($ndtcooling_tpc_floor3) / count($ndtcooling_tpc_floor3);
                            $fvariantcooling_tpc_floor3 = 0.00;
                            $xsample1_1                 = false;
                            $dt1                        = 0;$dt2 = 0;
                            foreach ($ndtcooling_tpc_floor3 as $i){
                            $fvariantcooling_tpc_floor3 += pow($i - $fmeancooling_tpc_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_tpc_floor3 /= ($xsample1_1 ? count($ndtcooling_tpc_floor3)-1 : count($ndtcooling_tpc_floor3));
                            $stdevcooling_tpc_floor3     = number_format(sqrt($fvariantcooling_tpc_floor3),2);

                          }else{

                            $Mincooling_tpc_floor3      = '';
                            $Maxcooling_tpc_floor3      = '';
                            $Avgcooling_tpc_floor3      = '';
                            $Countcooling_tpc_floor3    = '';
                            $totalcooling_tpc_floor3    = '';
                            $stdevcooling_tpc_floor3    = '';
                            $inspectcooling_tpc_floor3  = '';
                            $outspectcooling_tpc_floor3 = '';
                            $prsoutcooling_tpc_floor3   = '';
                          }

                           if(is_array($ndtcooling_entero_floor3) && count($ndtcooling_entero_floor3)> 0)
                          {
                            $Countcooling_entero_floor3 = count($ndtcooling_entero_floor3);
                            $Avgcooling_entero_floor3   = number_format((array_sum($ndtcooling_entero_floor3)) /(count($ndtcooling_entero_floor3)),2);
                            $Mincooling_entero_floor3   = min($ndtcooling_entero_floor3);
                            $Maxcooling_entero_floor3   = max($ndtcooling_entero_floor3);
                          
                            $fmeancooling_entero_floor3    = array_sum($ndtcooling_entero_floor3) / count($ndtcooling_entero_floor3);
                            $fvariantcooling_entero_floor3 = 0.00;
                            $xsample1_1                    = false;
                            $dt1                           = 0;$dt2 = 0;
                            foreach ($ndtcooling_entero_floor3 as $i){
                            $fvariantcooling_entero_floor3 += pow($i - $fmeancooling_entero_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_entero_floor3 /= ($xsample1_1 ? count($ndtcooling_entero_floor3)-1 : count($ndtcooling_entero_floor3));
                            $stdevcooling_entero_floor3     = number_format(sqrt($fvariantcooling_entero_floor3),2);

                          }else{

                            $Mincooling_entero_floor3      = '';
                            $Maxcooling_entero_floor3      = '';
                            $Avgcooling_entero_floor3      = '';
                            $Countcooling_entero_floor3    = '';
                            $totalcooling_entero_floor3    = '';
                            $stdevcooling_entero_floor3    = '';
                            $inspectcooling_entero_floor3  = '';
                            $outspectcooling_entero_floor3 = '';
                            $prsoutcooling_entero_floor3   = '';
                          }
                            if(is_array($ndtcooling_ecoli_floor3) && count($ndtcooling_ecoli_floor3)> 0)
                          {
                            $Countcooling_ecoli_floor3 = count($ndtcooling_ecoli_floor3);
                            $Avgcooling_ecoli_floor3   = number_format((array_sum($ndtcooling_ecoli_floor3)) /(count($ndtcooling_ecoli_floor3)),2);
                            $Mincooling_ecoli_floor3   = min($ndtcooling_ecoli_floor3);
                            $Maxcooling_ecoli_floor3   = max($ndtcooling_ecoli_floor3);
                          
                            $fmeancooling_ecoli_floor3    = array_sum($ndtcooling_ecoli_floor3) / count($ndtcooling_ecoli_floor3);
                            $fvariantcooling_ecoli_floor3 = 0.00;
                            $xsample1_1                   = false;
                            $dt1                          = 0;$dt2 = 0;
                            foreach ($ndtcooling_ecoli_floor3 as $i){
                            $fvariantcooling_ecoli_floor3 += pow($i - $fmeancooling_ecoli_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_ecoli_floor3 /= ($xsample1_1 ? count($ndtcooling_ecoli_floor3)-1 : count($ndtcooling_ecoli_floor3));
                            $stdevcooling_ecoli_floor3     = number_format(sqrt($fvariantcooling_ecoli_floor3),2);

                          }else{

                            $Mincooling_ecoli_floor3      = '';
                            $Maxcooling_ecoli_floor3      = '';
                            $Avgcooling_ecoli_floor3      = '';
                            $Countcooling_ecoli_floor3    = '';
                            $totalcooling_ecoli_floor3    = '';
                            $stdevcooling_ecoli_floor3    = '';
                            $inspectcooling_ecoli_floor3  = '';
                            $outspectcooling_ecoli_floor3 = '';
                            $prsoutcooling_ecoli_floor3   = '';
                          }

                           if(is_array($ndtcooling_salmo_floor3) && count($ndtcooling_salmo_floor3)> 0)
                          {
                            $Countcooling_salmo_floor3 = count($ndtcooling_salmo_floor3);
                            $Avgcooling_salmo_floor3   = number_format((array_sum($ndtcooling_salmo_floor3)) /(count($ndtcooling_salmo_floor3)),2);
                            $Mincooling_salmo_floor3   = min($ndtcooling_salmo_floor3);
                            $Maxcooling_salmo_floor3   = max($ndtcooling_salmo_floor3);
                          
                            $fmeancooling_salmo_floor3    = array_sum($ndtcooling_salmo_floor3) / count($ndtcooling_salmo_floor3);
                            $fvariantcooling_salmo_floor3 = 0.00;
                            $xsample1_1                   = false;
                            $dt1                          = 0;$dt2 = 0;
                            foreach ($ndtcooling_salmo_floor3 as $i){
                            $fvariantcooling_salmo_floor3 += pow($i - $fmeancooling_salmo_floor3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_salmo_floor3 /= ($xsample1_1 ? count($ndtcooling_salmo_floor3)-1 : count($ndtcooling_salmo_floor3));
                            $stdevcooling_salmo_floor3     = number_format(sqrt($fvariantcooling_salmo_floor3),2);

                          }else{

                            $Mincooling_salmo_floor3      = '';
                            $Maxcooling_salmo_floor3      = '';
                            $Avgcooling_salmo_floor3      = '';
                            $Countcooling_salmo_floor3    = '';
                            $totalcooling_salmo_floor3    = '';
                            $stdevcooling_salmo_floor3    = '';
                            $inspectcooling_salmo_floor3  = '';
                            $outspectcooling_salmo_floor3 = '';
                            $prsoutcooling_salmo_floor3   = '';
                          }

                           if(is_array($ndtcooling_tpc_wall3) && count($ndtcooling_tpc_wall3)> 0)
                          {
                            $Countcooling_tpc_wall3 = count($ndtcooling_tpc_wall3);
                            $Avgcooling_tpc_wall3   = number_format((array_sum($ndtcooling_tpc_wall3)) /(count($ndtcooling_tpc_wall3)),2);
                            $Mincooling_tpc_wall3   = min($ndtcooling_tpc_wall3);
                            $Maxcooling_tpc_wall3   = max($ndtcooling_tpc_wall3);
                          
                            $fmeancooling_tpc_wall3    = array_sum($ndtcooling_tpc_wall3) / count($ndtcooling_tpc_wall3);
                            $fvariantcooling_tpc_wall3 = 0.00;
                            $xsample1_1                = false;
                            $dt1                       = 0;$dt2 = 0;
                            foreach ($ndtcooling_tpc_wall3 as $i){
                            $fvariantcooling_tpc_wall3 += pow($i - $fmeancooling_tpc_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_tpc_wall3 /= ($xsample1_1 ? count($ndtcooling_tpc_wall3)-1 : count($ndtcooling_tpc_wall3));
                            $stdevcooling_tpc_wall3     = number_format(sqrt($fvariantcooling_tpc_wall3),2);

                          }else{

                            $Mincooling_tpc_wall3      = '';
                            $Maxcooling_tpc_wall3      = '';
                            $Avgcooling_tpc_wall3      = '';
                            $Countcooling_tpc_wall3    = '';
                            $totalcooling_tpc_wall3    = '';
                            $stdevcooling_tpc_wall3    = '';
                            $inspectcooling_tpc_wall3  = '';
                            $outspectcooling_tpc_wall3 = '';
                            $prsoutcooling_tpc_wall3   = '';
                          }


                            if(is_array($ndtcooling_entero_wall3) && count($ndtcooling_entero_wall3)> 0)
                          {
                            $Countcooling_entero_wall3 = count($ndtcooling_entero_wall3);
                            $Avgcooling_entero_wall3   = number_format((array_sum($ndtcooling_entero_wall3)) /(count($ndtcooling_entero_wall3)),2);
                            $Mincooling_entero_wall3   = min($ndtcooling_entero_wall3);
                            $Maxcooling_entero_wall3   = max($ndtcooling_entero_wall3);
                          
                            $fmeancooling_entero_wall3    = array_sum($ndtcooling_entero_wall3) / count($ndtcooling_entero_wall3);
                            $fvariantcooling_entero_wall3 = 0.00;
                            $xsample1_1                   = false;
                            $dt1                          = 0;$dt2 = 0;
                            foreach ($ndtcooling_entero_wall3 as $i){
                            $fvariantcooling_entero_wall3 += pow($i - $fmeancooling_entero_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_entero_wall3 /= ($xsample1_1 ? count($ndtcooling_entero_wall3)-1 : count($ndtcooling_entero_wall3));
                            $stdevcooling_entero_wall3     = number_format(sqrt($fvariantcooling_entero_wall3),2);

                          }else{

                            $Mincooling_entero_wall3      = '';
                            $Maxcooling_entero_wall3      = '';
                            $Avgcooling_entero_wall3      = '';
                            $Countcooling_entero_wall3    = '';
                            $totalcooling_entero_wall3    = '';
                            $stdevcooling_entero_wall3    = '';
                            $inspectcooling_entero_wall3  = '';
                            $outspectcooling_entero_wall3 = '';
                            $prsoutcooling_entero_wall3   = '';
                          }

                            if(is_array($ndtcooling_ecoli_wall3) && count($ndtcooling_ecoli_wall3)> 0)
                          {
                            $Countcooling_ecoli_wall3 = count($ndtcooling_ecoli_wall3);
                            $Avgcooling_ecoli_wall3   = number_format((array_sum($ndtcooling_ecoli_wall3)) /(count($ndtcooling_ecoli_wall3)),2);
                            $Mincooling_ecoli_wall3   = min($ndtcooling_ecoli_wall3);
                            $Maxcooling_ecoli_wall3   = max($ndtcooling_ecoli_wall3);
                          
                            $fmeancooling_ecoli_wall3    = array_sum($ndtcooling_ecoli_wall3) / count($ndtcooling_ecoli_wall3);
                            $fvariantcooling_ecoli_wall3 = 0.00;
                            $xsample1_1                  = false;
                            $dt1                         = 0;$dt2 = 0;
                            foreach ($ndtcooling_ecoli_wall3 as $i){
                            $fvariantcooling_ecoli_wall3 += pow($i - $fmeancooling_ecoli_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_ecoli_wall3 /= ($xsample1_1 ? count($ndtcooling_ecoli_wall3)-1 : count($ndtcooling_ecoli_wall3));
                            $stdevcooling_ecoli_wall3     = number_format(sqrt($fvariantcooling_ecoli_wall3),2);

                          }else{

                            $Mincooling_ecoli_wall3      = '';
                            $Maxcooling_ecoli_wall3      = '';
                            $Avgcooling_ecoli_wall3      = '';
                            $Countcooling_ecoli_wall3    = '';
                            $totalcooling_ecoli_wall3    = '';
                            $stdevcooling_ecoli_wall3    = '';
                            $inspectcooling_ecoli_wall3  = '';
                            $outspectcooling_ecoli_wall3 = '';
                            $prsoutcooling_ecoli_wall3   = '';
                          }

                          if(is_array($ndtcooling_salmo_wall3) && count($ndtcooling_salmo_wall3)> 0)
                          {
                            $Countcooling_salmo_wall3 = count($ndtcooling_salmo_wall3);
                            $Avgcooling_salmo_wall3   = number_format((array_sum($ndtcooling_salmo_wall3)) /(count($ndtcooling_salmo_wall3)),2);
                            $Mincooling_salmo_wall3   = min($ndtcooling_salmo_wall3);
                            $Maxcooling_salmo_wall3   = max($ndtcooling_salmo_wall3);
                          
                            $fmeancooling_salmo_wall3    = array_sum($ndtcooling_salmo_wall3) / count($ndtcooling_salmo_wall3);
                            $fvariantcooling_salmo_wall3 = 0.00;
                            $xsample1_1                  = false;
                            $dt1                         = 0;$dt2 = 0;
                            foreach ($ndtcooling_salmo_wall3 as $i){
                            $fvariantcooling_salmo_wall3 += pow($i - $fmeancooling_salmo_wall3 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcooling_salmo_wall3 /= ($xsample1_1 ? count($ndtcooling_salmo_wall3)-1 : count($ndtcooling_salmo_wall3));
                            $stdevcooling_salmo_wall3     = number_format(sqrt($fvariantcooling_salmo_wall3),2);

                          }else{

                            $Mincooling_salmo_wall3      = '';
                            $Maxcooling_salmo_wall3      = '';
                            $Avgcooling_salmo_wall3      = '';
                            $Countcooling_salmo_wall3    = '';
                            $totalcooling_salmo_wall3    = '';
                            $stdevcooling_salmo_wall3    = '';
                            $inspectcooling_salmo_wall3  = '';
                            $outspectcooling_salmo_wall3 = '';
                            $prsoutcooling_salmo_wall3   = '';
                          }

                 $rowfoot0  = $rowCount6+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;
                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;

                                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 //$objPHPExcel2->mergeCells('A'.$rowfoot0.':AE'.$rowfoot0);
                 $objPHPExcel3->setSharedStyle($cellorange, 'A'.$rowfoot1.':R'.$rowfoot5);
                 $objPHPExcel3->setCellValue('A'.$rowfoot1,'Count ');                 
                 
                 $objPHPExcel3->setCellValue('B'.$rowfoot1,$Countfr_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot1,$Countfr_entero_floor3);
                 $objPHPExcel3->setCellValue('F'.$rowfoot1,$Countfr_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot1,$Countfr_entero_wall3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot1,$Countcooling_tpc_floor3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot1,$Countcooling_entero_floor3);
                 $objPHPExcel3->setCellValue('N'.$rowfoot1,$Countcooling_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot1,$Countcooling_entero_wall3); 


                 $objPHPExcel3->setSharedStyle($cellorange, 'A'.$rowfoot2.':R'.$rowfoot2);
                 $objPHPExcel3->setCellValue('A'.$rowfoot2,'Average ');                 
                 
                 $objPHPExcel3->setCellValue('B'.$rowfoot2,$Avgfr_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot2,$Avgfr_entero_floor3);
                 $objPHPExcel3->setCellValue('F'.$rowfoot2,$Avgfr_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot2,$Avgfr_entero_wall3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot2,$Avgcooling_tpc_floor3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot2,$Avgcooling_entero_floor3);
                 $objPHPExcel3->setCellValue('N'.$rowfoot2,$Avgcooling_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot2,$Avgcooling_entero_wall3); 

                  $objPHPExcel3->setSharedStyle($cellorange, 'A'.$rowfoot3.':R'.$rowfoot3);
                 $objPHPExcel3->setCellValue('A'.$rowfoot3,'Minimum ');                 
                 
                 $objPHPExcel3->setCellValue('B'.$rowfoot3,$Minfr_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot3,$Minfr_entero_floor3);
                 $objPHPExcel3->setCellValue('F'.$rowfoot3,$Minfr_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot3,$Minfr_entero_wall3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot3,$Mincooling_tpc_floor3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot3,$Mincooling_entero_floor3);
                 $objPHPExcel3->setCellValue('N'.$rowfoot3,$Mincooling_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot3,$Mincooling_entero_wall3); 

                  $objPHPExcel3->setSharedStyle($cellorange, 'A'.$rowfoot4.':R'.$rowfoot4);
                 $objPHPExcel3->setCellValue('A'.$rowfoot4,'Maximum ');                 
                 
                 $objPHPExcel3->setCellValue('B'.$rowfoot4,$Maxfr_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot4,$Maxfr_entero_floor3);
                 $objPHPExcel3->setCellValue('F'.$rowfoot4,$Maxfr_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot4,$Maxfr_entero_wall3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot4,$Maxcooling_tpc_floor3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot4,$Maxcooling_entero_floor3);
                 $objPHPExcel3->setCellValue('N'.$rowfoot4,$Maxcooling_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot4,$Maxcooling_entero_wall3);   

                 $objPHPExcel3->setSharedStyle($cellorange, 'A'.$rowfoot5.':R'.$rowfoot5);
                 $objPHPExcel3->setCellValue('A'.$rowfoot5,'Maximum ');                 
                 

                 $objPHPExcel3->setCellValue('B'.$rowfoot5,$stdevfr_tpc_floor3);
                 $objPHPExcel3->setCellValue('C'.$rowfoot5,$stdevfr_entero_floor3);
                 $objPHPExcel3->setCellValue('F'.$rowfoot5,$stdevfr_tpc_wall3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot5,$stdevfr_entero_wall3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot5,$stdevcooling_tpc_floor3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot5,$stdevcooling_entero_floor3);
                 $objPHPExcel3->setCellValue('N'.$rowfoot5,$stdevcooling_tpc_wall3);
                 $objPHPExcel3->setCellValue('O'.$rowfoot5,$stdevcooling_entero_wall3);  

                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowfoot6.':R'.$rowfoot12);
                 $objPHPExcel3->mergeCells('A'.$rowfoot6.':D'.$rowfoot6)->setCellValue('A'.$rowfoot6,'REPORTED BY: ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot6.':I'.$rowfoot6)->setCellValue('E'.$rowfoot6,'CHECKED  BY : ');
                 $objPHPExcel3->mergeCells('J'.$rowfoot6.':M'.$rowfoot6)->setCellValue('J'.$rowfoot6,'CONFIRMED BY : ');
                 $objPHPExcel3->mergeCells('N'.$rowfoot6.':R'.$rowfoot6)->setCellValue('N'.$rowfoot6,'ACKNOWLEDGED BY : ');

                 
                 $objPHPExcel3->mergeCells('A'.$rowfoot7.':D'.$rowfoot9);
                 $objPHPExcel3->mergeCells('E'.$rowfoot7.':I'.$rowfoot9);
                 $objPHPExcel3->mergeCells('J'.$rowfoot7.':M'.$rowfoot9);
                 $objPHPExcel3->mergeCells('N'.$rowfoot7.':R'.$rowfoot9);
                 $objPHPExcel3->setSharedStyle($cellorange1, 'A'.$rowfoot10.':R'.$rowfoot12); 

                 $objPHPExcel3->mergeCells('A'.$rowfoot10.':D'.$rowfoot10)->setCellValue('A'.$rowfoot10,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot10.':I'.$rowfoot10)->setCellValue('E'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('J'.$rowfoot10.':M'.$rowfoot10)->setCellValue('J'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('N'.$rowfoot10.':R'.$rowfoot10)->setCellValue('N'.$rowfoot10,'NAME : RISTINA YULIANI ');

                 $objPHPExcel3->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'POSITION : KS ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot11.':I'.$rowfoot11)->setCellValue('E'.$rowfoot11,'POSITION : AMGR QAD ');
                 $objPHPExcel3->mergeCells('J'.$rowfoot11.':M'.$rowfoot11)->setCellValue('J'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('N'.$rowfoot11.':R'.$rowfoot11)->setCellValue('N'.$rowfoot11,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel3->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('E'.$rowfoot12.':I'.$rowfoot12)->setCellValue('E'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('J'.$rowfoot12.':M'.$rowfoot12)->setCellValue('J'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('N'.$rowfoot12.':R'.$rowfoot12)->setCellValue('N'.$rowfoot12,'DATE : '.$tgl);
   
                }
                $objPHPExcel3->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'Mulai Berlaku :'.$frm_efect);
                $objPHPExcel3->mergeCells('Q'.$rowfoot13.':R'.$rowfoot13)->setCellValue('Q'.$rowfoot13,''.$frmnm);
                $objPHPExcel3->mergeCells('D'.$rowfoot13.':P'.$rowfoot13);



                 //##############view_rekap_swabbing_equipment####################

                $objDrawing4 = new PHPExcel_Worksheet_Drawing();
                $objDrawing4->setPath('assets/images/tlogopsg.png');            
                
                $objPHPExcel4 = $obj->createSheet(4);
                $objDrawing4->setCoordinates('A2');
                $objDrawing4->setWorksheet($objPHPExcel4);
                foreach(range('A','R') as $columnID){
                $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                 $thn     = substr($dtstart,0,4);
                 $blnfrom = substr($dtstart,5,2);
                 $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel4->mergeCells('A1:BF1');
                 $objPHPExcel4->mergeCells('A2:A5');
                 $objPHPExcel4->mergeCells('B2:BE5')->setCellValue('B2',$frmcop);
                 $objPHPExcel4->setCellValue('BF2','Tahun: '.$thn);
                 $objPHPExcel4->setCellValue('BF3','Bulan: '.$bln);
                 //$a=$objPHPExcel3->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel3->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel4->setCellValue('BF4','Hal: ');
                 $objPHPExcel4->mergeCells('B6:BF6')->setCellValue('B6',''.$frmjdl);
                 $objPHPExcel4->setCellValue('A6','JUDUL');
                             
                 $objPHPExcel4->mergeCells('A7:A7')->setCellValue('A7','Tanggal/ Shift');
                 $objPHPExcel4->mergeCells('B7:E7')->setCellValue('B7','Tri Blender*');  
                 $objPHPExcel4->mergeCells('F7:I7')->setCellValue('F7','Mixing Tank*');
                 $objPHPExcel4->mergeCells('J7:M7')->setCellValue('J7','Blending Tank 1*');
                 $objPHPExcel4->mergeCells('N7:Q7')->setCellValue('N7','Blending Tank 2*');              
                 $objPHPExcel4->mergeCells('R7:U7')->setCellValue('R7','Buffer Tank 1*');
                 $objPHPExcel4->mergeCells('V7:Y7')->setCellValue('V7','Chute Spray Dryer');
                 $objPHPExcel4->mergeCells('Z7:AC7')->setCellValue('Z7','Vibro Filter ');
                 $objPHPExcel4->mergeCells('AD7:AG7')->setCellValue('AD7','Screw Conveyor.1');
                 $objPHPExcel4->mergeCells('AH7:AK7')->setCellValue('AH7','Screw Conveyor.2');
                 $objPHPExcel4->mergeCells('AL7:AO7')->setCellValue('AL7','Outlet Vibro Fluidizer');
                 $objPHPExcel4->mergeCells('AP7:AS7')->setCellValue('AP7','Chute cyclone');
                 $objPHPExcel4->mergeCells('AT7:AW7')->setCellValue('AT7','Screw Feeder Enflex');
                 $objPHPExcel4->mergeCells('AX7:BA7')->setCellValue('AX7','Hopper Auger Filling');
                 $objPHPExcel4->mergeCells('BB7:BE7')->setCellValue('BB7','Cone Blender');
    
               

                 $objPHPExcel4->mergeCells('A8:A9')->setCellValue('A8','Spesification');
                 $objPHPExcel4->mergeCells('BF7:BF9')->setCellValue('BF7','Keterangan');

                 $objPHPExcel4->setCellValue('B8','TPC ');
                 $objPHPExcel4->setCellValue('C8','Entero');
                 $objPHPExcel4->setCellValue('D8','E.coli');
                 $objPHPExcel4->setCellValue('E8','Salmo');
                 
                 $objPHPExcel4->setCellValue('F8','TPC');
                 $objPHPExcel4->setCellValue('G8','Entero');
                 $objPHPExcel4->setCellValue('H8','E.Coli');
                 $objPHPExcel4->setCellValue('I8','Salmo');

                 $objPHPExcel4->setCellValue('J8','TPC');
                 $objPHPExcel4->setCellValue('K8','Enetero');
                 $objPHPExcel4->setCellValue('L8','E.Coli');
                 $objPHPExcel4->setCellValue('M8','Salmo');

                 $objPHPExcel4->setCellValue('N8','TPC');
                 $objPHPExcel4->setCellValue('O8','Enetero');
                 $objPHPExcel4->setCellValue('P8','E.coli');
                 $objPHPExcel4->setCellValue('Q8','Salmo');

                 $objPHPExcel4->setCellValue('R8','TPC');
                 $objPHPExcel4->setCellValue('S8','Entero');
                 $objPHPExcel4->setCellValue('T8','E.coli');
                 $objPHPExcel4->setCellValue('U8','Salmo');
                
                 $objPHPExcel4->setCellValue('V8','TPC');
                 $objPHPExcel4->setCellValue('W8','Entero');
                 $objPHPExcel4->setCellValue('X8','E.coli');
                 $objPHPExcel4->setCellValue('Y8','Salmo');

                 $objPHPExcel4->setCellValue('Z8','TPC');
                 $objPHPExcel4->setCellValue('AA8','Entero');
                 $objPHPExcel4->setCellValue('AB8','E.coli');
                 $objPHPExcel4->setCellValue('AC8','Salmo');

                 $objPHPExcel4->setCellValue('AD8','TPC');
                 $objPHPExcel4->setCellValue('AE8','Entero');
                 $objPHPExcel4->setCellValue('AF8','E.coli');
                 $objPHPExcel4->setCellValue('AG8','Salmo');

                 $objPHPExcel4->setCellValue('AH8','TPC');
                 $objPHPExcel4->setCellValue('AI8','Entero');
                 $objPHPExcel4->setCellValue('AJ8','E.coli');
                 $objPHPExcel4->setCellValue('AK8','Salmo');

                 $objPHPExcel4->setCellValue('AL8','TPC');
                 $objPHPExcel4->setCellValue('AM8','Entero');
                 $objPHPExcel4->setCellValue('AN8','E.coli');
                 $objPHPExcel4->setCellValue('AO8','Salmo');

                 $objPHPExcel4->setCellValue('AP8','TPC');
                 $objPHPExcel4->setCellValue('AQ8','Entero');
                 $objPHPExcel4->setCellValue('AR8','E.coli');
                 $objPHPExcel4->setCellValue('AS8','Salmo');

                 $objPHPExcel4->setCellValue('AT8','TPC');
                 $objPHPExcel4->setCellValue('AU8','Entero');
                 $objPHPExcel4->setCellValue('AV8','E.coli');
                 $objPHPExcel4->setCellValue('AW8','Salmo');

                 $objPHPExcel4->setCellValue('AX8','TPC');
                 $objPHPExcel4->setCellValue('AY8','Entero');
                 $objPHPExcel4->setCellValue('AZ8','E.coli');
                 $objPHPExcel4->setCellValue('BA8','Salmo');

                 $objPHPExcel4->setCellValue('BB8','TPC');
                 $objPHPExcel4->setCellValue('BC8','Entero');
                 $objPHPExcel4->setCellValue('BD8','E.coli');
                 $objPHPExcel4->setCellValue('BE8','Salmo');
               

                 $objPHPExcel4->setCellValue('B9','Max 250cfu/25cm');
                 $objPHPExcel4->setCellValue('C9','Max 20cfu/25cm');
                 $objPHPExcel4->setCellValue('D9','ABS /25cm');
                 $objPHPExcel4->setCellValue('E9','ABS /25cm');
                 $objPHPExcel4->setCellValue('F9','Max 250cfu/25cm');
                 $objPHPExcel4->setCellValue('G9','Max 20cfu/25cm');
                 $objPHPExcel4->setCellValue('H9','ABS /25cm');
                 $objPHPExcel4->setCellValue('I9','ABS /25cm');
                 $objPHPExcel4->setCellValue('J9','Max 250cfu/25cm');
                 $objPHPExcel4->setCellValue('K9','Max 20cfu/25cm');
                 $objPHPExcel4->setCellValue('L9','ABS /25cm');
                 $objPHPExcel4->setCellValue('M9','ABS /25cm');
                 $objPHPExcel4->setCellValue('N9','Max 250cfu/25cm');
                 $objPHPExcel4->setCellValue('O9','Max 20cfu/25cm');
                 $objPHPExcel4->setCellValue('P9','ABS /25cm');
                 $objPHPExcel4->setCellValue('Q9','ABS /25cm');
                 $objPHPExcel4->setCellValue('R9','Max 250cfu/25cm');
                 $objPHPExcel4->setCellValue('S9','Max 20cfu/25cm');
                 $objPHPExcel4->setCellValue('T9','ABS /25cm');
                 $objPHPExcel4->setCellValue('U9','ABS /25cm');

                 $objPHPExcel4->setCellValue('V9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('W9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('X9','ABS /400cm');
                 $objPHPExcel4->setCellValue('Y9','ABS /400cm');

                 $objPHPExcel4->setCellValue('Z9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AA9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AB9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AC9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AD9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AE9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AF9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AG9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AH9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AI9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AJ9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AK9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AL9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AM9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AN9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AO9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AP9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AQ9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AR9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AS9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AT9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AU9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AV9','ABS /400cm');
                 $objPHPExcel4->setCellValue('AW9','ABS /400cm');

                 $objPHPExcel4->setCellValue('AX9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('AY9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('AZ9','ABS /400cm');
                 $objPHPExcel4->setCellValue('BA9','ABS /400cm');

                 $objPHPExcel4->setCellValue('BB9','Max 2000cfu/400cm');
                 $objPHPExcel4->setCellValue('BC9','Max 150cfu/400cm');
                 $objPHPExcel4->setCellValue('BD9','ABS /400cm');
                 $objPHPExcel4->setCellValue('BE9','ABS /400cm');
                 $objPHPExcel4->setSharedStyle($headerStyle, 'A2:BF10');

                            $dttglStart  = $this->uri->segment(8);
                            $dttglFinish = $this->uri->segment(9);
                // $dtdetail3 =$this->$model->get_detail_bydate2($dttglStart,$dttglFinish);
                 if(isset($dtdetail4)){
                 $rowCount7 = 10;
                 $no        = 1;
               
                
                 foreach ($dtdetail4 as $row7){
                 $shift        = $row7->shift;
                 $tgl_sampling = $row7->tgl_sampling;
                 $tb_tpc       = $row7->tb_tpc;
                 $tb_entero    = $row7->tb_entero;
                 $tb_ecoli     = $row7->tb_ecoli;
                 $tb_salmo     = $row7->tb_salmo;


                 $mt_tpc    = $row7->mt_tpc;
                 $mt_entero = $row7->mt_entero;
                 $mt_ecoli  = $row7->mt_ecoli;
                 $mt_salmo  = $row7->mt_salmo;

                 $bt1_tpc    = $row7->bt1_tpc;
                 $bt1_entero = $row7->bt1_entero;
                 $bt1_ecoli  = $row7->bt1_ecoli;
                 $bt1_salmo  = $row7->bt1_salmo;
                 $bt2_tpc    = $row7->bt2_tpc;
                 $bt2_entero = $row7->bt2_entero;
                 $bt2_ecoli  = $row7->bt2_ecoli;
                 $bt2_salmo  = $row7->bt2_salmo;

                 $bft1_tpc    = $row7->bft1_tpc;
                 $bft1_entero = $row7->bft1_entero;
                 $bft1_ecoli  = $row7->bft1_ecoli;
                 $bft1_salmo  = $row7->bft1_salmo;

                 $csd_tpc    = $row7->csd_tpc;
                 $csd_entero = $row7->csd_entero;
                 $csd_ecoli  = $row7->csd_ecoli;
                 $csd_salmo  = $row7->csd_salmo;

                 $vf_tpc    = $row7->vf_tpc;
                 $vf_entero = $row7->vf_entero;
                 $vf_ecoli  = $row7->vf_ecoli;
                 $vf_salmo  = $row7->vf_salmo;

                 $sc2_tpc    = $row7->sc2_tpc;
                 $sc2_entero = $row7->sc2_entero;
                 $sc2_ecoli  = $row7->sc2_ecoli;
                 $sc2_salmo  = $row7->sc2_salmo;

                 $sc1_tpc    = $row7->sc1_tpc;
                 $sc1_entero = $row7->sc1_entero;
                 $sc1_ecoli  = $row7->sc1_ecoli;
                 $sc1_salmo  = $row7->sc1_salmo;

                 $ovf_tpc    = $row7->ovf_tpc;
                 $ovf_entero = $row7->ovf_entero;
                 $ovf_ecoli  = $row7->ovf_ecoli;
                 $ovf_salmo  = $row7->ovf_salmo;

                 $cc_tpc    = $row7->cc_tpc;
                 $cc_entero = $row7->cc_entero;
                 $cc_ecoli  = $row7->cc_ecoli;
                 $cc_salmo  = $row7->cc_salmo;

                 $sfe_tpc    = $row7->sfe_tpc;
                 $sfe_entero = $row7->sfe_entero;
                 $sfe_ecoli  = $row7->sfe_ecoli;
                 $sfe_salmo  = $row7->sfe_salmo;

                 $haf_tpc    = $row7->haf_tpc;
                 $haf_entero = $row7->haf_entero;
                 $haf_ecoli  = $row7->haf_ecoli;
                 $haf_salmo  = $row7->haf_salmo;

                 $cb_tpc    = $row7->cb_tpc;
                 $cb_entero = $row7->cb_entero;
                 $cb_ecoli  = $row7->cb_ecoli;
                 $cb_salmo  = $row7->cb_salmo;

                 $remarks = $row7->remarks;
                
            
                 $rowCount7++;
                 $objPHPExcel4->setCellValue('A'.$rowCount7,$tgl_sampling.'/'.$shift);
                 $objPHPExcel4->setCellValue('B'.$rowCount7,$tb_tpc);
                 $objPHPExcel4->setCellValue('C'.$rowCount7,$tb_entero);
                 $objPHPExcel4->setCellValue('D'.$rowCount7,$tb_ecoli);
                 $objPHPExcel4->setCellValue('E'.$rowCount7,$tb_salmo);
                 $objPHPExcel4->setCellValue('F'.$rowCount7,$mt_tpc);

                 $objPHPExcel4->setCellValue('G'.$rowCount7,$mt_entero);
                 $objPHPExcel4->setCellValue('H'.$rowCount7,$mt_ecoli);
                 $objPHPExcel4->setCellValue('I'.$rowCount7,$mt_salmo);

                 $objPHPExcel4->setCellValue('J'.$rowCount7,$bt1_tpc);                 
                 $objPHPExcel4->setCellValue('K'.$rowCount7,$bt1_entero);
                 $objPHPExcel4->setCellValue('L'.$rowCount7,$bt1_ecoli);
                 $objPHPExcel4->setCellValue('M'.$rowCount7,$bt1_salmo);

                 $objPHPExcel4->setCellValue('N'.$rowCount7,$bt2_tpc);
                 $objPHPExcel4->setCellValue('O'.$rowCount7,$bt2_entero);                 
                 $objPHPExcel4->setCellValue('P'.$rowCount7,$bt2_ecoli);
                 $objPHPExcel4->setCellValue('Q'.$rowCount7,$bt2_salmo); 

                 $objPHPExcel4->setCellValue('R'.$rowCount7,$bft1_tpc);
                 $objPHPExcel4->setCellValue('S'.$rowCount7,$bft1_entero);                 
                 $objPHPExcel4->setCellValue('T'.$rowCount7,$bft1_ecoli);
                 $objPHPExcel4->setCellValue('U'.$rowCount7,$bft1_salmo); 

                 $objPHPExcel4->setCellValue('V'.$rowCount7,$csd_tpc);
                 $objPHPExcel4->setCellValue('W'.$rowCount7,$csd_entero);                 
                 $objPHPExcel4->setCellValue('X'.$rowCount7,$csd_ecoli);
                 $objPHPExcel4->setCellValue('Y'.$rowCount7,$csd_salmo); 


                 $objPHPExcel4->setCellValue('Z'.$rowCount7,$vf_tpc);
                 $objPHPExcel4->setCellValue('AA'.$rowCount7,$vf_entero);                 
                 $objPHPExcel4->setCellValue('AB'.$rowCount7,$vf_ecoli);
                 $objPHPExcel4->setCellValue('AC'.$rowCount7,$vf_salmo);

                 $objPHPExcel4->setCellValue('AD'.$rowCount7,$sc1_tpc);
                 $objPHPExcel4->setCellValue('AE'.$rowCount7,$sc1_entero);                 
                 $objPHPExcel4->setCellValue('AF'.$rowCount7,$sc1_ecoli);
                 $objPHPExcel4->setCellValue('AG'.$rowCount7,$sc1_salmo);

                 $objPHPExcel4->setCellValue('AH'.$rowCount7,$sc2_tpc);
                 $objPHPExcel4->setCellValue('AI'.$rowCount7,$sc2_entero);                 
                 $objPHPExcel4->setCellValue('AJ'.$rowCount7,$sc2_ecoli);
                 $objPHPExcel4->setCellValue('AK'.$rowCount7,$sc2_salmo);

                 $objPHPExcel4->setCellValue('AL'.$rowCount7,$ovf_tpc);
                 $objPHPExcel4->setCellValue('AM'.$rowCount7,$ovf_entero);                 
                 $objPHPExcel4->setCellValue('AN'.$rowCount7,$ovf_ecoli);
                 $objPHPExcel4->setCellValue('AO'.$rowCount7,$ovf_salmo);

                 $objPHPExcel4->setCellValue('AP'.$rowCount7,$cc_tpc);
                 $objPHPExcel4->setCellValue('AQ'.$rowCount7,$cc_entero);                 
                 $objPHPExcel4->setCellValue('AR'.$rowCount7,$cc_ecoli);
                 $objPHPExcel4->setCellValue('AS'.$rowCount7,$cc_salmo);

                 $objPHPExcel4->setCellValue('AT'.$rowCount7,$sfe_tpc);
                 $objPHPExcel4->setCellValue('AU'.$rowCount7,$sfe_entero);                 
                 $objPHPExcel4->setCellValue('AV'.$rowCount7,$sfe_ecoli);
                 $objPHPExcel4->setCellValue('AW'.$rowCount7,$sfe_salmo);

                 $objPHPExcel4->setCellValue('AX'.$rowCount7,$haf_tpc);
                 $objPHPExcel4->setCellValue('AY'.$rowCount7,$haf_entero);                 
                 $objPHPExcel4->setCellValue('AZ'.$rowCount7,$haf_ecoli);
                 $objPHPExcel4->setCellValue('BA'.$rowCount7,$haf_salmo);

                 $objPHPExcel4->setCellValue('BB'.$rowCount7,$cb_tpc);
                 $objPHPExcel4->setCellValue('BC'.$rowCount7,$cb_entero);                 
                 $objPHPExcel4->setCellValue('BD'.$rowCount7,$cb_ecoli);
                 $objPHPExcel4->setCellValue('BE'.$rowCount7,$cb_salmo);
                 $objPHPExcel4->setCellValue('BF'.$rowCount7,$remarks);
                 $no++;                
                 $objPHPExcel4->setSharedStyle($bodyStyle, 'A'.$rowCount7.':BF'.$rowCount7);
                  }
               } 
           
      
               $dttglStart  = $this->uri->segment(8);
               $dttglFinish = $this->uri->segment(9);
               
                        if(isset($dtdetail4)){
                        foreach($dtdetail4 as $row7){                
                        $nd_tb_tpc7   [] = $row7->tb_tpc;
                        $nd_tb_entero7[] = $row7->tb_entero;
                        $nd_mt_tpc7   [] = $row7->mt_tpc;
                        $nd_mt_entero7[] = $row7->mt_entero;

                        $nd_bt1_tpc7    [] = $row7->bt1_tpc;
                        $nd_bt1_entero7 [] = $row7->bt1_entero;
                        $nd_bt2_tpc7    [] = $row7->bt2_tpc;
                        $nd_bt2_entero7 [] = $row7->bt2_entero;
                        $nd_bft1_tpc7   [] = $row7->bft1_tpc;
                        $nd_bft1_entero7[] = $row7->bft1_entero;
                        $nd_csd_tpc7    [] = $row7->csd_tpc;
                        $nd_csd_entero7 [] = $row7->csd_entero;

                        $nd_vf_tpc7    [] = $row7->vf_tpc;
                        $nd_vf_entero7 [] = $row7->vf_entero;
                        $nd_sc1_tpc7   [] = $row7->sc1_tpc;
                        $nd_sc1_entero7[] = $row7->sc1_entero;

                        $nd_sc2_tpc7   [] = $row7->sc2_tpc;
                        $nd_sc2_entero7[] = $row7->sc2_entero;

                        $nd_ovf_tpc7   [] = $row7->ovf_tpc;
                        $nd_ovf_entero7[] = $row7->ovf_entero;
                       
                        $nd_cc_tpc7   [] = $row7->cc_tpc;
                        $nd_cc_entero7[] = $row7->cc_entero;
                       
                        $nd_sfe_tpc7   [] = $row7->sfe_tpc;
                        $nd_sfe_entero7[] = $row7->sfe_entero;

                        $nd_haf_tpc7   [] = $row7->haf_tpc;
                        $nd_haf_entero7[] = $row7->haf_entero;
                        $nd_cb_tpc7    [] = $row7->cb_tpc;
                        $nd_cb_entero7 [] = $row7->cb_entero;

                       
                        $ndttb_tpc7    = array_diff($nd_tb_tpc7, array('',0));
                        $ndttb_entero7 = array_diff($nd_tb_entero7, array('',0));
                        $ndtmt_tpc7    = array_diff($nd_mt_tpc7, array('',0));
                        $ndtmt_entero7 = array_diff($nd_mt_entero7, array('',0));

                        $ndtbt1_tpc7    = array_diff($nd_bt1_tpc7, array('',0));
                        $ndtbt1_entero7 = array_diff($nd_bt1_entero7, array('',0));
                        $ndtbt2_tpc7    = array_diff($nd_bt2_tpc7, array('',0));
                        $ndtbt2_entero7 = array_diff($nd_bt2_entero7, array('',0));

                        $ndtbft1_tpc7    = array_diff($nd_bft1_tpc7, array('',0));
                        $ndtbft1_entero7 = array_diff($nd_bft1_entero7, array('',0));

                        $ndtcsd_tpc7    = array_diff($nd_csd_tpc7, array('',0));
                        $ndtcsd_entero7 = array_diff($nd_csd_entero7, array('',0));
                       
                        $ndtvf_tpc7    = array_diff($nd_vf_tpc7, array('',0));
                        $ndtvf_entero7 = array_diff($nd_vf_entero7, array('',0));
                       
                        $ndtsc1_tpc7    = array_diff($nd_sc1_tpc7, array('',0));
                        $ndtsc1_entero7 = array_diff($nd_sc1_entero7, array('',0));
                       
                        $ndtsc2_tpc7    = array_diff($nd_sc2_tpc7, array('',0));
                        $ndtsc2_entero7 = array_diff($nd_sc2_entero7, array('',0));
                       
                        $ndtovf_tpc7    = array_diff($nd_ovf_tpc7, array('',0));
                        $ndtovf_entero7 = array_diff($nd_ovf_entero7, array('',0));

                        $ndtcc_tpc7    = array_diff($nd_cc_tpc7, array('',0));
                        $ndtcc_entero7 = array_diff($nd_cc_entero7, array('',0));

                        $ndtsfe_tpc7    = array_diff($nd_sfe_tpc7, array('',0));
                        $ndtsfe_entero7 = array_diff($nd_sfe_entero7, array('',0));
                       
                        
                        $ndthaf_tpc7    = array_diff($nd_haf_tpc7, array('',0));
                        $ndthaf_entero7 = array_diff($nd_haf_entero7, array('',0));

                        $ndtcb_tpc7    = array_diff($nd_cb_tpc7, array('',0));
                        $ndtcb_entero7 = array_diff($nd_cb_entero7, array('',0));

                      }  

                       if(is_array($ndttb_tpc7) && count($ndttb_tpc7)> 0)
                          {
                            $Counttb_tpc7 = count($ndttb_tpc7);
                            $Avgtb_tpc7   = number_format((array_sum($ndttb_tpc7)) /(count($ndttb_tpc7)),2);
                            $Mintb_tpc7   = min($ndttb_tpc7);
                            $Maxtb_tpc7   = max($ndttb_tpc7);
                          
                            $fmeantb_tpc7    = array_sum($ndttb_tpc7) / count($ndttb_tpc7);
                            $fvarianttb_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndttb_tpc7 as $i){
                            $fvarianttb_tpc7 += pow($i - $fmeantb_tpc7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianttb_tpc7 /= ($xsample1_1 ? count($ndttb_tpc7)-1 : count($ndttb_tpc7));
                            $stdevtb_tpc7     = number_format(sqrt($fvarianttb_tpc7),2);

                          }else{

                            $Mintb_tpc7      = '';
                            $Maxtb_tpc7      = '';
                            $Avgtb_tpc7      = '';
                            $Counttb_tpc7    = '';
                            $totaltb_tpc7    = '';
                            $stdevtb_tpc7    = '';
                            $inspecttb_tpc7  = '';
                            $outspecttb_tpc7 = '';
                            $prsouttb_tpc7   = '';
                          }


                          if(is_array($ndttb_tpc7) && count($ndttb_tpc7)> 0)
                          {
                            $Counttb_tpc7 = count($ndttb_tpc7);
                            $Avgtb_tpc7   = number_format((array_sum($ndttb_tpc7)) /(count($ndttb_tpc7)),2);
                            $Mintb_tpc7   = min($ndttb_tpc7);
                            $Maxtb_tpc7   = max($ndttb_tpc7);
                          
                            $fmeantb_tpc7    = array_sum($ndttb_tpc7) / count($ndttb_tpc7);
                            $fvarianttb_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndttb_tpc7 as $i){
                            $fvarianttb_tpc7 += pow($i - $fmeantb_tpc7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianttb_tpc7 /= ($xsample1_1 ? count($ndttb_tpc7)-1 : count($ndttb_tpc7));
                            $stdevtb_tpc7     = number_format(sqrt($fvarianttb_tpc7),2);

                          }else{

                            $Mintb_tpc7      = '';
                            $Maxtb_tpc7      = '';
                            $Avgtb_tpc7      = '';
                            $Counttb_tpc7    = '';
                            $totaltb_tpc7    = '';
                            $stdevtb_tpc7    = '';
                            $inspecttb_tpc7  = '';
                            $outspecttb_tpc7 = '';
                            $prsouttb_tpc7   = '';
                          }

                            if(is_array($ndttb_entero7) && count($ndttb_entero7)> 0)
                          {
                            $Counttb_entero7 = count($ndttb_entero7);
                            $Avgtb_entero7   = number_format((array_sum($ndttb_entero7)) /(count($ndttb_entero7)),2);
                            $Mintb_entero7   = min($ndttb_entero7);
                            $Maxtb_entero7   = max($ndttb_entero7);
                          
                            $fmeantb_entero7    = array_sum($ndttb_entero7) / count($ndttb_entero7);
                            $fvarianttb_entero7 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndttb_entero7 as $i){
                            $fvarianttb_entero7 += pow($i - $fmeantb_entero7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianttb_entero7 /= ($xsample1_1 ? count($ndttb_entero7)-1 : count($ndttb_entero7));
                            $stdevtb_entero7     = number_format(sqrt($fvarianttb_entero7),2);

                          }else{

                            $Mintb_entero7      = '';
                            $Maxtb_entero7      = '';
                            $Avgtb_entero7      = '';
                            $Counttb_entero7    = '';
                            $totaltb_entero7    = '';
                            $stdevtb_entero7    = '';
                            $inspecttb_entero7  = '';
                            $outspecttb_entero7 = '';
                            $prsouttb_entero7   = '';
                          }

                           if(is_array($ndtmt_tpc7) && count($ndtmt_tpc7)> 0)
                          {
                            $Countmt_tpc7 = count($ndtmt_tpc7);
                            $Avgmt_tpc7   = number_format((array_sum($ndtmt_tpc7)) /(count($ndtmt_tpc7)),2);
                            $Minmt_tpc7   = min($ndtmt_tpc7);
                            $Maxmt_tpc7   = max($ndtmt_tpc7);
                          
                            $fmeanmt_tpc7    = array_sum($ndtmt_tpc7) / count($ndtmt_tpc7);
                            $fvariantmt_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndtmt_tpc7 as $i){
                            $fvariantmt_tpc7 += pow($i - $fmeanmt_tpc7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantmt_tpc7 /= ($xsample1_1 ? count($ndtmt_tpc7)-1 : count($ndtmt_tpc7));
                            $stdevmt_tpc7     = number_format(sqrt($fvariantmt_tpc7),2);

                          }else{

                            $Minmt_tpc7      = '';
                            $Maxmt_tpc7      = '';
                            $Avgmt_tpc7      = '';
                            $Countmt_tpc7    = '';
                            $totalmt_tpc7    = '';
                            $stdevmt_tpc7    = '';
                            $inspectmt_tpc7  = '';
                            $outspectmt_tpc7 = '';
                            $prsoutmt_tpc7   = '';
                          }
                           if(is_array($ndtmt_entero7) && count($ndtmt_entero7)> 0)
                          {
                            $Countmt_entero7 = count($ndtmt_entero7);
                            $Avgmt_entero7   = number_format((array_sum($ndtmt_entero7)) /(count($ndtmt_entero7)),2);
                            $Minmt_entero7   = min($ndtmt_entero7);
                            $Maxmt_entero7   = max($ndtmt_entero7);
                          
                            $fmeanmt_entero7    = array_sum($ndtmt_entero7) / count($ndtmt_entero7);
                            $fvariantmt_entero7 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtmt_entero7 as $i){
                            $fvariantmt_entero7 += pow($i - $fmeanmt_entero7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantmt_entero7 /= ($xsample1_1 ? count($ndtmt_entero7)-1 : count($ndtmt_entero7));
                            $stdevmt_entero7     = number_format(sqrt($fvariantmt_entero7),2);

                          }else{

                            $Minmt_entero7      = '';
                            $Maxmt_entero7      = '';
                            $Avgmt_entero7      = '';
                            $Countmt_entero7    = '';
                            $totalmt_entero7    = '';
                            $stdevmt_entero7    = '';
                            $inspectmt_entero7  = '';
                            $outspectmt_entero7 = '';
                            $prsoutmt_entero7   = '';
                          }

                           if(is_array($ndtbt1_tpc7) && count($ndtbt1_tpc7)> 0)
                          {
                            $Countbt1_tpc7 = count($ndtbt1_tpc7);
                            $Avgbt1_tpc7   = number_format((array_sum($ndtbt1_tpc7)) /(count($ndtbt1_tpc7)),2);
                            $Minbt1_tpc7   = min($ndtbt1_tpc7);
                            $Maxbt1_tpc7   = max($ndtbt1_tpc7);
                          
                            $fmeanbt1_tpc7    = array_sum($ndtbt1_tpc7) / count($ndtbt1_tpc7);
                            $fvariantbt1_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtbt1_tpc7 as $i){
                            $fvariantbt1_tpc7 += pow($i - $fmeanbt1_tpc7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbt1_tpc7 /= ($xsample1_1 ? count($ndtbt1_tpc7)-1 : count($ndtbt1_tpc7));
                            $stdevbt1_tpc7     = number_format(sqrt($fvariantbt1_tpc7),2);

                          }else{

                            $Countbt1_tpc7    = '';
                            $Maxbt1_tpc7      = '';
                            $Avgbt1_tpc7      = '';
                            $Countbt1_tpc7    = '';
                            $totalbt1_tpc7    = '';
                            $stdevbt1_tpc7    = '';
                            $inspectbt1_tpc7  = '';
                            $outspectbt1_tpc7 = '';
                            $prsoutbt1_tpc7   = '';
                          }


                           if(is_array($ndtbt1_entero7) && count($ndtbt1_entero7)> 0)
                          {
                            $Countbt1_entero7 = count($ndtbt1_entero7);
                            $Avgbt1_entero7   = number_format((array_sum($ndtbt1_entero7)) /(count($ndtbt1_entero7)),2);
                            $Minbt1_entero7   = min($ndtbt1_entero7);
                            $Maxbt1_entero7   = max($ndtbt1_entero7);
                          
                            $fmeanbt1_entero7    = array_sum($ndtbt1_entero7) / count($ndtbt1_entero7);
                            $fvariantbt1_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtbt1_entero7 as $i){
                            $fvariantbt1_entero7 += pow($i - $fmeanbt1_entero7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbt1_entero7 /= ($xsample1_1 ? count($ndtbt1_entero7)-1 : count($ndtbt1_entero7));
                            $stdevbt1_entero7     = number_format(sqrt($fvariantbt1_entero7),2);

                          }else{

                            $Minbt1_entero7      = '';
                            $Maxbt1_entero7      = '';
                            $Avgbt1_entero7      = '';
                            $Countbt1_entero7    = '';
                            $totalbt1_entero7    = '';
                            $stdevbt1_entero7    = '';
                            $inspectbt1_entero7  = '';
                            $outspectbt1_entero7 = '';
                            $prsoutbt1_entero7   = '';
                          }

                          if(is_array($ndtbt2_tpc7) && count($ndtbt2_tpc7)> 0)
                          {
                            $Countbt2_tpc7 = count($ndtbt2_tpc7);
                            $Avgbt2_tpc7   = number_format((array_sum($ndtbt2_tpc7)) /(count($ndtbt2_tpc7)),2);
                            $Minbt2_tpc7   = min($ndtbt2_tpc7);
                            $Maxbt2_tpc7   = max($ndtbt2_tpc7);
                          
                            $fmeanbt2_tpc7    = array_sum($ndtbt2_tpc7) / count($ndtbt2_tpc7);
                            $fvariantbt2_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtbt2_tpc7 as $i){
                            $fvariantbt2_tpc7 += pow($i - $fmeanbt2_tpc7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbt2_tpc7 /= ($xsample1_1 ? count($ndtbt2_tpc7)-1 : count($ndtbt2_tpc7));
                            $stdevbt2_tpc7     = number_format(sqrt($fvariantbt2_tpc7),2);

                          }else{

                            $Minbt2_tpc7      = '';
                            $Maxbt2_tpc7      = '';
                            $Avgbt2_tpc7      = '';
                            $Countbt2_tpc7    = '';
                            $totalbt2_tpc7    = '';
                            $stdevbt2_tpc7    = '';
                            $inspectbt2_tpc7  = '';
                            $outspectbt2_tpc7 = '';
                            $prsoutbt2_tpc7   = '';
                          }

                          if(is_array($ndtbt2_entero7) && count($ndtbt2_entero7)> 0)
                          {
                            $Countbt2_entero7 = count($ndtbt2_entero7);
                            $Avgbt2_entero7   = number_format((array_sum($ndtbt2_entero7)) /(count($ndtbt2_entero7)),2);
                            $Minbt2_entero7   = min($ndtbt2_entero7);
                            $Maxbt2_entero7   = max($ndtbt2_entero7);
                          
                            $fmeanbt2_entero7    = array_sum($ndtbt2_entero7) / count($ndtbt2_entero7);
                            $fvariantbt2_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtbt2_entero7 as $i){
                            $fvariantbt2_entero7 += pow($i - $fmeanbt2_entero7 ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbt2_entero7 /= ($xsample1_1 ? count($ndtbt2_entero7)-1 : count($ndtbt2_entero7));
                            $stdevbt2_entero7     = number_format(sqrt($fvariantbt2_entero7),2);

                          }else{

                            $Minbt2_entero7      = '';
                            $Maxbt2_entero7      = '';
                            $Avgbt2_entero7      = '';
                            $Countbt2_entero7    = '';
                            $totalbt2_entero7    = '';
                            $stdevbt2_entero7    = '';
                            $inspectbt2_entero7  = '';
                            $outspectbt2_entero7 = '';
                            $prsoutbt2_entero7   = '';
                          }

                            if(is_array($ndtbft1_tpc7) && count($ndtbft1_tpc7)> 0)
                          {
                            $Countbft1_tpc7 = count($ndtbft1_tpc7);
                            $Avgbft1_tpc7   = number_format((array_sum($ndtbft1_tpc7)) /(count($ndtbft1_tpc7)),2);
                            $Minbft1_tpc7   = min($ndtbft1_tpc7);
                            $Maxbft1_tpc7   = max($ndtbft1_tpc7);
                          
                            $fmeanbft1_tpc7    = array_sum($ndtbft1_tpc7) / count($ndtbft1_tpc7);
                            $fvariantbft1_tpc7 = 0.00;
                            $xsample1_1        = false;
                            $dt1               = 0;$dt2 = 0;
                            foreach ($ndtbft1_tpc7 as $i){
                            $fvariantbft1_tpc7 += pow($i - $fmeanbft1_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbft1_tpc7 /= ($xsample1_1 ? count($ndtbft1_tpc7)-1 : count($ndtbft1_tpc7));
                            $stdevbft1_tpc7     = number_format(sqrt($fvariantbft1_tpc7 ),2);

                          }else{

                            $Minbft1_tpc7      = '';
                            $Maxbft1_tpc7      = '';
                            $Avgbft1_tpc7      = '';
                            $Countbft1_tpc7    = '';
                            $totalbft1_tpc7    = '';
                            $stdevbft1_tpc7    = '';
                            $inspectbft1_tpc7  = '';
                            $outspectbft1_tpc7 = '';
                            $prsoutbft1_tpc7   = '';
                          }


                             if(is_array($ndtbft1_entero7) && count($ndtbft1_entero7)> 0)
                          {
                            $Countbft1_entero7 = count($ndtbft1_entero7);
                            $Avgbft1_entero7   = number_format((array_sum($ndtbft1_entero7)) /(count($ndtbft1_entero7)),2);
                            $Minbft1_entero7   = min($ndtbft1_entero7);
                            $Maxbft1_entero7   = max($ndtbft1_entero7);
                          
                            $fmeanbft1_entero7    = array_sum($ndtbft1_entero7) / count($ndtbft1_entero7);
                            $fvariantbft1_entero7 = 0.00;
                            $xsample1_1           = false;
                            $dt1                  = 0;$dt2 = 0;
                            foreach ($ndtbft1_entero7 as $i){
                            $fvariantbft1_entero7 += pow($i - $fmeanbft1_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantbft1_entero7 /= ($xsample1_1 ? count($ndtbft1_entero7)-1 : count($ndtbft1_entero7));
                            $stdevbft1_entero7     = number_format(sqrt($fvariantbft1_entero7 ),2);

                          }else{

                            $Minbft1_entero7      = '';
                            $Maxbft1_entero7      = '';
                            $Avgbft1_entero7      = '';
                            $Countbft1_entero7    = '';
                            $totalbft1_entero7    = '';
                            $stdevbft1_entero7    = '';
                            $inspectbft1_entero7  = '';
                            $outspectbft1_entero7 = '';
                            $prsoutbft1_entero7   = '';
                          }


                             if(is_array($ndtcsd_tpc7) && count($ndtcsd_tpc7)> 0)
                          {
                            $Countcsd_tpc7 = count($ndtcsd_tpc7);
                            $Avgcsd_tpc7   = number_format((array_sum($ndtcsd_tpc7)) /(count($ndtcsd_tpc7)),2);
                            $Mincsd_tpc7   = min($ndtcsd_tpc7);
                            $Maxcsd_tpc7   = max($ndtcsd_tpc7);
                          
                            $fmeancsd_tpc7    = array_sum($ndtcsd_tpc7) / count($ndtcsd_tpc7);
                            $fvariantcsd_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtcsd_tpc7 as $i){
                            $fvariantcsd_tpc7 += pow($i - $fmeancsd_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcsd_tpc7 /= ($xsample1_1 ? count($ndtcsd_tpc7)-1 : count($ndtcsd_tpc7));
                            $stdevcsd_tpc7     = number_format(sqrt($fvariantcsd_tpc7 ),2);

                          }else{

                            $Mincsd_tpc7      = '';
                            $Maxcsd_tpc7      = '';
                            $Avgcsd_tpc7      = '';
                            $Countcsd_tpc7    = '';
                            $totalcsd_tpc7    = '';
                            $stdevcsd_tpc7    = '';
                            $inspectcsd_tpc7  = '';
                            $outspectcsd_tpc7 = '';
                            $prsoutcsd_tpc7   = '';
                          }


                             if(is_array($ndtcsd_entero7) && count($ndtcsd_entero7)> 0)
                          {
                            $Countcsd_entero7 = count($ndtcsd_entero7);
                            $Avgcsd_entero7   = number_format((array_sum($ndtcsd_entero7)) /(count($ndtcsd_entero7)),2);
                            $Mincsd_entero7   = min($ndtcsd_entero7);
                            $Maxcsd_entero7   = max($ndtcsd_entero7);
                          
                            $fmeancsd_entero7    = array_sum($ndtcsd_entero7) / count($ndtcsd_entero7);
                            $fvariantcsd_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtcsd_entero7 as $i){
                            $fvariantcsd_entero7 += pow($i - $fmeancsd_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcsd_entero7 /= ($xsample1_1 ? count($ndtcsd_entero7)-1 : count($ndtcsd_entero7));
                            $stdevcsd_entero7     = number_format(sqrt($fvariantcsd_entero7 ),2);

                          }else{

                            $Mincsd_entero7      = '';
                            $Maxcsd_entero7      = '';
                            $Avgcsd_entero7      = '';
                            $Countcsd_entero7    = '';
                            $totalcsd_entero7    = '';
                            $stdevcsd_entero7    = '';
                            $inspectcsd_entero7  = '';
                            $outspectcsd_entero7 = '';
                            $prsoutcsd_entero7   = '';
                          }

                          if(is_array($ndtvf_tpc7) && count($ndtvf_tpc7)> 0)
                          {
                            $Countvf_tpc7 = count($ndtvf_tpc7);
                            $Avgvf_tpc7   = number_format((array_sum($ndtvf_tpc7)) /(count($ndtvf_tpc7)),2);
                            $Minvf_tpc7   = min($ndtvf_tpc7);
                            $Maxvf_tpc7   = max($ndtvf_tpc7);
                          
                            $fmeanvf_tpc7    = array_sum($ndtvf_tpc7) / count($ndtvf_tpc7);
                            $fvariantvf_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndtvf_tpc7 as $i){
                            $fvariantvf_tpc7 += pow($i - $fmeanvf_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantvf_tpc7 /= ($xsample1_1 ? count($ndtvf_tpc7)-1 : count($ndtvf_tpc7));
                            $stdevvf_tpc7     = number_format(sqrt($fvariantvf_tpc7 ),2);

                          }else{

                            $Minvf_tpc7      = '';
                            $Maxvf_tpc7      = '';
                            $Avgvf_tpc7      = '';
                            $Countvf_tpc7    = '';
                            $totalvf_tpc7    = '';
                            $stdevvf_tpc7    = '';
                            $inspectvf_tpc7  = '';
                            $outspectvf_tpc7 = '';
                            $prsoutvf_tpc7   = '';
                          }

                                if(is_array($ndtvf_entero7) && count($ndtvf_entero7)> 0)
                          {
                            $Countvf_entero7 = count($ndtvf_entero7);
                            $Avgvf_entero7   = number_format((array_sum($ndtvf_entero7)) /(count($ndtvf_entero7)),2);
                            $Minvf_entero7   = min($ndtvf_entero7);
                            $Maxvf_entero7   = max($ndtvf_entero7);
                          
                            $fmeanvf_entero7    = array_sum($ndtvf_entero7) / count($ndtvf_entero7);
                            $fvariantvf_entero7 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtvf_entero7 as $i){
                            $fvariantvf_entero7 += pow($i - $fmeanvf_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantvf_entero7 /= ($xsample1_1 ? count($ndtvf_entero7)-1 : count($ndtvf_entero7));
                            $stdevvf_entero7     = number_format(sqrt($fvariantvf_entero7 ),2);

                          }else{

                            $Minvf_entero7      = '';
                            $Maxvf_entero7      = '';
                            $Avgvf_entero7      = '';
                            $Countvf_entero7    = '';
                            $totalvf_entero7    = '';
                            $stdevvf_entero7    = '';
                            $inspectvf_entero7  = '';
                            $outspectvf_entero7 = '';
                            $prsoutvf_entero7   = '';
                          }


                                if(is_array($ndtsc1_tpc7) && count($ndtsc1_tpc7)> 0)
                          {
                            $Countsc1_tpc7 = count($ndtsc1_tpc7);
                            $Avgsc1_tpc7   = number_format((array_sum($ndtsc1_tpc7)) /(count($ndtsc1_tpc7)),2);
                            $Minsc1_tpc7   = min($ndtsc1_tpc7);
                            $Maxsc1_tpc7   = max($ndtsc1_tpc7);
                          
                            $fmeansc1_tpc7    = array_sum($ndtsc1_tpc7) / count($ndtsc1_tpc7);
                            $fvariantsc1_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtsc1_tpc7 as $i){
                            $fvariantsc1_tpc7 += pow($i - $fmeansc1_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsc1_tpc7 /= ($xsample1_1 ? count($ndtsc1_tpc7)-1 : count($ndtsc1_tpc7));
                            $stdevsc1_tpc7     = number_format(sqrt($fvariantsc1_tpc7 ),2);

                          }else{

                            $Minsc1_tpc7      = '';
                            $Maxsc1_tpc7      = '';
                            $Avgsc1_tpc7      = '';
                            $Countsc1_tpc7    = '';
                            $totalsc1_tpc7    = '';
                            $stdevsc1_tpc7    = '';
                            $inspectsc1_tpc7  = '';
                            $outspectsc1_tpc7 = '';
                            $prsoutsc1_tpc7   = '';
                          }


                          if(is_array($ndtsc1_entero7) && count($ndtsc1_entero7)> 0)
                          {
                            $Countsc1_entero7 = count($ndtsc1_entero7);
                            $Avgsc1_entero7   = number_format((array_sum($ndtsc1_entero7)) /(count($ndtsc1_entero7)),2);
                            $Minsc1_entero7   = min($ndtsc1_entero7);
                            $Maxsc1_entero7   = max($ndtsc1_entero7);
                          
                            $fmeansc1_entero7    = array_sum($ndtsc1_entero7) / count($ndtsc1_entero7);
                            $fvariantsc1_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtsc1_entero7 as $i){
                            $fvariantsc1_entero7 += pow($i - $fmeansc1_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsc1_entero7 /= ($xsample1_1 ? count($ndtsc1_entero7)-1 : count($ndtsc1_entero7));
                            $stdevsc1_entero7     = number_format(sqrt($fvariantsc1_entero7 ),2);

                          }else{

                            $Minsc1_entero7      = '';
                            $Maxsc1_entero7      = '';
                            $Avgsc1_entero7      = '';
                            $Countsc1_entero7    = '';
                            $totalsc1_entero7    = '';
                            $stdevsc1_entero7    = '';
                            $inspectsc1_entero7  = '';
                            $outspectsc1_entero7 = '';
                            $prsoutsc1_entero7   = '';
                          }

                          if(is_array($ndtsc2_tpc7) && count($ndtsc2_tpc7)> 0)
                          {
                            $Countsc2_tpc7 = count($ndtsc2_tpc7);
                            $Avgsc2_tpc7   = number_format((array_sum($ndtsc2_tpc7)) /(count($ndtsc2_tpc7)),2);
                            $Minsc2_tpc7   = min($ndtsc2_tpc7);
                            $Maxsc2_tpc7   = max($ndtsc2_tpc7);
                          
                            $fmeansc2_tpc7    = array_sum($ndtsc2_tpc7) / count($ndtsc2_tpc7);
                            $fvariantsc2_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtsc2_tpc7 as $i){
                            $fvariantsc2_tpc7 += pow($i - $fmeansc2_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsc2_tpc7 /= ($xsample1_1 ? count($ndtsc2_tpc7)-1 : count($ndtsc2_tpc7));
                            $stdevsc2_tpc7     = number_format(sqrt($fvariantsc2_tpc7 ),2);

                          }else{

                            $Minsc2_tpc7      = '';
                            $Maxsc2_tpc7      = '';
                            $Avgsc2_tpc7      = '';
                            $Countsc2_tpc7    = '';
                            $totalsc2_tpc7    = '';
                            $stdevsc2_tpc7    = '';
                            $inspectsc2_tpc7  = '';
                            $outspectsc2_tpc7 = '';
                            $prsoutsc2_tpc7   = '';
                          }

                          if(is_array($ndtsc2_entero7) && count($ndtsc2_entero7)> 0)
                          {
                            $Countsc2_entero7 = count($ndtsc2_entero7);
                            $Avgsc2_entero7   = number_format((array_sum($ndtsc2_entero7)) /(count($ndtsc2_entero7)),2);
                            $Minsc2_entero7   = min($ndtsc2_entero7);
                            $Maxsc2_entero7   = max($ndtsc2_entero7);
                          
                            $fmeansc2_entero7    = array_sum($ndtsc2_entero7) / count($ndtsc2_entero7);
                            $fvariantsc2_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtsc2_entero7 as $i){
                            $fvariantsc2_entero7 += pow($i - $fmeansc2_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsc2_entero7 /= ($xsample1_1 ? count($ndtsc2_entero7)-1 : count($ndtsc2_entero7));
                            $stdevsc2_entero7     = number_format(sqrt($fvariantsc2_entero7 ),2);

                          }else{

                            $Minsc2_entero7      = '';
                            $Maxsc2_entero7      = '';
                            $Avgsc2_entero7      = '';
                            $Countsc2_entero7    = '';
                            $totalsc2_entero7    = '';
                            $stdevsc2_entero7    = '';
                            $inspectsc2_entero7  = '';
                            $outspectsc2_entero7 = '';
                            $prsoutsc2_entero7   = '';
                          }

                          if(is_array($ndtovf_tpc7) && count($ndtovf_tpc7)> 0)
                          {
                            $Countovf_tpc7 = count($ndtovf_tpc7);
                            $Avgovf_tpc7   = number_format((array_sum($ndtovf_tpc7)) /(count($ndtovf_tpc7)),2);
                            $Minovf_tpc7   = min($ndtovf_tpc7);
                            $Maxovf_tpc7   = max($ndtovf_tpc7);
                          
                            $fmeanovf_tpc7    = array_sum($ndtovf_tpc7) / count($ndtovf_tpc7);
                            $fvariantovf_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtovf_tpc7 as $i){
                            $fvariantovf_tpc7 += pow($i - $fmeanovf_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantovf_tpc7 /= ($xsample1_1 ? count($ndtovf_tpc7)-1 : count($ndtovf_tpc7));
                            $stdevovf_tpc7     = number_format(sqrt($fvariantovf_tpc7 ),2);

                          }else{

                            $Minovf_tpc7      = '';
                            $Maxovf_tpc7      = '';
                            $Avgovf_tpc7      = '';
                            $Countovf_tpc7    = '';
                            $totalovf_tpc7    = '';
                            $stdevovf_tpc7    = '';
                            $inspectovf_tpc7  = '';
                            $outspectovf_tpc7 = '';
                            $prsoutovf_tpc7   = '';
                          }


                          if(is_array($ndtovf_entero7) && count($ndtovf_entero7)> 0)
                          {
                            $Countovf_entero7 = count($ndtovf_entero7);
                            $Avgovf_entero7   = number_format((array_sum($ndtovf_entero7)) /(count($ndtovf_entero7)),2);
                            $Minovf_entero7   = min($ndtovf_entero7);
                            $Maxovf_entero7   = max($ndtovf_entero7);
                          
                            $fmeanovf_entero7    = array_sum($ndtovf_entero7) / count($ndtovf_entero7);
                            $fvariantovf_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtovf_entero7 as $i){
                            $fvariantovf_entero7 += pow($i - $fmeanovf_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantovf_entero7 /= ($xsample1_1 ? count($ndtovf_entero7)-1 : count($ndtovf_entero7));
                            $stdevovf_entero7     = number_format(sqrt($fvariantovf_entero7 ),2);

                          }else{

                            $Minovf_entero7      = '';
                            $Maxovf_entero7      = '';
                            $Avgovf_entero7      = '';
                            $Countovf_entero7    = '';
                            $totalovf_entero7    = '';
                            $stdevovf_entero7    = '';
                            $inspectovf_entero7  = '';
                            $outspectovf_entero7 = '';
                            $prsoutovf_entero7   = '';
                          }
                          if(is_array($ndtcc_tpc7) && count($ndtcc_tpc7)> 0)
                          {
                            $Countcc_tpc7 = count($ndtcc_tpc7);
                            $Avgcc_tpc7   = number_format((array_sum($ndtcc_tpc7)) /(count($ndtcc_tpc7)),2);
                            $Mincc_tpc7   = min($ndtcc_tpc7);
                            $Maxcc_tpc7   = max($ndtcc_tpc7);
                          
                            $fmeancc_tpc7    = array_sum($ndtcc_tpc7) / count($ndtcc_tpc7);
                            $fvariantcc_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($ndtcc_tpc7 as $i){
                            $fvariantcc_tpc7 += pow($i - $fmeancc_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcc_tpc7 /= ($xsample1_1 ? count($ndtcc_tpc7)-1 : count($ndtcc_tpc7));
                            $stdevcc_tpc7     = number_format(sqrt($fvariantcc_tpc7 ),2);

                          }else{

                            $Mincc_tpc7      = '';
                            $Maxcc_tpc7      = '';
                            $Avgcc_tpc7      = '';
                            $Countcc_tpc7    = '';
                            $totalcc_tpc7    = '';
                            $stdevcc_tpc7    = '';
                            $inspectcc_tpc7  = '';
                            $outspectcc_tpc7 = '';
                            $prsoutcc_tpc7   = '';
                          }

                            if(is_array($ndtcc_entero7) && count($ndtcc_entero7)> 0)
                          {
                            $Countcc_entero7 = count($ndtcc_entero7);
                            $Avgcc_entero7   = number_format((array_sum($ndtcc_entero7)) /(count($ndtcc_entero7)),2);
                            $Mincc_entero7   = min($ndtcc_entero7);
                            $Maxcc_entero7   = max($ndtcc_entero7);
                          
                            $fmeancc_entero7    = array_sum($ndtcc_entero7) / count($ndtcc_entero7);
                            $fvariantcc_entero7 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt2 = 0;
                            foreach ($ndtcc_entero7 as $i){
                            $fvariantcc_entero7 += pow($i - $fmeancc_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcc_entero7 /= ($xsample1_1 ? count($ndtcc_entero7)-1 : count($ndtcc_entero7));
                            $stdevcc_entero7     = number_format(sqrt($fvariantcc_entero7 ),2);

                          }else{

                            $Mincc_entero7      = '';
                            $Maxcc_entero7      = '';
                            $Avgcc_entero7      = '';
                            $Countcc_entero7    = '';
                            $totalcc_entero7    = '';
                            $stdevcc_entero7    = '';
                            $inspectcc_entero7  = '';
                            $outspectcc_entero7 = '';
                            $prsoutcc_entero7   = '';
                          }

                            if(is_array($ndtsfe_tpc7) && count($ndtsfe_tpc7)> 0)
                          {
                            $Countsfe_tpc7 = count($ndtsfe_tpc7);
                            $Avgsfe_tpc7   = number_format((array_sum($ndtsfe_tpc7)) /(count($ndtsfe_tpc7)),2);
                            $Minsfe_tpc7   = min($ndtsfe_tpc7);
                            $Maxsfe_tpc7   = max($ndtsfe_tpc7);
                          
                            $fmeansfe_tpc7    = array_sum($ndtsfe_tpc7) / count($ndtsfe_tpc7);
                            $fvariantsfe_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndtsfe_tpc7 as $i){
                            $fvariantsfe_tpc7 += pow($i - $fmeansfe_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsfe_tpc7 /= ($xsample1_1 ? count($ndtsfe_tpc7)-1 : count($ndtsfe_tpc7));
                            $stdevsfe_tpc7     = number_format(sqrt($fvariantsfe_tpc7 ),2);

                          }else{

                            $Minsfe_tpc7      = '';
                            $Maxsfe_tpc7      = '';
                            $Avgsfe_tpc7      = '';
                            $Countsfe_tpc7    = '';
                            $totalsfe_tpc7    = '';
                            $stdevsfe_tpc7    = '';
                            $inspectsfe_tpc7  = '';
                            $outspectsfe_tpc7 = '';
                            $prsoutsfe_tpc7   = '';
                          }


                            if(is_array($ndtsfe_entero7) && count($ndtsfe_entero7)> 0)
                          {
                            $Countsfe_entero7 = count($ndtsfe_entero7);
                            $Avgsfe_entero7   = number_format((array_sum($ndtsfe_entero7)) /(count($ndtsfe_entero7)),2);
                            $Minsfe_entero7   = min($ndtsfe_entero7);
                            $Maxsfe_entero7   = max($ndtsfe_entero7);
                          
                            $fmeansfe_entero7    = array_sum($ndtsfe_entero7) / count($ndtsfe_entero7);
                            $fvariantsfe_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndtsfe_entero7 as $i){
                            $fvariantsfe_entero7 += pow($i - $fmeansfe_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantsfe_entero7 /= ($xsample1_1 ? count($ndtsfe_entero7)-1 : count($ndtsfe_entero7));
                            $stdevsfe_entero7     = number_format(sqrt($fvariantsfe_entero7 ),2);

                          }else{

                            $Minsfe_entero7      = '';
                            $Maxsfe_entero7      = '';
                            $Avgsfe_entero7      = '';
                            $Countsfe_entero7    = '';
                            $totalsfe_entero7    = '';
                            $stdevsfe_entero7    = '';
                            $inspectsfe_entero7  = '';
                            $outspectsfe_entero7 = '';
                            $prsoutsfe_entero7   = '';
                          }

                           if(is_array($ndthaf_tpc7) && count($ndthaf_tpc7)> 0)
                          {
                            $Counthaf_tpc7 = count($ndthaf_tpc7);
                            $Avghaf_tpc7   = number_format((array_sum($ndthaf_tpc7)) /(count($ndthaf_tpc7)),2);
                            $Minhaf_tpc7   = min($ndthaf_tpc7);
                            $Maxhaf_tpc7   = max($ndthaf_tpc7);
                          
                            $fmeanhaf_tpc7    = array_sum($ndthaf_tpc7) / count($ndthaf_tpc7);
                            $fvarianthaf_tpc7 = 0.00;
                            $xsample1_1       = false;
                            $dt1              = 0;$dt2 = 0;
                            foreach ($ndthaf_tpc7 as $i){
                            $fvarianthaf_tpc7 += pow($i - $fmeanhaf_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthaf_tpc7 /= ($xsample1_1 ? count($ndthaf_tpc7)-1 : count($ndthaf_tpc7));
                            $stdevhaf_tpc7     = number_format(sqrt($fvarianthaf_tpc7 ),2);

                          }else{

                            $Minhaf_tpc7      = '';
                            $Maxhaf_tpc7      = '';
                            $Avghaf_tpc7      = '';
                            $Counthaf_tpc7    = '';
                            $totalhaf_tpc7    = '';
                            $stdevhaf_tpc7    = '';
                            $inspecthaf_tpc7  = '';
                            $outspecthaf_tpc7 = '';
                            $prsouthaf_tpc7   = '';
                          }

                           if(is_array($ndthaf_entero7) && count($ndthaf_entero7)> 0)
                          {
                            $Counthaf_entero7 = count($ndthaf_entero7);
                            $Avghaf_entero7   = number_format((array_sum($ndthaf_entero7)) /(count($ndthaf_entero7)),2);
                            $Minhaf_entero7   = min($ndthaf_entero7);
                            $Maxhaf_entero7   = max($ndthaf_entero7);
                          
                            $fmeanhaf_entero7    = array_sum($ndthaf_entero7) / count($ndthaf_entero7);
                            $fvarianthaf_entero7 = 0.00;
                            $xsample1_1          = false;
                            $dt1                 = 0;$dt2 = 0;
                            foreach ($ndthaf_entero7 as $i){
                            $fvarianthaf_entero7 += pow($i - $fmeanhaf_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvarianthaf_entero7 /= ($xsample1_1 ? count($ndthaf_entero7)-1 : count($ndthaf_entero7));
                            $stdevhaf_entero7     = number_format(sqrt($fvarianthaf_entero7 ),2);

                          }else{

                            $Minhaf_entero7      = '';
                            $Maxhaf_entero7      = '';
                            $Avghaf_entero7      = '';
                            $Counthaf_entero7    = '';
                            $totalhaf_entero7    = '';
                            $stdevhaf_entero7    = '';
                            $inspecthaf_entero7  = '';
                            $outspecthaf_entero7 = '';
                            $prsouthaf_entero7   = '';
                          }

                            if(is_array($ndtcb_tpc7) && count($ndtcb_tpc7)> 0)
                          {
                            $Countcb_tpc7 = count($ndtcb_tpc7);
                            $Avgcb_tpc7   = number_format((array_sum($ndtcb_tpc7)) /(count($ndtcb_tpc7)),2);
                            $Mincb_tpc7   = min($ndtcb_tpc7);
                            $Maxcb_tpc7   = max($ndtcb_tpc7);
                          
                            $fmeancb_tpc7    = array_sum($ndtcb_tpc7) / count($ndtcb_tpc7);
                            $fvariantcb_tpc7 = 0.00;
                            $xsample1_1      = false;
                            $dt1             = 0;$dt2 = 0;
                            foreach ($$ndtcb_tpc7 as $i){
                            $fvariantcb_tpc7 += pow($i - $fmeancb_tpc7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcb_tpc7 /= ($xsample1_1 ? count($ndtcb_tpc7)-1 : count($ndtcb_tpc7));
                            $stdevcb_tpc7     = number_format(sqrt($fvariantcb_tpc7 ),2);

                          }else{

                            $Mincb_tpc7      = '';
                            $Maxcb_tpc7      = '';
                            $Avgcb_tpc7      = '';
                            $Countcb_tpc7    = '';
                            $totalcb_tpc7    = '';
                            $stdevcb_tpc7    = '';
                            $inspectcb_tpc7  = '';
                            $outspectcb_tpc7 = '';
                            $prsoutcb_tpc7   = '';
                          }
                            if(is_array($ndtcb_entero7) && count($ndtcb_entero7)> 0)
                          {
                            $Countcb_entero7 = count($ndtcb_entero7);
                            $Avgcb_entero7   = number_format((array_sum($ndtcb_entero7)) /(count($ndtcb_entero7)),2);
                            $Mincb_entero7   = min($ndtcb_entero7);
                            $Maxcb_entero7   = max($ndtcb_entero7);
                          
                            $fmeancb_entero7    = array_sum($ndtcb_entero7) / count($ndtcb_entero7);
                            $fvariantcb_entero7 = 0.00;
                            $xsample1_1         = false;
                            $dt1                = 0;$dt02 = 0;
                            foreach ($ndtcb_entero7 as $i){
                            $fvariantcb_entero7 += pow($i - $fmeancb_entero7  ,2);
                            if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                            if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                            }

                            $fvariantcb_entero7 /= ($xsample1_1 ? count($ndtcb_entero7)-1 : count($ndtcb_entero7));
                            $stdevcb_entero7     = number_format(sqrt($fvariantcb_entero7 ),2);

                          }else{                       

                            $Mincb_entero7      = '';
                            $Maxcb_entero7      = '';
                            $Avgcb_entero7      = '';
                            $Countcb_entero7    = '';
                            $totalcb_entero7    = '';
                            $stdevcb_entero7    = '';
                            $inspectcb_entero7  = '';
                            $outspectcb_entero7 = '';
                            $prsoutcb_entero7   = '';
                          }
                          $rowfoot0  = $rowCount7+1;
                          $rowfoot1  = $rowfoot0+1;
                          $rowfoot2  = $rowfoot1+1;
                          $rowfoot3  = $rowfoot2+1;
                          $rowfoot4  = $rowfoot3+1;
                          $rowfoot5  = $rowfoot4+1;
                          $rowfoot6  = $rowfoot5+1;
                          $rowfoot7  = $rowfoot6+1;
                          $rowfoot8  = $rowfoot7+1;
                          $rowfoot9  = $rowfoot8+1;
                          $rowfoot10 = $rowfoot9+1;
                          $rowfoot11 = $rowfoot10+1;
                          $rowfoot12 = $rowfoot11+1;
                          $rowfoot13 = $rowfoot12+1;

                                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 //$objPHPExcel2->mergeCells('A'.$rowfoot0.':AE'.$rowfoot0);
                 $objPHPExcel4->setSharedStyle($cellorange, 'A'.$rowfoot1.':BF'.$rowfoot5);
                 $objPHPExcel4->setCellValue('A'.$rowfoot1,'Count ');                 
                
                 $objPHPExcel4->setCellValue('B'.$rowfoot1,$Counttb_tpc7);
                 $objPHPExcel4->setCellValue('C'.$rowfoot1,$Counttb_entero7);

                 $objPHPExcel4->setCellValue('F'.$rowfoot1,$Countmt_tpc7);
                 $objPHPExcel4->setCellValue('G'.$rowfoot1,$Countmt_entero7);

                 $objPHPExcel4->setCellValue('J'.$rowfoot1,$Countbt1_tpc7);
                 $objPHPExcel4->setCellValue('K'.$rowfoot1,$Countbt1_entero7);

                 $objPHPExcel4->setCellValue('N'.$rowfoot1,$Countbt2_tpc7);
                 $objPHPExcel4->setCellValue('O'.$rowfoot1,$Countbt2_entero7);

                 $objPHPExcel4->setCellValue('R'.$rowfoot1,$Countbft1_tpc7);
                 $objPHPExcel4->setCellValue('S'.$rowfoot1,$Countbft1_entero7);

                 $objPHPExcel4->setCellValue('V'.$rowfoot1,$Countcsd_tpc7);
                 $objPHPExcel4->setCellValue('W'.$rowfoot1,$Countcsd_entero7);

                 $objPHPExcel4->setCellValue('Z'.$rowfoot1,$Countvf_tpc7);
                 $objPHPExcel4->setCellValue('AA'.$rowfoot1,$Countvf_entero7); 

                 $objPHPExcel4->setCellValue('AD'.$rowfoot1,$Countsc1_tpc7);
                 $objPHPExcel4->setCellValue('AE'.$rowfoot1,$Countsc1_entero7);

                 $objPHPExcel4->setCellValue('AH'.$rowfoot1,$Countsc2_tpc7);
                 $objPHPExcel4->setCellValue('AI'.$rowfoot1,$Countsc2_entero7);

                 $objPHPExcel4->setCellValue('AL'.$rowfoot1,$Countovf_tpc7);
                 $objPHPExcel4->setCellValue('AM'.$rowfoot1,$Countovf_entero7);

                 $objPHPExcel4->setCellValue('AP'.$rowfoot1,$Countcc_tpc7);
                 $objPHPExcel4->setCellValue('AQ'.$rowfoot1,$Countcc_entero7);

                 $objPHPExcel4->setCellValue('AT'.$rowfoot1,$Countsfe_tpc7);
                 $objPHPExcel4->setCellValue('AU'.$rowfoot1,$Countsfe_entero7);

                 $objPHPExcel4->setCellValue('AX'.$rowfoot1,$Counthaf_tpc7);
                 $objPHPExcel4->setCellValue('AY'.$rowfoot1,$Counthaf_entero7);

                 $objPHPExcel4->setCellValue('BB'.$rowfoot1,$Countcb_tpc7);
                 $objPHPExcel4->setCellValue('BC'.$rowfoot1,$Countcb_entero7);

                 $objPHPExcel4->setCellValue('BA'.$rowfoot1,'');                  
                 $objPHPExcel4->setCellValue('BE'.$rowfoot1,'');

                 $objPHPExcel4->setCellValue('BF'.$rowfoot1,'');

                 $objPHPExcel4->setSharedStyle($cellorange, 'A'.$rowfoot2.':BF'.$rowfoot2);

                 $objPHPExcel4->setCellValue('A'.$rowfoot2,'Average ');                 
                
                 $objPHPExcel4->setCellValue('B'.$rowfoot2,$Avgtb_tpc7);
                 $objPHPExcel4->setCellValue('C'.$rowfoot2,$Avgtb_entero7);

                 $objPHPExcel4->setCellValue('F'.$rowfoot2,$Avgmt_tpc7);
                 $objPHPExcel4->setCellValue('G'.$rowfoot2,$Avgmt_entero7);

                 $objPHPExcel4->setCellValue('J'.$rowfoot2,$Avgbt1_tpc7);
                 $objPHPExcel4->setCellValue('K'.$rowfoot2,$Avgbt1_entero7);

                 $objPHPExcel4->setCellValue('N'.$rowfoot2,$Avgbt2_tpc7);
                 $objPHPExcel4->setCellValue('O'.$rowfoot2,$Avgbt2_entero7);

                 $objPHPExcel4->setCellValue('R'.$rowfoot2,$Avgbft1_tpc7);
                 $objPHPExcel4->setCellValue('S'.$rowfoot2,$Avgbft1_entero7);

                 $objPHPExcel4->setCellValue('V'.$rowfoot2,$Avgcsd_tpc7);
                 $objPHPExcel4->setCellValue('W'.$rowfoot2,$Avgcsd_entero7);

                 $objPHPExcel4->setCellValue('Z'.$rowfoot2,$Avgvf_tpc7);
                 $objPHPExcel4->setCellValue('AA'.$rowfoot2,$Avgvf_entero7); 

                 $objPHPExcel4->setCellValue('AD'.$rowfoot2,$Avgsc1_tpc7);
                 $objPHPExcel4->setCellValue('AE'.$rowfoot2,$Avgsc1_entero7);

                 $objPHPExcel4->setCellValue('AH'.$rowfoot2,$Avgsc2_tpc7);
                 $objPHPExcel4->setCellValue('AI'.$rowfoot2,$Avgsc2_entero7);

                 $objPHPExcel4->setCellValue('AL'.$rowfoot2,$Avgovf_tpc7);
                 $objPHPExcel4->setCellValue('AM'.$rowfoot2,$Avgovf_entero7);

                 $objPHPExcel4->setCellValue('AP'.$rowfoot2,$Avgcc_tpc7);
                 $objPHPExcel4->setCellValue('AQ'.$rowfoot2,$Avgcc_entero7);

                 $objPHPExcel4->setCellValue('AT'.$rowfoot2,$Avgsfe_tpc7);
                 $objPHPExcel4->setCellValue('AU'.$rowfoot2,$Avgsfe_entero7);

                 $objPHPExcel4->setCellValue('AX'.$rowfoot2,$Avghaf_tpc7);
                 $objPHPExcel4->setCellValue('AY'.$rowfoot2,$Avghaf_entero7);

                 $objPHPExcel4->setCellValue('BB'.$rowfoot2,$Avgcb_tpc7);
                 $objPHPExcel4->setCellValue('BC'.$rowfoot2,$Avgcb_entero7);

                 $objPHPExcel4->setCellValue('BA'.$rowfoot2,'');                  
                 $objPHPExcel4->setCellValue('BE'.$rowfoot2,'');

                 $objPHPExcel4->setSharedStyle($cellorange, 'A'.$rowfoot3.':BF'.$rowfoot3);
                 $objPHPExcel4->mergeCells('A'.$rowfoot3.':A'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Minimum ');                 
                 
                 $objPHPExcel4->setCellValue('B'.$rowfoot3,$Mintb_tpc7);
                 $objPHPExcel4->setCellValue('C'.$rowfoot3,$Mintb_entero7);

                 $objPHPExcel4->setCellValue('F'.$rowfoot3,$Minmt_tpc7);
                 $objPHPExcel4->setCellValue('G'.$rowfoot3,$Minmt_entero7);

                 $objPHPExcel4->setCellValue('J'.$rowfoot3,$Minbt1_tpc7);
                 $objPHPExcel4->setCellValue('K'.$rowfoot3,$Minbt1_entero7);

                 $objPHPExcel4->setCellValue('N'.$rowfoot3,$Minbt2_tpc7);
                 $objPHPExcel4->setCellValue('O'.$rowfoot3,$Minbt2_entero7);

                 $objPHPExcel4->setCellValue('R'.$rowfoot3,$Minbft1_tpc7);
                 $objPHPExcel4->setCellValue('S'.$rowfoot3,$Minbft1_entero7);

                 $objPHPExcel4->setCellValue('V'.$rowfoot3,$Mincsd_tpc7);
                 $objPHPExcel4->setCellValue('W'.$rowfoot3,$Mincsd_entero7);

                 $objPHPExcel4->setCellValue('Z'.$rowfoot3,$Minvf_tpc7);
                 $objPHPExcel4->setCellValue('AA'.$rowfoot3,$Minvf_entero7); 

                 $objPHPExcel4->setCellValue('AD'.$rowfoot3,$Minsc1_tpc7);
                 $objPHPExcel4->setCellValue('AE'.$rowfoot3,$Minsc1_entero7);

                 $objPHPExcel4->setCellValue('AH'.$rowfoot3,$Minsc2_tpc7);
                 $objPHPExcel4->setCellValue('AI'.$rowfoot3,$Minsc2_entero7);

                 $objPHPExcel4->setCellValue('AL'.$rowfoot3,$Minovf_tpc7);
                 $objPHPExcel4->setCellValue('AM'.$rowfoot3,$Minovf_entero7);

                 $objPHPExcel4->setCellValue('AP'.$rowfoot3,$Mincc_tpc7);
                 $objPHPExcel4->setCellValue('AQ'.$rowfoot3,$Mincc_entero7);

                 $objPHPExcel4->setCellValue('AT'.$rowfoot3,$Minsfe_tpc7);
                 $objPHPExcel4->setCellValue('AU'.$rowfoot3,$Minsfe_entero7);

                 $objPHPExcel4->setCellValue('AX'.$rowfoot3,$Minhaf_tpc7);
                 $objPHPExcel4->setCellValue('AY'.$rowfoot3,$Minhaf_entero7);

                 $objPHPExcel4->setCellValue('BB'.$rowfoot3,$Mincb_tpc7);
                 $objPHPExcel4->setCellValue('BC'.$rowfoot3,$Mincb_entero7);

                 $objPHPExcel4->setCellValue('BA'.$rowfoot3,'');                  
                 $objPHPExcel4->setCellValue('BE'.$rowfoot3,'');


                  $objPHPExcel4->setSharedStyle($cellorange, 'A'.$rowfoot4.':R'.$rowfoot4);
                 $objPHPExcel4->setCellValue('A'.$rowfoot4,'Maximum ');                 
                 
                 $objPHPExcel4->setCellValue('B'.$rowfoot4,$Maxtb_tpc7);
                 $objPHPExcel4->setCellValue('C'.$rowfoot4,$Maxtb_entero7);

                 $objPHPExcel4->setCellValue('F'.$rowfoot4,$Maxmt_tpc7);
                 $objPHPExcel4->setCellValue('G'.$rowfoot4,$Maxmt_entero7);

                 $objPHPExcel4->setCellValue('J'.$rowfoot4,$Maxbt1_tpc7);
                 $objPHPExcel4->setCellValue('K'.$rowfoot4,$Maxbt1_entero7);

                 $objPHPExcel4->setCellValue('N'.$rowfoot4,$Maxbt2_tpc7);
                 $objPHPExcel4->setCellValue('O'.$rowfoot4,$Maxbt2_entero7);

                 $objPHPExcel4->setCellValue('R'.$rowfoot4,$Maxbft1_tpc7);
                 $objPHPExcel4->setCellValue('S'.$rowfoot4,$Maxbft1_entero7);

                 $objPHPExcel4->setCellValue('V'.$rowfoot4,$Maxcsd_tpc7);
                 $objPHPExcel4->setCellValue('W'.$rowfoot4,$Maxcsd_entero7);

                 $objPHPExcel4->setCellValue('Z'.$rowfoot4,$Maxvf_tpc7);
                 $objPHPExcel4->setCellValue('AA'.$rowfoot4,$Maxvf_entero7); 

                 $objPHPExcel4->setCellValue('AD'.$rowfoot4,$Maxsc1_tpc7);
                 $objPHPExcel4->setCellValue('AE'.$rowfoot4,$Maxsc1_entero7);

                 $objPHPExcel4->setCellValue('AH'.$rowfoot4,$Maxsc2_tpc7);
                 $objPHPExcel4->setCellValue('AI'.$rowfoot4,$Maxsc2_entero7);

                 $objPHPExcel4->setCellValue('AL'.$rowfoot4,$Maxovf_tpc7);
                 $objPHPExcel4->setCellValue('AM'.$rowfoot4,$Maxovf_entero7);

                 $objPHPExcel4->setCellValue('AP'.$rowfoot4,$Maxcc_tpc7);
                 $objPHPExcel4->setCellValue('AQ'.$rowfoot4,$Maxcc_entero7);

                 $objPHPExcel4->setCellValue('AT'.$rowfoot4,$Maxsfe_tpc7);
                 $objPHPExcel4->setCellValue('AU'.$rowfoot4,$Maxsfe_entero7);

                 $objPHPExcel4->setCellValue('AX'.$rowfoot4,$Maxhaf_tpc7);
                 $objPHPExcel4->setCellValue('AY'.$rowfoot4,$Maxhaf_entero7);

                 $objPHPExcel4->setCellValue('BB'.$rowfoot4,$Maxcb_tpc7);
                 $objPHPExcel4->setCellValue('BC'.$rowfoot4,$Maxcb_entero7);

                 $objPHPExcel4->setCellValue('BA'.$rowfoot4,'');                  
                 $objPHPExcel4->setCellValue('BE'.$rowfoot4,'');
  

                 $objPHPExcel4->setSharedStyle($cellorange, 'A'.$rowfoot5.':R'.$rowfoot5);
                 $objPHPExcel4->setCellValue('A'.$rowfoot5,'Stdev ');                 
                 
                $objPHPExcel4->setCellValue('B'.$rowfoot5,$stdevtb_tpc7);
                 $objPHPExcel4->setCellValue('C'.$rowfoot5,$stdevtb_entero7);

                 $objPHPExcel4->setCellValue('F'.$rowfoot5,$stdevmt_tpc7);
                 $objPHPExcel4->setCellValue('G'.$rowfoot5,$stdevmt_entero7);

                 $objPHPExcel4->setCellValue('J'.$rowfoot5,$stdevbt1_tpc7);
                 $objPHPExcel4->setCellValue('K'.$rowfoot5,$stdevbt1_entero7);

                 $objPHPExcel4->setCellValue('N'.$rowfoot5,$stdevbt2_tpc7);
                 $objPHPExcel4->setCellValue('O'.$rowfoot5,$stdevbt2_entero7);

                 $objPHPExcel4->setCellValue('R'.$rowfoot5,$stdevbft1_tpc7);
                 $objPHPExcel4->setCellValue('S'.$rowfoot5,$stdevbft1_entero7);

                 $objPHPExcel4->setCellValue('V'.$rowfoot5,$stdevcsd_tpc7);
                 $objPHPExcel4->setCellValue('W'.$rowfoot5,$stdevcsd_entero7);

                 $objPHPExcel4->setCellValue('Z'.$rowfoot5,$stdevvf_tpc7);
                 $objPHPExcel4->setCellValue('AA'.$rowfoot5,$stdevvf_entero7); 

                 $objPHPExcel4->setCellValue('AD'.$rowfoot5,$stdevsc1_tpc7);
                 $objPHPExcel4->setCellValue('AE'.$rowfoot5,$stdevsc1_entero7);

                 $objPHPExcel4->setCellValue('AH'.$rowfoot5,$stdevsc2_tpc7);
                 $objPHPExcel4->setCellValue('AI'.$rowfoot5,$stdevsc2_entero7);

                 $objPHPExcel4->setCellValue('AL'.$rowfoot5,$stdevovf_tpc7);
                 $objPHPExcel4->setCellValue('AM'.$rowfoot5,$stdevovf_entero7);

                 $objPHPExcel4->setCellValue('AP'.$rowfoot5,$stdevcc_tpc7);
                 $objPHPExcel4->setCellValue('AQ'.$rowfoot5,$stdevcc_entero7);

                 $objPHPExcel4->setCellValue('AT'.$rowfoot5,$stdevsfe_tpc7);
                 $objPHPExcel4->setCellValue('AU'.$rowfoot5,$stdevsfe_entero7);

                 $objPHPExcel4->setCellValue('AX'.$rowfoot5,$stdevhaf_tpc7);
                 $objPHPExcel4->setCellValue('AY'.$rowfoot5,$stdevhaf_entero7);

                 $objPHPExcel4->setCellValue('BB'.$rowfoot5,$stdevcb_tpc7);
                 $objPHPExcel4->setCellValue('BC'.$rowfoot5,$stdevcb_entero7);

                 $objPHPExcel4->setCellValue('BA'.$rowfoot5,'');                  
                 $objPHPExcel4->setCellValue('BE'.$rowfoot5,'');


                 $objPHPExcel4->setSharedStyle($bodyStyle, 'A'.$rowfoot6.':S'.$rowfoot12);
                 $objPHPExcel4->mergeCells('A'.$rowfoot6.':D'.$rowfoot6)->setCellValue('A'.$rowfoot6,'REPORTED BY: ');
                 $objPHPExcel4->mergeCells('E'.$rowfoot6.':J'.$rowfoot6)->setCellValue('E'.$rowfoot6,'CHECKED  BY : ');
                 $objPHPExcel4->mergeCells('K'.$rowfoot6.':P'.$rowfoot6)->setCellValue('K'.$rowfoot6,'CONFIRMED BY : ');
                 $objPHPExcel4->mergeCells('Q'.$rowfoot6.':S'.$rowfoot6)->setCellValue('Q'.$rowfoot6,'ACKNOWLEDGED BY : ');

                 
                 $objPHPExcel4->mergeCells('A'.$rowfoot7.':D'.$rowfoot9);
                 $objPHPExcel4->mergeCells('E'.$rowfoot7.':J'.$rowfoot9);
                 $objPHPExcel4->mergeCells('K'.$rowfoot7.':P'.$rowfoot9);
                 $objPHPExcel4->mergeCells('Q'.$rowfoot7.':S'.$rowfoot9);
                 $objPHPExcel4->setSharedStyle($cellorange1, 'A'.$rowfoot10.':Q'.$rowfoot12); 
                 $objPHPExcel4->mergeCells('A'.$rowfoot10.':D'.$rowfoot10)->setCellValue('A'.$rowfoot10,'NAME : FUAD DAMHUZI ');
                 $objPHPExcel4->mergeCells('E'.$rowfoot10.':J'.$rowfoot10)->setCellValue('E'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel4->mergeCells('K'.$rowfoot10.':P'.$rowfoot10)->setCellValue('K'.$rowfoot10,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel4->mergeCells('Q'.$rowfoot10.':S'.$rowfoot10)->setCellValue('Q'.$rowfoot10,'NAME : RISTINA YULIANI ');

                 $objPHPExcel4->mergeCells('A'.$rowfoot11.':D'.$rowfoot11)->setCellValue('A'.$rowfoot11,'POSITION : KS ');
                 $objPHPExcel4->mergeCells('E'.$rowfoot11.':J'.$rowfoot11)->setCellValue('E'.$rowfoot11,'POSITION : AMGR QAD ');
                 $objPHPExcel4->mergeCells('K'.$rowfoot11.':P'.$rowfoot11)->setCellValue('K'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel4->mergeCells('Q'.$rowfoot11.':S'.$rowfoot11)->setCellValue('Q'.$rowfoot11,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel4->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel4->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel4->mergeCells('K'.$rowfoot12.':P'.$rowfoot12)->setCellValue('K'.$rowfoot12,'DATE : '.$tgl);
                 $objPHPExcel4->mergeCells('Q'.$rowfoot12.':S'.$rowfoot12)->setCellValue('Q'.$rowfoot12,'DATE : '.$tgl);
   
                }
                $objPHPExcel4->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'Mulai Berlaku :'.$frm_efect);
                $objPHPExcel4->mergeCells('R'.$rowfoot13.':S'.$rowfoot13)->setCellValue('R'.$rowfoot13,''.$frmnm);
                $objPHPExcel4->mergeCells('D'.$rowfoot13.':Q'.$rowfoot13);

             break;

                
            case $frmkode == 'frmnon023' && $frmvrs == '00': 
               
            $Doc = 'CNO/PMK/'.substr($dtstart,0,4).'/'.substr($dtstart,5,2);
                if($dtstart != $dtfinish){$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4).' s/d '.substr($dtfinish,8,2).'-'.substr($dtfinish,5,2).'-'.substr($dtfinish,0,4);}
                else{$Tanggal =  substr($dtstart,8,2).'-'.substr($dtstart,5,2).'-'.substr($dtstart,0,4);
            }
            $dttglStart  = $this->uri->segment(8);
            $dttglFinish = $this->uri->segment(9);
            $dtheader    = $this->$model->get_header_byid($dttglStart,$dttglFinish);
            $data7       = array('dtheader' => $dtheader);
           foreach($dtheader as $dt_headerrow){
                        $dttglStart = $dt_headerrow->tgl_produksi;
            }
                $objDrawing2 = new PHPExcel_Worksheet_Drawing();
                $objDrawing2->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel2 = $obj->createSheet(1);
                $objDrawing2->setCoordinates('A2');
                $objDrawing2->setWorksheet($objPHPExcel2);
                foreach(range('A','J') as $columnID){
                $objPHPExcel2->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel2->mergeCells('A1:J1');
                 $objPHPExcel2->mergeCells('A2:A5');
                 $objPHPExcel2->mergeCells('B2:I5')->setCellValue('B2',$frmcop);
                 $objPHPExcel2->setCellValue('J2','Tahun: '.$thn);
                 $objPHPExcel2->setCellValue('J3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel2->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel2->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel2->setCellValue('J4','Hal: ');
                 $objPHPExcel2->setCellValue('A6','JUDUL');
                 $objPHPExcel2->mergeCells('B6:J6')->setCellValue('B6',''.$frmjdl.' AFTER POLISHING');  
                 $objPHPExcel2->mergeCells('A7:A10')->setCellValue('A7','Date ');            
                 $objPHPExcel2->mergeCells('B7:B10')->setCellValue('B7','Sampling Time ');
                 $objPHPExcel2->mergeCells('C7:C10')->setCellValue('C7','MC 0.7% Max');
                 $objPHPExcel2->mergeCells('D7:D10')->setCellValue('D7','FFA 3.0% max');
                 $objPHPExcel2->mergeCells('E7:E10')->setCellValue('E7','IV 8.5-11% max');
                 $objPHPExcel2->mergeCells('F7:H7')->setCellValue('F7','Colour');

                $objPHPExcel2->mergecells('F8:F10')->setCellValue('F8','Red 8 max');
                $objPHPExcel2->mergeCells('G8:G10')->setCellValue('G8','Yellow 30 max');
                $objPHPExcel2->mergeCells('H8:H10')->setCellValue('H8','Blue 0 max');
                $objPHPExcel2->mergeCells('I7:I10')->setCellValue('I7','Sludge (%)');
                $objPHPExcel2->mergeCells('J7:J10')->setCellValue('J7','Remarks');

                 
                 $objPHPExcel2->setSharedStyle($headerStyle, 'A2:J10');
                
                  
                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail2)){
                 $rowCount2 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail2 as $row2){
                 $tgl_produksi = $row2->tgl_produksi;
                 $jns_sampel   = $row2->jns_sampel;
              
                 $mc_hasil     = $row2->mc_hasil;
                 $ffa_hasil    = $row2->ffa_hasil;
                 $yellow       = $row2->yellow;
                 $red          = $row2->red;
                 $blue         = $row2->blue;
                 $iodine_hasil = $row2->iodine_hasil;
                 $sludge       = $row2->sludge;
                 $keterangan   = $row2->keterangan;
                 
                 $rowCount2++;

                 $objPHPExcel2->setSharedStyle($bodyStyle, 'A'.$rowCount2.':J'.$rowCount2);
                 $objPHPExcel2->setCellValue('A'.$rowCount2,$tgl_produksi);
                 $objPHPExcel2->setCellValue('B'.$rowCount2,$jns_sampel);
               
                 $objPHPExcel2->setCellValue('C'.$rowCount2,$mc_hasil);

                 if($row2->ffa_hasil==""){}elseif($row2->ffa_hasil > 3.00){
                    $objPHPExcel2->setSharedStyle($cellredcoll, 'D'.$rowCount2);
                }else{}

                 $objPHPExcel2->setCellValue('D'.$rowCount2,$ffa_hasil);
                if($row2->iodine_hasil==""){}elseif(($row2->iodine_hasil < 7.50) || ($row2->iodine_hasil > 10.50)){
                   $objPHPExcel2->setSharedStyle($cellredcoll, 'E'.$rowCount2);
               }
                 $objPHPExcel2->setCellValue('E'.$rowCount2,$iodine_hasil);
                 if($row2->red==""){}elseif(($row2->red > 8.0)){
                   $objPHPExcel2->setSharedStyle($cellredcoll, 'F'.$rowCount2);
               }
                 $objPHPExcel2->setCellValue('F'.$rowCount2,$red);
                 if($row2->yellow==""){}elseif(($row2->yellow > 30.0)){
                   $objPHPExcel2->setSharedStyle($cellredcoll, 'G'.$rowCount2);
               }

                 $objPHPExcel2->setCellValue('G'.$rowCount2,$yellow);
                   if($row2->blue==""){}elseif(($row2->blue > 0)){
                   $objPHPExcel2->setSharedStyle($cellredcoll, 'H'.$rowCount2);
               }


                 $objPHPExcel2->setCellValue('H'.$rowCount2,$blue);
                 $objPHPExcel2->setCellValue('I'.$rowCount2,$sludge);
                 $objPHPExcel2->setCellValue('J'.$rowCount2,$keterangan);

                 $no++;
                    }

                }

                $dttglStart  = $this->uri->segment(8);
                $dttglFinish = $this->uri->segment(9);
                // $data_dtdetail1 =$this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                  
               if(isset($dtdetail2)){
    
                 foreach ($dtdetail2 as $row2){
             //    $tgl_produksi[]= $row2->tgl_produksi;
                 $dt_mc_hasil2    []  = $row2->mc_hasil;
                 $dt_ffa_hasil2   []  = $row2->ffa_hasil;
                 $dt_yellow2       [] = $row2->yellow;
                 $dt_red2         []  = $row2->red;
                 $dt_blue2        []  = $row2->blue;
                 $dt_iodine_hasil2[]  = $row2->iodine_hasil;
                 $dt_sludge2      []  = $row2->sludge;

                $ndtmc_hasil2     = array_diff($dt_mc_hasil2, array('',0));
                $ndtffa_hasil2    = array_diff($dt_ffa_hasil2, array('',0));
                $ndtyellow2       = array_diff($dt_yellow2, array('',0));
                $ndtred2          = array_diff($dt_red2, array('',0));
                $ndtblue2         = array_diff($dt_blue2 , array('',0));
                $ndtiodine_hasil2 = array_diff($dt_iodine_hasil2 , array('',0));
                $ndtsludge2       = array_diff($dt_sludge2 , array('',0));
                }
                 if(is_array($ndtmc_hasil2) && count ($ndtmc_hasil2) > 0)
                {
                    $Minmc_hasil2   = min($ndtmc_hasil2);
                    $Maxmc_hasil2   = max($ndtmc_hasil2);
                    $Avgmc_hasil2   = number_format((array_sum($ndtmc_hasil2)) /(count($ndtmc_hasil2)),2);
                    $Countmc_hasil2 = count($ndtmc_hasil2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanmc_hasil2    = array_sum($ndtmc_hasil2) / count($ndtmc_hasil2);
                    $fvariantmc_hasil2 = 0.00;
                    $xsamplemc_hasil2  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtmc_hasil2 as $i){
                    $fvariantmc_hasil2 += pow($i - $fmeanmc_hasil2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantmc_hasil2 /= ($xsamplemc_hasil2 ? count($ndtmc_hasil2)-1 : count($ndtmc_hasil2));
                    $stdevmc_hasil2     = number_format(sqrt($fvariantmc_hasil2),2);
                    $totalmc_hasil2     = count($ndtmc_hasil2);
                    $inspectmc_hasil2   = $dt1;
                    $outspectmc_hasil2  = $dt2;
                    $prsoutmc_hasil2    = number_format((($dt2 /$totalmc_hasil2)* (100)),2);

                } else {

                    $Minmc_hasil2      = '';
                    $Maxmc_hasil2      = '';
                    $Avgmc_hasil2      = '';
                    $stdevmc_hasil2    = '';
                    $totalmc_hasil2    = '';
                    $inspectmc_hasil2  = '';
                    $outspectmc_hasil2 = '';
                    $prsoutmc_hasil2   = '';
                }

                 if(is_array($ndtffa_hasil2) && count ($ndtffa_hasil2) > 0)
                {
                    $Minffa_hasil2   = min($ndtffa_hasil2);
                    $Maxffa_hasil2   = max($ndtffa_hasil2);
                    $Avgffa_hasil2   = number_format((array_sum($ndtffa_hasil2)) /(count($ndtffa_hasil2)),2);
                    $Countffa_hasil2 = count($ndtffa_hasil2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanffa_hasil2    = array_sum($ndtffa_hasil2) / count($ndtffa_hasil2);
                    $fvariantffa_hasil2 = 0.00;
                    $xsampleffa_hasil2  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtffa_hasil2 as $i){
                    $fvariantffa_hasil2 += pow($i - $fmeanffa_hasil2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantffa_hasil2 /= ($xsampleffa_hasil2 ? count($ndtffa_hasil2)-1 : count($ndtffa_hasil2));
                    $stdevffa_hasil2     = number_format(sqrt($fvariantffa_hasil2),2);
                    $totalffa_hasil2     = count($ndtffa_hasil2);
                    $inspectffa_hasil2   = $dt1;
                    $outspectffa_hasil2  = $dt2;
                    $prsoutffa_hasil2    = number_format((($dt2 /$totalffa_hasil2)* (100)),2);

                } else {

                    $Minffa_hasil2      = '';
                    $Maxffa_hasil2      = '';
                    $Avgffa_hasil2      = '';
                    $stdevffa_hasil2    = '';
                    $totalffa_hasil2    = '';
                    $inspectffa_hasil2  = '';
                    $outspectffa_hasil2 = '';
                    $prsoutffa_hasil2   = '';
                }


                 if(is_array($ndtiodine_hasil2) && count ($ndtiodine_hasil2) > 0)
                {
                    $Miniodine_hasil2   = min($ndtiodine_hasil2);
                    $Maxiodine_hasil2   = max($ndtiodine_hasil2);
                    $Avgiodine_hasil2   = number_format((array_sum($ndtiodine_hasil2)) /(count($ndtiodine_hasil2)),2);
                    $Countiodine_hasil2 = count($ndtiodine_hasil2);
                    //nilai standard devisiasi (sttdev)
                    $fmeaniodine_hasil2    = array_sum($ndtiodine_hasil2) / count($ndtiodine_hasil2);
                    $fvariantiodine_hasil2 = 0.00;
                    $xsampleiodine_hasil2  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtiodine_hasil2 as $i){
                    $fvariantiodine_hasil2 += pow($i - $fmeaniodine_hasil2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantiodine_hasil2 /= ($xsampleiodine_hasil2 ? count($ndtiodine_hasil2)-1 : count($ndtiodine_hasil2));
                    $stdeviodine_hasil2     = number_format(sqrt($fvariantiodine_hasil2),2);
                    $totaliodine_hasil2     = count($ndtiodine_hasil2);
                    $inspectiodine_hasil2   = $dt1;
                    $outspectiodine_hasil2  = $dt2;
                    $prsoutiodine_hasil2    = number_format((($dt2 /$totaliodine_hasil2)* (100)),2);

                } else {

                    $Miniodine_hasil2      = '';
                    $Maxiodine_hasil2      = '';
                    $Avgiodine_hasil2      = '';
                    $stdeviodine_hasil2    = '';
                    $totaliodine_hasil2    = '';
                    $inspectiodine_hasil2  = '';
                    $outspectiodine_hasil2 = '';
                    $prsoutiodine_hasil2   = '';
                }



                 if(is_array($ndtyellow2) && count ($ndtyellow2) > 0)
                {
                    $Minyellow2   = min($ndtyellow2);
                    $Maxyellow2   = max($ndtyellow2);
                    $Avgyellow2   = number_format((array_sum($ndtyellow2)) /(count($ndtyellow2)),2);
                    $Countyellow2 = count($ndtyellow2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanyellow2    = array_sum($ndtyellow2) / count($ndtyellow2);
                    $fvariantyellow2 = 0.00;
                    $xsampleyellow2  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtyellow2 as $i){
                    $fvariantyellow2 += pow($i - $fmeanyellow2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantyellow2 /= ($xsampleyellow2 ? count($ndtyellow2)-1 : count($ndtyellow2));
                    $stdevyellow2     = number_format(sqrt($fvariantyellow2),2);
                    $totalyellow2     = count($ndtyellow2);
                    $inspectyellow2   = $dt1;
                    $outspectyellow2  = $dt2;
                    $prsoutyellow2    = number_format((($dt2 /$totalyellow2)* (100)),2);

                } else {

                    $Minyellow2      = '';
                    $Maxyellow2      = '';
                    $Avgyellow2      = '';
                    $stdevyellow2    = '';
                    $totalyellow2    = '';
                    $inspectyellow2  = '';
                    $outspectyellow2 = '';
                    $prsoutyellow2   = '';
                }


                   if(is_array($ndtred2) && count ($ndtred2) > 0)
                {
                    $Minred2   = min($ndtred2);
                    $Maxred2   = max($ndtred2);
                    $Avgred2   = number_format((array_sum($ndtred2)) /(count($ndtred2)),2);
                    $Countred2 = count($ndtred2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanred2    = array_sum($ndtred2) / count($ndtred2);
                    $fvariantred2 = 0.00;
                    $xsamplered2  = false;
                    $dt1          = 0;$dt2 = 0;
                    foreach ($ndtred2 as $i){
                    $fvariantred2 += pow($i - $fmeanred2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantred2 /= ($xsamplered2 ? count($ndtred2)-1 : count($ndtred2));
                    $stdevred2     = number_format(sqrt($fvariantred2),2);
                    $totalred2     = count($ndtred2);
                    $inspectred2   = $dt1;
                    $outspectred2  = $dt2;
                    $prsoutred2    = number_format((($dt2 /$totalred2)* (100)),2);

                } else {

                    $Minred2      = '';
                    $Maxred2      = '';
                    $Avgred2      = '';
                    $stdevred2    = '';
                    $totalred2    = '';
                    $inspectred2  = '';
                    $outspectred2 = '';
                    $prsoutred2   = '';
                }


                       if(is_array($ndtblue2) && count ($ndtblue2) > 0)
                {
                    $Minblue2   = min($ndtblue2);
                    $Maxblue2   = max($ndtblue2);
                    $Avgblue2   = number_format((array_sum($ndtblue2)) /(count($ndtblue2)),2);
                    $Countblue2 = count($ndtblue2);
                    //nilai standard devisiasi (sttdev)
                    $fmeanblue2    = array_sum($ndtblue2) / count($ndtblue2);
                    $fvariantblue2 = 0.00;
                    $xsampleblue2  = false;
                    $dt1           = 0;$dt2 = 0;
                    foreach ($ndtblue2 as $i){
                    $fvariantblue2 += pow($i - $fmeanblue2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantblue2 /= ($xsampleblue2 ? count($ndtblue2)-1 : count($ndtblue2));
                    $stdevblue2     = number_format(sqrt($fvariantblue2),2);
                    $totalblue2     = count($ndtblue2);
                    $inspectblue2   = $dt1;
                    $outspectblue2  = $dt2;
                    $prsoutblue2    = number_format((($dt2 /$totalblue2)* (100)),2);

                } else {

                    $Minblue2      = '';
                    $Maxblue2      = '';
                    $Avgblue2      = '';
                    $stdevblue2    = '';
                    $totalblue2    = '';
                    $inspectblue2  = '';
                    $outspectblue2 = '';
                    $prsoutblue2   = '';
                    $Countblue2    = '';
                }

                 if(is_array($ndtiodine_hasil2) && count ($ndtiodine_hasil2) > 0)
                {
                    $Miniodine_hasil2   = min($ndtiodine_hasil2);
                    $Maxiodine_hasil2   = max($ndtiodine_hasil2);
                    $Avgiodine_hasil2   = number_format((array_sum($ndtiodine_hasil2)) /(count($ndtiodine_hasil2)),2);
                    $Countiodine_hasil2 = count($ndtiodine_hasil2);
                    //nilai standard devisiasi (sttdev)
                    $fmeaniodine_hasil2    = array_sum($ndtiodine_hasil2) / count($ndtiodine_hasil2);
                    $fvariantiodine_hasil2 = 0.00;
                    $xsampleiodine_hasil2  = false;
                    $dt1                   = 0;$dt2 = 0;
                    foreach ($ndtiodine_hasil2 as $i){
                    $fvariantiodine_hasil2 += pow($i - $fmeaniodine_hasil2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantiodine_hasil2 /= ($xsampleiodine_hasil2 ? count($ndtiodine_hasil2)-1 : count($ndtiodine_hasil2));
                    $stdeviodine_hasil2     = number_format(sqrt($fvariantiodine_hasil2),2);
                    $totaliodine_hasil2     = count($ndtiodine_hasil2);
                    $inspectiodine_hasil2   = $dt1;
                    $outspectiodine_hasil2  = $dt2;
                    $prsoutiodine_hasil2    = number_format((($dt2 /$totaliodine_hasil2)* (100)),2);

                } else {

                    $Miniodine_hasil2      = '';
                    $Maxiodine_hasil2      = '';
                    $Avgiodine_hasil2      = '';
                    $stdeviodine_hasil2    = '';
                    $totaliodine_hasil2    = '';
                    $inspectiodine_hasil2  = '';
                    $outspectiodine_hasil2 = '';
                    $prsoutiodine_hasil2   = '';
                    $Countiodine_hasil2    = '';
                }

                  if(is_array($ndtsludge2) && count ($ndtsludge2) > 0)
                {
                    $Minsludge2   = min($ndtsludge2);
                    $Maxsludge2   = max($ndtsludge2);
                    $Avgsludge2   = number_format((array_sum($ndtsludge2)) /(count($ndtsludge2)),2);
                    $Countsludge2 = count($ndtsludge2);
                    //nilai standard devisiasi (sttdev)
                    $fmeansludge2    = array_sum($ndtsludge2) / count($ndtsludge2);
                    $fvariantsludge2 = 0.00;
                    $xsamplesludge2  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtsludge2 as $i){
                    $fvariantsludge2 += pow($i - $fmeansludge2 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsludge2 /= ($xsamplesludge2 ? count($ndtsludge2)-1 : count($ndtsludge2));
                    $stdevsludge2     = number_format(sqrt($fvariantsludge2),2);
                    $totalsludge2     = count($ndtsludge2);
                    $inspectsludge2   = $dt1;
                    $outspectsludge2  = $dt2;
                    $prsoutsludge2    = number_format((($dt2 /$totalsludge2)* (100)),2);

                } else {

                    $Minsludge2      = '';
                    $Maxsludge2      = '';
                    $Avgsludge2      = '';
                    $stdevsludge2    = '';
                    $totalsludge2    = '';
                    $inspectsludge2  = '';
                    $outspectsludge2 = '';
                    $prsoutsludge2   = '';
                }

                $rowfoot0  = $rowCount2+1;
                $rowfoot1  = $rowfoot0+1;
                $rowfoot2  = $rowfoot1+1;
                $rowfoot3  = $rowfoot2+1;
                $rowfoot4  = $rowfoot3+1;
                $rowfoot5  = $rowfoot4+1;
                $rowfoot6  = $rowfoot5+1;
                $rowfoot7  = $rowfoot6+1;
                $rowfoot8  = $rowfoot7+1;
                $rowfoot9  = $rowfoot8+1;
                $rowfoot10 = $rowfoot9+1;


                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;



                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 $objPHPExcel2->mergeCells('A'.$rowfoot0.':J'.$rowfoot0);
                 $objPHPExcel2->setSharedStyle($cellred, 'A'.$rowfoot0.':J'.$rowfoot0);
              //   $objPHPExcel2->getStyle(''.$rowfoot0.':M'.$rowfoot0)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                // $objPHPExcel2->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot1.':J'.$rowfoot1);
                 $objPHPExcel2->mergeCells('A'.$rowfoot1.':B'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Maximum ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot1,$Maxmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot1,$Maxffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot1,$Maxiodine_hasil2);

                 $objPHPExcel2->setCellValue('G'.$rowfoot1,$Maxred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot1,$Maxyellow2);                
                 $objPHPExcel2->setCellValue('H'.$rowfoot1,$Maxblue2);               
                 $objPHPExcel2->setCellValue('I'.$rowfoot1,$Maxsludge2);

                 $objPHPExcel2->setCellValue('J'.$rowfoot1,'');

                 $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot2.':J'.$rowfoot2);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot2.':B'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Maximum ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot2,$Minmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot2,$Minffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot2,$Miniodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot2,$Minred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot2,$Minyellow2);
                
                 $objPHPExcel2->setCellValue('H'.$rowfoot2,$Minblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot2,$Minsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot2,'');
                 

            

                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot3.':J'.$rowfoot3);
                 $objPHPExcel2->mergeCells('A'.$rowfoot3.':B'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Average ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot3,$Avgmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot3,$Avgffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot3,$Avgiodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot3,$Avgred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot3,$Avgyellow2);
                
                 $objPHPExcel2->setCellValue('H'.$rowfoot3,$Avgblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot3,$Avgsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot3,'');
                


                 $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot4.':J'.$rowfoot4);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot4.':B'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Stdev ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot4,$stdevmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot4,$stdevffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot4,$stdeviodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot4,$stdevred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot4,$stdevyellow2);
                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot4,$stdevblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot4,$stdevsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot4,'');
            


                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot5.':J'.$rowfoot5);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot5.':B'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'Total Data ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot5,$Countmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot5,$Countffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot5,$Countiodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot5,$Countred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot5,$Countyellow2);
               
                 $objPHPExcel2->setCellValue('H'.$rowfoot5,$Countblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot5,$Countsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot5,'');
                 

                   $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot6.':J'.$rowfoot6);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot6.':B'.$rowfoot6,':')->setCellValue('A'.$rowfoot6,'Within Spect Data ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot6,$inspectmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot6,$inspectffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot6,$inspectiodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot6,$inspectred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot6,$inspectyellow2);
                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot6,$inspectblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot6,$inspectsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot6,'');
                 

                 $objPHPExcel2->setSharedStyle($cellblue, 'A'.$rowfoot7.':J'.$rowfoot7);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot7.':B'.$rowfoot7,':')->setCellValue('A'.$rowfoot7,'Outspect Data ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot7,$outspectmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot7,$outspectffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot7,$outspectiodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot7,$outspectred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot7,$outspectyellow2);
                 
                 $objPHPExcel2->setCellValue('H'.$rowfoot7,$outspectblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot7,$outspectsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot7,'');
                

                 $objPHPExcel2->setSharedStyle($cellyellow, 'A'.$rowfoot8.':J'.$rowfoot8);
                
                 $objPHPExcel2->mergeCells('A'.$rowfoot8.':B'.$rowfoot8,':')->setCellValue('A'.$rowfoot8,'Percent Outspect ');
                 $objPHPExcel2->setCellValue('C'.$rowfoot8,$prsoutmc_hasil2);
                 $objPHPExcel2->setCellValue('D'.$rowfoot8,$prsoutffa_hasil2);
                 $objPHPExcel2->setCellValue('E'.$rowfoot8,$prsoutiodine_hasil2);
                 $objPHPExcel2->setCellValue('G'.$rowfoot8,$prsoutred2);
                 $objPHPExcel2->setCellValue('F'.$rowfoot8,$prsoutyellow2);
               
                 $objPHPExcel2->setCellValue('H'.$rowfoot8,$prsoutblue2);
                 $objPHPExcel2->setCellValue('I'.$rowfoot8,$prsoutsludge2);
                 $objPHPExcel2->setCellValue('J'.$rowfoot8,'');
                 


                 $objPHPExcel2->setSharedStyle($bodyStyle, 'A'.$rowfoot9.':J'.$rowfoot14);
                 $objPHPExcel2->mergeCells('A'.$rowfoot9.':C'.$rowfoot9)->setCellValue('A'.$rowfoot9,'REPORTED BY: ');
                 $objPHPExcel2->mergeCells('D'.$rowfoot9.':F'.$rowfoot9)->setCellValue('D'.$rowfoot9,'CHECKED AND CONFIRMATED BY : ');
                 $objPHPExcel2->mergeCells('G'.$rowfoot9.':J'.$rowfoot9)->setCellValue('G'.$rowfoot9,'ACKNOWLEDGED BY : ');

                 $objPHPExcel2->mergeCells('A'.$rowfoot10.':C'.$rowfoot11);
                 $objPHPExcel2->mergeCells('D'.$rowfoot10.':F'.$rowfoot11);
                 $objPHPExcel2->mergeCells('G'.$rowfoot10.':J'.$rowfoot11);

                 $objPHPExcel2->mergeCells('A'.$rowfoot12.':C'.$rowfoot12)->setCellValue('A'.$rowfoot12,'NAME : NOLA YULIA K ');
                 $objPHPExcel2->mergeCells('D'.$rowfoot12.':F'.$rowfoot12)->setCellValue('D'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel2->mergeCells('G'.$rowfoot12.':J'.$rowfoot12)->setCellValue('G'.$rowfoot12,'NAME : RISTINA YULIANI ');

                 $objPHPExcel2->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'POSITION : KS ');
                 $objPHPExcel2->mergeCells('D'.$rowfoot13.':F'.$rowfoot13)->setCellValue('D'.$rowfoot13,'POSITION : AMGR QAD ');
                 $objPHPExcel2->mergeCells('G'.$rowfoot13.':J'.$rowfoot13)->setCellValue('G'.$rowfoot13,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel2->mergeCells('A'.$rowfoot14.':C'.$rowfoot14)->setCellValue('A'.$rowfoot14,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('D'.$rowfoot14.':F'.$rowfoot14)->setCellValue('D'.$rowfoot14,'DATE : '.$tgl);
                 $objPHPExcel2->mergeCells('G'.$rowfoot14.':J'.$rowfoot14)->setCellValue('G'.$rowfoot14,'DATE : '.$tgl);

                 $objPHPExcel2->mergeCells('A'.$rowfoot15.':C'.$rowfoot16,':')->setCellValue('A'.$rowfoot15,'Definisi : ');
                 $objPHPExcel2->mergeCells('A'.$rowfoot17.':C'.$rowfoot17,':')->setCellValue('A'.$rowfoot17,'MC  : Moisture Content ');
                 $objPHPExcel2->mergeCells('A'.$rowfoot18.':C'.$rowfoot18,':')->setCellValue('A'.$rowfoot18,'FFA : Free Fatty acid ');
                 $objPHPExcel2->mergeCells('A'.$rowfoot19.':C'.$rowfoot19,':')->setCellValue('A'.$rowfoot19,'IV  :  Iodine Value ');
                 }
                 $objPHPExcel2->mergeCells('A'.$rowfoot20.':C'.$rowfoot20)->setCellValue('A'.$rowfoot20,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel2->mergeCells('I'.$rowfoot20.':J'.$rowfoot20)->setCellValue('I'.$rowfoot20,''.$frmnm);
                 $objPHPExcel2->mergeCells('D'.$rowfoot20.':H'.$rowfoot20);



                $objDrawing1 = new PHPExcel_Worksheet_Drawing();
                $objDrawing1->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel1 = $obj->createSheet(2);
                $objDrawing1->setCoordinates('A2');
                $objDrawing1->setWorksheet($objPHPExcel1);
                foreach(range('A','J') as $columnID){
                $objPHPExcel1->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel1>getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel1->mergeCells('A1:L1');
                 $objPHPExcel1->mergeCells('A2:A5');
                 $objPHPExcel1->mergeCells('B2:K5')->setCellValue('B2',$frmcop);
                 $objPHPExcel1->setCellValue('L2','Tahun: '.$thn);
                 $objPHPExcel1->setCellValue('L3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel1->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel1->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel1->setCellValue('L4','Hal: ');
                 $objPHPExcel1->setCellValue('A6','JUDUL');
                 $objPHPExcel1->mergeCells('B6:K6')->setCellValue('B6',''.$frmjdl.' IN TEMPORARY TANK');  
                 $objPHPExcel1->mergeCells('A7:A10')->setCellValue('A7','Tanggal '); 
                 $objPHPExcel1->mergeCells('B7:C7')->setCellValue('B7','QTY Temporary TANK');
                 $objPHPExcel1->mergeCells('D7:K7')->setCellValue('D7','DATA ANALISA CNO'); 
                 $objPHPExcel1->mergeCells('L7:L10')->setCellValue('L7','Remark'); 
                 $objPHPExcel1->mergeCells('B8:B10')->setCellValue('B8','TANK1 Temporary(Kg)');
                 $objPHPExcel1->mergeCells('C8:C10')->setCellValue('C8','TANK2 Temporary(Kg)');
                 $objPHPExcel1->mergeCells('D8:D10')->setCellValue('D8','Sample Time');
                 $objPHPExcel1->mergeCells('E8:E10')->setCellValue('E8','MC 0.7%');
                 $objPHPExcel1->mergeCells('F8:F10')->setCellValue('F8','FFA 3.0% max');
                 $objPHPExcel1->mergecells('G8:G10')->setCellValue('G8','IV 8.5-11%');
                 $objPHPExcel1->mergeCells('H8:J8')->setCellValue('H8','Color');
                 $objPHPExcel1->mergeCells('H9:H10')->setCellValue('H9','Red 8 max');
                 $objPHPExcel1->mergeCells('I9:I10')->setCellValue('I9','Yellow 30 max (%)');
                 $objPHPExcel1->mergeCells('J9:J10')->setCellValue('J9','Blue 0 Max');
                 $objPHPExcel1->mergeCells('K8:K10')->setCellValue('K8','%Sludge');              
                 $objPHPExcel1->setSharedStyle($headerStyle, 'A2:L10');
                
                  
                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail1)){
                 $rowCount1 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail1 as $row1){
                 $tgl_produksi = $row1->tgl_produksi;
                 $jam_sampling = $row1->jam_sampling;
                 $mc_hasil     = $row1->mc_hasil;
                 $ffa_hasil    = $row1->ffa_hasil;
                 $iodine_hasil = $row1->iodine_hasil;
                 $sludge       = $row1->sludge;
                 $yellow1      = $row1->yellow1;
                 $yellow2      = $row1->yellow2;
                 $red1         = $row1->red1;
                 $red2         = $row1->red2;
                 $blue1        = $row1->blue1;
                 $blue2        = $row1->blue2;
                 $keterangan   = $row1->keterangan;
                 $mc1          = $row1->mc1;
                 $mc2          = $row1->mc2;
                 $red1         = $row1->red1;
                 $red2         = $row1->red2;
                 $yellow1      = $row1->yellow1;
                 $yellow2      = $row1->yellow2;
                 $blue1        = $row1->blue1;
                 $blue2        = $row1->blue2;




                 $rowCount1++;

                 $objPHPExcel1->setSharedStyle($bodyStyle, 'A'.$rowCount1.':L'.$rowCount1);
                 $objPHPExcel1->setCellValue('A'.$rowCount1,$tgl_produksi);
                 $objPHPExcel1->setCellValue('B'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('C'.$rowCount1,'');
                 $objPHPExcel1->setCellValue('D'.$rowCount1,$jam_sampling);  
                 if($mc1 == ''){
                    // echo $mc2;
                    $objPHPExcel1->setCellValue('E'.$rowCount1,$mc2);
                 }elseif($mc2 == ''){
                    // echo $mc1;
                    $objPHPExcel1->setCellValue('E'.$rowCount1,$mc1);
                 }elseif($mc1 != '' && $mc2 != ''){
                    // echo $mc1;
                    $objPHPExcel1->setCellValue('E'.$rowCount1,$mc1);
                 }else{}             

                 // $objPHPExcel1->setCellValue('E'.$rowCount1,$mc_hasil);
                 if($row1->ffa_hasil==""){}elseif($row1->ffa_hasil > 3.00){
                    $objPHPExcel1->setSharedStyle($cellredcol,'F'.$rowCount1);
                    }


                 $objPHPExcel1->setCellValue('F'.$rowCount1,$ffa_hasil);
                if($row1->iodine_hasil==""){}elseif(($row1->iodine_hasil < 7.50) || ($row1->iodine_hasil > 10.50)) 
                    {
                        $objPHPExcel1->setSharedStyle($cellredcol,'G'.$rowCount1);
                 }
                 $objPHPExcel1->setCellValue('G'.$rowCount1,$iodine_hasil);
                 if($row1->red1 ==""){}
                    elseif(($row1->red1 > 8.0) || ($row1->red1 > 8.0)){
                    $objPHPExcel1->setSharedStyle($cellredcol,'H'.$rowCount1);
                    }

                 $objPHPExcel1->setCellValue('H'.$rowCount1,$red1);
                 if($row1->yellow1 ==""){}elseif(($row1->yellow1 > 30.0) || ($row1->yellow1 > 30.0)){
                     $objPHPExcel1->setSharedStyle($cellredcol,'I'.$rowCount1);
                   } 

                 $objPHPExcel1->setCellValue('I'.$rowCount1,$yellow1);
                 $objPHPExcel1->setCellValue('J'.$rowCount1,$blue1);
                 $objPHPExcel1->setCellValue('K'.$rowCount1,$sludge);
                 $objPHPExcel1->setCellValue('L'.$rowCount1,$keterangan);

                 $no++;
                    }
                 }  
                $dttglStart  = $this->uri->segment(8);
                $dttglFinish = $this->uri->segment(9);

                 if (isset($dtdetail1)){

                foreach($dtdetail1 as $row1){
                $dt_mc_hasil1    [] = $row1->mc_hasil;
                $dt_ffa_hasil1   [] = $row1->ffa_hasil;
                $dt_iodine_hasil1[] = $row1->iodine_hasil;
                $dt_red1         [] = $row1->red1;
                $dt_yellow1      [] = $row1->yellow1;
                $dt_blue1        [] = $row1->blue1;
                $dt_sludge1      [] = $row1->sludge;

                $ndtmc_hasil1     = array_diff($dt_mc_hasil1, array('',0));
                $ndtffa_hasil1    = array_diff($dt_ffa_hasil1, array('',0));
                $ndtiodine_hasil1 = array_diff($dt_iodine_hasil1, array('',0));
                $ndtred1          = array_diff($dt_red1, array('',0));
                $ndtyellow1       = array_diff($dt_yellow1, array('',0));
                $ndtblue1         = array_diff($dt_blue1, array('',0));
                $ndtsludge1       = array_diff($dt_sludge1, array('',0));

            }
                if(is_array($ndtmc_hasil1) && count($ndtmc_hasil1)> 0)
              {
                $Countmc_hasil1 = count($ndtmc_hasil1);
                $Avgmc_hasil1   = number_format((array_sum($ndtmc_hasil1)) /(count($ndtmc_hasil1)),2);
                $Minmc_hasil1   = min($ndtmc_hasil1);
                $Maxmc_hasil1   = max($ndtmc_hasil1);
              
                $fmeanmc_hasil1    = array_sum($ndtmc_hasil1) / count($ndtmc_hasil1);
                $fvariantmc_hasil1 = 0.00;
                $xsample1_1        = false;
                $dt1               = 0;$dt2 = 0;
                foreach ($ndtmc_hasil1 as $i){
                $fvariantmc_hasil1 += pow($i - $fmeanmc_hasil1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantmc_hasil1 /= ($xsample1_1 ? count($ndtmc_hasil1)-1 : count($ndtmc_hasil1));
                $stdevmc_hasil1     = number_format(sqrt($fvariantmc_hasil1),2);

              }else{

                $Minmc_hasil1      = '';
                $Maxmc_hasil1      = '';
                $Avgmc_hasil1      = '';
                $Countmc_hasil1    = '';
                $totalmc_hasil1    = '';
                $stdevmc_hasil1    = '';
                $inspectmc_hasil1  = '';
                $outspectmc_hasil1 = '';
                $prsoutmc_hasil1   = '';
              }

              if(is_array($ndtffa_hasil1) && count($ndtffa_hasil1)> 0)
              {
                $Countffa_hasil1 = count($ndtffa_hasil1);
                $Avgffa_hasil1   = number_format((array_sum($ndtffa_hasil1)) /(count($ndtffa_hasil1)),2);
                $Minffa_hasil1   = min($ndtffa_hasil1);
                $Maxffa_hasil1   = max($ndtffa_hasil1);
              
                $fmeanffa_hasil1    = array_sum($ndtffa_hasil1) / count($ndtffa_hasil1);
                $fvariantffa_hasil1 = 0.00;
                $xsample1_1         = false;
                $dt1                = 0;$dt2 = 0;
                foreach ($ndtffa_hasil1 as $i){
                $fvariantffa_hasil1 += pow($i - $fmeanffa_hasil1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantffa_hasil1 /= ($xsample1_1 ? count($ndtffa_hasil1)-1 : count($ndtffa_hasil1));
                $stdevffa_hasil1     = number_format(sqrt($fvariantffa_hasil1),2);

              }else{

                $Minffa_hasil1      = '';
                $Maxffa_hasil1      = '';
                $Avgffa_hasil1      = '';
                $Countffa_hasil1    = '';
                $totalffa_hasil1    = '';
                $stdevffa_hasil1    = '';
                $inspectffa_hasil1  = '';
                $outspectffa_hasil1 = '';
                $prsoutffa_hasil1   = '';
              }

              if(is_array($ndtiodine_hasil1) && count($ndtiodine_hasil1)> 0)
              {
                $Countiodine_hasil1 = count($ndtiodine_hasil1);
                $Avgiodine_hasil1   = number_format((array_sum($ndtiodine_hasil1)) /(count($ndtiodine_hasil1)),2);
                $Miniodine_hasil1   = min($ndtiodine_hasil1);
                $Maxiodine_hasil1   = max($ndtiodine_hasil1);
              
                $fmeaniodine_hasil1    = array_sum($ndtiodine_hasil1) / count($ndtiodine_hasil1);
                $fvariantiodine_hasil1 = 0.00;
                $xsample1_1            = false;
                $dt1                   = 0;$dt2 = 0;
                foreach ($ndtiodine_hasil1 as $i){
                $fvariantiodine_hasil1 += pow($i - $fmeaniodine_hasil1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantiodine_hasil1 /= ($xsample1_1 ? count($ndtiodine_hasil1)-1 : count($ndtiodine_hasil1));
                $stdeviodine_hasil1     = number_format(sqrt($fvariantiodine_hasil1),2);

              }else{

                $Miniodine_hasil1      = '';
                $Maxiodine_hasil1      = '';
                $Avgiodine_hasil1      = '';
                $Countiodine_hasil1    = '';
                $totaliodine_hasil1    = '';
                $stdeviodine_hasil1    = '';
                $inspectiodine_hasil1  = '';
                $outspectiodine_hasil1 = '';
                $prsoutiodine_hasil1   = '';
              }

               if(is_array($ndtred1) && count($ndtred1)> 0)
              {
                $Countred1 = count($ndtred1);
                $Avgred1   = number_format((array_sum($ndtred1)) /(count($ndtred1)),2);
                $Minred1   = min($ndtred1);
                $Maxred1   = max($ndtred1);
              
                $fmeanred1    = array_sum($ndtred1) / count($ndtred1);
                $fvariantred1 = 0.00;
                $xsample1_1   = false;
                $dt1          = 0;$dt2 = 0;
                foreach ($ndtred1 as $i){
                $fvariantred1 += pow($i - $fmeanred1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantred1 /= ($xsample1_1 ? count($ndtred1)-1 : count($ndtred1));
                $stdevred1     = number_format(sqrt($fvariantred1),2);

              }else{

                $Minred1      = '';
                $Maxred1      = '';
                $Avgred1      = '';
                $Countred1    = '';
                $totalred1    = '';
                $stdevred1    = '';
                $inspectred1  = '';
                $outspectred1 = '';
                $prsoutred1   = '';
              }

               if(is_array($ndtyellow1) && count($ndtyellow1)> 0)
              {
                $Countyellow1 = count($ndtyellow1);
                $Avgyellow1   = number_format((array_sum($ndtyellow1)) /(count($ndtyellow1)),2);
                $Minyellow1   = min($ndtyellow1);
                $Maxyellow1   = max($ndtyellow1);
              
                $fmeanyellow1    = array_sum($ndtyellow1) / count($ndtyellow1);
                $fvariantyellow1 = 0.00;
                $xsample1_1      = false;
                $dt1             = 0;$dt2 = 0;
                foreach ($ndtyellow1 as $i){
                $fvariantyellow1 += pow($i - $fmeanyellow1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantyellow1 /= ($xsample1_1 ? count($ndtyellow1)-1 : count($ndtyellow1));
                $stdevyellow1     = number_format(sqrt($fvariantyellow1),2);

              }else{

                $Minyellow1      = '';
                $Maxyellow1      = '';
                $Avgyellow1      = '';
                $Countyellow1    = '';
                $totalyellow1    = '';
                $stdevyellow1    = '';
                $inspectyellow1  = '';
                $outspectyellow1 = '';
                $prsoutyellow1   = '';
              }

               if(is_array($ndtblue1) && count($ndtblue1)> 0)
              {
                $Countblue1 = count($ndtblue1);
                $Avgblue1   = number_format((array_sum($ndtblue1)) /(count($ndtblue1)),2);
                $Minblue1   = min($ndtblue1);
                $Maxblue1   = max($ndtblue1);
              
                $fmeanblue1    = array_sum($ndtblue1) / count($ndtblue1);
                $fvariantblue1 = 0.00;
                $xsample1_1    = false;
                $dt1           = 0;$dt2 = 0;
                foreach ($ndtblue1 as $i){
                $fvariantblue1 += pow($i - $fmeanblue1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantblue1 /= ($xsample1_1 ? count($ndtblue1)-1 : count($ndtblue1));
                $stdevblue1     = number_format(sqrt($fvariantblue1),2);

              }else{

                $Minblue1      = '';
                $Maxblue1      = '';
                $Avgblue1      = '';
                $Countblue1    = '';
                $totalblue1    = '';
                $stdevblue1    = '';
                $inspectblue1  = '';
                $outspectblue1 = '';
                $prsoutblue1   = '';
              }
              

                if(is_array($ndtsludge1) && count($ndtsludge1)> 0)
              {
                $Countsludge1 = count($ndtsludge1);
                $Avgsludge1   = number_format((array_sum($ndtsludge1)) /(count($ndtsludge1)),2);
                $Minsludge1   = min($ndtsludge1);
                $Maxsludge1   = max($ndtsludge1);
              
                $fmeansludge1    = array_sum($ndtsludge1) / count($ndtsludge1);
                $fvariantsludge1 = 0.00;
                $xsample1_1      = false;
                $dt1             = 0;$dt2 = 0;
                foreach ($ndtsludge1 as $i){
                $fvariantsludge1 += pow($i - $fmeansludge1 ,2);
                if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                }

                $fvariantsludge1 /= ($xsample1_1 ? count($ndtsludge1)-1 : count($ndtsludge1));
                $stdevsludge1     = number_format(sqrt($fvariantsludge1),2);

              }else{

                $Minsludge1      = '';
                $Maxsludge1      = '';
                $Avgsludge1      = '';
                $Countsludge1    = '';
                $totalsludge1    = '';
                $stdevsludge1    = '';
                $inspectsludge1  = '';
                $outspectsludge1 = '';
                $prsoutsludge1   = '';
              }

               $rowfoot0  = $rowCount1+1;
               $rowfoot1  = $rowfoot0+1;
               $rowfoot2  = $rowfoot1+1;
               $rowfoot3  = $rowfoot2+1;
               $rowfoot4  = $rowfoot3+1;
               $rowfoot5  = $rowfoot4+1;
               $rowfoot6  = $rowfoot5+1;
               $rowfoot7  = $rowfoot6+1;
               $rowfoot8  = $rowfoot7+1;
               $rowfoot9  = $rowfoot8+1;
               $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 $objPHPExcel1->mergeCells('A'.$rowfoot0.':L'.$rowfoot0);
                 $objPHPExcel1->setSharedStyle($cellred, 'A'.$rowfoot0.':L'.$rowfoot0);
                 
                 $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot1.':L'.$rowfoot1);
                 $objPHPExcel1->mergeCells('A'.$rowfoot1.':D'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Maximum ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot1,$Maxmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot1,$Maxffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot1,$Maxiodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot1,$Maxred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot1,$Maxyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot1,$Maxblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot1,$Maxsludge1);


                 $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot2.':L'.$rowfoot2);
                 $objPHPExcel1->mergeCells('A'.$rowfoot2.':D'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Minimum ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot2,$Minmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot2,$Minffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot2,$Miniodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot2,$Minred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot2,$Minyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot2,$Minblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot2,$Minsludge1); 


                 $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot3.':L'.$rowfoot3);
                 $objPHPExcel1->mergeCells('A'.$rowfoot3.':D'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Minimum ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot3,$Avgmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot3,$Avgffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot3,$Avgiodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot3,$Avgred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot3,$Avgyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot3,$Avgblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot3,$Avgsludge1);

                 $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot4.':L'.$rowfoot4);
                 $objPHPExcel1->mergeCells('A'.$rowfoot4.':D'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Maximum ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot4,$stdevmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot4,$stdevffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot4,$stdeviodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot4,$stdevred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot4,$stdevyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot4,$stdevblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot4,$stdevsludge1);


                 $objPHPExcel1->setSharedStyle($cellblue, 'A'.$rowfoot5.':L'.$rowfoot5);
                 $objPHPExcel1->mergeCells('A'.$rowfoot5.':D'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'St Devisiasi ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot5,$Countmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot5,$Countffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot5,$Countiodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot5,$Countred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot5,$Countyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot5,$Countblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot5,$Countsludge1);

                 $objPHPExcel1->setSharedStyle($cellyellow, 'A'.$rowfoot6.':L'.$rowfoot6);
                 $objPHPExcel1->mergeCells('A'.$rowfoot6.':D'.$rowfoot6,':')->setCellValue('A'.$rowfoot6,'Total Data ');                 
                 $objPHPExcel1->setCellValue('E'.$rowfoot6,$Countmc_hasil1);
                 $objPHPExcel1->setCellValue('F'.$rowfoot6,$Countffa_hasil1);                 
                 $objPHPExcel1->setCellValue('G'.$rowfoot6,$Countiodine_hasil1);
                 $objPHPExcel1->setCellValue('H'.$rowfoot6,$Countred1);
                 $objPHPExcel1->setCellValue('I'.$rowfoot6,$Countyellow1);
                 $objPHPExcel1->setCellValue('J'.$rowfoot6,$Countblue1);
                 $objPHPExcel1->setCellValue('K'.$rowfoot6,$Countsludge1);



                 $objPHPExcel1->setSharedStyle($cellorange1, 'A'.$rowfoot7.':L'.$rowfoot7);                 
                 $objPHPExcel1->mergeCells('A'.$rowfoot7.':C'.$rowfoot7)->setCellValue('A'.$rowfoot7,'REPORTED BY: ');
                 $objPHPExcel1->mergeCells('D'.$rowfoot7.':I'.$rowfoot7)->setCellValue('D'.$rowfoot7,'CHECKED AND CONFIRMATED BY : ');
                 $objPHPExcel1->mergeCells('J'.$rowfoot7.':L'.$rowfoot7)->setCellValue('J'.$rowfoot7,'ACKNOWLEDGED BY : ');
                 $objPHPExcel1->setSharedStyle($bodyStyle,'A'.$rowfoot7.':L'.$rowfoot13);

                 $objPHPExcel1->mergeCells('A'.$rowfoot8.':C'.$rowfoot10);
                 $objPHPExcel1->mergeCells('D'.$rowfoot8.':I'.$rowfoot10);
                 $objPHPExcel1->mergeCells('J'.$rowfoot8.':L'.$rowfoot10);
       
                 $objPHPExcel1->setSharedStyle($bodyStyle, 'A'.$rowfoot11.':L'.$rowfoot13); 
                 $objPHPExcel1->mergeCells('A'.$rowfoot11.':C'.$rowfoot11)->setCellValue('A'.$rowfoot11,'NAME : NOLA YULIA K ');
                 $objPHPExcel1->mergeCells('D'.$rowfoot11.':I'.$rowfoot11)->setCellValue('D'.$rowfoot11,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel1->mergeCells('J'.$rowfoot11.':L'.$rowfoot11)->setCellValue('J'.$rowfoot11,'NAME : RISTINA ');
             
                 $objPHPExcel1->mergeCells('A'.$rowfoot12.':C'.$rowfoot12)->setCellValue('A'.$rowfoot12,'POSITION : KS ');
                 $objPHPExcel1->mergeCells('D'.$rowfoot12.':I'.$rowfoot12)->setCellValue('D'.$rowfoot12,'POSITION : AMGR QAD ');
                 $objPHPExcel1->mergeCells('J'.$rowfoot12.':L'.$rowfoot12)->setCellValue('J'.$rowfoot12,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel1->mergeCells('A'.$rowfoot13.':C'.$rowfoot13)->setCellValue('A'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel1->mergeCells('D'.$rowfoot13.':I'.$rowfoot13)->setCellValue('D'.$rowfoot13,'DATE : '.$tgl);
                 $objPHPExcel1->mergeCells('J'.$rowfoot13.':L'.$rowfoot13)->setCellValue('J'.$rowfoot13,'DATE : '.$tgl);
                 
              }
                 $objPHPExcel1->mergeCells('A'.$rowfoot14.':C'.$rowfoot14)->setCellValue('A'.$rowfoot14,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel1->mergeCells('K'.$rowfoot14.':L'.$rowfoot14)->setCellValue('K'.$rowfoot14,''.$frmnm);
                 $objPHPExcel1->mergeCells('D'.$rowfoot14.':I'.$rowfoot14);


                 
                /* -------------------------------
                 VIEW SUMMARY CNO WEEKLY STORAGE 
                 ----------------------------------*/  
                $objDrawing3 = new PHPExcel_Worksheet_Drawing();
                $objDrawing3->setPath('assets/images/tlogopsg.png');  
          
                $objPHPExcel3 = $obj->createSheet(3);
                $objDrawing3->setCoordinates('A2');
                $objDrawing3->setWorksheet($objPHPExcel3);
                foreach(range('A','M') as $columnID){
                $objPHPExcel3->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel3->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel3->mergeCells('A1:M1');
                 $objPHPExcel3->mergeCells('A2:A5');
                 $objPHPExcel3->mergeCells('B2:L5')->setCellValue('B2',$frmcop);
                 $objPHPExcel3->setCellValue('M2','Tahun: '.$thn);
                 $objPHPExcel3->setCellValue('M3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel3->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel3->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel3->setCellValue('M4','Hal: ');

                 $objPHPExcel3->setCellValue('A6','JUDUL');
                 $objPHPExcel3->mergeCells('B6:M6')->setCellValue('B6',''.$frmjdl.' WEEKLY STORAGE');
                 $objPHPExcel3->mergeCells('A7:A10')->setCellValue('A7','No');               
                 $objPHPExcel3->mergeCells('B7:B10')->setCellValue('B7','Tanggal Sampling');
                 $objPHPExcel3->mergeCells('C7:C10')->setCellValue('C7','Source Tanki ');
                 $objPHPExcel3->mergeCells('D7:D10')->setCellValue('D7','Tonase Stock(Kg)');
                 $objPHPExcel3->mergeCells('E7:E10')->setCellValue('E7','Jam');
                 $objPHPExcel3->setCellValue('F7','MC(%)');
                 $objPHPExcel3->setCellValue('G7','FFA(%)');
                 $objPHPExcel3->mergeCells('H7:J7')->setCellValue('H7','Warna');
                 $objPHPExcel3->mergeCells('K7:K10')->setCellValue('K7','IV(%) (8,5-10%)');
                 $objPHPExcel3->mergeCells('L7:L10')->setCellValue('L7','Sludge (%)');
                 $objPHPExcel3->mergeCells('M7:M10')->setCellValue('M7','Keterangan');
                 $objPHPExcel3->mergeCells('F8:F10')->setCellValue('F8','(Max 0,7%)');
                 $objPHPExcel3->mergeCells('G8:G10')->setCellValue('G8','(FFA(%)');
                 $objPHPExcel3->mergeCells('H8:H10')->setCellValue('H8','Yellow (max 30)');
                 $objPHPExcel3->mergeCells('I8:I10')->setCellValue('I8','Red (max 8)');
                 $objPHPExcel3->mergeCells('J8:J10')->setCellValue('J8','Blue');

                 $objPHPExcel3->setSharedStyle($headerStyle, 'A2:M10');
                
                  
                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
                 if(isset($dtdetail3)){

                 $rowCount3 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail3 as $row3){
                 $tgl_produksi = $row3->tgl_produksi;
                 $jns_sampel   = $row3->jns_sampel;
                 $jam_sampling = $row3->jam_sampling;
                 $mc           = $row3->mc;
                 $ffa          = $row3->ffa;
                 $yellow       = $row3->yellow;
                 $red          = $row3->red;
                 $blue         = $row3->blue;
                 $iodine       = $row3->iodine;
                 $sludge       = $row3->sludge;
                 $keterangan   = $row3->keterangan;
                 
                 $rowCount3++;

                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowCount3.':M'.$rowCount3);


                 $objPHPExcel3->setCellValue('A'.$rowCount3, $no);
                 $objPHPExcel3->setCellValue('B'.$rowCount3,$tgl_produksi);
                 $objPHPExcel3->setCellValue('C'.$rowCount3,$jns_sampel);
                 $objPHPExcel3->setCellValue('D'.$rowCount3.'');
                 $objPHPExcel3->setCellValue('E'.$rowCount3,$jam_sampling);
                 $objPHPExcel3->setCellValue('F'.$rowCount3,$mc);
                 $objPHPExcel3->setCellValue('G'.$rowCount3,$ffa);
                 $objPHPExcel3->setCellValue('H'.$rowCount3,$yellow);
                 $objPHPExcel3->setCellValue('I'.$rowCount3,$red);
                 $objPHPExcel3->setCellValue('J'.$rowCount3,$blue);
                 if($row3->iodine==""){}elseif(($row3->iodine < 7.50) || ($row3->iodine > 10.50)){
                 $objPHPExcel3->setSharedStyle($cellredcol, 'K'.$rowCount3);
                 }

                 $objPHPExcel3->setCellValue('K'.$rowCount3,$iodine);
                 $objPHPExcel3->setCellValue('L'.$rowCount3,$sludge);
                 $objPHPExcel3->setCellValue('M'.$rowCount3,$keterangan);

                 $no++;
                    }

                }

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                // $data_dtdetail1 =$this->$model->get_detail_bydate($dttglStart,$dttglFinish);
                  
               if(isset($dtdetail3)){
    
                 foreach ($dtdetail3 as $row3){
                 $dt_mc3    []  = $row3->mc;
                 $dt_ffa3   []  = $row3->ffa;
                 $dt_yellow3[]  = $row3->yellow;
                 $dt_red3    [] = $row3->red;
                 $dt_blue3  []  = $row3->blue;
                 $dt_iodine3[]  = $row3->iodine;
                 $dt_sludge3[]  = $row3->sludge;
            
  
                $ndtmc3          = array_diff($dt_mc3, array('',0));
                $ndtffa3         = array_diff($dt_ffa3, array('',0));
                $ndtwarnayellow3 = array_diff($dt_yellow3, array('',0));
                $ndtwarnared3    = array_diff($dt_red3, array('',0));
                $ndtwarnablue3   = array_diff($dt_blue3, array('',0));
                $ndtIV3          = array_diff($dt_iodine3, array('',0));
                $ndtsludge3      = array_diff($dt_sludge3, array('',0));
                }
                 if(is_array($ndtmc3) && count ($ndtmc3) > 0)
                {
                    $Minmc3   = min($ndtmc3);
                    $Maxmc3   = max($ndtmc3);
                    $Avgmc3   = number_format((array_sum($ndtmc3)) /(count($ndtmc3)),2);
                    $Countmc3 = count($ndtmc3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanmc3    = array_sum($ndtmc3) / count($ndtmc3);
                    $fvariantmc3 = 0.00;
                    $xsamplemc3  = false;
                    $dt1         = 0;$dt2 = 0;
                    foreach ($ndtmc3 as $i){
                    $fvariantmc3 += pow($i - $fmeanmc3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantmc3 /= ($xsamplemc3 ? count($ndtmc3)-1 : count($ndtmc3));
                    $stdevmc3     = number_format(sqrt($fvariantmc3),2);
                    $totalmc3     = count($ndtmc3);
                    $inspectmc3   = $dt1;
                    $outspectmc3  = $dt2;
                    $prsoutmc3    = number_format((($dt2 /$totalmc3)* (100)),2);

                } else {

                    $Minmc3      = '';
                    $Maxmc3      = '';
                    $Avgmc3      = '';
                    $stdevmc3    = '';
                    $totalmc3    = '';
                    $inspectmc3  = '';
                    $outspectmc3 = '';
                    $prsoutmc3   = '';
                }

                if(is_array($ndtffa3) && count ($ndtffa3) > 0)
                {
                    $Minffa3   = min($ndtffa3);
                    $Maxffa3   = max($ndtffa3);
                    $Avgffa3   = number_format((array_sum($ndtffa3)) /(count($ndtffa3)),2);
                    $Countffa3 = count($ndtffa3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanffa3    = array_sum($ndtffa3) / count($ndtffa3);
                    $fvariantffa3 = 0.00;
                    $xsampleffa3  = false;
                    $dt1          = 0;$dt2 = 0;
                    foreach ($ndtffa3 as $i){
                    $fvariantffa3 += pow($i - $fmeanffa3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantffa3 /= ($xsampleffa3 ? count($ndtffa3)-1 : count($ndtffa3));
                    $stdevffa3     = number_format(sqrt($fvariantffa3),2);
                    $totalffa3     = count($ndtffa3);
                    $inspectffa3   = $dt1;
                    $outspectffa3  = $dt2;
                    $prsoutffa3    = number_format((($dt2 /$totalffa3)* (100)),2);

                } else {
                    $Minffa3      = '';
                    $Maxffa3      = '';
                    $Avgffa3      = '';
                    $stdevffa3    = '';
                    $totalffa3    = '';
                    $inspectffa3  = '';
                    $outspectffa3 = '';
                    $prsoutffa3   = '';
                }

                if(is_array($ndtwarnayellow3) && count ($ndtwarnayellow3) > 0)
                {
                    $Minwarnayellow3   = min($ndtwarnayellow3);
                    $Maxwarnayellow3   = max($ndtwarnayellow3);
                    $Avgwarnayellow3   = number_format((array_sum($ndtwarnayellow3)) /(count($ndtwarnayellow3)),2);
                    $Countwarnayellow3 = count($ndtwarnayellow3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnayellow3    = array_sum($ndtwarnayellow3) / count($ndtwarnayellow3);
                    $fvariantwarnayellow3 = 0.00;
                    $xsamplewarnayellow3  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtwarnayellow3 as $i){
                    $fvariantwarnayellow3 += pow($i - $fmeanwarnayellow3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnayellow3 /= ($xsamplewarnayellow3 ? count($ndtwarnayellow3)-1 : count($ndtwarnayellow3));
                    $stdevwarnayellow3     = number_format(sqrt($fvariantwarnayellow3),2);
                    $totalwarnayellow3     = count($ndtwarnayellow3);
                    $inspectwarnayellow3   = $dt1;
                    $outspectwarnayellow3  = $dt2;
                    $prsoutwarnayellow3    = number_format((($dt2 /$totalwarnayellow3)* (100)),2);

                } else {
                    $Minwarnayellow3      = '';
                    $Maxwarnayellow3      = '';
                    $Avgwarnayellow3      = '';
                    $stdevwarnayellow3    = '';
                    $totalwarnayellow3    = '';
                    $inspectwarnayellow3  = '';
                    $outspectwarnayellow3 = '';
                    $prsoutwarnayellow3   = '';
                }

                if(is_array($ndtwarnared3) && count ($ndtwarnared3) > 0)
                {
                    $Minwarnared3   = min($ndtwarnared3);
                    $Maxwarnared3   = max($ndtwarnared3);
                    $Avgwarnared3   = number_format((array_sum($ndtwarnared3)) /(count($ndtwarnared3)),2);
                    $Countwarnared3 = count($ndtwarnared3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnared3    = array_sum($ndtwarnared3) / count($ndtwarnared3);
                    $fvariantwarnared3 = 0.00;
                    $xsamplewarnared3  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtwarnared3 as $i){
                    $fvariantwarnared3 += pow($i - $fmeanwarnared3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnared3 /= ($xsamplewarnared3 ? count($ndtwarnared3)-1 : count($ndtwarnared3));
                    $stdevwarnared3     = number_format(sqrt($fvariantwarnared3),2);
                    $totalwarnared3     = count($ndtwarnared3);
                    $inspectwarnared3   = $dt1;
                    $outspectwarnared3  = $dt2;
                    $prsoutwarnared3    = number_format((($dt2 /$totalwarnared3)* (100)),2);

                } else {
                    $Minpwarnard3     = '';
                    $Maxpwarnard3     = '';
                    $Avgwarnard3      = '';
                    $stdevwarnard3    = '';
                    $totalwarnard3    = '';
                    $inspectwarnard3  = '';
                    $outspectwarnard3 = '';
                    $prsoutwarnard3   = '';
                }

                if(is_array($ndtwarnablue3) && count ($ndtwarnablue3) > 0)
                {
                    $Minwarnablue3   = min($ndtwarnablue3);
                    $Maxwarnablue3   = max($ndtwarnablue3);
                    $Avgwarnablue3   = number_format((array_sum($ndtwarnablue3)) /(count($ndtwarnablue3)),2);
                    $Countwarnablue3 = count($ndtwarnablue3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnablue3    = array_sum($ndtwarnablue3) / count($ndtwarnablue3);
                    $fvariantwarnablue3 = 0.00;
                    $xsamplewarnablue3  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndwarnablue3 as $i){
                    $fvariantwarnablue3 += pow($i - $fmeanwarnablue3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnablue3 /= ($xsamplewarnablue3 ? count($ndwarnablue3)-1 : count($ndwarnablue3));
                    $stdevwarnablue3     = number_format(sqrt($fvariantwarnablue3),2);
                    $totalwarnablue3     = count($ndtwarnablue3);
                    $inspectwarnablue3   = $dt1;
                    $outspectwarnablue3  = $dt2;
                    $prsoutwarnablue3    = number_format((($dt2 /$totalwarnablue3)* (100)),2);

                } else {
                    $Minwarnablue3      = '';
                    $Maxwarnablue3      = '';
                    $Avgwarnablue3      = '';
                    $stdevwarnablue3    = '';
                    $totalwarnablue3    = '';
                    $inspectwarnablue3  = '';
                    $outspectwarnablue3 = '';
                    $prsoutwarnablue3   = '';
                }

                if(is_array($ndtIV3) && count ($ndtIV3) > 0)
                {
                    $MinIV3   = min($ndtIV3);
                    $MaxIV3   = max($ndtIV3);
                    $AvgIV3   = number_format((array_sum($ndtIV3)) /(count($ndtIV3)),2);
                    $CountIV3 = count($ndtIV3);
                    //nilai standard devisiasi (sttdev)
                    $fmeanIV3    = array_sum($ndtIV3) / count($ndtIV3);
                    $fvariantIV3 = 0.00;
                    $xsampleIV3  = false;
                    $dt1         = 0;$dt2 = 0;
                    foreach ($ndtIV3 as $i){
                    $fvariantIV3 += pow($i - $fmeanIV3,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantIV3 /= ($xsampleIV3 ? count($ndtIV3)-1 : count($ndtIV3));
                    $stdevIV3     = number_format(sqrt($fvariantIV3),2);
                    $totalIV3     = count($ndtIV3);
                    $inspectIV3   = $dt1;
                    $outspectIV3  = $dt2;
                    $prsoutIV3    = number_format((($dt2 /$totalIV3)* (100)),2);

                } else {
                    $MinIV3      = '';
                    $MaxIV3      = '';
                    $AvgIV3      = '';
                    $stdevIV3    = '';
                    $totalIV3    = '';
                    $inspectIV3  = '';
                    $outspectIV3 = '';
                    $prsoutIV3   = '';
                }

                if(is_array($ndtsludge3) && count ($ndtsludge3) > 0)
                {
                    $Minsludge3   = min($ndtsludge3);
                    $Maxsludge3   = max($ndtsludge3);
                    $Avgsludge3   = number_format((array_sum($ndtsludge3)) /(count($ndtsludge3)),2);
                    $Countsludge3 = count($ndtsludge3);
                    //nilai standard devisiasi (sttdev)
                    $fmeansludge3    = array_sum($ndtsludge3) / count($ndtsludge3);
                    $fvariantsludge3 = 0.00;
                    $xsamplesludge3  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtsludge3 as $i){
                    $fvariantsludge3 += pow($i - $fmeansludge3 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsludge3 /= ($xsamplesludge3 ? count($ndtsludge3)-1 : count($ndtsludge3));
                    $stdevsludge3     = number_format(sqrt($fvariantsludge3),2);
                    $totalsludge3     = count($ndtsludge3);
                    $inspectsludge3   = $dt1;
                    $outspectsludge3  = $dt2;
                    $prsoutsludge3    = number_format((($dt2 /$totalsludge3)* (100)),2);

                } else {
                    $Minsludge3      = '';
                    $Maxsludge3      = '';
                    $Avgsludge3      = '';
                    $stdevsludge3    = '';
                    $totalsludge3    = '';
                    $inspectsludge3  = '';
                    $outspectsludge3 = '';
                    $prsoutsludge3   = '';
                }
                
                 $rowfoot0  = $rowCount3+1;
                 $rowfoot1  = $rowfoot0+1;
                 $rowfoot2  = $rowfoot1+1;
                 $rowfoot3  = $rowfoot2+1;
                 $rowfoot4  = $rowfoot3+1;
                 $rowfoot5  = $rowfoot4+1;
                 $rowfoot6  = $rowfoot5+1;
                 $rowfoot7  = $rowfoot6+1;
                 $rowfoot8  = $rowfoot7+1;
                 $rowfoot9  = $rowfoot8+1;
                 $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 $objPHPExcel3->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objPHPExcel3->setSharedStyle($cellred, 'A'.$rowfoot0.':M'.$rowfoot0);
              //   $objPHPExcel3->getStyle(''.$rowfoot0.':M'.$rowfoot0)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                // $objPHPExcel3->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot1.':M'.$rowfoot1);
                 $objPHPExcel3->mergeCells('A'.$rowfoot1.':C'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Maximum ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot1,$Maxmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot1,$Maxffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot1,$Maxwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot1,$Maxwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot1,$Maxwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot1,$MaxIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot1,$Maxsludge3);
                
                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot2.':M'.$rowfoot2);
                 $objPHPExcel3->mergeCells('A'.$rowfoot2.':C'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Minimum ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot2,$Minmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot2,$Minffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot2,$Minwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot2,$Minwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot2,$Minwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot2,$MinIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot2,$Minsludge3);
                 
                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot3.':M'.$rowfoot3);
                 $objPHPExcel3->mergeCells('A'.$rowfoot3.':C'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Average ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot3,$Avgmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot3,$Avgffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot3,$Avgwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot3,$Avgwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot3,$Avgwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot3,$AvgIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot3,$Avgsludge3);
                
                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot4.':M'.$rowfoot4);
                 $objPHPExcel3->mergeCells('A'.$rowfoot4.':C'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Stdev ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot4,$stdevmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot4,$stdevffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot4,$stdevwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot4,$stdevwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot4,$stdevwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot4,$stdevIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot4,$stdevsludge3);


                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot5.':M'.$rowfoot5);
                 $objPHPExcel3->mergeCells('A'.$rowfoot5.':C'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'Total Data ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot5,$totalmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot5,$totalffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot5,$totalwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot5,$totalwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot5,$totalwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot5,$totalIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot5,$totalsludge3);
                 
                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot6.':M'.$rowfoot6);
                 $objPHPExcel3->mergeCells('A'.$rowfoot6.':C'.$rowfoot6,':')->setCellValue('A'.$rowfoot6,'Within Spect Data ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot6,$inspectmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot6,$inspectffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot6,$inspectwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot6,$inspectwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot6,$inspectwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot6,$inspectIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot6,$inspectsludge3);

                 $objPHPExcel3->setSharedStyle($cellblue, 'A'.$rowfoot7.':M'.$rowfoot7);
                 $objPHPExcel3->mergeCells('A'.$rowfoot7.':C'.$rowfoot7,':')->setCellValue('A'.$rowfoot7,'Outspect Data ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot7,$outspectmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot7,$outspectffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot7,$outspectwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot7,$outspectwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot7,$outspectwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot7,$outspectIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot7,$outspectsludge3); 
                 $objPHPExcel3->setSharedStyle($cellyellow, 'A'.$rowfoot8.':M'.$rowfoot8);
                 $objPHPExcel3->mergeCells('A'.$rowfoot8.':C'.$rowfoot8,':')->setCellValue('A'.$rowfoot8,'Percent Outspect ');
                 $objPHPExcel3->setCellValue('F'.$rowfoot8,$prsoutmc3);
                 $objPHPExcel3->setCellValue('G'.$rowfoot8,$prsoutffa3);
                 $objPHPExcel3->setCellValue('H'.$rowfoot8,$prsoutwarnayellow3);
                 $objPHPExcel3->setCellValue('I'.$rowfoot8,$prsoutwarnared3);
                 $objPHPExcel3->setCellValue('J'.$rowfoot8,$prsoutwarnablue3);
                 $objPHPExcel3->setCellValue('K'.$rowfoot8,$prsoutIV3);
                 $objPHPExcel3->setCellValue('L'.$rowfoot8,$prsoutsludge3);
                 $objPHPExcel3->setSharedStyle($bodyStyle, 'A'.$rowfoot9.':M'.$rowfoot14);
                 $objPHPExcel3->mergeCells('A'.$rowfoot9.':D'.$rowfoot9)->setCellValue('A'.$rowfoot9,'REPORTED BY: ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot9.':J'.$rowfoot9)->setCellValue('E'.$rowfoot9,'CHECKED AND CONFIRMATED BY : ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot9.':M'.$rowfoot9)->setCellValue('K'.$rowfoot9,'ACKNOWLEDGED BY : ');
                 $objPHPExcel3->mergeCells('A'.$rowfoot10.':D'.$rowfoot11);
                 $objPHPExcel3->mergeCells('E'.$rowfoot10.':J'.$rowfoot11);
                 $objPHPExcel3->mergeCells('K'.$rowfoot10.':M'.$rowfoot11);
                 $objPHPExcel3->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'NAME : NOLA YULIA K ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot12.':M'.$rowfoot12)->setCellValue('K'.$rowfoot12,'NAME : RISTINA YULIANI ');
                 $objPHPExcel3->mergeCells('A'.$rowfoot13.':D'.$rowfoot13)->setCellValue('A'.$rowfoot13,'POSITION : KS ');
                 $objPHPExcel3->mergeCells('E'.$rowfoot13.':J'.$rowfoot13)->setCellValue('E'.$rowfoot13,'POSITION : AMGR QAD ');
                 $objPHPExcel3->mergeCells('K'.$rowfoot13.':M'.$rowfoot13)->setCellValue('K'.$rowfoot13,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel3->mergeCells('A'.$rowfoot14.':D'.$rowfoot14)->setCellValue('A'.$rowfoot14,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('E'.$rowfoot14.':J'.$rowfoot14)->setCellValue('E'.$rowfoot14,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('K'.$rowfoot14.':M'.$rowfoot14)->setCellValue('K'.$rowfoot14,'DATE : '.$tgl);
                 $objPHPExcel3->mergeCells('A'.$rowfoot15.':M'.$rowfoot16,':')->setCellValue('A'.$rowfoot15,'Definisi : ');
                 $objPHPExcel3->mergeCells('A'.$rowfoot17.':M'.$rowfoot17,':')->setCellValue('A'.$rowfoot17,'MC  : Moisture Content ');
                 $objPHPExcel3->mergeCells('A'.$rowfoot18.':M'.$rowfoot18,':')->setCellValue('A'.$rowfoot18,'FFA : Free Fatty acid ');
                 $objPHPExcel3->mergeCells('A'.$rowfoot19.':M'.$rowfoot19,':')->setCellValue('A'.$rowfoot19,'IV  :  Iodine Value ');
                 }
                 $objPHPExcel3->mergeCells('A'.$rowfoot20.':C'.$rowfoot20)->setCellValue('A'.$rowfoot20,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel3->mergeCells('K'.$rowfoot20.':M'.$rowfoot20)->setCellValue('K'.$rowfoot20,''.$frmnm);
                 $objPHPExcel3->mergeCells('D'.$rowfoot20.':J'.$rowfoot20);



                 /* -------------------------------
                 VIEW SUMMARY CNO AFTER POLISHING 
                 ----------------------------------*/

                $objDrawing4 = new PHPExcel_Worksheet_Drawing();
                $objDrawing4->setPath('assets/images/tlogopsg.png');
                
                


                $objphpexcel4 = $obj->createSheet(4);
                $objDrawing4->setCoordinates('A2');
                $objDrawing4->setWorksheet($objphpexcel4);
                foreach(range('A','M') as $columnID){
                $objphpexcel4->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objphpexcel4->mergeCells('A1:M1');
                 $objphpexcel4->mergeCells('A2:A5');
                 $objphpexcel4->mergeCells('B2:L5')->setCellValue('B2',$frmcop);
                 $objphpexcel4->setCellValue('M2','Tahun: '.$thn);
                 $objphpexcel4->setCellValue('M3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objphpexcel4->getHeaderFooter()->setOddFooter('&R&F');
                 //$objphpexcel4->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objphpexcel4->setCellValue('M4','Hal: ');

                 $objphpexcel4->setCellValue('A6','JUDUL');
                 $objphpexcel4->mergeCells('B6:M6')->setCellValue('B6',''.$frmjdl.' LOADING');
                 $objphpexcel4->mergeCells('A7:A10')->setCellValue('A7','No');               
                 $objphpexcel4->mergeCells('B7:B10')->setCellValue('B7','Tanggal Sampling');
                 $objphpexcel4->mergeCells('C7:C10')->setCellValue('C7','Source Tanki ');
                 $objphpexcel4->mergeCells('D7:D10')->setCellValue('D7','Posisi Sampling)');
                 $objphpexcel4->mergeCells('E7:E10')->setCellValue('E7','Jam');
                 $objphpexcel4->setCellValue('F7','MC(%)');
                 $objphpexcel4->setCellValue('G7','FFA(%)');
                 $objphpexcel4->mergeCells('H7:J7')->setCellValue('H7','Warna');
                 $objphpexcel4->mergeCells('K7:K10')->setCellValue('K7','IV(%) (8,5-10%)');
                 $objphpexcel4->mergeCells('L7:L10')->setCellValue('L7','Sludge (%)');
                 $objphpexcel4->mergeCells('M7:M10')->setCellValue('M7','Keterangan');
                 $objphpexcel4->mergeCells('F8:F10')->setCellValue('F8','(Max 0,7%)');
                 $objphpexcel4->mergeCells('G8:G10')->setCellValue('G8','(FFA(%)');
                 $objphpexcel4->mergeCells('H8:H10')->setCellValue('H8','Yellow (max 30)');
                 $objphpexcel4->mergeCells('I8:I10')->setCellValue('I8','Red (max 8)');
                 $objphpexcel4->mergeCells('J8:J10')->setCellValue('J8','Blue');

                 $objphpexcel4->setSharedStyle($headerStyle, 'A2:M10');


                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                // $dtdetail4 =$this->$model->get_detail_bydate4($dttglStart,$dttglFinish);
                 if(isset($dtdetail4)){

                 $rowCount4 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail4 as $row4){
                 $tgl_produksi = $row4->tgl_produksi;
                 $jns_sampel   = $row4->jns_sampel;
                 $jam_sampling = $row4->jam_sampling;
                 $mc           = $row4->mc;
                 $ffa          = $row4->ffa;
                 $yellow       = $row4->yellow;
                 $red          = $row4->red;
                 $blue         = $row4->blue;
                 $iodine       = $row4->iodine;
                 $sludge       = $row4->sludge;
                 $keterangan   = $row4->keterangan;
                 
                 $rowCount4++;
                

                 $objphpexcel4->setSharedStyle($bodyStyle, 'A'.$rowCount4.':M'.$rowCount4);
                 $objphpexcel4->setCellValue('A'.$rowCount4, $no);
                 $objphpexcel4->setCellValue('B'.$rowCount4,$tgl_produksi);
                 $objphpexcel4->setCellValue('C'.$rowCount4,$jns_sampel);
                 $objphpexcel4->setCellValue('D'.$rowCount4.'');
                 $objphpexcel4->setCellValue('E'.$rowCount4,$jam_sampling);
                if($row4->mc==""){}elseif($row4->mc > 0.70){
                   $objphpexcel4->setSharedStyle($cellredcol, 'F'.$rowCount4);
                }
                 $objphpexcel4->setCellValue('F'.$rowCount4,$mc);
                 if($row4->ffa==""){}elseif($row4->ffa > 3.00){
                     $objphpexcel4->setSharedStyle($cellredcol, 'G'.$rowCount4);
                }

                 $objphpexcel4->setCellValue('G'.$rowCount4,$ffa);
                 if($row4->yellow==""){}elseif($row4->yellow > 30.0){
                   $objphpexcel4->setSharedStyle($cellredcol, 'H'.$rowCount4);
                }
                 $objphpexcel4->setCellValue('H'.$rowCount4,$yellow);
                 if($row4->red==""){}elseif($row4->red > 8.0){
                     $objphpexcel4->setSharedStyle($cellredcol, 'I'.$rowCount4);
                }
                 $objphpexcel4->setCellValue('I'.$rowCount4,$red);
                 $objphpexcel4->setCellValue('J'.$rowCount4,$blue);
               
                if($row4->iodine==""){}elseif(($row4->iodine < 7.50) || ($row4->iodine > 10.50)){
                   $objphpexcel4->setSharedStyle($cellredcol, 'K'.$rowCount4);
                }
                 $objphpexcel4->setCellValue('K'.$rowCount4,$iodine);
                 $objphpexcel4->setCellValue('L'.$rowCount4,$sludge);


                 $objphpexcel4->setCellValue('M'.$rowCount4,$keterangan);
                 $no++;
                 
               }
          }

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
               if(isset($dtdetail4)){
    
                 foreach ($dtdetail4 as $row4){
                 $dt_mc4    []  = $row4->mc;
                 $dt_ffa4   []  = $row4->ffa;
                 $dt_yellow4[]  = $row4->yellow;
                 $dt_red4    [] = $row4->red;
                 $dt_blue4  []  = $row4->blue;
                 $dt_iodine4[]  = $row4->iodine;
                 $dt_sludge4[]  = $row4->sludge;
            
  
                $ndtmc4          = array_diff($dt_mc4, array('',0));
                $ndtffa4         = array_diff($dt_ffa4, array('',0));
                $ndtwarnayellow4 = array_diff($dt_yellow4, array('',0));
                $ndtwarnared4    = array_diff($dt_red4, array('',0));
                $ndtwarnablue4   = array_diff($dt_blue4, array('',0));
                $ndtIV4          = array_diff($dt_iodine4, array('',0));
                $ndtsludge4      = array_diff($dt_sludge4, array('',0));
                }
                 if(is_array($ndtmc4) && count ($ndtmc4) > 0)
                {
                    $Minmc4   = min($ndtmc4);
                    $Maxmc4   = max($ndtmc4);
                    $Avgmc4   = number_format((array_sum($ndtmc4)) /(count($ndtmc4)),2);
                    $Countmc4 = count($ndtmc4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanmc4    = array_sum($ndtmc4) / count($ndtmc4);
                    $fvariantmc4 = 0.00;
                    $xsamplemc4  = false;
                    $dt1         = 0;$dt2 = 0;
                    foreach ($ndtmc4 as $i){
                    $fvariantmc4 += pow($i - $fmeanmc4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantmc4 /= ($xsamplemc4 ? count($ndtmc4)-1 : count($ndtmc4));
                    $stdevmc4     = number_format(sqrt($fvariantmc4),2);
                    $totalmc4     = count($ndtmc4);
                    $inspectmc4   = $dt1;
                    $outspectmc4  = $dt2;
                    $prsoutmc4    = number_format((($dt2 /$totalmc4)* (100)),2);

                } else {

                    $Minmc4      = '';
                    $Maxmc4      = '';
                    $Avgmc4      = '';
                    $stdevmc4    = '';
                    $totalmc4    = '';
                    $inspectmc4  = '';
                    $outspectmc4 = '';
                    $prsoutmc4   = '';
                }

                if(is_array($ndtffa4) && count ($ndtffa4) > 0)
                {
                    $Minffa4   = min($ndtffa4);
                    $Maxffa4   = max($ndtffa4);
                    $Avgffa4   = number_format((array_sum($ndtffa4)) /(count($ndtffa4)),2);
                    $Countffa4 = count($ndtffa4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanffa4    = array_sum($ndtffa4) / count($ndtffa4);
                    $fvariantffa4 = 0.00;
                    $xsampleffa4  = false;
                    $dt1          = 0;$dt2 = 0;
                    foreach ($ndtffa4 as $i){
                    $fvariantffa4 += pow($i - $fmeanffa4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantffa4 /= ($xsampleffa4 ? count($ndtffa4)-1 : count($ndtffa4));
                    $stdevffa4     = number_format(sqrt($fvariantffa4),2);
                    $totalffa4     = count($ndtffa4);
                    $inspectffa4   = $dt1;
                    $outspectffa4  = $dt2;
                    $prsoutffa4    = number_format((($dt2 /$totalffa4)* (100)),2);

                } else {
                    $Minffa4      = '';
                    $Maxffa4      = '';
                    $Avgffa4      = '';
                    $stdevffa4    = '';
                    $totalffa4    = '';
                    $inspectffa4  = '';
                    $outspectffa4 = '';
                    $prsoutffa4   = '';
                }

                if(is_array($ndtwarnayellow4) && count ($ndtwarnayellow4) > 0)
                {
                    $Minwarnayellow4   = min($ndtwarnayellow4);
                    $Maxwarnayellow4   = max($ndtwarnayellow4);
                    $Avgwarnayellow4   = number_format((array_sum($ndtwarnayellow4)) /(count($ndtwarnayellow4)),2);
                    $Countwarnayellow4 = count($ndtwarnayellow4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnayellow4    = array_sum($ndtwarnayellow4) / count($ndtwarnayellow4);
                    $fvariantwarnayellow4 = 0.00;
                    $xsamplewarnayellow4  = false;
                    $dt1                  = 0;$dt2 = 0;
                    foreach ($ndtwarnayellow4 as $i){
                    $fvariantwarnayellow4 += pow($i - $fmeanwarnayellow4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnayellow4 /= ($xsamplewarnayellow4 ? count($ndtwarnayellow4)-1 : count($ndtwarnayellow4));
                    $stdevwarnayellow4     = number_format(sqrt($fvariantwarnayellow4),2);
                    $totalwarnayellow4     = count($ndtwarnayellow4);
                    $inspectwarnayellow4   = $dt1;
                    $outspectwarnayellow4  = $dt2;
                    $prsoutwarnayellow4    = number_format((($dt2 /$totalwarnayellow4)* (100)),2);

                } else {
                    $Minwarnayellow4      = '';
                    $Maxwarnayellow4      = '';
                    $Avgwarnayellow4      = '';
                    $stdevwarnayellow4    = '';
                    $totalwarnayellow4    = '';
                    $inspectwarnayellow4  = '';
                    $outspectwarnayellow4 = '';
                    $prsoutwarnayellow4   = '';
                }

                if(is_array($ndtwarnared4) && count ($ndtwarnared4) > 0)
                {
                    $Minwarnared4   = min($ndtwarnared4);
                    $Maxwarnared4   = max($ndtwarnared4);
                    $Avgwarnared4   = number_format((array_sum($ndtwarnared4)) /(count($ndtwarnared4)),2);
                    $Countwarnared4 = count($ndtwarnared4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnared4    = array_sum($ndtwarnared4) / count($ndtwarnared4);
                    $fvariantwarnared4 = 0.00;
                    $xsamplewarnared4  = false;
                    $dt1               = 0;$dt2 = 0;
                    foreach ($ndtwarnared4 as $i){
                    $fvariantwarnared4 += pow($i - $fmeanwarnared4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnared4 /= ($xsamplewarnared4 ? count($ndtwarnared4)-1 : count($ndtwarnared4));
                    $stdevwarnared4     = number_format(sqrt($fvariantwarnared4),2);
                    $totalwarnared4     = count($ndtwarnared4);
                    $inspectwarnared4   = $dt1;
                    $outspectwarnared4  = $dt2;
                    $prsoutwarnared4    = number_format((($dt2 /$totalwarnared4)* (100)),2);

                } else {
                    $Minpwarnared4     = '';
                    $Maxpwarnared4     = '';
                    $Avgwarnared4      = '';
                    $stdevwarnared4    = '';
                    $totalwarnared4    = '';
                    $inspectwarnared4  = '';
                    $outspectwarnared4 = '';
                    $prsoutwarnared4   = '';
                }

                if(is_array($ndtwarnablue4) && count ($ndtwarnablue4) > 0)
                {
                    $Minwarnablue4   = min($ndtwarnablue4);
                    $Maxwarnablue4   = max($ndtwarnablue4);
                    $Avgwarnablue4   = number_format((array_sum($ndtwarnablue4)) /(count($ndtwarnablue4)),2);
                    $Countwarnablue4 = count($ndtwarnablue4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanwarnablue4    = array_sum($ndtwarnablue4) / count($ndtwarnablue4);
                    $fvariantwarnablue4 = 0.00;
                    $xsamplewarnablue4  = false;
                    $dt1                = 0;$dt2 = 0;
                    foreach ($ndtwarnablue4 as $i){
                    $fvariantwarnablue4 += pow($i - $fmeanwarnablue4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantwarnablue4 /= ($xsamplewarnablue4 ? count($ndtwarnablue4)-1 : count($ndtwarnablue4));
                    $stdevwarnablue4     = number_format(sqrt($fvariantwarnablue4),2);
                    $totalwarnablue4     = count($ndtwarnablue4);
                    $inspectwarnablue4   = $dt1;
                    $outspectwarnablue4  = $dt2;
                    $prsoutwarnablue4    = number_format((($dt2 /$totalwarnablue4)* (100)),2);

                } else {
                    $Minwarnablue4      = '';
                    $Maxwarnablue4      = '';
                    $Avgwarnablue4      = '';
                    $stdevwarnablue4    = '';
                    $totalwarnablue4    = '';
                    $inspectwarnablue4  = '';
                    $outspectwarnablue4 = '';
                    $prsoutwarnablue4   = '';
                }

                if(is_array($ndtIV4) && count ($ndtIV4) > 0)
                {
                    $MinIV4   = min($ndtIV4);
                    $MaxIV4   = max($ndtIV4);
                    $AvgIV4   = number_format((array_sum($ndtIV4)) /(count($ndtIV4)),2);
                    $CountIV4 = count($ndtIV4);
                    //nilai standard devisiasi (sttdev)
                    $fmeanIV4    = array_sum($ndtIV4) / count($ndtIV4);
                    $fvariantIV4 = 0.00;
                    $xsampleIV4  = false;
                    $dt1         = 0;$dt2 = 0;
                    foreach ($ndtIV4 as $i){
                    $fvariantIV4 += pow($i - $fmeanIV4,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantIV4 /= ($xsampleIV4 ? count($ndtIV4)-1 : count($ndtIV4));
                    $stdevIV4     = number_format(sqrt($fvariantIV4),2);
                    $totalIV4     = count($ndtIV4);
                    $inspectIV4   = $dt1;
                    $outspectIV4  = $dt2;
                    $prsoutIV4    = number_format((($dt2 /$totalIV4)* (100)),2);

                } else {
                    $MinIV4      = '';
                    $MaxIV4      = '';
                    $AvgIV4      = '';
                    $stdevIV4    = '';
                    $totalIV4    = '';
                    $inspectIV4  = '';
                    $outspectIV4 = '';
                    $prsoutIV4   = '';
                }

                if(is_array($ndtsludge4) && count ($ndtsludge4) > 0)
                {
                    $Minsludge4  = min($ndtsludge4);
                    $Maxsludge4  = max($ndtsludge4);
                    $Avgsludge4  = number_format((array_sum($ndtsludge4)) /(count($ndtsludge4)),2);
                    $Countsludge = count($ndtsludge4);
                    //nilai standard devisiasi (sttdev)
                    $fmeansludge4    = array_sum($ndtsludge4) / count($ndtsludge4);
                    $fvariantsludge4 = 0.00;
                    $xsamplesludge4  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtsludge4 as $i){
                    $fvariantsludge4 += pow($i - $fmeansludge4 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsludge4 /= ($xsamplesludge4 ? count($ndtsludge4)-1 : count($ndtsludge4));
                    $stdevsludge4     = number_format(sqrt($fvariantsludge4),2);
                    $totalsludge4     = count($ndtsludge4);
                    $inspectsludge4   = $dt1;
                    $outspectsludge4  = $dt2;
                    $prsoutsludge4    = number_format((($dt2 /$totalsludge4)* (100)),2);

                } else {
                    $Minsludge4      = '';
                    $Maxsludge4      = '';
                    $Avgsludge4      = '';
                    $stdevsludge4    = '';
                    $totalsludge4    = '';
                    $inspectsludge4  = '';
                    $outspectsludge4 = '';
                    $prsoutsludge4   = '';
                }
                
                $rowfoot0  = $rowCount4+1;
                $rowfoot1  = $rowfoot0+1;
                $rowfoot2  = $rowfoot1+1;
                $rowfoot3  = $rowfoot2+1;
                $rowfoot4  = $rowfoot3+1;
                $rowfoot5  = $rowfoot4+1;
                $rowfoot6  = $rowfoot5+1;
                $rowfoot7  = $rowfoot6+1;
                $rowfoot8  = $rowfoot7+1;
                $rowfoot9  = $rowfoot8+1;
                $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 //$objPHPExcel->$cellred($cellred,'A'.$rowfoot0.'M'.$rowfoot0);
                 $objphpexcel4->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objphpexcel4->setSharedStyle($cellred, 'A'.$rowfoot0.':M'.$rowfoot0);
              //   $objphpexcel4->getStyle(''.$rowfoot0.':M'.$rowfoot0)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                // $objphpexcel4->mergeCells('A'.$rowfoot0.':M'.$rowfoot0);
                 $objphpexcel4->setSharedStyle($cellblue, 'A'.$rowfoot1.':M'.$rowfoot1);
                 $objphpexcel4->mergeCells('A'.$rowfoot1.':E'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Maximum ');
                 $objphpexcel4->setCellValue('F'.$rowfoot1,$Maxmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot1,$Maxffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot1,$Maxwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot1,$Maxwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot1,$Maxwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot1,$MaxIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot1,$Maxsludge4);
                
                 $objphpexcel4->setSharedStyle($cellyellow, 'A'.$rowfoot2.':M'.$rowfoot2);
                 $objphpexcel4->mergeCells('A'.$rowfoot2.':E'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Minimum ');
                 $objphpexcel4->setCellValue('F'.$rowfoot2,$Minmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot2,$Minffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot2,$Minwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot2,$Minwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot2,$Minwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot2,$MinIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot2,$Minsludge4);
                 
                 $objphpexcel4->setSharedStyle($cellblue, 'A'.$rowfoot3.':M'.$rowfoot3);
                 $objphpexcel4->mergeCells('A'.$rowfoot3.':E'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Average ');
                 $objphpexcel4->setCellValue('F'.$rowfoot3,$Avgmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot3,$Avgffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot3,$Avgwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot3,$Avgwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot3,$Avgwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot3,$AvgIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot3,$Avgsludge4);
                
                 $objphpexcel4->setSharedStyle($cellyellow, 'A'.$rowfoot4.':M'.$rowfoot4);
                 $objphpexcel4->mergeCells('A'.$rowfoot4.':E'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Stdev ');
                 $objphpexcel4->setCellValue('F'.$rowfoot4,$stdevmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot4,$stdevffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot4,$stdevwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot4,$stdevwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot4,$stdevwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot4,$stdevIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot4,$stdevsludge4);


                 $objphpexcel4->setSharedStyle($cellblue, 'A'.$rowfoot5.':M'.$rowfoot5);
                 $objphpexcel4->mergeCells('A'.$rowfoot5.':E'.$rowfoot5,':')->setCellValue('A'.$rowfoot5,'Total Data ');
                 $objphpexcel4->setCellValue('F'.$rowfoot5,$totalmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot5,$totalffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot5,$totalwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot5,$totalwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot5,$totalwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot5,$totalIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot5,$totalsludge4);
                 
                 $objphpexcel4->setSharedStyle($cellyellow, 'A'.$rowfoot6.':M'.$rowfoot6);
                 $objphpexcel4->mergeCells('A'.$rowfoot6.':E'.$rowfoot6,':')->setCellValue('A'.$rowfoot6,'Within Spect Data ');
                 $objphpexcel4->setCellValue('F'.$rowfoot6,$inspectmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot6,$inspectffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot6,$inspectwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot6,$inspectwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot6,$inspectwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot6,$inspectIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot6,$inspectsludge4);

                 $objphpexcel4->setSharedStyle($cellblue, 'A'.$rowfoot7.':M'.$rowfoot7);
                 $objphpexcel4->mergeCells('A'.$rowfoot7.':E'.$rowfoot7,':')->setCellValue('A'.$rowfoot7,'Outspect Data ');
                 $objphpexcel4->setCellValue('F'.$rowfoot7,$outspectmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot7,$outspectffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot7,$outspectwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot7,$outspectwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot7,$outspectwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot7,$outspectIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot7,$outspectsludge4); 
                 $objphpexcel4->setSharedStyle($cellyellow, 'A'.$rowfoot8.':M'.$rowfoot8);
                 $objphpexcel4->mergeCells('A'.$rowfoot8.':E'.$rowfoot8,':')->setCellValue('A'.$rowfoot8,'Percent Outspect ');
                 $objphpexcel4->setCellValue('F'.$rowfoot8,$prsoutmc4);
                 $objphpexcel4->setCellValue('G'.$rowfoot8,$prsoutffa4);
                 $objphpexcel4->setCellValue('H'.$rowfoot8,$prsoutwarnayellow4);
                 $objphpexcel4->setCellValue('I'.$rowfoot8,$prsoutwarnared4);
                 $objphpexcel4->setCellValue('J'.$rowfoot8,$prsoutwarnablue4);
                 $objphpexcel4->setCellValue('K'.$rowfoot8,$prsoutIV4);
                 $objphpexcel4->setCellValue('L'.$rowfoot8,$prsoutsludge4);
                 $objphpexcel4->setSharedStyle($bodyStyle, 'A'.$rowfoot9.':M'.$rowfoot14);
                 $objphpexcel4->mergeCells('A'.$rowfoot9.':D'.$rowfoot9)->setCellValue('A'.$rowfoot9,'REPORTED BY: ');
                 $objphpexcel4->mergeCells('E'.$rowfoot9.':J'.$rowfoot9)->setCellValue('E'.$rowfoot9,'CHECKED AND CONFIRMATED BY : ');
                 $objphpexcel4->mergeCells('K'.$rowfoot9.':M'.$rowfoot9)->setCellValue('K'.$rowfoot9,'ACKNOWLEDGED BY : ');
                 $objphpexcel4->mergeCells('A'.$rowfoot10.':D'.$rowfoot11);
                 $objphpexcel4->mergeCells('E'.$rowfoot10.':J'.$rowfoot11);
                 $objphpexcel4->mergeCells('K'.$rowfoot10.':M'.$rowfoot11);
                 $objphpexcel4->mergeCells('A'.$rowfoot12.':D'.$rowfoot12)->setCellValue('A'.$rowfoot12,'NAME : NOLA YULIA K ');
                 $objphpexcel4->mergeCells('E'.$rowfoot12.':J'.$rowfoot12)->setCellValue('E'.$rowfoot12,'NAME : YOPPI IRAWAN ');
                 $objphpexcel4->mergeCells('K'.$rowfoot12.':M'.$rowfoot12)->setCellValue('K'.$rowfoot12,'NAME : RISTINA YULIANI ');
                 $objphpexcel4->mergeCells('A'.$rowfoot13.':D'.$rowfoot13)->setCellValue('A'.$rowfoot13,'POSITION : KS ');
                 $objphpexcel4->mergeCells('E'.$rowfoot13.':J'.$rowfoot13)->setCellValue('E'.$rowfoot13,'POSITION : AMGR QAD ');
                 $objphpexcel4->mergeCells('K'.$rowfoot13.':M'.$rowfoot13)->setCellValue('K'.$rowfoot13,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objphpexcel4->mergeCells('A'.$rowfoot14.':D'.$rowfoot14)->setCellValue('A'.$rowfoot14,'DATE : '.$tgl);
                 $objphpexcel4->mergeCells('E'.$rowfoot14.':J'.$rowfoot14)->setCellValue('E'.$rowfoot14,'DATE : '.$tgl);
                 $objphpexcel4->mergeCells('K'.$rowfoot14.':M'.$rowfoot14)->setCellValue('K'.$rowfoot14,'DATE : '.$tgl);
                 $objphpexcel4->mergeCells('A'.$rowfoot15.':M'.$rowfoot15,':')->setCellValue('A'.$rowfoot15,'Definisi : ');
                 $objphpexcel4->mergeCells('A'.$rowfoot16.':M'.$rowfoot16,':')->setCellValue('A'.$rowfoot16,'MC  : Moisture Content ');
                 $objphpexcel4->mergeCells('A'.$rowfoot17.':M'.$rowfoot17,':')->setCellValue('A'.$rowfoot17,'FFA : Free Fatty acid ');
                 $objphpexcel4->mergeCells('A'.$rowfoot18.':M'.$rowfoot18,':')->setCellValue('A'.$rowfoot18,'IV  :  Iodine Value ');
                 }
                 $objphpexcel4->mergeCells('A'.$rowfoot19.':C'.$rowfoot19)->setCellValue('A'.$rowfoot19,'Mulai Berlaku :'.$frm_efect);
                 $objphpexcel4->mergeCells('K'.$rowfoot19.':M'.$rowfoot19)->setCellValue('K'.$rowfoot19,''.$frmnm);
                 $objphpexcel4->mergeCells('D'.$rowfoot19.':J'.$rowfoot19);


                  /* -------------------------------
                 VIEW SUMMARY CNO LOADING
                 ----------------------------------*/

                $objDrawing5 = new PHPExcel_Worksheet_Drawing();
                $objDrawing5->setPath('assets/images/tlogopsg.png');  

                $objPHPExcel5 = $obj->createSheet(1);
                $objDrawing5->setCoordinates('A2');
                $objDrawing5->setWorksheet($objPHPExcel5);
                foreach(range('A','J') as $columnID){
                $objPHPExcel5->getColumnDimension($columnID)->setAutoSize(true);
                }
            
                $thn     = substr($dtstart,0,4);
                $blnfrom = substr($dtstart,5,2);
                $blnto   = substr($dtfinish,5,2);
               // $objPHPExcel->getActiveSheet()->getHeaderFooter()->setOddFooter('&R&F');

                 $objPHPExcel5->mergeCells('A1:J1');
                 
                 $objPHPExcel5->mergeCells('A2:A5');
                 $objPHPExcel5->mergeCells('B2:J5')->setCellValue('B2',$frmcop);
                 $objPHPExcel5->setCellValue('K2','Tahun: '.$thn);
                 $objPHPExcel5->setCellValue('K3','Bulan: '.$blnfrom.'/'.$blnto);
                 //$a=$objPHPExcel5->getHeaderFooter()->setOddFooter('&R&F');
                 //$objPHPExcel5->getHeaderFooter()->setEvenFooter('&R&F Page &P / &N');
                 $objPHPExcel5->setCellValue('K4','Hal: ');

                 $objPHPExcel5->setCellValue('A6','JUDUL');
                 $objPHPExcel5->mergeCells('B6:K6')->setCellValue('B6',''.$frmjdl.' LOADING');
                 $objPHPExcel5->mergeCells('A7:A10')->setCellValue('A7','Tanggal Shipment');               
                 $objPHPExcel5->mergeCells('B7:B10')->setCellValue('B7','Weight Product(kg)');
                 $objPHPExcel5->mergeCells('C7:C10')->setCellValue('C7','Sample Time ');
                 $objPHPExcel5->mergeCells('D7:D10')->setCellValue('D7','MC 0.7% max)');
                 $objPHPExcel5->mergeCells('E7:E10')->setCellValue('E7','FFA 3.0% max');
                 $objPHPExcel5->mergeCells('F7:F10')->setCellValue('F7','IV 8.5-11%');
                 $objPHPExcel5->mergeCells('G7:I7')->setCellValue('G7','Color');
                 $objPHPExcel5->mergeCells('J7:J10')->setCellValue('J7','% Sludge');
                 $objPHPExcel5->mergeCells('K7:K10')->setCellValue('K7','Remarks');                 
                 $objPHPExcel5->mergeCells('G8:G10')->setCellValue('G8','Red 8 max)');
                 $objPHPExcel5->mergeCells('H8:H10')->setCellValue('H8','Yellow 30 max');
                 $objPHPExcel5->mergeCells('I8:I10')->setCellValue('I8','Blue 0 max');

                $objPHPExcel5->setSharedStyle($headerStyle, 'A2:K10');

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                // $dtdetail4 =$this->$model->get_detail_bydate4($dttglStart,$dttglFinish);
                 if(isset($dtdetail5)){
                 $rowCount5 = 10;
                 $no        = 1;
                
                 foreach ($dtdetail5 as $row5){
                 $tgl_produksi = $row5->tgl_produksi;
                 $jns_sampel   = $row5->jns_sampel;
                 $jam_sampling = $row5->jam_sampling;
                 $mc           = $row5->mc;
                 $ffa          = $row5->ffa;
                 $yellow       = $row5->yellow;
                 $red          = $row5->red;
                 $blue         = $row5->blue;
                 $iodine       = $row5->iodine;
                 $sludge       = $row5->sludge;
                 $keterangan   = $row5->keterangan;

                 $rowCount5++;
                   $objPHPExcel5->setSharedStyle($bodyStyle, 'A'.$rowCount5.':K'.$rowCount5);
              
                 $objPHPExcel5->setCellValue('A'.$rowCount5,$tgl_produksi);
                 $objPHPExcel5->setCellValue('B'.$rowCount5,$jns_sampel);
                 $objPHPExcel5->setCellValue('C'.$rowCount5,$jam_sampling);
                 if($row5->mc==""){}elseif($row5->mc > 0.700){
                   $objPHPExcel5->setSharedStyle($cellredcol, 'D'.$rowCount5);
                }
                 $objPHPExcel5->setCellValue('D'.$rowCount5,$mc);
                 if($row5->ffa==""){}elseif($row5->ffa > 3.00){
                   $objPHPExcel5->setSharedStyle($cellredcol, 'E'.$rowCount5);
                }
                 $objPHPExcel5->setCellValue('E'.$rowCount5,$ffa);
                 if($row5->iodine==""){}elseif(($row5->iodine < 7.50) || ($row5->iodine > 10.50)){
                   $objPHPExcel5->setSharedStyle($cellredcol, 'F'.$rowCount5);
                }

                 $objPHPExcel5->setCellValue('F'.$rowCount5,$iodine);
                 if($row5->red==""){}elseif($row5->red > 8.0){
                $objPHPExcel5->setSharedStyle($cellredcol, 'G'.$rowCount5);
                }
                 $objPHPExcel5->setCellValue('G'.$rowCount5,$red);
                 $objPHPExcel5->setCellValue('H'.$rowCount5,$yellow);
                 $objPHPExcel5->setCellValue('I'.$rowCount5,$blue);             
                 $objPHPExcel5->setCellValue('J'.$rowCount5,$sludge);
                 $objPHPExcel5->setCellValue('K'.$rowCount5,$keterangan);
                 $no++;
            
               }
        }

                 $dttglStart  = $this->uri->segment(8);
                 $dttglFinish = $this->uri->segment(9);
                
               if(isset($dtdetail5)){
    
                 foreach ($dtdetail5 as $row5){
                 $dt_mc5    []  = $row5->mc;
                 $dt_ffa5   []  = $row5->ffa;
                 $dt_iodine5[]  = $row5->iodine;
                 $dt_yellow5[]  = $row5->yellow;
                 $dt_red5    [] = $row5->red;
                 $dt_blue5  []  = $row5->blue;
                 $dt_sludge5[]  = $row5->sludge;
  
                $ndtmc5     = array_diff($dt_mc5, array('',0));
                $ndtffa5    = array_diff($dt_ffa5, array('',0));
                $ndtiodine5 = array_diff($dt_iodine5, array('',0));
                $ndtyellow5 = array_diff($dt_yellow5, array('',0));
                $ndtred5    = array_diff($dt_red5, array('',0));
                $ndtblue5   = array_diff($dt_blue5, array('',0));
                $ndtsludge5 = array_diff($dt_sludge5, array('',0));
                }
                 if(is_array($ndtmc5) && count ($ndtmc5) > 0)
                {
                    $Minmc5   = min($ndtmc5);
                    $Maxmc5   = max($ndtmc5);
                    $Avgmc5   = number_format((array_sum($ndtmc5)) /(count($ndtmc5)),2);
                    $Countmc5 = count($ndtmc5);
                    //nilai standard devisiasi (sttdev)
                    $fmeanmc5    = array_sum($ndtmc5) / count($ndtmc5);
                    $fvariantmc5 = 0.00;
                    $xsamplemc5  = false;
                    $dt1         = 0;$dt2 = 0;
                    foreach ($ndtmc5 as $i){
                    $fvariantmc5 += pow($i - $fmeanmc5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantmc5 /= ($xsamplemc5 ? count($ndtmc5)-1 : count($ndtmc5));
                    $stdevmc5     = number_format(sqrt($fvariantmc5),2);
                    $totalmc5     = count($ndtmc5);
                    $inspectmc5   = $dt1;
                    $outspectmc5  = $dt2;
                    $prsoutmc5    = number_format((($dt2 /$totalmc5)* (100)),2);

                } else {

                    $Minmc5      = '';
                    $Maxmc5      = '';
                    $Avgmc5      = '';
                    $stdevmc5    = '';
                    $totalmc5    = '';
                    $inspectmc5  = '';
                    $outspectmc5 = '';
                    $prsoutmc5   = '';
                    $Countmc5    = '';
                }

                if(is_array($ndtffa5) && count ($ndtffa5) > 0)
                {
                    $Minffa5   = min($ndtffa5);
                    $Maxffa5   = max($ndtffa5);
                    $Avgffa5   = number_format((array_sum($ndtffa5)) /(count($ndtffa5)),2);
                    $Countffa5 = count($ndtffa5);
                    //nilai standard devisiasi (sttdev)
                    $fmeanffa5    = array_sum($ndtffa5) / count($ndtffa5);
                    $fvariantffa5 = 0.00;
                    $xsampleffa5  = false;
                    $dt1          = 0;$dt2 = 0;
                    foreach ($ndtffa5 as $i){
                    $fvariantffa5 += pow($i - $fmeanffa5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantffa5 /= ($xsampleffa5 ? count($ndtffa5)-1 : count($ndtffa5));
                    $stdevffa5     = number_format(sqrt($fvariantffa5),2);
                    $totalffa5     = count($ndtffa5);
                    $inspectffa5   = $dt1;
                    $outspectffa5  = $dt2;
                    $prsoutffa5    = number_format((($dt2 /$totalffa5)* (100)),2);

                } else {

                    $Minffa5      = '';
                    $Maxffa5      = '';
                    $Avgffa5      = '';
                    $stdevffa5    = '';
                    $totalffa5    = '';
                    $inspectffa5  = '';
                    $outspectffa5 = '';
                    $prsoutffa5   = '';
                    $Countffa5    = '';
                }


                 if(is_array($ndtiodine5) && count ($ndtiodine5) > 0)
                {
                    $Miniodine5   = min($ndtiodine5);
                    $Maxiodine5   = max($ndtiodine5);
                    $Avgiodine5   = number_format((array_sum($ndtiodine5)) /(count($ndtiodine5)),2);
                    $Countiodine5 = count($ndtiodine5);
                    //nilai standard devisiasi (sttdev)
                    $fmeaniodine5    = array_sum($ndtiodine5) / count($ndtiodine5);
                    $fvariantiodine5 = 0.00;
                    $xsampleiodine5  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtiodine5 as $i){
                    $fvariantiodine5 += pow($i - $fmeaniodine5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantiodine5 /= ($xsampleiodine5 ? count($ndtiodine5)-1 : count($ndtiodine5));
                    $stdeviodine5     = number_format(sqrt($fvariantiodine5),2);
                    $totaliodine5     = count($ndtiodine5);
                    $inspectiodine5   = $dt1;
                    $outspectiodine5  = $dt2;
                    $prsoutiodine5    = number_format((($dt2 /$totaliodine5)* (100)),2);

                } else {

                    $Miniodine5      = '';
                    $Maxiodine5      = '';
                    $Avgiodine5      = '';
                    $stdeviodine5    = '';
                    $totaliodine5    = '';
                    $inspectiodine5  = '';
                    $outspectiodine5 = '';
                    $prsoutiodine5   = '';
                    $Countiodine5    = '';
                }


                 if(is_array($ndtred5) && count ($ndtred5) > 0)
                {
                    $Minred5   = min($ndtred5);
                    $Maxred5   = max($ndtred5);
                    $Avgred5   = number_format((array_sum($ndtred5)) /(count($ndtred5)),2);
                    $Countred5 = count($ndtred5);
                    //nilai standard devisiasi (sttdev)
                    $fmeanred5    = array_sum($ndtred5) / count($ndtred5);
                    $fvariantred5 = 0.00;
                    $xsamplered5  = false;
                    $dt1          = 0;$dt2 = 0;
                    foreach ($ndtred5 as $i){
                    $fvariantred5 += pow($i - $fmeanred5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantred5 /= ($xsamplered5 ? count($ndtred5)-1 : count($ndtred5));
                    $stdevred5     = number_format(sqrt($fvariantred5),2);
                    $totalred5     = count($ndtred5);
                    $inspectred5   = $dt1;
                    $outspectred5  = $dt2;
                    $prsoutred5    = number_format((($dt2 /$totalred5)* (100)),2);

                } else {

                    $Minred5      = '';
                    $Maxred5      = '';
                    $Avgred5      = '';
                    $stdevred5    = '';
                    $totalred5    = '';
                    $inspectred5  = '';
                    $outspectred5 = '';
                    $prsoutred5   = '';
                    $Countred5    = '';
                }

                  if(is_array($ndtyellow5) && count ($ndtyellow5) > 0)
                {
                    $Minyellow5   = min($ndtyellow5);
                    $Maxyellow5   = max($ndtyellow5);
                    $Avgyellow5   = number_format((array_sum($ndtyellow5)) /(count($ndtyellow5)),2);
                    $Countyellow5 = count($ndtyellow5);
                    //nilai standard devisiasi (sttdev)
                    $fmeanyellow5    = array_sum($ndtyellow5) / count($ndtyellow5);
                    $fvariantyellow5 = 0.00;
                    $xsampleyellow5  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtyellow5 as $i){
                    $fvariantyellow5 += pow($i - $fmeanyellow5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantyellow5 /= ($xsampleyellow5 ? count($ndtyellow5)-1 : count($ndtyellow5));
                    $stdevyellow5     = number_format(sqrt($fvariantyellow5),2);
                    $totalyellow5     = count($ndtyellow5);
                    $inspectyellow5   = $dt1;
                    $outspectyellow5  = $dt2;
                    $prsoutyellow5    = number_format((($dt2 /$totalyellow5)* (100)),2);

                } else {

                    $Minyellow5      = '';
                    $Maxyellow5      = '';
                    $Avgyellow5      = '';
                    $stdevyellow5    = '';
                    $totalyellow5    = '';
                    $inspectyellow5  = '';
                    $outspectyellow5 = '';
                    $prsoutyellow5   = '';
                    $Countyellow5    = '';
                }
                  if(is_array($ndtblue5) && count ($ndtblue5) > 0)
                {
                    $Minblue5   = min($ndtblue5);
                    $Maxblue5   = max($ndtblue5);
                    $Avgblue5   = number_format((array_sum($ndtblue5)) /(count($ndtblue5)),2);
                    $Countblue5 = count($ndtblue5);
                    //nilai standard devisiasi (sttdev)
                    $fmeanblue5    = array_sum($ndtblue5) / count($ndtblue5);
                    $fvariantblue5 = 0.00;
                    $xsampleblue5  = false;
                    $dt1           = 0;$dt2 = 0;
                    foreach ($ndtblue5 as $i){
                    $fvariantblue5 += pow($i - $fmeanblue5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantblue5 /= ($xsampleblue5 ? count($ndtblue5)-1 : count($ndtblue5));
                    $stdevblue5     = number_format(sqrt($fvariantblue5),2);
                    $totalblue5     = count($ndtblue5);
                    $inspectblue5   = $dt1;
                    $outspectblue5  = $dt2;
                    $prsoutblue5    = number_format((($dt2 /$totalblue5)* (100)),2);

                } else {

                    $Minblue5      = '';
                    $Maxblue5      = '';
                    $Avgblue5      = '';
                    $stdevblue5    = '';
                    $totalblue5    = '';
                    $inspectblue5  = '';
                    $outspectblue5 = '';
                    $prsoutblue5   = '';
                    $Countblue5    = '';
                }

                if(is_array($ndtsludge5) && count ($ndtsludge5) > 0)
                {
                    $Minsludge5   = min($ndtsludge5);
                    $Maxsludge5   = max($ndtsludge5);
                    $Avgsludge5   = number_format((array_sum($ndtsludge5)) /(count($ndtsludge5)),2);
                    $Countsludge5 = count($ndtsludge5);
                    //nilai standard devisiasi (sttdev)
                    $fmeansludge5    = array_sum($ndtsludge5) / count($ndtsludge5);
                    $fvariantsludge5 = 0.00;
                    $xsamplesludge5  = false;
                    $dt1             = 0;$dt2 = 0;
                    foreach ($ndtsludge5 as $i){
                    $fvariantsludge5 += pow($i - $fmeansludge5 ,2);
                    if(($i>=10.5) && ($i<=11.5)){$dt1++;}
                    if((($i>0)&&($i<10.5)) || ($i>11.5)){$dt2++;}
                    }
                    $fvariantsludge5 /= ($xsamplesludge5 ? count($ndtsludge5)-1 : count($ndtsludge5));
                    $stdevsludge5     = number_format(sqrt($fvariantsludge5),2);
                    $totalsludge5     = count($ndtsludge5);
                    $inspectsludge5   = $dt1;
                    $outspectsludge5  = $dt2;
                    $prsoutsludge5    = number_format((($dt2 /$totalsludge5)* (100)),2);

                } else {

                    $Minsludge5      = '';
                    $Maxsludge5      = '';
                    $Avgsludge5      = '';
                    $stdevsludge5    = '';
                    $totalsludge5    = '';
                    $inspectsludge5  = '';
                    $outspectsludge5 = '';
                    $prsoutsludge5   = '';
                    $Countsludge5    = '';
                }


                $rowfoot0  = $rowCount5+1;
                $rowfoot1  = $rowfoot0+1;
                $rowfoot2  = $rowfoot1+1;
                $rowfoot3  = $rowfoot2+1;
                $rowfoot4  = $rowfoot3+1;
                $rowfoot5  = $rowfoot4+1;
                $rowfoot6  = $rowfoot5+1;
                $rowfoot7  = $rowfoot6+1;
                $rowfoot8  = $rowfoot7+1;
                $rowfoot9  = $rowfoot8+1;
                $rowfoot10 = $rowfoot9+1;

                 $rowfoot11 = $rowfoot10+1;
                 $rowfoot12 = $rowfoot11+1;
                 $rowfoot13 = $rowfoot12+1;
                 $rowfoot14 = $rowfoot13+1;
                 $rowfoot15 = $rowfoot14+1;
                 $rowfoot16 = $rowfoot15+1;
                 $rowfoot17 = $rowfoot16+1;
                 $rowfoot18 = $rowfoot17+1;
                 $rowfoot19 = $rowfoot18+1;
                 $rowfoot20 = $rowfoot19+1;
                 $rowfoot21 = $rowfoot20+1;

                 $objPHPExcel5->mergeCells('A'.$rowfoot0.':K'.$rowfoot0);
                 $objPHPExcel5->setSharedStyle($cellred, 'A'.$rowfoot0.':K'.$rowfoot0);
                 $objPHPExcel5->setSharedStyle($cellblue, 'A'.$rowfoot1.':K'.$rowfoot1);
                
                 $objPHPExcel5->mergeCells('A'.$rowfoot1.':C'.$rowfoot1,':')->setCellValue('A'.$rowfoot1,'Total ');
                 $objPHPExcel5->setCellValue('D'.$rowfoot1,$Countmc5);
                 $objPHPExcel5->setCellValue('E'.$rowfoot1,$Countffa5);
                 $objPHPExcel5->setCellValue('F'.$rowfoot1,$Countiodine5);
                 $objPHPExcel5->setCellValue('G'.$rowfoot1,$Countred5);
                 $objPHPExcel5->setCellValue('H'.$rowfoot1,$Countyellow5);
                 $objPHPExcel5->setCellValue('I'.$rowfoot1,$Countblue5);
                 $objPHPExcel5->setCellValue('J'.$rowfoot1,$Countsludge5);
                
                 $objPHPExcel5->setSharedStyle($cellyellow, 'A'.$rowfoot2.':K'.$rowfoot2);
                 $objPHPExcel5->mergeCells('A'.$rowfoot2.':C'.$rowfoot2,':')->setCellValue('A'.$rowfoot2,'Average ');
                 $objPHPExcel5->setCellValue('D'.$rowfoot2,$Avgmc5);
                 $objPHPExcel5->setCellValue('E'.$rowfoot2,$Avgffa5);
                 $objPHPExcel5->setCellValue('F'.$rowfoot2,$Avgiodine5);
                 $objPHPExcel5->setCellValue('G'.$rowfoot2,$Avgred5);
                 $objPHPExcel5->setCellValue('H'.$rowfoot2,$Avgyellow5);
                 $objPHPExcel5->setCellValue('I'.$rowfoot2,$Avgblue5);
                 $objPHPExcel5->setCellValue('J'.$rowfoot2,$Avgsludge5);
                
                 $objPHPExcel5->setSharedStyle($cellblue, 'A'.$rowfoot3.':K'.$rowfoot3);
                 $objPHPExcel5->mergeCells('A'.$rowfoot3.':C'.$rowfoot3,':')->setCellValue('A'.$rowfoot3,'Maximum ');
                 $objPHPExcel5->setCellValue('D'.$rowfoot3,$Maxmc5);
                 $objPHPExcel5->setCellValue('E'.$rowfoot3,$Maxffa5);
                 $objPHPExcel5->setCellValue('F'.$rowfoot3,$Maxiodine5);
                 $objPHPExcel5->setCellValue('G'.$rowfoot3,$Maxred5);
                 $objPHPExcel5->setCellValue('H'.$rowfoot3,$Maxyellow5);
                 $objPHPExcel5->setCellValue('I'.$rowfoot3,$Maxblue5);
                 $objPHPExcel5->setCellValue('J'.$rowfoot3,$Maxsludge5);

                 $objPHPExcel5->setSharedStyle($cellyellow, 'A'.$rowfoot4.':K'.$rowfoot4);
                 $objPHPExcel5->mergeCells('A'.$rowfoot4.':C'.$rowfoot4,':')->setCellValue('A'.$rowfoot4,'Minimum ');
                 $objPHPExcel5->setCellValue('D'.$rowfoot4,$Minmc5);
                 $objPHPExcel5->setCellValue('E'.$rowfoot4,$Minffa5);
                 $objPHPExcel5->setCellValue('F'.$rowfoot4,$Miniodine5);
                 $objPHPExcel5->setCellValue('G'.$rowfoot4,$Minred5);
                 $objPHPExcel5->setCellValue('H'.$rowfoot4,$Minyellow5);
                 $objPHPExcel5->setCellValue('I'.$rowfoot4,$Minblue5);
                 $objPHPExcel5->setCellValue('J'.$rowfoot4,$Minsludge5);

                 $objPHPExcel5->setSharedStyle($bodyStyle, 'A'.$rowfoot5.':K'.$rowfoot15);
                 $objPHPExcel5->mergeCells('A'.$rowfoot5.':C'.$rowfoot5)->setCellValue('A'.$rowfoot5,'REPORTED BY: ');
                 $objPHPExcel5->mergeCells('D'.$rowfoot5.':F'.$rowfoot5)->setCellValue('D'.$rowfoot5,'CHECKED AND CONFIRMATED BY : ');
                 $objPHPExcel5->mergeCells('G'.$rowfoot5.':K'.$rowfoot5)->setCellValue('G'.$rowfoot5,'ACKNOWLEDGED BY : ');
               
                 $objPHPExcel5->mergeCells('A'.$rowfoot6.':C'.$rowfoot7);
                 $objPHPExcel5->mergeCells('D'.$rowfoot6.':F'.$rowfoot7);
                 $objPHPExcel5->mergeCells('G'.$rowfoot6.':K'.$rowfoot7);


                 $objPHPExcel5->mergeCells('A'.$rowfoot8.':C'.$rowfoot8)->setCellValue('A'.$rowfoot8,'NAME : NOLA YULIA K');
                 $objPHPExcel5->mergeCells('D'.$rowfoot8.':F'.$rowfoot8)->setCellValue('D'.$rowfoot8,'NAME : YOPPI IRAWAN ');
                 $objPHPExcel5->mergeCells('G'.$rowfoot8.':K'.$rowfoot8)->setCellValue('G'.$rowfoot8,'NAME : RISTINA YULIANI ');
                 
                 $objPHPExcel5->mergeCells('A'.$rowfoot9.':C'.$rowfoot9)->setCellValue('A'.$rowfoot9,'POSITION : KS ');
                 $objPHPExcel5->mergeCells('D'.$rowfoot9.':F'.$rowfoot9)->setCellValue('D'.$rowfoot9,'POSITION : AMGR QAD ');
                 $objPHPExcel5->mergeCells('G'.$rowfoot9.':K'.$rowfoot9)->setCellValue('G'.$rowfoot9,'POSITION : AMGR QAD ');
                 $tgl = date('d-m-y');
                 $objPHPExcel5->mergeCells('A'.$rowfoot10.':C'.$rowfoot10)->setCellValue('A'.$rowfoot10,'DATE : '.$tgl);
                 $objPHPExcel5->mergeCells('D'.$rowfoot10.':F'.$rowfoot10)->setCellValue('D'.$rowfoot10,'DATE : '.$tgl);
                 $objPHPExcel5->mergeCells('G'.$rowfoot10.':K'.$rowfoot10)->setCellValue('G'.$rowfoot10,'DATE : '.$tgl);
                
                 $objPHPExcel5->mergeCells('A'.$rowfoot11.':K'.$rowfoot11,':')->setCellValue('A'.$rowfoot11,'Definisi : ');
                 $objPHPExcel5->mergeCells('A'.$rowfoot12.':K'.$rowfoot12,':')->setCellValue('A'.$rowfoot12,'MC  : Moisture Content ');
                 $objPHPExcel5->mergeCells('A'.$rowfoot13.':K'.$rowfoot13,':')->setCellValue('A'.$rowfoot13,'FFA : Free Fatty acid ');
                 $objPHPExcel5->mergeCells('A'.$rowfoot14.':K'.$rowfoot14,':')->setCellValue('A'.$rowfoot14,'IV  :  Iodine Value ');
                 }
                 $objPHPExcel5->mergeCells('A'.$rowfoot15.':C'.$rowfoot15)->setCellValue('A'.$rowfoot15,'Mulai Berlaku :'.$frm_efect);
                 $objPHPExcel5->mergeCells('J'.$rowfoot15.':K'.$rowfoot15)->setCellValue('J'.$rowfoot15,''.$frmnm);
                 $objPHPExcel5->mergeCells('D'.$rowfoot15.':I'.$rowfoot15);


            break;
    
          

            case $frmkode == 'frmhcp003' && $frmvrs == '05': 
                break;
            case $frmkode == 'frmfss128' && $frmvrs == '05': 
                break;
            case $frmkode == 'frmfss116' && $frmvrs == '05': 
                break;
            case $frmkode == 'frmfss108' && $frmvrs == '01': 
                break;
            case $frmkode == 'frmfss092' && $frmvrs == '03': 
                break;
            case $frmkode == 'frmnon010' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmlqs094' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmlqs095' && $frmvrs == '01': 
                break;
            case $frmkode == 'frmlqs038' && $frmvrs == '08': 
                break;
            case $frmkode == 'frmlqs037' && $frmvrs == '04': 
                break;
            case $frmkode == 'frmfss093' && $frmvrs == '03': 
                break;
            case $frmkode == 'frmnon009' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmfss069' && $frmvrs == '09': 
                foreach ($dtheader as $dtheader_row){
                    $dokumen = $dtheader_row->dokumen;
                    $tgl_dok = substr($dtheader_row->tgl_dok, 8, 2) . '-' . substr($dtheader_row->tgl_dok, 5, 2) . '-' . substr($dtheader_row->tgl_dok, 0, 4);
                }
                 $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'R') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }


                
                $objPHPExcel->mergeCells('A1:Q1');
                $objPHPExcel->mergeCells('B2:P3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('Q3:R3')->setCellValue('Q3', 'Tanggal : ' . $tgl_dok);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:P4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('A5:J5')->setCellValue('A5', 'CHEMICAL ANALYSIS');
                $objPHPExcel->mergeCells('K5:P5')->setCellValue('K5', 'MICROBIOLOGICAL ANALYSIS');

                $objPHPExcel->setCellValue('A6', 'Sampling');
                $objPHPExcel->mergeCells('A7:A8')->setCellValue('A7', 'Point');
                $objPHPExcel->mergeCells('B6:B8')->setCellValue('B6', 'Time');
                $objPHPExcel->mergeCells('C6:J6')->setCellValue('C6', 'Analysis Parameters');
                $objPHPExcel->mergeCells('C7:C8')->setCellValue('C7', 'pH');
                $objPHPExcel->setCellValue('D7', 'Chloride');
                $objPHPExcel->setCellValue('D8', 'ppm');
                $objPHPExcel->setCellValue('E7', 'TDS');
                $objPHPExcel->setCellValue('E8', 'ppm');
                $objPHPExcel->setCellValue('F7', 'TH');
                $objPHPExcel->setCellValue('F8', 'ppm');
                $objPHPExcel->setCellValue('G7', 'T CL');
                $objPHPExcel->setCellValue('G8', 'ppm');
                $objPHPExcel->setCellValue('H7', 'F CL');
                $objPHPExcel->setCellValue('H8', 'ppm');
                $objPHPExcel->setCellValue('I7', 'Colour');
                $objPHPExcel->setCellValue('I8', 'PtCo');
                $objPHPExcel->setCellValue('J7', 'Odour &');
                $objPHPExcel->setCellValue('J8', 'Flavour');

                $objPHPExcel->setCellValue('K6', 'Sampling');
                $objPHPExcel->mergeCells('K7:K8')->setCellValue('K7', 'Point');
                $objPHPExcel->mergeCells('L6:L8')->setCellValue('L6', 'Time');
                $objPHPExcel->mergeCells('M6:P6')->setCellValue('M6', 'Parameters Analysis');
                $objPHPExcel->setCellValue('M7', 'TPC');
                $objPHPExcel->setCellValue('M8', 'cfu/ml');
                $objPHPExcel->setCellValue('N7', 'TCC');
                $objPHPExcel->setCellValue('N8', 'cfu/ml');
                $objPHPExcel->setCellValue('O7', 'E. coli');
                $objPHPExcel->setCellValue('O8', 'abs/25ml');
                $objPHPExcel->setCellValue('P7', 'Salmonella');
                $objPHPExcel->setCellValue('P8', 'abs/25ml');

                $objPHPExcel->setCellValue('Q4', 'Definisi:');
                $objPHPExcel->setCellValue('Q5', 'pH');
                $objPHPExcel->setCellValue('R5', ": -Log(H')");

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:R9');

                $rowCount = 9;
                $no       = 1;
                //looping data
                //****** data pertama ****
                foreach ($dtdetail1 as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':J' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $row->nama_kimia);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->jam_sampling);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->hasil_chloride);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->tds);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->hasil_th);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->tcl);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->fci);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->colour);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->odour);


                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('F' . $rowend . ':Q' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':E' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('P' . $rowend . ':R' . $rowend)->setCellValue('P' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmfss069' && $frmvrs == '10': 
                break;
            case $frmkode == 'frmnon005' && $frmvrs == '00': 
                break;
            case $frmkode == 'frmnon004' && $frmvrs == '00': 

                foreach ($dtheader as $dtheader_row){
                    $dokumen = $dtheader_row->dokumen;
                    $tgl_dok = substr($dtheader_row->tgl_dok, 8, 2) . '-' . substr($dtheader_row->tgl_dok, 5, 2) . '-' . substr($dtheader_row->tgl_dok, 0, 4);
                }

                $objPHPExcel = $obj->createSheet(0);

                $objDrawing->setCoordinates('A2');
                $objDrawing->setWorksheet($objPHPExcel);

                foreach (range('A', 'J') as $columnID){
                    $objPHPExcel->getColumnDimension($columnID)->setAutoSize(true);
                }


                $objPHPExcel->mergeCells('A1:J1');
                $objPHPExcel->mergeCells('A2:A3');
                $objPHPExcel->mergeCells('B2:H3')->setCellValue('B2', $frmcop);
                $objPHPExcel->mergeCells('I2:J2')->setCellValue('I2', 'No : ');
                $objPHPExcel->mergeCells('I3:J3')->setCellValue('I3', 'Tanggal : ' . $tgl_dok);

                $objPHPExcel->setCellValue('A4', 'JUDUL');
                $objPHPExcel->mergeCells('B4:H4')->setCellValue('B4', '' . $frmjdl);
                $objPHPExcel->mergeCells('I4:J4')->setCellValue('I4', '');

                $objPHPExcel->mergeCells('A5:J5')->setCellValue('A5', '');

                $objPHPExcel->setCellValue('A6', 'No');
                $objPHPExcel->setCellValue('B6', 'Tanggal Sampling');
                $objPHPExcel->setCellValue('C6', 'Kode Sampel');
                $objPHPExcel->setCellValue('D6', 'pH');
                $objPHPExcel->setCellValue('E6', 'TSS');
                $objPHPExcel->setCellValue('F6', 'Pospat');
                $objPHPExcel->setCellValue('G6', 'COD');
                $objPHPExcel->setCellValue('H6', 'BOD');
                $objPHPExcel->setCellValue('I6', 'Minyak dan Lemak');
                $objPHPExcel->setCellValue('J6', 'Color Visual');

                $objPHPExcel->setSharedStyle($headerStyle, 'A2:J6');

                $rowCount = 6;
                $no       = 1;
                foreach ($dtdetail as $row){
                    $rowCount++;

                    $objPHPExcel->setSharedStyle($bodyStyle, 'A' . $rowCount . ':J' . $rowCount);

                    $objPHPExcel->setCellValue('A' . $rowCount, $no);
                    $objPHPExcel->setCellValue('B' . $rowCount, $row->tgl_analisa);
                    $objPHPExcel->setCellValue('C' . $rowCount, $row->kode_sample);
                    $objPHPExcel->setCellValue('D' . $rowCount, $row->ph);
                    $objPHPExcel->setCellValue('E' . $rowCount, $row->tss);
                    $objPHPExcel->setCellValue('F' . $rowCount, $row->po4);
                    $objPHPExcel->setCellValue('G' . $rowCount, $row->cod);
                    $objPHPExcel->setCellValue('H' . $rowCount, $row->hari5);
                    $objPHPExcel->setCellValue('I' . $rowCount, $row->hasil_bottom);
                    $objPHPExcel->setCellValue('J' . $rowCount, $row->color);

                    $no++;
                }

                $rowend = $rowCount + 1;

                $objPHPExcel->getStyle('F' . $rowend . ':J' . $rowend)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

                $objPHPExcel->mergeCells('A' . $rowend . ':E' . $rowend)->setCellValue('A' . $rowend, 'Mulai Berlaku :' . $frm_efect);
                $objPHPExcel->mergeCells('F' . $rowend . ':J' . $rowend)->setCellValue('J' . $rowend, $frmnm);

                break;
            case $frmkode == 'frmhwt001' && $frmvrs == '05': 
                break;
            case $frmkode == 'frmehs037' && $frmvrs == '05': 
                break;
            default: 
                break;
        }

        ob_clean();
        header('Content-Type: text/html; charset=utf-8');
        header('Content-type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename=' . $frmnm . '.xls');
        //   header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($obj, 'Excel5');
        $objWriter->save('php://output');
        exit();
        ob_end_clean();
    }

}